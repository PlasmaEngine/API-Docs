<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plSmallArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/dd9/classpl_small_array.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../db/dd6/classpl_small_array-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plSmallArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plSmallArray&lt; T, Size, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d9/d23/classpl_small_array__inherit__graph.png" border="0" usemap="#apl_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map" id="apl_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="5,96,158,139"/>
<area shape="rect" href="../../d7/de3/classpl_small_array_base.htm" title="Implementation of a dynamically growing array with in&#45;place storage and small memory overhead." alt="" coords="7,5,156,48"/>
<area shape="poly" title=" " alt="" coords="84,64,84,96,79,96,79,64"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abbabc20b98b697da72a1ed8bca250fff" id="r_abbabc20b98b697da72a1ed8bca250fff"><td class="memItemLeft" align="right" valign="top"><a id="abbabc20b98b697da72a1ed8bca250fff" name="abbabc20b98b697da72a1ed8bca250fff"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:abbabc20b98b697da72a1ed8bca250fff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab922bdb39da5bf1306e3feff1b36c743" id="r_ab922bdb39da5bf1306e3feff1b36c743"><td class="memItemLeft" align="right" valign="top"><a id="ab922bdb39da5bf1306e3feff1b36c743" name="ab922bdb39da5bf1306e3feff1b36c743"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSmallArray</b> (const <a class="el" href="../../df/dd9/classpl_small_array.htm">plSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:ab922bdb39da5bf1306e3feff1b36c743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77415cecab6bfd67bdd0c0155d253619" id="r_a77415cecab6bfd67bdd0c0155d253619"><td class="memItemLeft" align="right" valign="top"><a id="a77415cecab6bfd67bdd0c0155d253619" name="a77415cecab6bfd67bdd0c0155d253619"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSmallArray</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="separator:a77415cecab6bfd67bdd0c0155d253619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb6176018265a23859431c65d45b030f" id="r_adb6176018265a23859431c65d45b030f"><td class="memItemLeft" align="right" valign="top"><a id="adb6176018265a23859431c65d45b030f" name="adb6176018265a23859431c65d45b030f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSmallArray</b> (<a class="el" href="../../df/dd9/classpl_small_array.htm">plSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;other)</td></tr>
<tr class="separator:adb6176018265a23859431c65d45b030f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ba25cb8381abd484b2b1943f0bfce4b" id="r_a5ba25cb8381abd484b2b1943f0bfce4b"><td class="memItemLeft" align="right" valign="top"><a id="a5ba25cb8381abd484b2b1943f0bfce4b" name="a5ba25cb8381abd484b2b1943f0bfce4b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../df/dd9/classpl_small_array.htm">plSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:a5ba25cb8381abd484b2b1943f0bfce4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab098fcd11fe4265b8622b1e8bb2c954b" id="r_ab098fcd11fe4265b8622b1e8bb2c954b"><td class="memItemLeft" align="right" valign="top"><a id="ab098fcd11fe4265b8622b1e8bb2c954b" name="ab098fcd11fe4265b8622b1e8bb2c954b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="separator:ab098fcd11fe4265b8622b1e8bb2c954b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e378e0fd02e0d275930fcd57e66f495" id="r_a0e378e0fd02e0d275930fcd57e66f495"><td class="memItemLeft" align="right" valign="top"><a id="a0e378e0fd02e0d275930fcd57e66f495" name="a0e378e0fd02e0d275930fcd57e66f495"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../df/dd9/classpl_small_array.htm">plSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="separator:a0e378e0fd02e0d275930fcd57e66f495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a240072ce5d4a6b8108db5bda7ed9045e" id="r_a240072ce5d4a6b8108db5bda7ed9045e"><td class="memItemLeft" align="right" valign="top"><a id="a240072ce5d4a6b8108db5bda7ed9045e" name="a240072ce5d4a6b8108db5bda7ed9045e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (plUInt16 uiCount)</td></tr>
<tr class="separator:a240072ce5d4a6b8108db5bda7ed9045e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a440cb6788caf15f7b7837a1bf6b44a1a" id="r_a440cb6788caf15f7b7837a1bf6b44a1a"><td class="memItemLeft" align="right" valign="top"><a id="a440cb6788caf15f7b7837a1bf6b44a1a" name="a440cb6788caf15f7b7837a1bf6b44a1a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (plUInt16 uiCount, const T &amp;fillValue)</td></tr>
<tr class="separator:a440cb6788caf15f7b7837a1bf6b44a1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2801d6d90213c3d4340257323e56c8f" id="r_ac2801d6d90213c3d4340257323e56c8f"><td class="memItemLeft" align="right" valign="top"><a id="ac2801d6d90213c3d4340257323e56c8f" name="ac2801d6d90213c3d4340257323e56c8f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (plUInt16 uiCount)</td></tr>
<tr class="separator:ac2801d6d90213c3d4340257323e56c8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20a9d91b04d47bfcd778bb2ccf5b6d71" id="r_a20a9d91b04d47bfcd778bb2ccf5b6d71"><td class="memTemplParams" colspan="2"><a id="a20a9d91b04d47bfcd778bb2ccf5b6d71" name="a20a9d91b04d47bfcd778bb2ccf5b6d71"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a20a9d91b04d47bfcd778bb2ccf5b6d71"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (plUInt16 uiCount)</td></tr>
<tr class="separator:a20a9d91b04d47bfcd778bb2ccf5b6d71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a372d9dc641e583b964637fe08a9ef4c9" id="r_a372d9dc641e583b964637fe08a9ef4c9"><td class="memItemLeft" align="right" valign="top"><a id="a372d9dc641e583b964637fe08a9ef4c9" name="a372d9dc641e583b964637fe08a9ef4c9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (plUInt32 uiIndex, const T &amp;value)</td></tr>
<tr class="separator:a372d9dc641e583b964637fe08a9ef4c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6372e0465771594302532c457b974e29" id="r_a6372e0465771594302532c457b974e29"><td class="memItemLeft" align="right" valign="top"><a id="a6372e0465771594302532c457b974e29" name="a6372e0465771594302532c457b974e29"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (plUInt32 uiIndex, T &amp;&amp;value)</td></tr>
<tr class="separator:a6372e0465771594302532c457b974e29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d6d246a5fc4a92284c56d27c12312ab" id="r_a2d6d246a5fc4a92284c56d27c12312ab"><td class="memItemLeft" align="right" valign="top"><a id="a2d6d246a5fc4a92284c56d27c12312ab" name="a2d6d246a5fc4a92284c56d27c12312ab"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> ()</td></tr>
<tr class="separator:a2d6d246a5fc4a92284c56d27c12312ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc222bb7d8ee01334a13efbd587f12de" id="r_adc222bb7d8ee01334a13efbd587f12de"><td class="memItemLeft" align="right" valign="top"><a id="adc222bb7d8ee01334a13efbd587f12de" name="adc222bb7d8ee01334a13efbd587f12de"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value)</td></tr>
<tr class="separator:adc222bb7d8ee01334a13efbd587f12de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7727b21eb0e40fe66b2bdef83d5c9cdd" id="r_a7727b21eb0e40fe66b2bdef83d5c9cdd"><td class="memItemLeft" align="right" valign="top"><a id="a7727b21eb0e40fe66b2bdef83d5c9cdd" name="a7727b21eb0e40fe66b2bdef83d5c9cdd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value)</td></tr>
<tr class="separator:a7727b21eb0e40fe66b2bdef83d5c9cdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf6fedc503888a7604377e1baf8807e1" id="r_adf6fedc503888a7604377e1baf8807e1"><td class="memItemLeft" align="right" valign="top"><a id="adf6fedc503888a7604377e1baf8807e1" name="adf6fedc503888a7604377e1baf8807e1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;range)</td></tr>
<tr class="separator:adf6fedc503888a7604377e1baf8807e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c0cf9bf029f240fa94877ac451d8c54" id="r_a4c0cf9bf029f240fa94877ac451d8c54"><td class="memItemLeft" align="right" valign="top"><a id="a4c0cf9bf029f240fa94877ac451d8c54" name="a4c0cf9bf029f240fa94877ac451d8c54"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (plUInt16 uiCapacity)</td></tr>
<tr class="separator:a4c0cf9bf029f240fa94877ac451d8c54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee86d3f54bcaee8d5f88bd4a6d09b858" id="r_aee86d3f54bcaee8d5f88bd4a6d09b858"><td class="memItemLeft" align="right" valign="top"><a id="aee86d3f54bcaee8d5f88bd4a6d09b858" name="aee86d3f54bcaee8d5f88bd4a6d09b858"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> ()</td></tr>
<tr class="separator:aee86d3f54bcaee8d5f88bd4a6d09b858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adeed731d2c91a097242cbf8e7bbd93c1" id="r_adeed731d2c91a097242cbf8e7bbd93c1"><td class="memTemplParams" colspan="2"><a id="adeed731d2c91a097242cbf8e7bbd93c1" name="adeed731d2c91a097242cbf8e7bbd93c1"></a>
template&lt;typename &gt; </td></tr>
<tr class="memitem:adeed731d2c91a097242cbf8e7bbd93c1"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (plUInt16 uiCount)</td></tr>
<tr class="separator:adeed731d2c91a097242cbf8e7bbd93c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_small_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:af2dc5b40b8b6cfc396761d114ed42ac5 inherit pub_methods_classpl_small_array_base" id="r_af2dc5b40b8b6cfc396761d114ed42ac5"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:af2dc5b40b8b6cfc396761d114ed42ac5 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedbd9915c90b82c0b86be87bc884767f inherit pub_methods_classpl_small_array_base" id="r_aedbd9915c90b82c0b86be87bc884767f"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plSmallArrayBase</b> (const <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase</a>&lt; T, Size &gt; &amp;other, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:aedbd9915c90b82c0b86be87bc884767f inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50a4f80472f7a467e4e32f4266241cfd inherit pub_methods_classpl_small_array_base" id="r_a50a4f80472f7a467e4e32f4266241cfd"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plSmallArrayBase</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a50a4f80472f7a467e4e32f4266241cfd inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab71adc015a3b358a542b2fc0e495a5b2 inherit pub_methods_classpl_small_array_base" id="r_ab71adc015a3b358a542b2fc0e495a5b2"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plSmallArrayBase</b> (<a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:ab71adc015a3b358a542b2fc0e495a5b2 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc05e17b5edbd23572326219be30834c inherit pub_methods_classpl_small_array_base" id="r_acc05e17b5edbd23572326219be30834c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs)=delete</td></tr>
<tr class="separator:acc05e17b5edbd23572326219be30834c inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfe4024bdfb4e0154a8c0575a13ad0ae inherit pub_methods_classpl_small_array_base" id="r_adfe4024bdfb4e0154a8c0575a13ad0ae"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;rhs)=delete</td></tr>
<tr class="separator:adfe4024bdfb4e0154a8c0575a13ad0ae inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bdb7ccdd99b15c07c61f179436d63a8 inherit pub_methods_classpl_small_array_base" id="r_a7bdb7ccdd99b15c07c61f179436d63a8"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>CopyFrom</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a7bdb7ccdd99b15c07c61f179436d63a8 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other array into this one. <br /></td></tr>
<tr class="separator:a7bdb7ccdd99b15c07c61f179436d63a8 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a429bf06f44557e9e94d93bcee6cb8631 inherit pub_methods_classpl_small_array_base" id="r_a429bf06f44557e9e94d93bcee6cb8631"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>MoveFrom</b> (<a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a429bf06f44557e9e94d93bcee6cb8631 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from some other array into this one. <br /></td></tr>
<tr class="separator:a429bf06f44557e9e94d93bcee6cb8631 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab776a645d67194526ad6563cd2cad5f5 inherit pub_methods_classpl_small_array_base" id="r_ab776a645d67194526ad6563cd2cad5f5"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator plArrayPtr&lt; const T &gt;</b> () const</td></tr>
<tr class="memdesc:ab776a645d67194526ad6563cd2cad5f5 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to const <a class="el" href="../../db/d81/classpl_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">plArrayPtr</a>. <br /></td></tr>
<tr class="separator:ab776a645d67194526ad6563cd2cad5f5 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a61fca2934c395d98ed0ea70a79f3ab inherit pub_methods_classpl_small_array_base" id="r_a1a61fca2934c395d98ed0ea70a79f3ab"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator plArrayPtr&lt; T &gt;</b> ()</td></tr>
<tr class="memdesc:a1a61fca2934c395d98ed0ea70a79f3ab inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="../../db/d81/classpl_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">plArrayPtr</a>. <br /></td></tr>
<tr class="separator:a1a61fca2934c395d98ed0ea70a79f3ab inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae10acb56265e7505bf03cc5c90e8fc09 inherit pub_methods_classpl_small_array_base" id="r_ae10acb56265e7505bf03cc5c90e8fc09"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ae10acb56265e7505bf03cc5c90e8fc09 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:ae10acb56265e7505bf03cc5c90e8fc09 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ebed7c28ce3c488cc3775e79a230240 inherit pub_methods_classpl_small_array_base" id="r_a8ebed7c28ce3c488cc3775e79a230240"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase</a>&lt; T, Size &gt; &amp;)</td></tr>
<tr class="separator:a8ebed7c28ce3c488cc3775e79a230240 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab139b09923133b72fabb28a2fae3e4f4 inherit pub_methods_classpl_small_array_base" id="r_ab139b09923133b72fabb28a2fae3e4f4"><td class="memItemLeft" align="right" valign="top">
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (plUInt32 uiIndex) const</td></tr>
<tr class="memdesc:ab139b09923133b72fabb28a2fae3e4f4 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:ab139b09923133b72fabb28a2fae3e4f4 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e8832ff03f03674a30bf140d077e7f0 inherit pub_methods_classpl_small_array_base" id="r_a1e8832ff03f03674a30bf140d077e7f0"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (plUInt32 uiIndex)</td></tr>
<tr class="memdesc:a1e8832ff03f03674a30bf140d077e7f0 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a1e8832ff03f03674a30bf140d077e7f0 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a132a3c1de704395663e3ffeafeff482e inherit pub_methods_classpl_small_array_base" id="r_a132a3c1de704395663e3ffeafeff482e"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (plUInt16 uiCount, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a132a3c1de704395663e3ffeafeff482e inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is grown. <br /></td></tr>
<tr class="separator:a132a3c1de704395663e3ffeafeff482e inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac35a0b448af6ffaad076e109d6d0ae38 inherit pub_methods_classpl_small_array_base" id="r_ac35a0b448af6ffaad076e109d6d0ae38"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (plUInt16 uiCount, const T &amp;fillValue, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ac35a0b448af6ffaad076e109d6d0ae38 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Constructs all new elements by copying the FillValue. <br /></td></tr>
<tr class="separator:ac35a0b448af6ffaad076e109d6d0ae38 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55c33bfdeaaa99c1331a8a8fe2ee9e10 inherit pub_methods_classpl_small_array_base" id="r_a55c33bfdeaaa99c1331a8a8fe2ee9e10"><td class="memTemplParams" colspan="2">
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a55c33bfdeaaa99c1331a8a8fe2ee9e10 inherit pub_methods_classpl_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (plUInt16 uiCount, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a55c33bfdeaaa99c1331a8a8fe2ee9e10 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized. <br /></td></tr>
<tr class="separator:a55c33bfdeaaa99c1331a8a8fe2ee9e10 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cee3cefaff8bc613de722a43025ceca inherit pub_methods_classpl_small_array_base" id="r_a8cee3cefaff8bc613de722a43025ceca"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (plUInt16 uiCount, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a8cee3cefaff8bc613de722a43025ceca inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the container has at least <em>uiCount</em> elements. Ie. calls <a class="el" href="../../d7/de3/classpl_small_array_base.htm#a132a3c1de704395663e3ffeafeff482e" title="Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...">SetCount()</a> if the container has fewer elements, does nothing otherwise. <br /></td></tr>
<tr class="separator:a8cee3cefaff8bc613de722a43025ceca inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaadcac566b72769bc7881e1daadb63c7 inherit pub_methods_classpl_small_array_base" id="r_aaadcac566b72769bc7881e1daadb63c7"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:aaadcac566b72769bc7881e1daadb63c7 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active elements in the array. <br /></td></tr>
<tr class="separator:aaadcac566b72769bc7881e1daadb63c7 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5e8a1f919fa2e2be0f7737874d661fc inherit pub_methods_classpl_small_array_base" id="r_ac5e8a1f919fa2e2be0f7737874d661fc"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:ac5e8a1f919fa2e2be0f7737874d661fc inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the array does not contain any elements. <br /></td></tr>
<tr class="separator:ac5e8a1f919fa2e2be0f7737874d661fc inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1105ef94e1b2228e67ecfe976f151e13 inherit pub_methods_classpl_small_array_base" id="r_a1105ef94e1b2228e67ecfe976f151e13"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a1105ef94e1b2228e67ecfe976f151e13 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a1105ef94e1b2228e67ecfe976f151e13 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1f603e32fd9d8e5d01ac453c9a3f898 inherit pub_methods_classpl_small_array_base" id="r_af1f603e32fd9d8e5d01ac453c9a3f898"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const T &amp;value) const</td></tr>
<tr class="memdesc:af1f603e32fd9d8e5d01ac453c9a3f898 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given value can be found in the array. O(n) complexity. <br /></td></tr>
<tr class="separator:af1f603e32fd9d8e5d01ac453c9a3f898 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70cb0225a3ab95e62a1b8b3793e3d01b inherit pub_methods_classpl_small_array_base" id="r_a70cb0225a3ab95e62a1b8b3793e3d01b"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (const T &amp;value, plUInt32 uiIndex, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a70cb0225a3ab95e62a1b8b3793e3d01b inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a70cb0225a3ab95e62a1b8b3793e3d01b inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b5bb5855005cca54b378e411c72b9b4 inherit pub_methods_classpl_small_array_base" id="r_a8b5bb5855005cca54b378e411c72b9b4"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (T &amp;&amp;value, plUInt32 uiIndex, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a8b5bb5855005cca54b378e411c72b9b4 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a8b5bb5855005cca54b378e411c72b9b4 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a819a8168e990edb947bdfc68783067d2 inherit pub_methods_classpl_small_array_base" id="r_a819a8168e990edb947bdfc68783067d2"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndCopy</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a819a8168e990edb947bdfc68783067d2 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a819a8168e990edb947bdfc68783067d2 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae496c8f3895f5c72d78e17e7936ec8d3 inherit pub_methods_classpl_small_array_base" id="r_ae496c8f3895f5c72d78e17e7936ec8d3"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndSwap</b> (const T &amp;value)</td></tr>
<tr class="memdesc:ae496c8f3895f5c72d78e17e7936ec8d3 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:ae496c8f3895f5c72d78e17e7936ec8d3 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaa3bfea372deca3ac86eaf52e1e6885 inherit pub_methods_classpl_small_array_base" id="r_abaa3bfea372deca3ac86eaf52e1e6885"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndCopy</b> (plUInt32 uiIndex, plUInt16 uiNumElements=1)</td></tr>
<tr class="memdesc:abaa3bfea372deca3ac86eaf52e1e6885 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:abaa3bfea372deca3ac86eaf52e1e6885 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4225e8476f7118a0a4220bbd2ea69c27 inherit pub_methods_classpl_small_array_base" id="r_a4225e8476f7118a0a4220bbd2ea69c27"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndSwap</b> (plUInt32 uiIndex, plUInt16 uiNumElements=1)</td></tr>
<tr class="memdesc:a4225e8476f7118a0a4220bbd2ea69c27 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:a4225e8476f7118a0a4220bbd2ea69c27 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0c4dfc056dcc0d9739e6ed397dcd583 inherit pub_methods_classpl_small_array_base" id="r_ae0c4dfc056dcc0d9739e6ed397dcd583"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>IndexOf</b> (const T &amp;value, plUInt32 uiStartIndex=0) const</td></tr>
<tr class="memdesc:ae0c4dfc056dcc0d9739e6ed397dcd583 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the first occurrence of the given value and returns its index or plInvalidIndex if not found. <br /></td></tr>
<tr class="separator:ae0c4dfc056dcc0d9739e6ed397dcd583 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa61f12c4ae9a08d46f309e7f5379a748 inherit pub_methods_classpl_small_array_base" id="r_aa61f12c4ae9a08d46f309e7f5379a748"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>LastIndexOf</b> (const T &amp;value, plUInt32 uiStartIndex=plSmallInvalidIndex) const</td></tr>
<tr class="memdesc:aa61f12c4ae9a08d46f309e7f5379a748 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the last occurrence of the given value and returns its index or plInvalidIndex if not found. <br /></td></tr>
<tr class="separator:aa61f12c4ae9a08d46f309e7f5379a748 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff3a42c1621c781821554113bf61918 inherit pub_methods_classpl_small_array_base" id="r_a9ff3a42c1621c781821554113bf61918"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a9ff3a42c1621c781821554113bf61918 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grows the array by one element and returns a reference to the newly created element. <br /></td></tr>
<tr class="separator:a9ff3a42c1621c781821554113bf61918 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac950cb444242c44a3e2f4b428deb357d inherit pub_methods_classpl_small_array_base" id="r_ac950cb444242c44a3e2f4b428deb357d"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ac950cb444242c44a3e2f4b428deb357d inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:ac950cb444242c44a3e2f4b428deb357d inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a370d12f1f40604b3360a877ca6eab7af inherit pub_methods_classpl_small_array_base" id="r_a370d12f1f40604b3360a877ca6eab7af"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a370d12f1f40604b3360a877ca6eab7af inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a370d12f1f40604b3360a877ca6eab7af inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac416170760d69eb6792c4a9e0926449e inherit pub_methods_classpl_small_array_base" id="r_ac416170760d69eb6792c4a9e0926449e"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (const T &amp;value)</td></tr>
<tr class="memdesc:ac416170760d69eb6792c4a9e0926449e inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:ac416170760d69eb6792c4a9e0926449e inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a026c0b458e04da9e28dd3d352f2a080a inherit pub_methods_classpl_small_array_base" id="r_a026c0b458e04da9e28dd3d352f2a080a"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a026c0b458e04da9e28dd3d352f2a080a inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a026c0b458e04da9e28dd3d352f2a080a inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e083b79e10f09bd20ac388a61bccb51 inherit pub_methods_classpl_small_array_base" id="r_a0e083b79e10f09bd20ac388a61bccb51"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;range, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a0e083b79e10f09bd20ac388a61bccb51 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes all elements in range at the end of the array. Increases the capacity if necessary. <br /></td></tr>
<tr class="separator:a0e083b79e10f09bd20ac388a61bccb51 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a014b7fc2ba69771cf680857045655a71 inherit pub_methods_classpl_small_array_base" id="r_a014b7fc2ba69771cf680857045655a71"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PopBack</b> (plUInt32 uiCountToRemove=1)</td></tr>
<tr class="memdesc:a014b7fc2ba69771cf680857045655a71 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes count elements from the end of the array. <br /></td></tr>
<tr class="separator:a014b7fc2ba69771cf680857045655a71 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9641463b1b2674974d6f5af15e6161d1 inherit pub_methods_classpl_small_array_base" id="r_a9641463b1b2674974d6f5af15e6161d1"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> ()</td></tr>
<tr class="memdesc:a9641463b1b2674974d6f5af15e6161d1 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a9641463b1b2674974d6f5af15e6161d1 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae51280e3d782e0e508d78d1569484691 inherit pub_methods_classpl_small_array_base" id="r_ae51280e3d782e0e508d78d1569484691"><td class="memItemLeft" align="right" valign="top">
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> () const</td></tr>
<tr class="memdesc:ae51280e3d782e0e508d78d1569484691 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:ae51280e3d782e0e508d78d1569484691 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad895a02e3503ea07ee9fddec917f5bc inherit pub_methods_classpl_small_array_base" id="r_aad895a02e3503ea07ee9fddec917f5bc"><td class="memTemplParams" colspan="2">
template&lt;typename Comparer &gt; </td></tr>
<tr class="memitem:aad895a02e3503ea07ee9fddec917f5bc inherit pub_methods_classpl_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Sort</b> (const Comparer &amp;comparer)</td></tr>
<tr class="memdesc:aad895a02e3503ea07ee9fddec917f5bc inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with explicit comparer. <br /></td></tr>
<tr class="separator:aad895a02e3503ea07ee9fddec917f5bc inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6718419bdff0ce164ae62177cb886de6 inherit pub_methods_classpl_small_array_base" id="r_a6718419bdff0ce164ae62177cb886de6"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Sort</b> ()</td></tr>
<tr class="memdesc:a6718419bdff0ce164ae62177cb886de6 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with default comparer. <br /></td></tr>
<tr class="separator:a6718419bdff0ce164ae62177cb886de6 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d296d79cfc46a7daa2e5f63aec5594f inherit pub_methods_classpl_small_array_base" id="r_a8d296d79cfc46a7daa2e5f63aec5594f"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> ()</td></tr>
<tr class="memdesc:a8d296d79cfc46a7daa2e5f63aec5594f inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a8d296d79cfc46a7daa2e5f63aec5594f inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab18568d8c7240921d1e1144e589b58a4 inherit pub_methods_classpl_small_array_base" id="r_ab18568d8c7240921d1e1144e589b58a4"><td class="memItemLeft" align="right" valign="top">
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:ab18568d8c7240921d1e1144e589b58a4 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:ab18568d8c7240921d1e1144e589b58a4 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa15d1b49967ceb624cbc58fb65606da inherit pub_methods_classpl_small_array_base" id="r_aaa15d1b49967ceb624cbc58fb65606da"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> ()</td></tr>
<tr class="memdesc:aaa15d1b49967ceb624cbc58fb65606da inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:aaa15d1b49967ceb624cbc58fb65606da inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37beccc22732c11d4afbd95d66a26ff1 inherit pub_methods_classpl_small_array_base" id="r_a37beccc22732c11d4afbd95d66a26ff1"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> () const</td></tr>
<tr class="memdesc:a37beccc22732c11d4afbd95d66a26ff1 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a37beccc22732c11d4afbd95d66a26ff1 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a827d52bbc2f8b77ce74bee1e2a960d7d inherit pub_methods_classpl_small_array_base" id="r_a827d52bbc2f8b77ce74bee1e2a960d7d"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; typename <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> ()</td></tr>
<tr class="memdesc:a827d52bbc2f8b77ce74bee1e2a960d7d inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a827d52bbc2f8b77ce74bee1e2a960d7d inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a132ead49dbf1c0f163879748c5ad388b inherit pub_methods_classpl_small_array_base" id="r_a132ead49dbf1c0f163879748c5ad388b"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; typename <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> () const</td></tr>
<tr class="memdesc:a132ead49dbf1c0f163879748c5ad388b inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a132ead49dbf1c0f163879748c5ad388b inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f8e3c811f1a36986107131c01820426 inherit pub_methods_classpl_small_array_base" id="r_a6f8e3c811f1a36986107131c01820426"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (plUInt16 uiCapacity, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a6f8e3c811f1a36986107131c01820426 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array so it can at least store the given capacity. <br /></td></tr>
<tr class="separator:a6f8e3c811f1a36986107131c01820426 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c9ccc27d42825a50c849e2d8b4d6be2 inherit pub_methods_classpl_small_array_base" id="r_a6c9ccc27d42825a50c849e2d8b4d6be2"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a6c9ccc27d42825a50c849e2d8b4d6be2 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the array is empty. <br /></td></tr>
<tr class="separator:a6c9ccc27d42825a50c849e2d8b4d6be2 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef1a6d049970c942380c0b76626ea746 inherit pub_methods_classpl_small_array_base" id="r_aef1a6d049970c942380c0b76626ea746"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCapacity</b> () const</td></tr>
<tr class="memdesc:aef1a6d049970c942380c0b76626ea746 inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reserved number of elements that the array can hold without reallocating. <br /></td></tr>
<tr class="separator:aef1a6d049970c942380c0b76626ea746 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a918972762638a07472ad288f59d7bd7b inherit pub_methods_classpl_small_array_base" id="r_a918972762638a07472ad288f59d7bd7b"><td class="memItemLeft" align="right" valign="top">
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:a918972762638a07472ad288f59d7bd7b inherit pub_methods_classpl_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a918972762638a07472ad288f59d7bd7b inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95feefb888f6096c426343a59533189b inherit pub_methods_classpl_small_array_base" id="r_a95feefb888f6096c426343a59533189b"><td class="memTemplParams" colspan="2">
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a95feefb888f6096c426343a59533189b inherit pub_methods_classpl_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:a95feefb888f6096c426343a59533189b inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2150b7d84d422ffc3de3b72d6e08b61 inherit pub_methods_classpl_small_array_base" id="r_aa2150b7d84d422ffc3de3b72d6e08b61"><td class="memTemplParams" colspan="2">
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa2150b7d84d422ffc3de3b72d6e08b61 inherit pub_methods_classpl_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:aa2150b7d84d422ffc3de3b72d6e08b61 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4b02b8374cc2b04622118f2a6b8a4a6 inherit pub_methods_classpl_small_array_base" id="r_ae4b02b8374cc2b04622118f2a6b8a4a6"><td class="memTemplParams" colspan="2">
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ae4b02b8374cc2b04622118f2a6b8a4a6 inherit pub_methods_classpl_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:ae4b02b8374cc2b04622118f2a6b8a4a6 inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1295ddd795fb00ecbf786d0ecab723d inherit pub_methods_classpl_small_array_base" id="r_ab1295ddd795fb00ecbf786d0ecab723d"><td class="memTemplParams" colspan="2">
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ab1295ddd795fb00ecbf786d0ecab723d inherit pub_methods_classpl_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:ab1295ddd795fb00ecbf786d0ecab723d inherit pub_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classpl_small_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_classpl_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a420d1a9b8d09a196c0e2a5f60c1612fc inherit pub_types_classpl_small_array_base" id="r_a420d1a9b8d09a196c0e2a5f60c1612fc"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = T</td></tr>
<tr class="separator:a420d1a9b8d09a196c0e2a5f60c1612fc inherit pub_types_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10476ea6ec63f01ccf8946f15dd8bbef inherit pub_types_classpl_small_array_base" id="r_a10476ea6ec63f01ccf8946f15dd8bbef"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reference</b> = const T&amp;</td></tr>
<tr class="separator:a10476ea6ec63f01ccf8946f15dd8bbef inherit pub_types_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e2c2571b31ce1e0473eee95d82ece2 inherit pub_types_classpl_small_array_base" id="r_ad5e2c2571b31ce1e0473eee95d82ece2"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T*</td></tr>
<tr class="separator:ad5e2c2571b31ce1e0473eee95d82ece2 inherit pub_types_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4c5eee48fa58dc2a4f9cc96c0868138 inherit pub_types_classpl_small_array_base" id="r_ab4c5eee48fa58dc2a4f9cc96c0868138"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt;T&gt;</td></tr>
<tr class="separator:ab4c5eee48fa58dc2a4f9cc96c0868138 inherit pub_types_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e3a538ceeac5f1c432e9029bacb900b inherit pub_types_classpl_small_array_base" id="r_a2e3a538ceeac5f1c432e9029bacb900b"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T*</td></tr>
<tr class="separator:a2e3a538ceeac5f1c432e9029bacb900b inherit pub_types_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ebde9584ed2ae6dd3bb8c1c4624fc67 inherit pub_types_classpl_small_array_base" id="r_a6ebde9584ed2ae6dd3bb8c1c4624fc67"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt;T&gt;</td></tr>
<tr class="separator:a6ebde9584ed2ae6dd3bb8c1c4624fc67 inherit pub_types_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classpl_small_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_types_classpl_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:aaad17b2375ff479f2695e1cb002487da inherit pro_types_classpl_small_array_base" id="r_aaad17b2375ff479f2695e1cb002487da"><td class="memItemLeft" align="right" valign="top"><a id="aaad17b2375ff479f2695e1cb002487da" name="aaad17b2375ff479f2695e1cb002487da"></a>enum &#160;</td><td class="memItemRight" valign="bottom">{ <b>CAPACITY_ALIGNMENT</b> = 4
 }</td></tr>
<tr class="separator:aaad17b2375ff479f2695e1cb002487da inherit pro_types_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_small_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a53525790118375e633177244f7fbe2b9 inherit pro_methods_classpl_small_array_base" id="r_a53525790118375e633177244f7fbe2b9"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCapacity</b> (plUInt16 uiCapacity, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a53525790118375e633177244f7fbe2b9 inherit pro_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43a7db62132043f7e5485fbdcdcc3d3a inherit pro_methods_classpl_small_array_base" id="r_a43a7db62132043f7e5485fbdcdcc3d3a"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> ()</td></tr>
<tr class="separator:a43a7db62132043f7e5485fbdcdcc3d3a inherit pro_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a409d2092c0d5a6569cbb76a170df8145 inherit pro_methods_classpl_small_array_base" id="r_a409d2092c0d5a6569cbb76a170df8145"><td class="memItemLeft" align="right" valign="top">
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> () const</td></tr>
<tr class="separator:a409d2092c0d5a6569cbb76a170df8145 inherit pro_methods_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_small_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a3da342f40f80126dea8f655656225893 inherit pro_attribs_classpl_small_array_base" id="r_a3da342f40f80126dea8f655656225893"><td class="memItemLeft" align="right" valign="top">
plUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCount</b> = 0</td></tr>
<tr class="separator:a3da342f40f80126dea8f655656225893 inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c0f0be40987000473fd443f612dc96a inherit pro_attribs_classpl_small_array_base" id="r_a3c0f0be40987000473fd443f612dc96a"><td class="memItemLeft" align="right" valign="top">
plUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCapacity</b> = Size</td></tr>
<tr class="separator:a3c0f0be40987000473fd443f612dc96a inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6935273e9ba9c64de7ffdbf1104468ff inherit pro_attribs_classpl_small_array_base" id="r_a6935273e9ba9c64de7ffdbf1104468ff"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiUserData</b> = 0</td></tr>
<tr class="separator:a6935273e9ba9c64de7ffdbf1104468ff inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55da76207318defc1218ecd468c981de inherit pro_attribs_classpl_small_array_base" id="r_a55da76207318defc1218ecd468c981de"><td class="memItemLeft" >
union {&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator: inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4b60f04663ed066da3894030a613985 inherit pro_attribs_classpl_small_array_base" id="r_ae4b60f04663ed066da3894030a613985"><td class="memItemLeft" >
&#160;&#160;&#160;struct <b>alignas</b> {&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator: inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ce36692347caad12456c4955c98ceb7 inherit pro_attribs_classpl_small_array_base" id="r_a4ce36692347caad12456c4955c98ceb7"><td class="memItemLeft" >
&#160;&#160;&#160;&#160;&#160;&#160;plUInt8&#160;&#160;&#160;<b>m_StaticData</b> [Size *sizeof(T)]&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a4ce36692347caad12456c4955c98ceb7 inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4b60f04663ed066da3894030a613985 inherit pro_attribs_classpl_small_array_base" id="r_ae4b60f04663ed066da3894030a613985"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;</td><td class="memItemRight" valign="bottom">&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:ae4b60f04663ed066da3894030a613985 inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64323f3d484fb52ee6571279a6810be9 inherit pro_attribs_classpl_small_array_base" id="r_a64323f3d484fb52ee6571279a6810be9"><td class="memItemLeft" >
&#160;&#160;&#160;T *&#160;&#160;&#160;<b>m_pElements</b> = nullptr&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a64323f3d484fb52ee6571279a6810be9 inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55da76207318defc1218ecd468c981de inherit pro_attribs_classpl_small_array_base" id="r_a55da76207318defc1218ecd468c981de"><td class="memItemLeft" valign="top">};&#160;</td><td class="memItemRight" valign="bottom">&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a55da76207318defc1218ecd468c981de inherit pro_attribs_classpl_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename T, plUInt16 Size, typename AllocatorWrapper = plDefaultAllocatorWrapper&gt;<br />
class plSmallArray&lt; T, Size, AllocatorWrapper &gt;</div><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d7/de3/classpl_small_array_base.htm" title="Implementation of a dynamically growing array with in-place storage and small memory overhead.">plSmallArrayBase</a> </dd></dl>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../d2/d62/_small_array__inl_8h_source.htm">SmallArray_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../df/dd9/classpl_small_array.htm">plSmallArray</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
