<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plThreadWithDispatcher Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/d7e/classpl_thread_with_dispatcher.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="../../d9/df5/classpl_thread_with_dispatcher-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plThreadWithDispatcher Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>This class is the base class for threads which need dispatching of calls.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d6/d02/_thread_with_dispatcher_8h_source.htm">ThreadWithDispatcher.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plThreadWithDispatcher:</div>
<div class="dyncontent">
<div class="center"><img src="../../d2/d6f/classpl_thread_with_dispatcher__inherit__graph.png" border="0" usemap="#apl_thread_with_dispatcher_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_thread_with_dispatcher_inherit__map" id="apl_thread_with_dispatcher_inherit__map">
<area shape="rect" title="This class is the base class for threads which need dispatching of calls." alt="" coords="5,155,165,181"/>
<area shape="rect" href="../../d6/dae/classpl_thread.htm" title="This class is the base class for platform independent long running threads." alt="" coords="50,80,120,107"/>
<area shape="poly" title=" " alt="" coords="88,122,88,154,82,154,82,122"/>
<area shape="rect" href="../../dd/d17/classpl_o_s_thread.htm" title="Implementation of a thread." alt="" coords="40,5,130,32"/>
<area shape="poly" title=" " alt="" coords="88,48,88,80,82,80,82,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a164e193ac6da8b53f701fe0a7986cc07" id="r_a164e193ac6da8b53f701fe0a7986cc07"><td class="memItemLeft" align="right" valign="top"><a id="a164e193ac6da8b53f701fe0a7986cc07" name="a164e193ac6da8b53f701fe0a7986cc07"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>DispatchFunction</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt;void(), 128&gt;</td></tr>
<tr class="separator:a164e193ac6da8b53f701fe0a7986cc07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_types_classpl_thread"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_classpl_thread')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d6/dae/classpl_thread.htm">plThread</a></td></tr>
<tr class="memitem:a89d4c228905d15dae4e4f279a873f8fa inherit pub_types_classpl_thread" id="r_a89d4c228905d15dae4e4f279a873f8fa"><td class="memItemLeft" align="right" valign="top"><a id="a89d4c228905d15dae4e4f279a873f8fa" name="a89d4c228905d15dae4e4f279a873f8fa"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dae/classpl_thread.htm#a89d4c228905d15dae4e4f279a873f8fa">plThreadStatus</a> { <b>Created</b> = 0
, <b>Running</b>
, <b>Finished</b>
 }</td></tr>
<tr class="memdesc:a89d4c228905d15dae4e4f279a873f8fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Describes the thread status. <br /></td></tr>
<tr class="separator:a89d4c228905d15dae4e4f279a873f8fa inherit pub_types_classpl_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6a2ae93995afcb3fcdf3b0425eb3ec4d" id="r_a6a2ae93995afcb3fcdf3b0425eb3ec4d"><td class="memItemLeft" align="right" valign="top"><a id="a6a2ae93995afcb3fcdf3b0425eb3ec4d" name="a6a2ae93995afcb3fcdf3b0425eb3ec4d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plThreadWithDispatcher</b> (const char *szName=&quot;plThreadWithDispatcher&quot;, plUInt32 uiStackSize=128 *1024)</td></tr>
<tr class="memdesc:a6a2ae93995afcb3fcdf3b0425eb3ec4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the runnable class. <br /></td></tr>
<tr class="separator:a6a2ae93995afcb3fcdf3b0425eb3ec4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f0b8de062fcfafa2644493f3827f23f" id="r_a8f0b8de062fcfafa2644493f3827f23f"><td class="memItemLeft" align="right" valign="top"><a id="a8f0b8de062fcfafa2644493f3827f23f" name="a8f0b8de062fcfafa2644493f3827f23f"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>~plThreadWithDispatcher</b> ()</td></tr>
<tr class="memdesc:a8f0b8de062fcfafa2644493f3827f23f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor checks if the thread is deleted while still running, which is not allowed as this is a data hazard. <br /></td></tr>
<tr class="separator:a8f0b8de062fcfafa2644493f3827f23f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabce07ebfb4104e86c77f7e45e4e3ed4" id="r_aabce07ebfb4104e86c77f7e45e4e3ed4"><td class="memItemLeft" align="right" valign="top"><a id="aabce07ebfb4104e86c77f7e45e4e3ed4" name="aabce07ebfb4104e86c77f7e45e4e3ed4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Dispatch</b> (<a class="el" href="../../df/df1/structpl_delegate.htm">DispatchFunction</a> &amp;&amp;delegate)</td></tr>
<tr class="memdesc:aabce07ebfb4104e86c77f7e45e4e3ed4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Use this to enqueue a function call to the given delegate at some later point running in the given thread context. <br /></td></tr>
<tr class="separator:aabce07ebfb4104e86c77f7e45e4e3ed4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_thread"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_thread')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d6/dae/classpl_thread.htm">plThread</a></td></tr>
<tr class="memitem:ad5976d8b8b1e94945fc00a2fb7cf3cbd inherit pub_methods_classpl_thread" id="r_ad5976d8b8b1e94945fc00a2fb7cf3cbd"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plThread</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName=&quot;plThread&quot;, plUInt32 uiStackSize=128 *1024)</td></tr>
<tr class="memdesc:ad5976d8b8b1e94945fc00a2fb7cf3cbd inherit pub_methods_classpl_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the runnable class. <br /></td></tr>
<tr class="separator:ad5976d8b8b1e94945fc00a2fb7cf3cbd inherit pub_methods_classpl_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a342c125a9f75889632aea23cc77e6ba3 inherit pub_methods_classpl_thread" id="r_a342c125a9f75889632aea23cc77e6ba3"><td class="memItemLeft" align="right" valign="top">
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>~plThread</b> ()</td></tr>
<tr class="memdesc:a342c125a9f75889632aea23cc77e6ba3 inherit pub_methods_classpl_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor checks if the thread is deleted while still running, which is not allowed as this is a data hazard. <br /></td></tr>
<tr class="separator:a342c125a9f75889632aea23cc77e6ba3 inherit pub_methods_classpl_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e2d78837102f7a19fa1d34435b60330 inherit pub_methods_classpl_thread" id="r_a6e2d78837102f7a19fa1d34435b60330"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d6/dae/classpl_thread.htm#a89d4c228905d15dae4e4f279a873f8fa">plThreadStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetThreadStatus</b> () const</td></tr>
<tr class="memdesc:a6e2d78837102f7a19fa1d34435b60330 inherit pub_methods_classpl_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the thread status. <br /></td></tr>
<tr class="separator:a6e2d78837102f7a19fa1d34435b60330 inherit pub_methods_classpl_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b1feb1be8d86b5b9dd913884abe4db1 inherit pub_methods_classpl_thread" id="r_a4b1feb1be8d86b5b9dd913884abe4db1"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsRunning</b> () const</td></tr>
<tr class="memdesc:a4b1feb1be8d86b5b9dd913884abe4db1 inherit pub_methods_classpl_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to determine if the thread is running. <br /></td></tr>
<tr class="separator:a4b1feb1be8d86b5b9dd913884abe4db1 inherit pub_methods_classpl_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9a13f6cfbc043c9185132928803c34a inherit pub_methods_classpl_thread" id="r_ad9a13f6cfbc043c9185132928803c34a"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetThreadName</b> () const</td></tr>
<tr class="memdesc:ad9a13f6cfbc043c9185132928803c34a inherit pub_methods_classpl_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the thread name. <br /></td></tr>
<tr class="separator:ad9a13f6cfbc043c9185132928803c34a inherit pub_methods_classpl_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_o_s_thread"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_o_s_thread')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dd/d17/classpl_o_s_thread.htm">plOSThread</a></td></tr>
<tr class="memitem:abaed9605dc7880813172ad238cd67f04 inherit pub_methods_classpl_o_s_thread" id="r_abaed9605dc7880813172ad238cd67f04"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d17/classpl_o_s_thread.htm#abaed9605dc7880813172ad238cd67f04">plOSThread</a> (plOSThreadEntryPoint threadEntryPoint, void *pUserData=nullptr, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName=&quot;plOSThread&quot;, plUInt32 uiStackSize=128 *1024)</td></tr>
<tr class="memdesc:abaed9605dc7880813172ad238cd67f04 inherit pub_methods_classpl_o_s_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the thread instance (e.g. thread creation etc.)  <br /></td></tr>
<tr class="separator:abaed9605dc7880813172ad238cd67f04 inherit pub_methods_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ac35947938f82e6b3084f228cca0c8c inherit pub_methods_classpl_o_s_thread" id="r_a2ac35947938f82e6b3084f228cca0c8c"><td class="memItemLeft" align="right" valign="top">
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>~plOSThread</b> ()</td></tr>
<tr class="memdesc:a2ac35947938f82e6b3084f228cca0c8c inherit pub_methods_classpl_o_s_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a2ac35947938f82e6b3084f228cca0c8c inherit pub_methods_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7a129d806f0e23c5890215c2fd3e2b9 inherit pub_methods_classpl_o_s_thread" id="r_ae7a129d806f0e23c5890215c2fd3e2b9"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Start</b> ()</td></tr>
<tr class="memdesc:ae7a129d806f0e23c5890215c2fd3e2b9 inherit pub_methods_classpl_o_s_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the thread. <br /></td></tr>
<tr class="separator:ae7a129d806f0e23c5890215c2fd3e2b9 inherit pub_methods_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a547a2d03d3259accc6380eccfaa8191d inherit pub_methods_classpl_o_s_thread" id="r_a547a2d03d3259accc6380eccfaa8191d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d17/classpl_o_s_thread.htm#a547a2d03d3259accc6380eccfaa8191d">Join</a> ()</td></tr>
<tr class="memdesc:a547a2d03d3259accc6380eccfaa8191d inherit pub_methods_classpl_o_s_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Waits in the calling thread until the thread has finished execution (e.g. returned from the thread function)  <br /></td></tr>
<tr class="separator:a547a2d03d3259accc6380eccfaa8191d inherit pub_methods_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a723c55b6a5f942d68825479d42dd05ef inherit pub_methods_classpl_o_s_thread" id="r_a723c55b6a5f942d68825479d42dd05ef"><td class="memItemLeft" align="right" valign="top">
const plThreadID &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetThreadID</b> () const</td></tr>
<tr class="memdesc:a723c55b6a5f942d68825479d42dd05ef inherit pub_methods_classpl_o_s_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the thread ID of the thread object, may be used in comparison operations with <a class="el" href="../../d1/d2b/classpl_thread_utils.htm#adf8f8da9590ebf5937ce90138014a5e3" title="Returns an identifier for the currently running thread.">plThreadUtils::GetCurrentThreadID()</a> for example. <br /></td></tr>
<tr class="separator:a723c55b6a5f942d68825479d42dd05ef inherit pub_methods_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a7341dcd833d6edc9c2fbead0e52955f1" id="r_a7341dcd833d6edc9c2fbead0e52955f1"><td class="memItemLeft" align="right" valign="top"><a id="a7341dcd833d6edc9c2fbead0e52955f1" name="a7341dcd833d6edc9c2fbead0e52955f1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DispatchQueue</b> ()</td></tr>
<tr class="memdesc:a7341dcd833d6edc9c2fbead0e52955f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Needs to be called by derived thread implementations to dispatch the function calls. <br /></td></tr>
<tr class="separator:a7341dcd833d6edc9c2fbead0e52955f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a5d4e9242af54e6bf45ed521e0a18dc2b" id="r_a5d4e9242af54e6bf45ed521e0a18dc2b"><td class="memItemLeft" align="right" valign="top">virtual plUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5d4e9242af54e6bf45ed521e0a18dc2b">Run</a> ()=0</td></tr>
<tr class="memdesc:a5d4e9242af54e6bf45ed521e0a18dc2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">The run function can be used to implement a long running task in a thread in a platform independent way.  <br /></td></tr>
<tr class="separator:a5d4e9242af54e6bf45ed521e0a18dc2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_thread"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_thread')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d6/dae/classpl_thread.htm">plThread</a></td></tr>
<tr class="memitem:af97babab6b3f3704281ea92d356a8d3c inherit pub_static_methods_classpl_thread" id="r_af97babab6b3f3704281ea92d356a8d3c"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d6/dae/classpl_thread.htm">plThread</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetCurrentThread</b> ()</td></tr>
<tr class="memdesc:af97babab6b3f3704281ea92d356a8d3c inherit pub_static_methods_classpl_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current <a class="el" href="../../d6/dae/classpl_thread.htm" title="This class is the base class for platform independent long running threads.">plThread</a> if the current platform thread is an <a class="el" href="../../d6/dae/classpl_thread.htm" title="This class is the base class for platform independent long running threads.">plThread</a>. Returns nullptr otherwise. <br /></td></tr>
<tr class="separator:af97babab6b3f3704281ea92d356a8d3c inherit pub_static_methods_classpl_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classpl_o_s_thread"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_o_s_thread')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../dd/d17/classpl_o_s_thread.htm">plOSThread</a></td></tr>
<tr class="memitem:a9554a9e593d9d56687d37c43852e0e93 inherit pub_static_methods_classpl_o_s_thread" id="r_a9554a9e593d9d56687d37c43852e0e93"><td class="memItemLeft" align="right" valign="top">
static plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetThreadCount</b> ()</td></tr>
<tr class="memdesc:a9554a9e593d9d56687d37c43852e0e93 inherit pub_static_methods_classpl_o_s_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns how many plOSThreads are currently active. <br /></td></tr>
<tr class="separator:a9554a9e593d9d56687d37c43852e0e93 inherit pub_static_methods_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_attribs_classpl_thread"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_attribs_classpl_thread')"><img src="../../closed.png" alt="-"/>&#160;Static Public Attributes inherited from <a class="el" href="../../d6/dae/classpl_thread.htm">plThread</a></td></tr>
<tr class="memitem:a07f435dded41cd89d0ae85b682c66751 inherit pub_static_attribs_classpl_thread" id="r_a07f435dded41cd89d0ae85b682c66751"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../dd/d61/classpl_event.htm">plEvent</a>&lt; const <a class="el" href="../../da/d53/structpl_thread_event.htm">plThreadEvent</a> &amp;, <a class="el" href="../../d1/df4/classpl_mutex.htm">plMutex</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dae/classpl_thread.htm#a07f435dded41cd89d0ae85b682c66751">s_ThreadEvents</a></td></tr>
<tr class="memdesc:a07f435dded41cd89d0ae85b682c66751 inherit pub_static_attribs_classpl_thread"><td class="mdescLeft">&#160;</td><td class="mdescRight">These events inform about threads starting and finishing.  <br /></td></tr>
<tr class="separator:a07f435dded41cd89d0ae85b682c66751 inherit pub_static_attribs_classpl_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_o_s_thread"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_o_s_thread')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../dd/d17/classpl_o_s_thread.htm">plOSThread</a></td></tr>
<tr class="memitem:a103f7aa2f9e39d951cd8e15166c49707 inherit pro_attribs_classpl_o_s_thread" id="r_a103f7aa2f9e39d951cd8e15166c49707"><td class="memItemLeft" align="right" valign="top">
plThreadHandle&#160;</td><td class="memItemRight" valign="bottom"><b>m_hHandle</b></td></tr>
<tr class="separator:a103f7aa2f9e39d951cd8e15166c49707 inherit pro_attribs_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a0c67e78a48ea06b7e50fffff435a21 inherit pro_attribs_classpl_o_s_thread" id="r_a8a0c67e78a48ea06b7e50fffff435a21"><td class="memItemLeft" align="right" valign="top">
plThreadID&#160;</td><td class="memItemRight" valign="bottom"><b>m_ThreadID</b></td></tr>
<tr class="separator:a8a0c67e78a48ea06b7e50fffff435a21 inherit pro_attribs_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67fb1b3205d783676353d178258e18d3 inherit pro_attribs_classpl_o_s_thread" id="r_a67fb1b3205d783676353d178258e18d3"><td class="memItemLeft" align="right" valign="top">
plOSThreadEntryPoint&#160;</td><td class="memItemRight" valign="bottom"><b>m_EntryPoint</b></td></tr>
<tr class="separator:a67fb1b3205d783676353d178258e18d3 inherit pro_attribs_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addbcd0af93614dfc646b9d6c13934c2d inherit pro_attribs_classpl_o_s_thread" id="r_addbcd0af93614dfc646b9d6c13934c2d"><td class="memItemLeft" align="right" valign="top">
void *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pUserData</b></td></tr>
<tr class="separator:addbcd0af93614dfc646b9d6c13934c2d inherit pro_attribs_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2293a7f866cef45336746b67848d24df inherit pro_attribs_classpl_o_s_thread" id="r_a2293a7f866cef45336746b67848d24df"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sName</b></td></tr>
<tr class="separator:a2293a7f866cef45336746b67848d24df inherit pro_attribs_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cdab6608315819c2264eb446236f29e inherit pro_attribs_classpl_o_s_thread" id="r_a0cdab6608315819c2264eb446236f29e"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiStackSize</b></td></tr>
<tr class="separator:a0cdab6608315819c2264eb446236f29e inherit pro_attribs_classpl_o_s_thread"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class is the base class for threads which need dispatching of calls. </p>
<p>Used by deriving from this class and overriding the <a class="el" href="#a5d4e9242af54e6bf45ed521e0a18dc2b" title="The run function can be used to implement a long running task in a thread in a platform independent w...">Run()</a> method. Call <a class="el" href="#a7341dcd833d6edc9c2fbead0e52955f1" title="Needs to be called by derived thread implementations to dispatch the function calls.">DispatchQueue()</a> regurarely so that the collected messages can be dispatched. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a5d4e9242af54e6bf45ed521e0a18dc2b" name="a5d4e9242af54e6bf45ed521e0a18dc2b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d4e9242af54e6bf45ed521e0a18dc2b">&#9670;&#160;</a></span>Run()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual plUInt32 plThreadWithDispatcher::Run </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The run function can be used to implement a long running task in a thread in a platform independent way. </p>

<p>Implements <a class="el" href="../../d6/dae/classpl_thread.htm#ac8d0cf670a88e8daf67be23c4f8f1e62">plThread</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Threading/<a class="el" href="../../d6/d02/_thread_with_dispatcher_8h_source.htm">ThreadWithDispatcher.h</a></li>
<li>Code/Engine/Foundation/Threading/Implementation/<b>ThreadWithDispatcher.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../df/d7e/classpl_thread_with_dispatcher.htm">plThreadWithDispatcher</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
