<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Member List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d1/db3/structpl_hybrid_string_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">plHybridStringBase&lt; Size &gt; Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a6dc4bd4cf0b2bda613396e87d27df9c6">Clear</a>()</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a71ac29b18708a376ce3e9f03bb756a82">Compare</a>(plStringView sOther) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a91a71d7390204850be0e8fc9193e0f31">Compare_NoCase</a>(plStringView sOther) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a946009c071c70e5b2ad616a16213d113">CompareN</a>(plStringView sOther, plUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a4af63c140fc4fe56e1a290df992cec7e">CompareN_NoCase</a>(plStringView sOther, plUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#aa5dc9b2300f37b7bb4a42999870e6092">ComputeCharacterPosition</a>(plUInt32 uiCharacterIndex) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ab6961a7b6896b3b482b20df06de7c689">EndsWith</a>(plStringView sEndsWith) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8986dab73aa8d7095b79ddf761cf6b0d">EndsWith_NoCase</a>(plStringView sEndsWith) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a2d116e5f43c0ae774c2346b5f94a992c">FindLastSubString</a>(plStringView sStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a54c2b870afa5c0a2fb437e32219eb7d1">FindLastSubString_NoCase</a>(plStringView sStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#afb80af12ae97555d0870359e86bd1a68">FindSubString</a>(plStringView sStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8972e55722d17be6604b1df08082cf83">FindSubString_NoCase</a>(plStringView sStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#af40ca95f7c2b77e18266ffe6ff7483a8">FindWholeWord</a>(const char *szSearchFor, plStringUtils::PL_CHARACTER_FILTER isDelimiterCB, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8b6659ee0b76480c3ba534f74a4089fa">FindWholeWord_NoCase</a>(const char *szSearchFor, plStringUtils::PL_CHARACTER_FILTER isDelimiterCB, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a2e226b7e502bfc6f0f9f9dd05e4ce236">GetCharacterCount</a>() const</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a06c17e3b0fbddb8388534e8b94422d16">GetData</a>() const</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a13ca7b0c2437b3c6d86417e614f826bc">GetElementCount</a>() const</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ad8352abf502483f0e4e10c6733bde642">GetFileDirectory</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ad0543d52d510868337e70f18ab4467a6">GetFileExtension</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8b26dfed7384bb3264d3f134648396f9">GetFileName</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a5be3ebeaf3a8e57322061b6424ca25a8">GetFileNameAndExtension</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a220cf5af489f0f185b304c2a9388b8de">GetFirst</a>(plUInt32 uiNumCharacters) const</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#abf2858e6c7fe5a8ca5500476243ab59a">GetHeapMemoryUsage</a>() const</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a97bd0de57b678794224901f970b864b7">GetIteratorBack</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ac5f533a25843450da719ad9c78827c29">GetIteratorFront</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#ae5edcf5340b17ed493558ce3f9555294">GetLast</a>(plUInt32 uiNumCharacters) const</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a97a42649db4dba41449786ad43a237cf">GetRootedPathRootName</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a4bc55a0680f91d3cc243e4a1c65996a6">GetSubString</a>(plUInt32 uiFirstCharacter, plUInt32 uiNumCharacters) const</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ae137b75721c90c6ca1b8aec2b9fa7653">GetView</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a99dd48e46918eea24a01ee4893f8301a">HasAnyExtension</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#abdbf19533811ec120710ad7caffe7ad0">HasExtension</a>(plStringView sExtension) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a275c7069b3e5ddd9daf7ea75352128a3">IsAbsolutePath</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a7ac3a243ee9ea1f99f7d82dd8e1d60b5">IsEmpty</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a928260385c9a80109751fbdb1849b321">IsEqual</a>(plStringView sOther) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ad0801b3fafc90b1beba38313c205e704">IsEqual_NoCase</a>(plStringView sOther) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a1854b21f65a086f15e164f739d53950d">IsEqualN</a>(plStringView sOther, plUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a632d41fe7d33c9e42391ee905a361b06">IsEqualN_NoCase</a>(plStringView sOther, plUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a4a340cb26613564b37461946d685215f">IsRelativePath</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#aef9d9918c2d608eb5451b735057a272f">IsRootedPath</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a7ac5057709ce4884266502eb53a12a2b">operator const char *</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8edc0eeb6a433a7397215106abd0f39f">operator plStringView</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#ab3039814de70e3a231619331b30de11c">operator=</a>(const plHybridStringBase &amp;rhs)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a18336dffdc3c1de88271c4e09987fba6">operator=</a>(plHybridStringBase &amp;&amp;rhs)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a277309f215794ab66ed86d1969fdff61">operator=</a>(const char *rhs)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#ade2007f94afff5f2136b396e960ec1c4">operator=</a>(const wchar_t *rhs)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a8654e89b57979b6db81346d3eb9d7928">operator=</a>(const plStringView &amp;rhs)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a8267a10e45b2c851e0de024a1c7e3a7e">operator=</a>(const plStringBuilder &amp;rhs)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a66808900535b7aa3857016eaaa717562">operator=</a>(plStringBuilder &amp;&amp;rhs)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a053f80fb8a515e0f0155f780b22b7deb">plHybridStringBase</a>(plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a0f8227c7fe6ba70eb6e283c6c5bb0298">plHybridStringBase</a>(const plHybridStringBase &amp;rhs, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a254652fbcb4be2d5a6483ae8cab67cac">plHybridStringBase</a>(plHybridStringBase &amp;&amp;rhs, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#adb8e11edbef53315cfc6137d4b6021c7">plHybridStringBase</a>(const char *rhs, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a12ccd2d3723e7c201baf99957035849b">plHybridStringBase</a>(const wchar_t *rhs, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#acf9bb642282fd51e4869267702b1be18">plHybridStringBase</a>(const plStringView &amp;rhs, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#ac0f1b63be41827a75cb0b30360afc393">plHybridStringBase</a>(const plStringBuilder &amp;rhs, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a239a135a5de5a16519c920a3df329dfb">plHybridStringBase</a>(plStringBuilder &amp;&amp;rhs, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plStringBuilder</b> (defined in <a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a5ace821c1da8c69eced69584dee1f63b">ReadAll</a>(plStreamReader &amp;inout_stream)</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a9a9997394d0cbb4121601246cfd910c6">Split</a>(bool bReturnEmptyStrings, Container &amp;ref_output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a6ae403b4b3e534b94edd50edd888b4f0">StartsWith</a>(plStringView sStartsWith) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a4af994336831ee8ce7ea1aa392388ed6">StartsWith_NoCase</a>(plStringView sStartsWith) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a2ec1f4eea25a8bd2701dafb0cb13effe">~plHybridStringBase</a>()</td><td class="entry"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
