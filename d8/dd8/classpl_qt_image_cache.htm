<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plQtImageCache Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d8/dd8/classpl_qt_image_cache.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#signals">Signals</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../df/d20/classpl_qt_image_cache-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plQtImageCache Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A singleton class that caches Qt images that are typically used for thumbnails.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/d98/_image_cache_8moc_8h_source.htm">ImageCache.moc.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plQtImageCache:</div>
<div class="dyncontent">
<div class="center"><img src="../../df/d57/classpl_qt_image_cache__inherit__graph.png" border="0" usemap="#apl_qt_image_cache_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_qt_image_cache_inherit__map" id="apl_qt_image_cache_inherit__map">
<area shape="rect" title="A singleton class that caches Qt images that are typically used for thumbnails." alt="" coords="5,80,123,107"/>
<area shape="rect" title=" " alt="" coords="29,5,99,32"/>
<area shape="poly" title=" " alt="" coords="67,48,67,80,61,80,61,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="signals" name="signals"></a>
Signals</h2></td></tr>
<tr class="memitem:a30153c686fc7be7d4fee1d04b77e6e8c" id="r_a30153c686fc7be7d4fee1d04b77e6e8c"><td class="memItemLeft" align="right" valign="top"><a id="a30153c686fc7be7d4fee1d04b77e6e8c" name="a30153c686fc7be7d4fee1d04b77e6e8c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ImageLoaded</b> (QString sPath, QModelIndex index, QVariant userData1, QVariant userData2)</td></tr>
<tr class="separator:a30153c686fc7be7d4fee1d04b77e6e8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a256f64aa331426f1288ae8f8aa929064" id="r_a256f64aa331426f1288ae8f8aa929064"><td class="memItemLeft" align="right" valign="top"><a id="a256f64aa331426f1288ae8f8aa929064" name="a256f64aa331426f1288ae8f8aa929064"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ImageInvalidated</b> (QString sPath, unsigned int uiImageID)</td></tr>
<tr class="separator:a256f64aa331426f1288ae8f8aa929064"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aadb90da0cd8cdd83bce8a283960d8ab3" id="r_aadb90da0cd8cdd83bce8a283960d8ab3"><td class="memItemLeft" align="right" valign="top"><a id="aadb90da0cd8cdd83bce8a283960d8ab3" name="aadb90da0cd8cdd83bce8a283960d8ab3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetFallbackImages</b> (const char *szLoading, const char *szUnavailable)</td></tr>
<tr class="memdesc:aadb90da0cd8cdd83bce8a283960d8ab3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which images to return when a requested image is currently not available (loading) or could not be found (unavailable). <br /></td></tr>
<tr class="separator:aadb90da0cd8cdd83bce8a283960d8ab3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32cab0ea63924e84a46879b04bc64323" id="r_a32cab0ea63924e84a46879b04bc64323"><td class="memItemLeft" align="right" valign="top">const QPixmap *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a32cab0ea63924e84a46879b04bc64323">QueryPixmap</a> (const char *szAbsolutePath, QModelIndex index=QModelIndex(), QVariant userData1=QVariant(), QVariant userData2=QVariant(), plUInt32 *out_pImageID=nullptr)</td></tr>
<tr class="memdesc:a32cab0ea63924e84a46879b04bc64323"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries an image by an absolute path. If the image is cached, it is returned right away.  <br /></td></tr>
<tr class="separator:a32cab0ea63924e84a46879b04bc64323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8ee11613c094464ef79749cd25bfacc" id="r_ab8ee11613c094464ef79749cd25bfacc"><td class="memItemLeft" align="right" valign="top"><a id="ab8ee11613c094464ef79749cd25bfacc" name="ab8ee11613c094464ef79749cd25bfacc"></a>
const QPixmap *&#160;</td><td class="memItemRight" valign="bottom"><b>QueryPixmapForType</b> (const char *szType, const char *szAbsolutePath, QModelIndex index=QModelIndex(), QVariant userData1=QVariant(), QVariant userData2=QVariant(), plUInt32 *out_pImageID=nullptr)</td></tr>
<tr class="memdesc:ab8ee11613c094464ef79749cd25bfacc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="#a32cab0ea63924e84a46879b04bc64323" title="Queries an image by an absolute path. If the image is cached, it is returned right away.">QueryPixmap()</a>, but first <em>szType</em> is used to call <a class="el" href="#a84a612175794c285982c64f882a1d625" title="Returns a pixmap or nullptr that was registered with RegisterTypeImage()">QueryTypeImage()</a> and check whether a type specific image was registerd. If yes, that is used instead of szAbsolutePath. <br /></td></tr>
<tr class="separator:ab8ee11613c094464ef79749cd25bfacc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a270447010c25975c4d8be20448ecc793" id="r_a270447010c25975c4d8be20448ecc793"><td class="memItemLeft" align="right" valign="top"><a id="a270447010c25975c4d8be20448ecc793" name="a270447010c25975c4d8be20448ecc793"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InvalidateCache</b> (const char *szAbsolutePath)</td></tr>
<tr class="memdesc:a270447010c25975c4d8be20448ecc793"><td class="mdescLeft">&#160;</td><td class="mdescRight">Invalidate the cached image with the given path. This is typically done when a thumbnail was just written to disk, to inform this system to reload the latest image from disk. <br /></td></tr>
<tr class="separator:a270447010c25975c4d8be20448ecc793"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36a5446a407c00128f6fa7a57cb68da1" id="r_a36a5446a407c00128f6fa7a57cb68da1"><td class="memItemLeft" align="right" valign="top"><a id="a36a5446a407c00128f6fa7a57cb68da1" name="a36a5446a407c00128f6fa7a57cb68da1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetMemoryUsageThreshold</b> (plUInt64 uiMemoryThreshold)</td></tr>
<tr class="memdesc:a36a5446a407c00128f6fa7a57cb68da1"><td class="mdescLeft">&#160;</td><td class="mdescRight">When this threshold is reached, images that haven't been requested in a while are being evicted from the cache. <br /></td></tr>
<tr class="separator:a36a5446a407c00128f6fa7a57cb68da1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18d2bbe71c3ea580df76d3a2fcf0b688" id="r_a18d2bbe71c3ea580df76d3a2fcf0b688"><td class="memItemLeft" align="right" valign="top"><a id="a18d2bbe71c3ea580df76d3a2fcf0b688" name="a18d2bbe71c3ea580df76d3a2fcf0b688"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>StopRequestProcessing</b> (bool bPurgeExistingCache)</td></tr>
<tr class="memdesc:a18d2bbe71c3ea580df76d3a2fcf0b688"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called whenever the application should stop or pause further image loading, e.g. before shutdown or during project loading. <br /></td></tr>
<tr class="separator:a18d2bbe71c3ea580df76d3a2fcf0b688"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8d356ac69fd17c6bf7f168c04cf1edb" id="r_af8d356ac69fd17c6bf7f168c04cf1edb"><td class="memItemLeft" align="right" valign="top"><a id="af8d356ac69fd17c6bf7f168c04cf1edb" name="af8d356ac69fd17c6bf7f168c04cf1edb"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnableRequestProcessing</b> ()</td></tr>
<tr class="memdesc:af8d356ac69fd17c6bf7f168c04cf1edb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Re-enables image loading if it was previously stopped. <br /></td></tr>
<tr class="separator:af8d356ac69fd17c6bf7f168c04cf1edb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a790e508b41401c76b676f7a7387bb4" id="r_a0a790e508b41401c76b676f7a7387bb4"><td class="memItemLeft" align="right" valign="top"><a id="a0a790e508b41401c76b676f7a7387bb4" name="a0a790e508b41401c76b676f7a7387bb4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterTypeImage</b> (const char *szType, QPixmap pixmap)</td></tr>
<tr class="memdesc:a0a790e508b41401c76b676f7a7387bb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a pixmap to be used when an image for a certain type is requested. See QueryPixmapForType. <br /></td></tr>
<tr class="separator:a0a790e508b41401c76b676f7a7387bb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84a612175794c285982c64f882a1d625" id="r_a84a612175794c285982c64f882a1d625"><td class="memItemLeft" align="right" valign="top"><a id="a84a612175794c285982c64f882a1d625" name="a84a612175794c285982c64f882a1d625"></a>
const QPixmap *&#160;</td><td class="memItemRight" valign="bottom"><b>QueryTypeImage</b> (const char *szType) const</td></tr>
<tr class="memdesc:a84a612175794c285982c64f882a1d625"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pixmap or nullptr that was registered with <a class="el" href="#a0a790e508b41401c76b676f7a7387bb4" title="Registers a pixmap to be used when an image for a certain type is requested. See QueryPixmapForType.">RegisterTypeImage()</a> <br /></td></tr>
<tr class="separator:a84a612175794c285982c64f882a1d625"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A singleton class that caches Qt images that are typically used for thumbnails. </p>
<p>When an image is not available right away, a fallback is returned and the requested image goes into a loading queue. When an image was finished loading, a signal is emitted to inform users to update their UI. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a32cab0ea63924e84a46879b04bc64323" name="a32cab0ea63924e84a46879b04bc64323"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32cab0ea63924e84a46879b04bc64323">&#9670;&#160;</a></span>QueryPixmap()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const QPixmap * plQtImageCache::QueryPixmap </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szAbsolutePath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QModelIndex</td>          <td class="paramname"><span class="paramname"><em>index</em></span><span class="paramdefsep"> = </span><span class="paramdefval">QModelIndex()</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QVariant</td>          <td class="paramname"><span class="paramname"><em>userData1</em></span><span class="paramdefsep"> = </span><span class="paramdefval">QVariant()</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">QVariant</td>          <td class="paramname"><span class="paramname"><em>userData2</em></span><span class="paramdefsep"> = </span><span class="paramdefval">QVariant()</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32 *</td>          <td class="paramname"><span class="paramname"><em>out_pImageID</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Queries an image by an absolute path. If the image is cached, it is returned right away. </p>
<p>If the image is not cached, a temporary image is returned and it is queued for loading. Once it is finished loading, the ImageLoaded() signal is emitted and <em>index</em>, <em>UserData1</em> and <em>UserData2</em> are passed through. Additionally an ImageID may be returned through <em>out_pImageID</em>. This can be used to identify an image when it is invalidated through the ImageInvalidated() signal. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Tools/Libs/GuiFoundation/UIServices/<a class="el" href="../../d1/d98/_image_cache_8moc_8h_source.htm">ImageCache.moc.h</a></li>
<li>Code/Tools/Libs/GuiFoundation/UIServices/Implementation/<b>ImageCache.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/dd8/classpl_qt_image_cache.htm">plQtImageCache</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
