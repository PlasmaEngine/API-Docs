<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plCVar Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d8/d67/classpl_c_var.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../df/d12/classpl_c_var-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plCVar Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>CVars are global variables that are used for configuring the engine.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d9/d71/_c_var_8h_source.htm">CVar.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plCVar:</div>
<div class="dyncontent">
<div class="center"><img src="../../d5/dbd/classpl_c_var__inherit__graph.png" border="0" usemap="#apl_c_var_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_c_var_inherit__map" id="apl_c_var_inherit__map">
<area shape="rect" title="CVars are global variables that are used for configuring the engine." alt="" coords="57,155,117,181"/>
<area shape="rect" href="../../d2/d9c/classpl_typed_c_var.htm" title="[internal] Helper class to implement plCVarInt, plCVarFlag, plCVarBool and plCVarString." alt="" coords="17,229,157,272"/>
<area shape="poly" title=" " alt="" coords="90,197,90,229,84,229,84,197"/>
<area shape="rect" href="../../db/d85/classpl_enumerable.htm" title=" " alt="" coords="5,80,169,107"/>
<area shape="poly" title=" " alt="" coords="90,122,90,154,84,154,84,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="48,5,126,32"/>
<area shape="poly" title=" " alt="" coords="90,48,90,80,84,80,84,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a290cd1e7ed7181c3d43cb413d168aba5" id="r_a290cd1e7ed7181c3d43cb413d168aba5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a290cd1e7ed7181c3d43cb413d168aba5">SetToDelayedSyncValue</a> ()=0</td></tr>
<tr class="memdesc:a290cd1e7ed7181c3d43cb413d168aba5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the 'DelayedSync' value into the 'Current' value.  <br /></td></tr>
<tr class="separator:a290cd1e7ed7181c3d43cb413d168aba5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5831564d21971a3e00d5a36350eb15d0" id="r_a5831564d21971a3e00d5a36350eb15d0"><td class="memItemLeft" align="right" valign="top"><a id="a5831564d21971a3e00d5a36350eb15d0" name="a5831564d21971a3e00d5a36350eb15d0"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="memdesc:a5831564d21971a3e00d5a36350eb15d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the (display) name of the CVar. <br /></td></tr>
<tr class="separator:a5831564d21971a3e00d5a36350eb15d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bc8f3b76cee9d85d7a7547941116e14" id="r_a9bc8f3b76cee9d85d7a7547941116e14"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/db0/structpl_c_var_type.htm#a248b3304ddf5af2de794670605cc16ec">plCVarType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9bc8f3b76cee9d85d7a7547941116e14">GetType</a> () const =0</td></tr>
<tr class="memdesc:a9bc8f3b76cee9d85d7a7547941116e14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the CVar.  <br /></td></tr>
<tr class="separator:a9bc8f3b76cee9d85d7a7547941116e14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a720dc69e937db2046111a104f909cf5c" id="r_a720dc69e937db2046111a104f909cf5c"><td class="memItemLeft" align="right" valign="top"><a id="a720dc69e937db2046111a104f909cf5c" name="a720dc69e937db2046111a104f909cf5c"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetDescription</b> () const</td></tr>
<tr class="memdesc:a720dc69e937db2046111a104f909cf5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the description of the CVar. <br /></td></tr>
<tr class="separator:a720dc69e937db2046111a104f909cf5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f79974148b56c0be04cb3439da018db" id="r_a6f79974148b56c0be04cb3439da018db"><td class="memItemLeft" align="right" valign="top"><a id="a6f79974148b56c0be04cb3439da018db" name="a6f79974148b56c0be04cb3439da018db"></a>
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../d0/d4a/structpl_c_var_flags.htm">plCVarFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a6f79974148b56c0be04cb3439da018db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns all the CVar flags. <br /></td></tr>
<tr class="separator:a6f79974148b56c0be04cb3439da018db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f600f77e09b1080c27370b19e6a9ea2" id="r_a2f600f77e09b1080c27370b19e6a9ea2"><td class="memItemLeft" align="right" valign="top"><a id="a2f600f77e09b1080c27370b19e6a9ea2" name="a2f600f77e09b1080c27370b19e6a9ea2"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPluginName</b> () const</td></tr>
<tr class="memdesc:a2f600f77e09b1080c27370b19e6a9ea2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the plugin which this CVar is declared in. <br /></td></tr>
<tr class="separator:a2f600f77e09b1080c27370b19e6a9ea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ae457289a5b999ac77a433d72d593f5b7" id="r_ae457289a5b999ac77a433d72d593f5b7"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae457289a5b999ac77a433d72d593f5b7">SetStorageFolder</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFolder)</td></tr>
<tr class="memdesc:ae457289a5b999ac77a433d72d593f5b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the path (folder) in which all CVar setting files should be stored.  <br /></td></tr>
<tr class="separator:ae457289a5b999ac77a433d72d593f5b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f7477e649b544d0ef916f013c3e6e7e" id="r_a0f7477e649b544d0ef916f013c3e6e7e"><td class="memItemLeft" align="right" valign="top"><a id="a0f7477e649b544d0ef916f013c3e6e7e" name="a0f7477e649b544d0ef916f013c3e6e7e"></a>
static <a class="el" href="../../d8/d67/classpl_c_var.htm">plCVar</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>FindCVarByName</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName)</td></tr>
<tr class="memdesc:a0f7477e649b544d0ef916f013c3e6e7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches all CVars for one with the given name. Returns nullptr if no CVar could be found. The name is case-sensitive. <br /></td></tr>
<tr class="separator:a0f7477e649b544d0ef916f013c3e6e7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e61cdb603aeabbe12bb113b7a5fb704" id="r_a3e61cdb603aeabbe12bb113b7a5fb704"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3e61cdb603aeabbe12bb113b7a5fb704">SaveCVars</a> ()</td></tr>
<tr class="memdesc:a3e61cdb603aeabbe12bb113b7a5fb704"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores all CVar values in files in the storage folder, that must have been set via 'SetStorageFolder'.  <br /></td></tr>
<tr class="separator:a3e61cdb603aeabbe12bb113b7a5fb704"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c7e0bbeefe7569e8b33fa098bef983f" id="r_a4c7e0bbeefe7569e8b33fa098bef983f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4c7e0bbeefe7569e8b33fa098bef983f">SaveCVarsToFile</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath, bool bIgnoreSaveFlag=false)</td></tr>
<tr class="memdesc:a4c7e0bbeefe7569e8b33fa098bef983f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores all CVar values into the given file.  <br /></td></tr>
<tr class="separator:a4c7e0bbeefe7569e8b33fa098bef983f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99a92d902c436be5f4fa8931195a2cb9" id="r_a99a92d902c436be5f4fa8931195a2cb9"><td class="memItemLeft" align="right" valign="top"><a id="a99a92d902c436be5f4fa8931195a2cb9" name="a99a92d902c436be5f4fa8931195a2cb9"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>LoadCVars</b> (bool bOnlyNewOnes=true, bool bSetAsCurrentValue=true)</td></tr>
<tr class="memdesc:a99a92d902c436be5f4fa8931195a2cb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls <a class="el" href="#ad147412466c627a1319970babc02c39e" title="Similar to LoadCVarsFromFile() but tries to get the CVar values from the command line.">LoadCVarsFromCommandLine()</a> and then <a class="el" href="#ac93f199730397f5837c54fa3cf4bab7d" title="Loads the CVars from the settings files in the storage folder.">LoadCVarsFromFile()</a> <br /></td></tr>
<tr class="separator:a99a92d902c436be5f4fa8931195a2cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac93f199730397f5837c54fa3cf4bab7d" id="r_ac93f199730397f5837c54fa3cf4bab7d"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac93f199730397f5837c54fa3cf4bab7d">LoadCVarsFromFile</a> (bool bOnlyNewOnes=true, bool bSetAsCurrentValue=true, <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d8/d67/classpl_c_var.htm">plCVar</a> * &gt; *pOutCVars=nullptr)</td></tr>
<tr class="memdesc:ac93f199730397f5837c54fa3cf4bab7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads the CVars from the settings files in the storage folder.  <br /></td></tr>
<tr class="separator:ac93f199730397f5837c54fa3cf4bab7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af15a3b89e3154735c2e5b1465d05d680" id="r_af15a3b89e3154735c2e5b1465d05d680"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af15a3b89e3154735c2e5b1465d05d680">LoadCVarsFromFile</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath, bool bOnlyNewOnes=true, bool bSetAsCurrentValue=true, bool bIgnoreSaveFlag=false, <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d8/d67/classpl_c_var.htm">plCVar</a> * &gt; *pOutCVars=nullptr)</td></tr>
<tr class="memdesc:af15a3b89e3154735c2e5b1465d05d680"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads all CVars from the given file. Does not account for any plug-in specific files.  <br /></td></tr>
<tr class="separator:af15a3b89e3154735c2e5b1465d05d680"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad147412466c627a1319970babc02c39e" id="r_ad147412466c627a1319970babc02c39e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad147412466c627a1319970babc02c39e">LoadCVarsFromCommandLine</a> (bool bOnlyNewOnes=true, bool bSetAsCurrentValue=true, <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d8/d67/classpl_c_var.htm">plCVar</a> * &gt; *pOutCVars=nullptr)</td></tr>
<tr class="memdesc:ad147412466c627a1319970babc02c39e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="#ac93f199730397f5837c54fa3cf4bab7d" title="Loads the CVars from the settings files in the storage folder.">LoadCVarsFromFile()</a> but tries to get the CVar values from the command line.  <br /></td></tr>
<tr class="separator:ad147412466c627a1319970babc02c39e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bcf4c09e5d2c6f3dc67f5f82f083e44" id="r_a7bcf4c09e5d2c6f3dc67f5f82f083e44"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7bcf4c09e5d2c6f3dc67f5f82f083e44">ListOfCVarsChanged</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSetPluginNameTo)</td></tr>
<tr class="memdesc:a7bcf4c09e5d2c6f3dc67f5f82f083e44"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call this after creating or destroying CVars dynamically (not through loading plugins) to allow UIs to update their state.  <br /></td></tr>
<tr class="separator:a7bcf4c09e5d2c6f3dc67f5f82f083e44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a9facc5cf22d9ce7d7eaa50a315694bef" id="r_a9facc5cf22d9ce7d7eaa50a315694bef"><td class="memItemLeft" align="right" valign="top"><a id="a9facc5cf22d9ce7d7eaa50a315694bef" name="a9facc5cf22d9ce7d7eaa50a315694bef"></a>
<a class="el" href="../../dd/d61/classpl_event.htm">plEvent</a>&lt; const <a class="el" href="../../db/d82/structpl_c_var_event.htm">plCVarEvent</a> &amp;, <a class="el" href="../../dd/dcc/classpl_no_mutex.htm">plNoMutex</a>, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_CVarEvents</b></td></tr>
<tr class="memdesc:a9facc5cf22d9ce7d7eaa50a315694bef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Code that needs to be execute whenever a cvar is changed can register itself here to be notified of such events. <br /></td></tr>
<tr class="separator:a9facc5cf22d9ce7d7eaa50a315694bef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a2e009ba042a85a8ec9515df3194376fc" id="r_a2e009ba042a85a8ec9515df3194376fc"><td class="memItemLeft" align="right" valign="top"><a id="a2e009ba042a85a8ec9515df3194376fc" name="a2e009ba042a85a8ec9515df3194376fc"></a>
static <a class="el" href="../../dd/d61/classpl_event.htm">plEvent</a>&lt; const <a class="el" href="../../db/d82/structpl_c_var_event.htm">plCVarEvent</a> &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>s_AllCVarEvents</b></td></tr>
<tr class="memdesc:a2e009ba042a85a8ec9515df3194376fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Broadcasts changes to ANY CVar. Thus code that needs to update when any one of them changes can use this to be notified. <br /></td></tr>
<tr class="separator:a2e009ba042a85a8ec9515df3194376fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ae97cecf499233e38cf7bc6a14a6cba92" id="r_ae97cecf499233e38cf7bc6a14a6cba92"><td class="memItemLeft" align="right" valign="top"><a id="ae97cecf499233e38cf7bc6a14a6cba92" name="ae97cecf499233e38cf7bc6a14a6cba92"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plCVar</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../d0/d4a/structpl_c_var_flags.htm">plCVarFlags</a> &gt; Flags, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sDescription)</td></tr>
<tr class="separator:ae97cecf499233e38cf7bc6a14a6cba92"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classpl_enumerable"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../db/d85/classpl_enumerable.htm">plEnumerable&lt; plCVar &gt;</a></td></tr>
<tr class="memitem:aa4eba5b9c96dbe89638a952ae66077dc inherit pro_attribs_classpl_enumerable" id="r_aa4eba5b9c96dbe89638a952ae66077dc"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d85/classpl_enumerable.htm">plEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:aa4eba5b9c96dbe89638a952ae66077dc inherit pro_attribs_classpl_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>CVars are global variables that are used for configuring the engine. </p>
<p>The state of a CVar can be automatically stored when the application is shut down, and during reloading of plugins. It will be restored again when the application starts again. This makes it possible to use them to tweak code that is work in progress or to change global settings. CVars are enumerable, which is why it is easy to present them in a console or a GUI at runtime, to allow modifying them while the application is running. It is very easy and convenient to temporarily add a CVar while some code is in development, to be able to try out different approaches. However, one should throw out all unnecessary variables after such work is finished. CVars are stored in one settings file per plugin. That means plugins can easily contain additional CVars for their own use and their states are restored at plugin loading time, as well. For the storage of CVars to work, the 'StorageFolder' must have been set. Also at startup the application should explicitly load CVars via 'LoadCVars', once the filesystem is set up and the storage folder is configured. The CVar system listens to events from the Plugin system, and it will automatically take care to serialize and deserialize CVar values whenever plugins are loaded or unloaded. CVars additionally allow to only change their visible value after a certain subsystem has been 'restarted', i.e. a user can change the CVar value at runtime, but when the 'current' value is read, it will not have changed. It will change however, once the application is restarted (such that code can initialize the engine with the correct values) or after the corresponding subsystem explicitly sets the CVar to the updated value. This is useful, e.g. for a screen resolution CVar, as changing this at runtime might be possible in a GUI, but the engine might not support that without a restart. Finally all CVars broadcast events when their value is changed, which can be used to listen to certain CVars and react properly when their value changes. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9bc8f3b76cee9d85d7a7547941116e14" name="a9bc8f3b76cee9d85d7a7547941116e14"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9bc8f3b76cee9d85d7a7547941116e14">&#9670;&#160;</a></span>GetType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dc/db0/structpl_c_var_type.htm#a248b3304ddf5af2de794670605cc16ec">plCVarType::Enum</a> plCVar::GetType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of the CVar. </p>

<p>Implemented in <a class="el" href="../../d2/d9c/classpl_typed_c_var.htm#aab80ac6c0c15b011b3877c7fb23bf280">plTypedCVar&lt; Type, CVarType &gt;</a>.</p>

</div>
</div>
<a id="a7bcf4c09e5d2c6f3dc67f5f82f083e44" name="a7bcf4c09e5d2c6f3dc67f5f82f083e44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7bcf4c09e5d2c6f3dc67f5f82f083e44">&#9670;&#160;</a></span>ListOfCVarsChanged()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plCVar::ListOfCVarsChanged </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sSetPluginNameTo</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Call this after creating or destroying CVars dynamically (not through loading plugins) to allow UIs to update their state. </p>
<p>Broadcasts <a class="el" href="../../db/d82/structpl_c_var_event.htm#a10a8f489442c09b1f479b15d7bc527aba1e6fdb8273d0e565a1479c833ad13b51" title="A CVar was added or removed dynamically (not just by loading a plugin), some stuff may need to update...">plCVarEvent::ListOfVarsChanged</a>. </p>

</div>
</div>
<a id="ad147412466c627a1319970babc02c39e" name="ad147412466c627a1319970babc02c39e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad147412466c627a1319970babc02c39e">&#9670;&#160;</a></span>LoadCVarsFromCommandLine()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plCVar::LoadCVarsFromCommandLine </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bOnlyNewOnes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bSetAsCurrentValue</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d8/d67/classpl_c_var.htm">plCVar</a> * &gt; *</td>          <td class="paramname"><span class="paramname"><em>pOutCVars</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="#ac93f199730397f5837c54fa3cf4bab7d" title="Loads the CVars from the settings files in the storage folder.">LoadCVarsFromFile()</a> but tries to get the CVar values from the command line. </p>
<p>The CVars are loaded into the global system and thus automatically available everywhere after this call. Optionally they are returned via pOutCVars, so the caller knows which CVars have actually been loaded in this very step.</p>
<dl class="section note"><dt>Note</dt><dd>A CVar will only ever be loaded once. This function should be called before <a class="el" href="#ac93f199730397f5837c54fa3cf4bab7d" title="Loads the CVars from the settings files in the storage folder.">LoadCVarsFromFile()</a>, otherwise it could get flagged as 'already loaded' even if the value was never taken from file or command line. </dd></dl>

</div>
</div>
<a id="ac93f199730397f5837c54fa3cf4bab7d" name="ac93f199730397f5837c54fa3cf4bab7d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac93f199730397f5837c54fa3cf4bab7d">&#9670;&#160;</a></span>LoadCVarsFromFile() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plCVar::LoadCVarsFromFile </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bOnlyNewOnes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bSetAsCurrentValue</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d8/d67/classpl_c_var.htm">plCVar</a> * &gt; *</td>          <td class="paramname"><span class="paramname"><em>pOutCVars</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads the CVars from the settings files in the storage folder. </p>
<p>The CVars are loaded into the global system and thus automatically available everywhere after this call. Optionally they are returned via pOutCVars, so the caller knows which CVars have actually been loaded in this very step.</p>
<p>This function has no effect, if the storage folder has not been set via 'SetStorageFolder' yet or it has been set to be empty.</p>
<p>If <em>bOnlyNewOnes</em> is set, only CVars that have never been loaded from file before are loaded. All other CVars will stay unchanged. If <em>bSetAsCurrentValue</em> is true, variables that are flagged as 'RequiresRestart', will be set to the restart value immediately ('SetToDelayedSyncValue' is called on them). Otherwise their 'Current' value will always stay unchanged and the value from disk will only be stored in the 'DelayedSync' value. Independent on the parameter settings, all CVar changes during loading will always trigger change events.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="#ad147412466c627a1319970babc02c39e" title="Similar to LoadCVarsFromFile() but tries to get the CVar values from the command line.">LoadCVarsFromCommandLine()</a> </dd></dl>

</div>
</div>
<a id="af15a3b89e3154735c2e5b1465d05d680" name="af15a3b89e3154735c2e5b1465d05d680"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af15a3b89e3154735c2e5b1465d05d680">&#9670;&#160;</a></span>LoadCVarsFromFile() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plCVar::LoadCVarsFromFile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bOnlyNewOnes</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bSetAsCurrentValue</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bIgnoreSaveFlag</em></span><span class="paramdefsep"> = </span><span class="paramdefval">false</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d8/d67/classpl_c_var.htm">plCVar</a> * &gt; *</td>          <td class="paramname"><span class="paramname"><em>pOutCVars</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads all CVars from the given file. Does not account for any plug-in specific files. </p>
<p>The CVars are loaded into the global system and thus automatically available everywhere after this call. Optionally they are returned via pOutCVars, so the caller knows which CVars have actually been loaded in this very step.</p>
<p>This function works without setting a storage folder.</p>
<p>If <em>bOnlyNewOnes</em> is set, only CVars that have never been loaded from file before are loaded. All other CVars will stay unchanged. If <em>bSetAsCurrentValue</em> is true, variables that are flagged as 'RequiresRestart', will be set to the restart value immediately ('SetToDelayedSyncValue' is called on them). Otherwise their 'Current' value will always stay unchanged and the value from disk will only be stored in the 'DelayedSync' value. Independent on the parameter settings, all CVar changes during loading will always trigger change events. If bIgnoreSaveFlag is set all CVars are loaded whether they have the <a class="el" href="../../d0/d4a/structpl_c_var_flags.htm#ac5700208f97c3ffa177e46da82f9eb3aaab949f5eaacb722ca1742f2e6d46279c" title="If this flag is set, the CVar will be stored on disk and loaded again. Otherwise all changes to it wi...">plCVarFlags::Save</a> set or not.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="#ad147412466c627a1319970babc02c39e" title="Similar to LoadCVarsFromFile() but tries to get the CVar values from the command line.">LoadCVarsFromCommandLine()</a> </dd>
<dd>
<a class="el" href="#ac93f199730397f5837c54fa3cf4bab7d" title="Loads the CVars from the settings files in the storage folder.">LoadCVarsFromFile()</a> </dd></dl>

</div>
</div>
<a id="a3e61cdb603aeabbe12bb113b7a5fb704" name="a3e61cdb603aeabbe12bb113b7a5fb704"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e61cdb603aeabbe12bb113b7a5fb704">&#9670;&#160;</a></span>SaveCVars()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plCVar::SaveCVars </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores all CVar values in files in the storage folder, that must have been set via 'SetStorageFolder'. </p>
<p>This function has no effect, if 'SetStorageFolder' has not been called, or the folder has been set to be empty. This function is also automatically called whenever plugin changes occur, or when the engine is shut down. So it might not be necessary to call this function manually at shutdown. </p>

</div>
</div>
<a id="a4c7e0bbeefe7569e8b33fa098bef983f" name="a4c7e0bbeefe7569e8b33fa098bef983f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c7e0bbeefe7569e8b33fa098bef983f">&#9670;&#160;</a></span>SaveCVarsToFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plCVar::SaveCVarsToFile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bIgnoreSaveFlag</em></span><span class="paramdefsep"> = </span><span class="paramdefval">false</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stores all CVar values into the given file. </p>
<p>This function works without setting a storage folder. If bIgnoreSaveFlag is set all CVars are saved whether they have the <a class="el" href="../../d0/d4a/structpl_c_var_flags.htm#ac5700208f97c3ffa177e46da82f9eb3aaab949f5eaacb722ca1742f2e6d46279c" title="If this flag is set, the CVar will be stored on disk and loaded again. Otherwise all changes to it wi...">plCVarFlags::Save</a> set or not.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="#ac93f199730397f5837c54fa3cf4bab7d" title="Loads the CVars from the settings files in the storage folder.">LoadCVarsFromFile()</a> </dd></dl>

</div>
</div>
<a id="ae457289a5b999ac77a433d72d593f5b7" name="ae457289a5b999ac77a433d72d593f5b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae457289a5b999ac77a433d72d593f5b7">&#9670;&#160;</a></span>SetStorageFolder()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plCVar::SetStorageFolder </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFolder</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the path (folder) in which all CVar setting files should be stored. </p>
<p>The path is used by SaveCVars and LoadCVars. However those functions will create one settings file per plugin, so <em>szFolder</em> must not be a file name, but only a path to a folder.</p>
<p>After setting the storage folder, one should immediately load all CVars via LoadCVars. </p>

</div>
</div>
<a id="a290cd1e7ed7181c3d43cb413d168aba5" name="a290cd1e7ed7181c3d43cb413d168aba5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a290cd1e7ed7181c3d43cb413d168aba5">&#9670;&#160;</a></span>SetToDelayedSyncValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plCVar::SetToDelayedSyncValue </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copies the 'DelayedSync' value into the 'Current' value. </p>
<p>This change will not trigger a 'delayed sync value changed' event, but it might trigger a 'current value changed' event. Code that uses a CVar that is flagged as 'RequiresDelayedSync' for its initialization (and which is the reason, that that CVar is flagged as such) should always call this BEFORE it uses the CVar value. </p>

<p>Implemented in <a class="el" href="../../d2/d9c/classpl_typed_c_var.htm#a1b6d78c2643a5cc5f7970be2c2ab4f42">plTypedCVar&lt; Type, CVarType &gt;</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Configuration/<a class="el" href="../../d9/d71/_c_var_8h_source.htm">CVar.h</a></li>
<li>Code/Engine/Foundation/Configuration/Implementation/<b>CVar.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/d67/classpl_c_var.htm">plCVar</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
