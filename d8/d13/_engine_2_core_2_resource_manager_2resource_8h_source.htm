<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Core/ResourceManager/Resource.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d8/d13/_engine_2_core_2_resource_manager_2resource_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Resource.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Core/ResourceManager/Implementation/Declarations.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Core/ResourceManager/ResourceHandle.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Time/Timestamp.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="foldopen" id="foldopen00009" data-start="{" data-end="};">
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm">    9</a></span><span class="keyword">class </span>PL_CORE_DLL <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>{</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  PL_ADD_DYNAMIC_REFLECTION(<a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>, <a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a>);</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="keyword">enum class</span> DoUpdate</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  {</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>    OnMainThread,</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    OnAnyThread</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  };</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keyword">enum class</span> Unload</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  {</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    AllQualityLevels,</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    OneQualityLevel</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  };</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>(DoUpdate ResourceUpdateThread, plUInt8 uiQualityLevelsLoadable);</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">~plResource</a>();</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00033" data-start="{" data-end="};">
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno"><a class="line" href="../../d6/dd4/structpl_resource_1_1_memory_usage.htm">   33</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d6/dd4/structpl_resource_1_1_memory_usage.htm">MemoryUsage</a></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  {</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <a class="code hl_struct" href="../../d6/dd4/structpl_resource_1_1_memory_usage.htm">MemoryUsage</a>()</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    {</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>      m_uiMemoryCPU = 0;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>      m_uiMemoryGPU = 0;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    }</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    plUInt64 m_uiMemoryCPU;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    plUInt64 m_uiMemoryGPU;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  };</div>
</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#aed4f1f70a1921afa8b7a96a15960daf9">   47</a></span>  PL_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&amp; <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#aed4f1f70a1921afa8b7a96a15960daf9">GetResourceID</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_sUniqueID; }</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a16e01010c79b0a9921874e61a45aed3c">   50</a></span>  PL_ALWAYS_INLINE plUInt64 <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a16e01010c79b0a9921874e61a45aed3c">GetResourceIDHash</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiUniqueIDHash; }</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <span class="keywordtype">void</span> SetResourceDescription(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sDescription);</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a65c14ea5b5219a35e90a1494f62c5bde">   58</a></span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&amp; <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a65c14ea5b5219a35e90a1494f62c5bde">GetResourceDescription</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_sResourceDescription; }</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a2f1eac629e71942fd13b8c8e3de8abf4">   63</a></span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&amp; <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a2f1eac629e71942fd13b8c8e3de8abf4">GetResourceIdOrDescription</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_sResourceDescription.<a class="code hl_function" href="../../de/d73/structpl_string_base.htm#a7ac3a243ee9ea1f99f7d82dd8e1d60b5">IsEmpty</a>() ? m_sUniqueID : m_sResourceDescription; }</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a5cb1e19d153291123b99fdb8f5b2a899">   66</a></span>  PL_ALWAYS_INLINE plResourceState <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a5cb1e19d153291123b99fdb8f5b2a899">GetLoadingState</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_LoadingState; }</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a426b160415abf03dc507919969d46a06">   83</a></span>  PL_ALWAYS_INLINE plUInt8 <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a426b160415abf03dc507919969d46a06">GetNumQualityLevelsDiscardable</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiQualityLevelsDiscardable; }</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a4f8d0f6a559a8b646ded2335bb4b74d0">   86</a></span>  PL_ALWAYS_INLINE plUInt8 <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a4f8d0f6a559a8b646ded2335bb4b74d0">GetNumQualityLevelsLoadable</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiQualityLevelsLoadable; }</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keywordtype">float</span> GetLoadingPriority(<a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> now) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a2d3fe2b04201c3782a624ec9dd2b4122">   92</a></span>  plResourcePriority <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a2d3fe2b04201c3782a624ec9dd2b4122">GetPriority</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Priority; }</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordtype">void</span> SetPriority(plResourcePriority priority);</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#add739b3f2107393241bb567d54dbc319">   98</a></span>  PL_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_struct" href="../../df/dd9/structpl_bitflags.htm">plBitflags&lt;plResourceFlags&gt;</a>&amp; <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#add739b3f2107393241bb567d54dbc319">GetBaseResourceFlags</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Flags; }</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a778fc21212a562d005c7774c16ed0bb8">  101</a></span>  PL_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_struct" href="../../d6/dd4/structpl_resource_1_1_memory_usage.htm">MemoryUsage</a>&amp; <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a778fc21212a562d005c7774c16ed0bb8">GetMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_MemoryUsage; }</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a0f1139a2b1d5b111ada1d846a6b0d56a">  106</a></span>  PL_ALWAYS_INLINE <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a0f1139a2b1d5b111ada1d846a6b0d56a">GetLastAcquireTime</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_LastAcquire; }</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a0e68a867eef474b89f5eb6f84bb2e2b9">  109</a></span>  PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a0e68a867eef474b89f5eb6f84bb2e2b9">GetReferenceCount</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_iReferenceCount; }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a6e444c1d9dbbdf9a105c059ae34116a4">  114</a></span>  PL_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d9/d94/classpl_timestamp.htm">plTimestamp</a>&amp; <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a6e444c1d9dbbdf9a105c059ae34116a4">GetLoadedFileModificationTime</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_LoadedFileModificationTime; }</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a14323537b7d2cf92cd729e8d57c68a63">  121</a></span>  PL_ALWAYS_INLINE plUInt32 <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a14323537b7d2cf92cd729e8d57c68a63">GetCurrentResourceChangeCounter</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiResourceChangeCounter; }</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a213ba4f9a3b0280eb79d991d48b18c34">  124</a></span>  PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a213ba4f9a3b0280eb79d991d48b18c34">IncResourceChangeCounter</a>() { ++m_uiResourceChangeCounter; }</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a61a8d04086a7b964035a48fa7180c8f0">  128</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a61a8d04086a7b964035a48fa7180c8f0">ResetResource</a>() {}</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="keywordtype">void</span> PrintHandleStackTraces();</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="keyword">mutable</span> <a class="code hl_class" href="../../dd/d61/classpl_event.htm">plEvent&lt;const plResourceEvent&amp;, plMutex&gt;</a> m_ResourceEvents;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../d1/d2a/classpl_resource_manager.htm">plResourceManager</a>;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../d0/d30/classpl_resource_manager_worker_data_load.htm">plResourceManagerWorkerDataLoad</a>;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../d5/daf/classpl_resource_manager_worker_update_content.htm">plResourceManagerWorkerUpdateContent</a>;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  <span class="keywordtype">void</span> SetUniqueID(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sUniqueID, <span class="keywordtype">bool</span> bIsReloadable);</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  <span class="keywordtype">void</span> CallUnloadData(Unload WhatToUnload);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a0ca2b04d3dca27be4b5c26c04adac934">  151</a></span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../db/d1a/structpl_resource_load_desc.htm">plResourceLoadDesc</a> <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a0ca2b04d3dca27be4b5c26c04adac934">UnloadData</a>(Unload WhatToUnload) = 0;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="keywordtype">void</span> CallUpdateContent(<a class="code hl_class" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a>* Stream);</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#adc85535c94e33fd749abc70e5cd515e7">  158</a></span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../db/d1a/structpl_resource_load_desc.htm">plResourceLoadDesc</a> <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#adc85535c94e33fd749abc70e5cd515e7">UpdateContent</a>(<a class="code hl_class" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a>* pStream) = 0;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../da/d6b/classpl_resource_type_loader.htm">plResourceTypeLoader</a>* GetDefaultResourceTypeLoader() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  <span class="keyword">volatile</span> plResourceState m_LoadingState = plResourceState::Unloaded;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  plUInt8 m_uiQualityLevelsDiscardable = 0;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  plUInt8 m_uiQualityLevelsLoadable = 0;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#aac539ddc4d3269b3c8f32ba8697b9f6c">  179</a></span>  <a class="code hl_struct" href="../../d6/dd4/structpl_resource_1_1_memory_usage.htm">MemoryUsage</a>&amp; <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#aac539ddc4d3269b3c8f32ba8697b9f6c">ModifyMemoryUsage</a>() { <span class="keywordflow">return</span> m_MemoryUsage; }</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#a2732901dbf89e37139be709ab7648cd9">  185</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#a2732901dbf89e37139be709ab7648cd9">SetIsReloadable</a>(<span class="keywordtype">bool</span> bIsReloadable) { m_Flags.AddOrRemove(<a class="code hl_enumvalue" href="../../dc/d68/structpl_resource_flags.htm#a73f5d4b7743a6abb2ea309d45628025aa74ed3c754ded6654100d397cda2e39b3">plResourceFlags::IsReloadable</a>, bIsReloadable); }</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#ae7d019247f66bc64ed69ce729759fe1b">  188</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#ae7d019247f66bc64ed69ce729759fe1b">SetHasLoadingFallback</a>(<span class="keywordtype">bool</span> bHasLoadingFallback) { m_Flags.AddOrRemove(<a class="code hl_enumvalue" href="../../dc/d68/structpl_resource_flags.htm#a73f5d4b7743a6abb2ea309d45628025aac887de0ae915bcddb910ef91dce9e664">plResourceFlags::ResourceHasFallback</a>, bHasLoadingFallback); }</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle</a>;</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="keyword">friend</span> PL_CORE_DLL_FRIEND <span class="keywordtype">void</span> IncreaseResourceRefCount(<a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* pResource, <span class="keyword">const</span> <span class="keywordtype">void</span>* pOwner);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  <span class="keyword">friend</span> PL_CORE_DLL_FRIEND <span class="keywordtype">void</span> DecreaseResourceRefCount(<a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* pResource, <span class="keyword">const</span> <span class="keywordtype">void</span>* pOwner);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span><span class="preprocessor">#if PL_ENABLED(PL_RESOURCEHANDLE_STACK_TRACES)</span></div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  <span class="keyword">friend</span> PL_CORE_DLL_FRIEND <span class="keywordtype">void</span> MigrateResourceRefCount(<a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* pResource, <span class="keyword">const</span> <span class="keywordtype">void</span>* pOldOwner, <span class="keyword">const</span> <span class="keywordtype">void</span>* pNewOwner);</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <span class="keyword">struct </span>HandleStackTrace</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>  {</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>    plUInt32 m_uiNumPtrs = 0;</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>    <span class="keywordtype">void</span>* m_Ptrs[64];</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  };</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <a class="code hl_class" href="../../d1/df4/classpl_mutex.htm">plMutex</a> m_HandleStackTraceMutex;</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  <a class="code hl_class" href="../../dd/d55/classpl_hash_table.htm">plHashTable&lt;const void*, HandleStackTrace&gt;</a> m_HandleStackTraces;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno"><a class="line" href="../../d8/d1c/classpl_resource.htm#ae993717b7286ba3ff172d076e6cd4d60">  215</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d8/d1c/classpl_resource.htm#ae993717b7286ba3ff172d076e6cd4d60">UpdateMemoryUsage</a>(<a class="code hl_struct" href="../../d6/dd4/structpl_resource_1_1_memory_usage.htm">MemoryUsage</a>&amp; out_NewMemoryUsage) = 0;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> ReportResourceIsMissing();</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> HasResourceTypeLoadingFallback() <span class="keyword">const</span> = 0;</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>  <span class="keywordtype">void</span> VerifyAfterCreateResource(<span class="keyword">const</span> <a class="code hl_struct" href="../../db/d1a/structpl_resource_load_desc.htm">plResourceLoadDesc</a>&amp; ld);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  plUInt64 m_uiUniqueIDHash = 0;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  plUInt32 m_uiResourceChangeCounter = 0;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger32</a> m_iReferenceCount = 0;</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  <span class="comment">// plAtomicInteger32 m_iLockCount = 0; // currently not used</span></div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sUniqueID;</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sResourceDescription;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  <a class="code hl_struct" href="../../d6/dd4/structpl_resource_1_1_memory_usage.htm">MemoryUsage</a> m_MemoryUsage;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  <a class="code hl_struct" href="../../df/dd9/structpl_bitflags.htm">plBitflags&lt;plResourceFlags&gt;</a> m_Flags;</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> m_LastAcquire;</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>  plResourcePriority m_Priority = plResourcePriority::Medium;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  <a class="code hl_class" href="../../d9/d94/classpl_timestamp.htm">plTimestamp</a> m_LoadedFileModificationTime;</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILE_FOR_DEVELOPMENT)</span></div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* GetCurrentlyUpdatingContent();</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>};</div>
</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span><span class="comment">// GLORIOUS MACROS FOR RESOURCE CLASS CODE GENERATION</span></div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span><span class="preprocessor">#include &lt;Core/ResourceManager/ResourceManager.h&gt;</span></div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span> </div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span><span class="preprocessor">#define PL_RESOURCE_DECLARE_COMMON_CODE(SELF)                                                                                                \</span></div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span><span class="preprocessor">  friend class ::plResourceManager;                                                                                                          \</span></div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span><span class="preprocessor">                                                                                                                                             \</span></div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span><span class="preprocessor">public:                                                                                                                                      \</span></div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span><span class="preprocessor">  </span><span class="comment">/*                                                                                                                                     \ \ \</span></div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>  */<span class="preprocessor">                                                                                                                                         \</span></div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span><span class="preprocessor">  static void CleanupDynamicPluginReferences();                                                                                              \</span></div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span><span class="preprocessor">                                                                                                                                             \</span></div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span><span class="preprocessor">  </span><span class="comment">/*                                                                                                                                     \ \ \</span></div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>  */<span class="preprocessor">                                                                                                                                         \</span></div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span><span class="preprocessor">  plTypedResourceHandle&lt;SELF&gt; GetResourceHandle() const;                                                                                     \</span></div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span><span class="preprocessor">                                                                                                                                             \</span></div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span><span class="preprocessor">  </span><span class="comment">/*                                                                                                                                     \ \ \</span></div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>  */<span class="preprocessor">                                                                                                                                         \</span></div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span><span class="preprocessor">  void SetLoadingFallbackResource(const plTypedResourceHandle&lt;SELF&gt;&amp; hResource);                                                             \</span></div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span><span class="preprocessor">                                                                                                                                             \</span></div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span><span class="preprocessor">private:                                                                                                                                     \</span></div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span><span class="preprocessor">  </span><span class="comment">/* These functions are needed to access the static members, such that they get DLL exported, otherwise you get unresolved symbols */</span><span class="preprocessor">       \</span></div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span><span class="preprocessor">  static void SetResourceTypeLoadingFallback(const plTypedResourceHandle&lt;SELF&gt;&amp; hResource);                                                  \</span></div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span><span class="preprocessor">  static void SetResourceTypeMissingFallback(const plTypedResourceHandle&lt;SELF&gt;&amp; hResource);                                                  \</span></div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span><span class="preprocessor">  static const plTypedResourceHandle&lt;SELF&gt;&amp; GetResourceTypeLoadingFallback()                                                                 \</span></div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span><span class="preprocessor">  {                                                                                                                                          \</span></div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span><span class="preprocessor">    return s_TypeLoadingFallback;                                                                                                            \</span></div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span><span class="preprocessor">  }                                                                                                                                          \</span></div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span><span class="preprocessor">  static const plTypedResourceHandle&lt;SELF&gt;&amp; GetResourceTypeMissingFallback()                                                                 \</span></div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span><span class="preprocessor">  {                                                                                                                                          \</span></div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span><span class="preprocessor">    return s_TypeMissingFallback;                                                                                                            \</span></div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span><span class="preprocessor">  }                                                                                                                                          \</span></div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span><span class="preprocessor">  virtual bool HasResourceTypeLoadingFallback() const override                                                                               \</span></div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span><span class="preprocessor">  {                                                                                                                                          \</span></div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span><span class="preprocessor">    return s_TypeLoadingFallback.IsValid();                                                                                                  \</span></div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span><span class="preprocessor">  }                                                                                                                                          \</span></div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span><span class="preprocessor">                                                                                                                                             \</span></div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span><span class="preprocessor">  static plTypedResourceHandle&lt;SELF&gt; s_TypeLoadingFallback;                                                                                  \</span></div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span><span class="preprocessor">  static plTypedResourceHandle&lt;SELF&gt; s_TypeMissingFallback;                                                                                  \</span></div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span><span class="preprocessor">                                                                                                                                             \</span></div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span><span class="preprocessor">  plTypedResourceHandle&lt;SELF&gt; m_hLoadingFallback;</span></div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span> </div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span> </div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span><span class="preprocessor">#define PL_RESOURCE_IMPLEMENT_COMMON_CODE(SELF)                                                                         \</span></div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span><span class="preprocessor">  plTypedResourceHandle&lt;SELF&gt; SELF::s_TypeLoadingFallback;                                                              \</span></div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span><span class="preprocessor">  plTypedResourceHandle&lt;SELF&gt; SELF::s_TypeMissingFallback;                                                              \</span></div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span><span class="preprocessor">                                                                                                                        \</span></div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span><span class="preprocessor">  void SELF::CleanupDynamicPluginReferences()                                                                           \</span></div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span><span class="preprocessor">  {                                                                                                                     \</span></div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span><span class="preprocessor">    s_TypeLoadingFallback.Invalidate();                                                                                 \</span></div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span><span class="preprocessor">    s_TypeMissingFallback.Invalidate();                                                                                 \</span></div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span><span class="preprocessor">    plResourceManager::ClearResourceCleanupCallback(&amp;SELF::CleanupDynamicPluginReferences);                             \</span></div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span><span class="preprocessor">  }                                                                                                                     \</span></div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span><span class="preprocessor">                                                                                                                        \</span></div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span><span class="preprocessor">  plTypedResourceHandle&lt;SELF&gt; SELF::GetResourceHandle() const                                                           \</span></div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span><span class="preprocessor">  {                                                                                                                     \</span></div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span><span class="preprocessor">    PL_ASSERT_DEV(GetReferenceCount() &gt; 0, &quot;This resource is being deallocated, do not store a handle to it anymore!&quot;); \</span></div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span><span class="preprocessor">    plTypedResourceHandle&lt;SELF&gt; handle((SELF*)this);                                                                    \</span></div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span><span class="preprocessor">    return handle;                                                                                                      \</span></div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span><span class="preprocessor">  }                                                                                                                     \</span></div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span><span class="preprocessor">                                                                                                                        \</span></div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span><span class="preprocessor">  void SELF::SetLoadingFallbackResource(const plTypedResourceHandle&lt;SELF&gt;&amp; hResource)                                   \</span></div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span><span class="preprocessor">  {                                                                                                                     \</span></div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span><span class="preprocessor">    m_hLoadingFallback = hResource;                                                                                     \</span></div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span><span class="preprocessor">    SetHasLoadingFallback(m_hLoadingFallback.IsValid());                                                                \</span></div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span><span class="preprocessor">  }                                                                                                                     \</span></div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span><span class="preprocessor">                                                                                                                        \</span></div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span><span class="preprocessor">  void SELF::SetResourceTypeLoadingFallback(const plTypedResourceHandle&lt;SELF&gt;&amp; hResource)                               \</span></div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span><span class="preprocessor">  {                                                                                                                     \</span></div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span><span class="preprocessor">    s_TypeLoadingFallback = hResource;                                                                                  \</span></div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span><span class="preprocessor">    PL_RESOURCE_VALIDATE_FALLBACK(SELF);                                                                                \</span></div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span><span class="preprocessor">    plResourceManager::AddResourceCleanupCallback(&amp;SELF::CleanupDynamicPluginReferences);                               \</span></div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span><span class="preprocessor">  }                                                                                                                     \</span></div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span><span class="preprocessor">  void SELF::SetResourceTypeMissingFallback(const plTypedResourceHandle&lt;SELF&gt;&amp; hResource)                               \</span></div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span><span class="preprocessor">  {                                                                                                                     \</span></div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span><span class="preprocessor">    s_TypeMissingFallback = hResource;                                                                                  \</span></div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span><span class="preprocessor">    PL_RESOURCE_VALIDATE_FALLBACK(SELF);                                                                                \</span></div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span><span class="preprocessor">    plResourceManager::AddResourceCleanupCallback(&amp;SELF::CleanupDynamicPluginReferences);                               \</span></div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span><span class="preprocessor">  }</span></div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span> </div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span> </div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILE_FOR_DEVELOPMENT)</span></div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span><span class="preprocessor">#  define PL_RESOURCE_VALIDATE_FALLBACK(SELF)                                       \</span></div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span><span class="preprocessor">    if (hResource.IsValid())                                                        \</span></div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span><span class="preprocessor">    {                                                                               \</span></div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span><span class="preprocessor">      plResourceLock&lt;SELF&gt; lock(hResource, plResourceAcquireMode::BlockTillLoaded); \</span></div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span><span class="preprocessor">      </span><span class="comment">/* if this fails, the &#39;fallback resource&#39; is missing itself*/</span><span class="preprocessor">                 \</span></div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span><span class="preprocessor">    }</span></div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span><span class="preprocessor">#  define PL_RESOURCE_VALIDATE_FALLBACK(SELF)</span></div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span> </div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span><span class="preprocessor">#define PL_RESOURCE_DECLARE_CREATEABLE(SELF, SELF_DESCRIPTOR)      \</span></div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span><span class="preprocessor">protected:                                                         \</span></div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span><span class="preprocessor">  plResourceLoadDesc CreateResource(SELF_DESCRIPTOR&amp;&amp; descriptor); \</span></div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span><span class="preprocessor">                                                                   \</span></div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span><span class="preprocessor">private:</span></div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span> </div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span><span class="preprocessor">#define PL_RESOURCE_IMPLEMENT_CREATEABLE(SELF, SELF_DESCRIPTOR) plResourceLoadDesc SELF::CreateResource(SELF_DESCRIPTOR&amp;&amp; descriptor)</span></div>
<div class="ttc" id="aclasspl_atomic_integer_htm"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger&lt; plInt32 &gt;</a></div></div>
<div class="ttc" id="aclasspl_event_htm"><div class="ttname"><a href="../../dd/d61/classpl_event.htm">plEvent</a></div><div class="ttdef"><b>Definition</b> Event.h:177</div></div>
<div class="ttc" id="aclasspl_hash_table_htm"><div class="ttname"><a href="../../dd/d55/classpl_hash_table.htm">plHashTable</a></div><div class="ttdef"><b>Definition</b> HashTable.h:333</div></div>
<div class="ttc" id="aclasspl_mutex_htm"><div class="ttname"><a href="../../d1/df4/classpl_mutex.htm">plMutex</a></div><div class="ttdoc">Provides a simple mechanism for mutual exclusion to prevent multiple threads from accessing a shared ...</div><div class="ttdef"><b>Definition</b> Mutex.h:13</div></div>
<div class="ttc" id="aclasspl_reflected_class_htm"><div class="ttname"><a href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></div><div class="ttdoc">All classes that should be dynamically reflectable, need to be derived from this base class.</div><div class="ttdef"><b>Definition</b> DynamicRTTI.h:86</div></div>
<div class="ttc" id="aclasspl_resource_htm"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm">plResource</a></div><div class="ttdoc">The base class for all resources.</div><div class="ttdef"><b>Definition</b> Resource.h:10</div></div>
<div class="ttc" id="aclasspl_resource_htm_a0ca2b04d3dca27be4b5c26c04adac934"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a0ca2b04d3dca27be4b5c26c04adac934">plResource::UnloadData</a></div><div class="ttdeci">virtual plResourceLoadDesc UnloadData(Unload WhatToUnload)=0</div><div class="ttdoc">Requests the resource to unload another quality level. If bFullUnload is true, the resource should un...</div></div>
<div class="ttc" id="aclasspl_resource_htm_a0e68a867eef474b89f5eb6f84bb2e2b9"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a0e68a867eef474b89f5eb6f84bb2e2b9">plResource::GetReferenceCount</a></div><div class="ttdeci">PL_ALWAYS_INLINE plInt32 GetReferenceCount() const</div><div class="ttdoc">Returns the reference count of this resource.</div><div class="ttdef"><b>Definition</b> Resource.h:109</div></div>
<div class="ttc" id="aclasspl_resource_htm_a0f1139a2b1d5b111ada1d846a6b0d56a"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a0f1139a2b1d5b111ada1d846a6b0d56a">plResource::GetLastAcquireTime</a></div><div class="ttdeci">PL_ALWAYS_INLINE plTime GetLastAcquireTime() const</div><div class="ttdoc">Returns the time at which the resource was (tried to be) acquired last. If a resource is acquired usi...</div><div class="ttdef"><b>Definition</b> Resource.h:106</div></div>
<div class="ttc" id="aclasspl_resource_htm_a14323537b7d2cf92cd729e8d57c68a63"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a14323537b7d2cf92cd729e8d57c68a63">plResource::GetCurrentResourceChangeCounter</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt32 GetCurrentResourceChangeCounter() const</div><div class="ttdoc">Returns the current value of the resource change counter. Can be used to detect whether the resource ...</div><div class="ttdef"><b>Definition</b> Resource.h:121</div></div>
<div class="ttc" id="aclasspl_resource_htm_a16e01010c79b0a9921874e61a45aed3c"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a16e01010c79b0a9921874e61a45aed3c">plResource::GetResourceIDHash</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt64 GetResourceIDHash() const</div><div class="ttdoc">Returns the hash of the unique ID.</div><div class="ttdef"><b>Definition</b> Resource.h:50</div></div>
<div class="ttc" id="aclasspl_resource_htm_a213ba4f9a3b0280eb79d991d48b18c34"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a213ba4f9a3b0280eb79d991d48b18c34">plResource::IncResourceChangeCounter</a></div><div class="ttdeci">PL_ALWAYS_INLINE void IncResourceChangeCounter()</div><div class="ttdoc">Allows to manually increase the resource change counter to signal that dependent code might need to u...</div><div class="ttdef"><b>Definition</b> Resource.h:124</div></div>
<div class="ttc" id="aclasspl_resource_htm_a2732901dbf89e37139be709ab7648cd9"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a2732901dbf89e37139be709ab7648cd9">plResource::SetIsReloadable</a></div><div class="ttdeci">void SetIsReloadable(bool bIsReloadable)</div><div class="ttdoc">Call this to specify whether a resource is reloadable.</div><div class="ttdef"><b>Definition</b> Resource.h:185</div></div>
<div class="ttc" id="aclasspl_resource_htm_a2d3fe2b04201c3782a624ec9dd2b4122"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a2d3fe2b04201c3782a624ec9dd2b4122">plResource::GetPriority</a></div><div class="ttdeci">plResourcePriority GetPriority() const</div><div class="ttdoc">Returns the current resource priority.</div><div class="ttdef"><b>Definition</b> Resource.h:92</div></div>
<div class="ttc" id="aclasspl_resource_htm_a2f1eac629e71942fd13b8c8e3de8abf4"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a2f1eac629e71942fd13b8c8e3de8abf4">plResource::GetResourceIdOrDescription</a></div><div class="ttdeci">const plString &amp; GetResourceIdOrDescription() const</div><div class="ttdoc">The returns the resource description, if available, otherwise the resource ID.</div><div class="ttdef"><b>Definition</b> Resource.h:63</div></div>
<div class="ttc" id="aclasspl_resource_htm_a426b160415abf03dc507919969d46a06"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a426b160415abf03dc507919969d46a06">plResource::GetNumQualityLevelsDiscardable</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt8 GetNumQualityLevelsDiscardable() const</div><div class="ttdoc">Returns the current maximum quality level that the resource could have.</div><div class="ttdef"><b>Definition</b> Resource.h:83</div></div>
<div class="ttc" id="aclasspl_resource_htm_a4f8d0f6a559a8b646ded2335bb4b74d0"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a4f8d0f6a559a8b646ded2335bb4b74d0">plResource::GetNumQualityLevelsLoadable</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt8 GetNumQualityLevelsLoadable() const</div><div class="ttdoc">Returns how many quality levels the resource may additionally load.</div><div class="ttdef"><b>Definition</b> Resource.h:86</div></div>
<div class="ttc" id="aclasspl_resource_htm_a5cb1e19d153291123b99fdb8f5b2a899"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a5cb1e19d153291123b99fdb8f5b2a899">plResource::GetLoadingState</a></div><div class="ttdeci">PL_ALWAYS_INLINE plResourceState GetLoadingState() const</div><div class="ttdoc">Returns the current state in which this resource is in.</div><div class="ttdef"><b>Definition</b> Resource.h:66</div></div>
<div class="ttc" id="aclasspl_resource_htm_a61a8d04086a7b964035a48fa7180c8f0"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a61a8d04086a7b964035a48fa7180c8f0">plResource::ResetResource</a></div><div class="ttdeci">virtual void ResetResource()</div><div class="ttdoc">If the resource has modifications from the original state, it should reset itself to that state now (...</div><div class="ttdef"><b>Definition</b> Resource.h:128</div></div>
<div class="ttc" id="aclasspl_resource_htm_a65c14ea5b5219a35e90a1494f62c5bde"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a65c14ea5b5219a35e90a1494f62c5bde">plResource::GetResourceDescription</a></div><div class="ttdeci">const plString &amp; GetResourceDescription() const</div><div class="ttdoc">The resource description allows to store an additional string that might be more descriptive during d...</div><div class="ttdef"><b>Definition</b> Resource.h:58</div></div>
<div class="ttc" id="aclasspl_resource_htm_a6e444c1d9dbbdf9a105c059ae34116a4"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a6e444c1d9dbbdf9a105c059ae34116a4">plResource::GetLoadedFileModificationTime</a></div><div class="ttdeci">PL_ALWAYS_INLINE const plTimestamp &amp; GetLoadedFileModificationTime() const</div><div class="ttdoc">Returns the modification date of the file from which this resource was loaded.</div><div class="ttdef"><b>Definition</b> Resource.h:114</div></div>
<div class="ttc" id="aclasspl_resource_htm_a778fc21212a562d005c7774c16ed0bb8"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#a778fc21212a562d005c7774c16ed0bb8">plResource::GetMemoryUsage</a></div><div class="ttdeci">PL_ALWAYS_INLINE const MemoryUsage &amp; GetMemoryUsage() const</div><div class="ttdoc">Returns the information about the current memory usage of the resource.</div><div class="ttdef"><b>Definition</b> Resource.h:101</div></div>
<div class="ttc" id="aclasspl_resource_htm_aac539ddc4d3269b3c8f32ba8697b9f6c"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#aac539ddc4d3269b3c8f32ba8697b9f6c">plResource::ModifyMemoryUsage</a></div><div class="ttdeci">MemoryUsage &amp; ModifyMemoryUsage()</div><div class="ttdoc">Non-const version for resources that want to write this variable directly.</div><div class="ttdef"><b>Definition</b> Resource.h:179</div></div>
<div class="ttc" id="aclasspl_resource_htm_adc85535c94e33fd749abc70e5cd515e7"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#adc85535c94e33fd749abc70e5cd515e7">plResource::UpdateContent</a></div><div class="ttdeci">virtual plResourceLoadDesc UpdateContent(plStreamReader *pStream)=0</div><div class="ttdoc">Called whenever more data for the resource is available. The resource must read the stream to update ...</div></div>
<div class="ttc" id="aclasspl_resource_htm_add739b3f2107393241bb567d54dbc319"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#add739b3f2107393241bb567d54dbc319">plResource::GetBaseResourceFlags</a></div><div class="ttdeci">PL_ALWAYS_INLINE const plBitflags&lt; plResourceFlags &gt; &amp; GetBaseResourceFlags() const</div><div class="ttdoc">Returns the basic flags for the resource type. Mostly used the resource manager.</div><div class="ttdef"><b>Definition</b> Resource.h:98</div></div>
<div class="ttc" id="aclasspl_resource_htm_ae7d019247f66bc64ed69ce729759fe1b"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#ae7d019247f66bc64ed69ce729759fe1b">plResource::SetHasLoadingFallback</a></div><div class="ttdeci">void SetHasLoadingFallback(bool bHasLoadingFallback)</div><div class="ttdoc">Used internally by the code injection macros.</div><div class="ttdef"><b>Definition</b> Resource.h:188</div></div>
<div class="ttc" id="aclasspl_resource_htm_ae993717b7286ba3ff172d076e6cd4d60"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#ae993717b7286ba3ff172d076e6cd4d60">plResource::UpdateMemoryUsage</a></div><div class="ttdeci">virtual void UpdateMemoryUsage(MemoryUsage &amp;out_NewMemoryUsage)=0</div><div class="ttdoc">This function must be overridden by all resource types.</div></div>
<div class="ttc" id="aclasspl_resource_htm_aed4f1f70a1921afa8b7a96a15960daf9"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm#aed4f1f70a1921afa8b7a96a15960daf9">plResource::GetResourceID</a></div><div class="ttdeci">PL_ALWAYS_INLINE const plString &amp; GetResourceID() const</div><div class="ttdoc">Returns the unique ID that identifies this resource. On a file resource this might be a path....</div><div class="ttdef"><b>Definition</b> Resource.h:47</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm">plResourceManager</a></div><div class="ttdoc">The central class for managing all types derived from plResource.</div><div class="ttdef"><b>Definition</b> ResourceManager.h:16</div></div>
<div class="ttc" id="aclasspl_resource_manager_worker_data_load_htm"><div class="ttname"><a href="../../d0/d30/classpl_resource_manager_worker_data_load.htm">plResourceManagerWorkerDataLoad</a></div><div class="ttdoc">[internal] Worker task for loading resources (typically from disk).</div><div class="ttdef"><b>Definition</b> WorkerTasks.h:10</div></div>
<div class="ttc" id="aclasspl_resource_manager_worker_update_content_htm"><div class="ttname"><a href="../../d5/daf/classpl_resource_manager_worker_update_content.htm">plResourceManagerWorkerUpdateContent</a></div><div class="ttdoc">[internal] Worker task for uploading resource data. Depending on the resource type,...</div><div class="ttdef"><b>Definition</b> WorkerTasks.h:26</div></div>
<div class="ttc" id="aclasspl_resource_type_loader_htm"><div class="ttname"><a href="../../da/d6b/classpl_resource_type_loader.htm">plResourceTypeLoader</a></div><div class="ttdoc">Base class for all resource loaders.</div><div class="ttdef"><b>Definition</b> ResourceTypeLoader.h:29</div></div>
<div class="ttc" id="aclasspl_stream_reader_htm"><div class="ttname"><a href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_timestamp_htm"><div class="ttname"><a href="../../d9/d94/classpl_timestamp.htm">plTimestamp</a></div><div class="ttdoc">The timestamp class encapsulates a date in time as microseconds since Unix epoch.</div><div class="ttdef"><b>Definition</b> Timestamp.h:23</div></div>
<div class="ttc" id="aclasspl_typed_resource_handle_htm"><div class="ttname"><a href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle</a></div><div class="ttdoc">The plTypedResourceHandle controls access to an plResource.</div><div class="ttdef"><b>Definition</b> ResourceHandle.h:136</div></div>
<div class="ttc" id="astructpl_bitflags_htm"><div class="ttname"><a href="../../df/dd9/structpl_bitflags.htm">plBitflags</a></div><div class="ttdoc">The plBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition</b> Bitflags.h:82</div></div>
<div class="ttc" id="astructpl_hybrid_string_htm"><div class="ttname"><a href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt; 32, plDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructpl_resource_1_1_memory_usage_htm"><div class="ttname"><a href="../../d6/dd4/structpl_resource_1_1_memory_usage.htm">plResource::MemoryUsage</a></div><div class="ttdef"><b>Definition</b> Resource.h:34</div></div>
<div class="ttc" id="astructpl_resource_flags_htm_a73f5d4b7743a6abb2ea309d45628025aa74ed3c754ded6654100d397cda2e39b3"><div class="ttname"><a href="../../dc/d68/structpl_resource_flags.htm#a73f5d4b7743a6abb2ea309d45628025aa74ed3c754ded6654100d397cda2e39b3">plResourceFlags::IsReloadable</a></div><div class="ttdeci">@ IsReloadable</div><div class="ttdoc">The resource was created, not loaded from file.</div><div class="ttdef"><b>Definition</b> Declarations.h:65</div></div>
<div class="ttc" id="astructpl_resource_flags_htm_a73f5d4b7743a6abb2ea309d45628025aac887de0ae915bcddb910ef91dce9e664"><div class="ttname"><a href="../../dc/d68/structpl_resource_flags.htm#a73f5d4b7743a6abb2ea309d45628025aac887de0ae915bcddb910ef91dce9e664">plResourceFlags::ResourceHasFallback</a></div><div class="ttdeci">@ ResourceHasFallback</div><div class="ttdoc">Specifies whether this resource has a valid fallback resource that could be used. Automatically updat...</div><div class="ttdef"><b>Definition</b> Declarations.h:63</div></div>
<div class="ttc" id="astructpl_resource_load_desc_htm"><div class="ttname"><a href="../../db/d1a/structpl_resource_load_desc.htm">plResourceLoadDesc</a></div><div class="ttdoc">Describes in which loading state a resource currently is, and how many different quality levels there...</div><div class="ttdef"><b>Definition</b> Declarations.h:102</div></div>
<div class="ttc" id="astructpl_string_base_htm_a7ac3a243ee9ea1f99f7d82dd8e1d60b5"><div class="ttname"><a href="../../de/d73/structpl_string_base.htm#a7ac3a243ee9ea1f99f7d82dd8e1d60b5">plStringBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether the string is an empty string.</div><div class="ttdef"><b>Definition</b> StringBase_inl.h:25</div></div>
<div class="ttc" id="astructpl_time_htm"><div class="ttname"><a href="../../d1/df6/structpl_time.htm">plTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition</b> Time.h:12</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_e62ae2b329024d6cec02491cff116055.htm">Core</a></li><li class="navelem"><a class="el" href="../../dir_654337d58af9e022826c42081782191c.htm">ResourceManager</a></li><li class="navelem"><b>Resource.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
