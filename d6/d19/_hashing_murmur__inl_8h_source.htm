<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Foundation/Algorithm/Implementation/HashingMurmur_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d6/d19/_hashing_murmur__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">HashingMurmur_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="keyword">namespace </span>plInternal</div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span>{</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span>  <span class="keyword">constexpr</span> plUInt32 MURMUR_M = 0x5bd1e995;</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>  <span class="keyword">constexpr</span> plUInt32 MURMUR_R = 24;</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N, <span class="keywordtype">size_t</span> Loop&gt;</div>
<div class="foldopen" id="foldopen00008" data-start="{" data-end="};">
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">    8</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">CompileTimeMurmurHash</a></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  {</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>    <span class="keyword">constexpr</span> PL_ALWAYS_INLINE plUInt32 operator()(plUInt32 uiHash, <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N], <span class="keywordtype">size_t</span> i)<span class="keyword"> const</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>      <span class="keywordflow">return</span> <a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">CompileTimeMurmurHash</a>&lt;N, Loop - 4&gt;()(<a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">CompileTimeMurmurHash&lt;N, 4&gt;</a>()(uiHash, str, i), str, i + 4);</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>    }</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  };</div>
</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="};">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="../../dd/deb/structpl_internal_1_1_compile_time_murmur_hash_3_01_n_00_014_01_4.htm">   17</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">CompileTimeMurmurHash</a>&lt;N, 4&gt;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  {</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    <span class="keyword">static</span> <span class="keyword">constexpr</span> PL_ALWAYS_INLINE plUInt32 helper(plUInt32 k) { <span class="keywordflow">return</span> (k ^ (k &gt;&gt; MURMUR_R)) * MURMUR_M; }</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    <span class="keyword">constexpr</span> PL_ALWAYS_INLINE plUInt32 operator()(plUInt32 uiHash, <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N], <span class="keywordtype">size_t</span> i)<span class="keyword"> const</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>      <span class="comment">// In C++11 constexpr local variables are not allowed. Need to express the following without &quot;plUInt32 k&quot;</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>      <span class="comment">// (this restriction is lifted in C++14&#39;s generalized constexpr)</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>      <span class="comment">// plUInt32 k = ((str[i + 0]) | ((str[i + 1]) &lt;&lt; 8) | ((str[i + 2]) &lt;&lt; 16) | ((str[i + 3]) &lt;&lt; 24));</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>      <span class="comment">// k *= MURMUR_M;</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>      <span class="comment">// k ^= (k &gt;&gt; MURMUR_R);</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>      <span class="comment">// k *= MURMUR_M;</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>      <span class="comment">// return (hash * MURMUR_M) ^ k;</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>      <span class="keywordflow">return</span> (uiHash * MURMUR_M) ^ helper(((str[i + 0]) | ((str[i + 1]) &lt;&lt; 8) | ((str[i + 2]) &lt;&lt; 16) | ((str[i + 3]) &lt;&lt; 24)) * MURMUR_M);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    }</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  };</div>
</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="foldopen" id="foldopen00036" data-start="{" data-end="};">
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="../../d0/d89/structpl_internal_1_1_compile_time_murmur_hash_3_01_n_00_013_01_4.htm">   36</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">CompileTimeMurmurHash</a>&lt;N, 3&gt;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  {</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    <span class="keyword">constexpr</span> PL_ALWAYS_INLINE plUInt32 operator()(plUInt32 uiHash, <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N], <span class="keywordtype">size_t</span> i)<span class="keyword"> const</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>      <span class="keywordflow">return</span> (uiHash ^ (str[i + 2] &lt;&lt; 16) ^ (str[i + 1] &lt;&lt; 8) ^ (str[i + 0])) * MURMUR_M;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    }</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  };</div>
</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="foldopen" id="foldopen00045" data-start="{" data-end="};">
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="../../d8/d70/structpl_internal_1_1_compile_time_murmur_hash_3_01_n_00_012_01_4.htm">   45</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">CompileTimeMurmurHash</a>&lt;N, 2&gt;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  {</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    <span class="keyword">constexpr</span> PL_ALWAYS_INLINE plUInt32 operator()(plUInt32 uiHash, <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N], <span class="keywordtype">size_t</span> i)<span class="keyword"> const</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>      <span class="keywordflow">return</span> (uiHash ^ (str[i + 1] &lt;&lt; 8) ^ (str[i])) * MURMUR_M;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    }</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  };</div>
</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="foldopen" id="foldopen00054" data-start="{" data-end="};">
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="../../d4/d52/structpl_internal_1_1_compile_time_murmur_hash_3_01_n_00_011_01_4.htm">   54</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">CompileTimeMurmurHash</a>&lt;N, 1&gt;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    <span class="keyword">constexpr</span> PL_ALWAYS_INLINE plUInt32 operator()(plUInt32 uiHash, <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N], <span class="keywordtype">size_t</span> i)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (uiHash ^ (str[i])) * MURMUR_M; }</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  };</div>
</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="foldopen" id="foldopen00060" data-start="{" data-end="};">
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="../../d7/dff/structpl_internal_1_1_compile_time_murmur_hash_3_01_n_00_010_01_4.htm">   60</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">CompileTimeMurmurHash</a>&lt;N, 0&gt;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  {</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    <span class="keyword">constexpr</span> PL_ALWAYS_INLINE plUInt32 operator()(plUInt32 uiHash, <span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N], <span class="keywordtype">size_t</span> i)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> uiHash; }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  };</div>
</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keyword">constexpr</span> plUInt32 rightShift_and_xorWithPrevSelf(plUInt32 h, plUInt32 uiShift)</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <span class="keywordflow">return</span> h ^ (h &gt;&gt; uiShift);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>} <span class="comment">// namespace plInternal</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span><span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span><span class="keyword">constexpr</span> PL_ALWAYS_INLINE plUInt32 <a class="code hl_function" href="../../de/d53/classpl_hashing_utils.htm#af9efbfa41c39eb71b1f98344276ee848">plHashingUtils::MurmurHash32String</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N], plUInt32 uiSeed)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>{</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <span class="comment">// In C++11 constexpr local variables are not allowed. Need to express the following without &quot;plUInt32 h&quot;</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <span class="comment">// (this restriction is lifted in C++14&#39;s generalized constexpr)</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="comment">// const plUInt32 uiStrlen = (plUInt32)(N - 1);</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="comment">// plUInt32 h = plInternal::CompileTimeMurmurHash&lt;N - 1&gt;(uiSeed ^ uiStrlen, str, 0);</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="comment">// h ^= h &gt;&gt; 13;</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="comment">// h *= plInternal::MURMUR_M;</span></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="comment">// h ^= h &gt;&gt; 15;</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="comment">// return h;</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keywordflow">return</span> plInternal::rightShift_and_xorWithPrevSelf(</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    plInternal::rightShift_and_xorWithPrevSelf(<a class="code hl_struct" href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">plInternal::CompileTimeMurmurHash&lt;N, N - 1&gt;</a>()(uiSeed ^ <span class="keyword">static_cast&lt;</span>plUInt32<span class="keyword">&gt;</span>(N - 1), str, 0), 13) *</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>      plInternal::MURMUR_M,</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    15);</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>}</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="foldopen" id="foldopen00089" data-start="{" data-end="}">
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="../../de/d53/classpl_hashing_utils.htm#a2971c2a07799583972890c852e47abaa">   89</a></span>PL_ALWAYS_INLINE plUInt32 <a class="code hl_function" href="../../de/d53/classpl_hashing_utils.htm#af9efbfa41c39eb71b1f98344276ee848">plHashingUtils::MurmurHash32String</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sStr, plUInt32 uiSeed)</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>{</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d53/classpl_hashing_utils.htm#adc1c0889a01c9c2ce59df3652803efe9">MurmurHash32</a>(sStr.<a class="code hl_function" href="../../d6/d79/classpl_string_view.htm#a74f83d2da688a507fee719c4deea8e28">GetStartPointer</a>(), sStr.<a class="code hl_function" href="../../d6/d79/classpl_string_view.htm#a0828063775dbf037984994e4d0827764">GetElementCount</a>(), uiSeed);</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>}</div>
</div>
<div class="ttc" id="aclasspl_hashing_utils_htm_adc1c0889a01c9c2ce59df3652803efe9"><div class="ttname"><a href="../../de/d53/classpl_hashing_utils.htm#adc1c0889a01c9c2ce59df3652803efe9">plHashingUtils::MurmurHash32</a></div><div class="ttdeci">static plUInt32 MurmurHash32(const void *pKey, size_t uiSizeInByte, plUInt32 uiSeed=0)</div><div class="ttdoc">Calculates the 32bit murmur hash of the given key.</div><div class="ttdef"><b>Definition</b> HashingUtils.cpp:6</div></div>
<div class="ttc" id="aclasspl_hashing_utils_htm_af9efbfa41c39eb71b1f98344276ee848"><div class="ttname"><a href="../../de/d53/classpl_hashing_utils.htm#af9efbfa41c39eb71b1f98344276ee848">plHashingUtils::MurmurHash32String</a></div><div class="ttdeci">static constexpr plUInt32 MurmurHash32String(const char(&amp;str)[N], plUInt32 uiSeed=0)</div><div class="ttdoc">Calculates the 32bit murmur hash of a string constant at compile time. Encoding does not matter here.</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_string_view_htm_a0828063775dbf037984994e4d0827764"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm#a0828063775dbf037984994e4d0827764">plStringView::GetElementCount</a></div><div class="ttdeci">plUInt32 GetElementCount() const</div><div class="ttdoc">Returns the number of bytes from the start position up to its end.</div><div class="ttdef"><b>Definition</b> StringView.h:93</div></div>
<div class="ttc" id="aclasspl_string_view_htm_a74f83d2da688a507fee719c4deea8e28"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm#a74f83d2da688a507fee719c4deea8e28">plStringView::GetStartPointer</a></div><div class="ttdeci">const char * GetStartPointer() const</div><div class="ttdoc">Returns the start of the view range.</div><div class="ttdef"><b>Definition</b> StringView.h:102</div></div>
<div class="ttc" id="astructpl_internal_1_1_compile_time_murmur_hash_htm"><div class="ttname"><a href="../../da/dfe/structpl_internal_1_1_compile_time_murmur_hash.htm">plInternal::CompileTimeMurmurHash</a></div><div class="ttdef"><b>Definition</b> HashingMurmur_inl.h:9</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_84a7a2cba595e04d2507324f6c30e358.htm">Algorithm</a></li><li class="navelem"><a class="el" href="../../dir_61dd4527daaedd8768bd8ae7964eae4b.htm">Implementation</a></li><li class="navelem"><b>HashingMurmur_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
