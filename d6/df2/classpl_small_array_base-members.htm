<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Member List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d7/de3/classpl_small_array_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">plSmallArrayBase&lt; T, Size &gt; Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>CAPACITY_ALIGNMENT</b> enum value (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a1105ef94e1b2228e67ecfe976f151e13">Clear</a>()</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a6c9ccc27d42825a50c849e2d8b4d6be2">Compact</a>(plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>const_iterator</b> typedef (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>const_reference</b> typedef (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>const_reverse_iterator</b> typedef (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#af1f603e32fd9d8e5d01ac453c9a3f898">Contains</a>(const T &amp;value) const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a7bdb7ccdd99b15c07c61f179436d63a8">CopyFrom</a>(const plArrayPtr&lt; const T &gt; &amp;other, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a8cee3cefaff8bc613de722a43025ceca">EnsureCount</a>(plUInt16 uiCount, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a9ff3a42c1621c781821554113bf61918">ExpandAndGetRef</a>(plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#aaa15d1b49967ceb624cbc58fb65606da">GetArrayPtr</a>()</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a37beccc22732c11d4afbd95d66a26ff1">GetArrayPtr</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a827d52bbc2f8b77ce74bee1e2a960d7d">GetByteArrayPtr</a>()</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a132ead49dbf1c0f163879748c5ad388b">GetByteArrayPtr</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#aef1a6d049970c942380c0b76626ea746">GetCapacity</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#aaadcac566b72769bc7881e1daadb63c7">GetCount</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a8d296d79cfc46a7daa2e5f63aec5594f">GetData</a>()</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ab18568d8c7240921d1e1144e589b58a4">GetData</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GetElementsPtr</b>() (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>GetElementsPtr</b>() const (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a918972762638a07472ad288f59d7bd7b">GetHeapMemoryUsage</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>GetUserData</b>() const (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GetUserData</b>() (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>GetUserData</b>() const (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GetUserData</b>() (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ae0c4dfc056dcc0d9739e6ed397dcd583">IndexOf</a>(const T &amp;value, plUInt32 uiStartIndex=0) const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a70cb0225a3ab95e62a1b8b3793e3d01b">Insert</a>(const T &amp;value, plUInt32 uiIndex, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a8b5bb5855005cca54b378e411c72b9b4">Insert</a>(T &amp;&amp;value, plUInt32 uiIndex, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ac5e8a1f919fa2e2be0f7737874d661fc">IsEmpty</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>iterator</b> typedef (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#aa61f12c4ae9a08d46f309e7f5379a748">LastIndexOf</a>(const T &amp;value, plUInt32 uiStartIndex=plSmallInvalidIndex) const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>m_pElements</b> (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>m_StaticData</b> (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>m_uiCapacity</b> (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>m_uiCount</b> (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>m_uiUserData</b> (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a429bf06f44557e9e94d93bcee6cb8631">MoveFrom</a>(plSmallArrayBase&lt; T, Size &gt; &amp;&amp;other, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ab776a645d67194526ad6563cd2cad5f5">operator plArrayPtr&lt; const T &gt;</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a1a61fca2934c395d98ed0ea70a79f3ab">operator plArrayPtr&lt; T &gt;</a>()</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>operator=</b>(const plSmallArrayBase&lt; T, Size &gt; &amp;rhs)=delete (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator=</b>(plSmallArrayBase&lt; T, Size &gt; &amp;&amp;rhs)=delete (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ae10acb56265e7505bf03cc5c90e8fc09">operator==</a>(const plSmallArrayBase&lt; T, Size &gt; &amp;rhs) const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ab139b09923133b72fabb28a2fae3e4f4">operator[]</a>(plUInt32 uiIndex) const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a1e8832ff03f03674a30bf140d077e7f0">operator[]</a>(plUInt32 uiIndex)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a9641463b1b2674974d6f5af15e6161d1">PeekBack</a>()</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ae51280e3d782e0e508d78d1569484691">PeekBack</a>() const</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b>(const plSmallArrayBase&lt; T, Size &gt; &amp;) (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>PL_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b>(T) (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plSmallArrayBase</b>() (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plSmallArrayBase</b>(const plSmallArrayBase&lt; T, Size &gt; &amp;other, plAllocator *pAllocator) (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plSmallArrayBase</b>(const plArrayPtr&lt; const T &gt; &amp;other, plAllocator *pAllocator) (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plSmallArrayBase</b>(plSmallArrayBase&lt; T, Size &gt; &amp;&amp;other, plAllocator *pAllocator) (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a014b7fc2ba69771cf680857045655a71">PopBack</a>(plUInt32 uiCountToRemove=1)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ac950cb444242c44a3e2f4b428deb357d">PushBack</a>(const T &amp;value, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a370d12f1f40604b3360a877ca6eab7af">PushBack</a>(T &amp;&amp;value, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a0e083b79e10f09bd20ac388a61bccb51">PushBackRange</a>(const plArrayPtr&lt; const T &gt; &amp;range, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ac416170760d69eb6792c4a9e0926449e">PushBackUnchecked</a>(const T &amp;value)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a026c0b458e04da9e28dd3d352f2a080a">PushBackUnchecked</a>(T &amp;&amp;value)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a819a8168e990edb947bdfc68783067d2">RemoveAndCopy</a>(const T &amp;value)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ae496c8f3895f5c72d78e17e7936ec8d3">RemoveAndSwap</a>(const T &amp;value)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#abaa3bfea372deca3ac86eaf52e1e6885">RemoveAtAndCopy</a>(plUInt32 uiIndex, plUInt16 uiNumElements=1)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a4225e8476f7118a0a4220bbd2ea69c27">RemoveAtAndSwap</a>(plUInt32 uiIndex, plUInt16 uiNumElements=1)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a6f8e3c811f1a36986107131c01820426">Reserve</a>(plUInt16 uiCapacity, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>reverse_iterator</b> typedef (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>SetCapacity</b>(plUInt16 uiCapacity, plAllocator *pAllocator) (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a132a3c1de704395663e3ffeafeff482e">SetCount</a>(plUInt16 uiCount, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#ac35a0b448af6ffaad076e109d6d0ae38">SetCount</a>(plUInt16 uiCount, const T &amp;fillValue, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a55c33bfdeaaa99c1331a8a8fe2ee9e10">SetCountUninitialized</a>(plUInt16 uiCount, plAllocator *pAllocator)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#aad895a02e3503ea07ee9fddec917f5bc">Sort</a>(const Comparer &amp;comparer)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm#a6718419bdff0ce164ae62177cb886de6">Sort</a>()</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>value_type</b> typedef (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>~plSmallArrayBase</b>() (defined in <a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a>)</td><td class="entry"><a class="el" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt; T, Size &gt;</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
