<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plFallbackGameState Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d6/da5/classpl_fallback_game_state.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d5/d8a/classpl_fallback_game_state-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plFallbackGameState Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../d6/da5/classpl_fallback_game_state.htm" title="plFallbackGameState is an plGameState that can handle existing worlds when no other game state is ava...">plFallbackGameState</a> is an <a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> that can handle existing worlds when no other game state is available.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d22/_fallback_game_state_8h_source.htm">FallbackGameState.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plFallbackGameState:</div>
<div class="dyncontent">
<div class="center"><img src="../../d0/da9/classpl_fallback_game_state__inherit__graph.png" border="0" usemap="#apl_fallback_game_state_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_fallback_game_state_inherit__map" id="apl_fallback_game_state_inherit__map">
<area shape="rect" title="plFallbackGameState is an plGameState that can handle existing worlds when no other game state is ava..." alt="" coords="5,304,152,331"/>
<area shape="rect" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA..." alt="" coords="30,229,127,256"/>
<area shape="poly" title=" " alt="" coords="81,272,81,304,76,304,76,272"/>
<area shape="rect" href="../../d7/dbf/classpl_game_state_base.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA..." alt="" coords="15,155,142,181"/>
<area shape="poly" title=" " alt="" coords="81,197,81,229,76,229,76,197"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="19,80,138,107"/>
<area shape="poly" title=" " alt="" coords="81,122,81,154,76,154,76,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="40,5,117,32"/>
<area shape="poly" title=" " alt="" coords="81,48,81,80,76,80,76,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6e3822d5afa1442bc0af8d1ca8d61fde" id="r_a6e3822d5afa1442bc0af8d1ca8d61fde"><td class="memItemLeft" align="right" valign="top"><a id="a6e3822d5afa1442bc0af8d1ca8d61fde" name="a6e3822d5afa1442bc0af8d1ca8d61fde"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnableSceneSelectionMenu</b> (bool bEnable)</td></tr>
<tr class="memdesc:a6e3822d5afa1442bc0af8d1ca8d61fde"><td class="mdescLeft">&#160;</td><td class="mdescRight">If disabled, pressing the Windows key won't show an onscreen menu to switch to a different scene. <br /></td></tr>
<tr class="separator:a6e3822d5afa1442bc0af8d1ca8d61fde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae96504eb3550ddc89a4df8a619cd1a49" id="r_ae96504eb3550ddc89a4df8a619cd1a49"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae96504eb3550ddc89a4df8a619cd1a49">EnableFreeCameras</a> (bool bEnable)</td></tr>
<tr class="memdesc:ae96504eb3550ddc89a4df8a619cd1a49"><td class="mdescLeft">&#160;</td><td class="mdescRight">If disabled, moving around a scene with a free camera won't be possible.  <br /></td></tr>
<tr class="separator:ae96504eb3550ddc89a4df8a619cd1a49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae72c09eb4186e28cc67582e4c5c606d1" id="r_ae72c09eb4186e28cc67582e4c5c606d1"><td class="memItemLeft" align="right" valign="top"><a id="ae72c09eb4186e28cc67582e4c5c606d1" name="ae72c09eb4186e28cc67582e4c5c606d1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnableAutoSwitchToLoadedScene</b> (bool bEnable)</td></tr>
<tr class="memdesc:ae72c09eb4186e28cc67582e4c5c606d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">If disabled, the game state will not automatically switch to a scene that is being loaded in the background, once it is finished loading. Instead overriding code has to call <a class="el" href="#ab620c351500c677d6d37d6cd832652aa" title="Once scene loading has finished successfully, this can be called to switch to that scene.">SwitchToLoadedScene()</a> itself. <br /></td></tr>
<tr class="separator:ae72c09eb4186e28cc67582e4c5c606d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a780a1d5df2821f665b90181da76e533e" id="r_a780a1d5df2821f665b90181da76e533e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a780a1d5df2821f665b90181da76e533e">ProcessInput</a> () override</td></tr>
<tr class="memdesc:a780a1d5df2821f665b90181da76e533e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once per game update. Should handle input updates here.  <br /></td></tr>
<tr class="separator:a780a1d5df2821f665b90181da76e533e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c60fcdc74fb703b9cbc2580ce52d648" id="r_a2c60fcdc74fb703b9cbc2580ce52d648"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2c60fcdc74fb703b9cbc2580ce52d648">AfterWorldUpdate</a> () override</td></tr>
<tr class="memdesc:a2c60fcdc74fb703b9cbc2580ce52d648"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once each frame after the worlds have been updated.  <br /></td></tr>
<tr class="separator:a2c60fcdc74fb703b9cbc2580ce52d648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30ddd557f74a97d770f1ea20a265fe06" id="r_a30ddd557f74a97d770f1ea20a265fe06"><td class="memItemLeft" align="right" valign="top">virtual plGameStatePriority&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a30ddd557f74a97d770f1ea20a265fe06">DeterminePriority</a> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld) const override</td></tr>
<tr class="memdesc:a30ddd557f74a97d770f1ea20a265fe06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns plGameStatePriority::Fallback.  <br /></td></tr>
<tr class="separator:a30ddd557f74a97d770f1ea20a265fe06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23befbbb17e472325ff36136379d2d78" id="r_a23befbbb17e472325ff36136379d2d78"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a23befbbb17e472325ff36136379d2d78">OnActivation</a> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld, const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> *pStartPosition) override</td></tr>
<tr class="memdesc:a23befbbb17e472325ff36136379d2d78"><td class="mdescLeft">&#160;</td><td class="mdescRight">When a game state was chosen, it gets activated through this function.  <br /></td></tr>
<tr class="separator:a23befbbb17e472325ff36136379d2d78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5085590e3bc800883eb8581aff7971d" id="r_ad5085590e3bc800883eb8581aff7971d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad5085590e3bc800883eb8581aff7971d">OnDeactivation</a> () override</td></tr>
<tr class="memdesc:ad5085590e3bc800883eb8581aff7971d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the game state is being shut down.  <br /></td></tr>
<tr class="separator:ad5085590e3bc800883eb8581aff7971d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc3eefddf020c128f07e2b7ef27c7ee" id="r_a2bc3eefddf020c128f07e2b7ef27c7ee"><td class="memItemLeft" align="right" valign="top"><a id="a2bc3eefddf020c128f07e2b7ef27c7ee" name="a2bc3eefddf020c128f07e2b7ef27c7ee"></a>
virtual <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetStartupSceneFile</b> ()</td></tr>
<tr class="memdesc:a2bc3eefddf020c128f07e2b7ef27c7ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the path to the scene file to load at startup. By default this is taken from the command line '-scene' option. <br /></td></tr>
<tr class="separator:a2bc3eefddf020c128f07e2b7ef27c7ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a801a6041550fd075bc506517473afd86" id="r_a801a6041550fd075bc506517473afd86"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a801a6041550fd075bc506517473afd86">SwitchToLoadingScreen</a> ()</td></tr>
<tr class="memdesc:a801a6041550fd075bc506517473afd86"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new world that's used as a temporary loading screen while waiting for loading of another world to finish.  <br /></td></tr>
<tr class="separator:a801a6041550fd075bc506517473afd86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada60901672428a7ddefc9b4e7af5744c" id="r_ada60901672428a7ddefc9b4e7af5744c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ada60901672428a7ddefc9b4e7af5744c">StartSceneLoading</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSceneFile, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPreloadCollection)</td></tr>
<tr class="memdesc:ada60901672428a7ddefc9b4e7af5744c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts loading a scene in the background.  <br /></td></tr>
<tr class="separator:ada60901672428a7ddefc9b4e7af5744c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34b29af71301169780cb334601eb3088" id="r_a34b29af71301169780cb334601eb3088"><td class="memItemLeft" align="right" valign="top"><a id="a34b29af71301169780cb334601eb3088" name="a34b29af71301169780cb334601eb3088"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CancelSceneLoading</b> ()</td></tr>
<tr class="memdesc:a34b29af71301169780cb334601eb3088"><td class="mdescLeft">&#160;</td><td class="mdescRight">If a scene is currently being loaded in the background, cancel the loading. <br /></td></tr>
<tr class="separator:a34b29af71301169780cb334601eb3088"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace15bcc230b379bf070c3443a0a9e8ba" id="r_ace15bcc230b379bf070c3443a0a9e8ba"><td class="memItemLeft" align="right" valign="top"><a id="ace15bcc230b379bf070c3443a0a9e8ba" name="ace15bcc230b379bf070c3443a0a9e8ba"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsLoadingScene</b> () const</td></tr>
<tr class="memdesc:ace15bcc230b379bf070c3443a0a9e8ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether a scene is currently being loaded. <br /></td></tr>
<tr class="separator:ace15bcc230b379bf070c3443a0a9e8ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29927c2f5aba055e8b53c30f89b9171a" id="r_a29927c2f5aba055e8b53c30f89b9171a"><td class="memItemLeft" align="right" valign="top"><a id="a29927c2f5aba055e8b53c30f89b9171a" name="a29927c2f5aba055e8b53c30f89b9171a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInLoadingScreen</b> () const</td></tr>
<tr class="memdesc:a29927c2f5aba055e8b53c30f89b9171a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the game state currently displays a loading screen. This usually implies that a scene is being loaded as well. <br /></td></tr>
<tr class="separator:a29927c2f5aba055e8b53c30f89b9171a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab620c351500c677d6d37d6cd832652aa" id="r_ab620c351500c677d6d37d6cd832652aa"><td class="memItemLeft" align="right" valign="top"><a id="ab620c351500c677d6d37d6cd832652aa" name="ab620c351500c677d6d37d6cd832652aa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SwitchToLoadedScene</b> ()</td></tr>
<tr class="memdesc:ab620c351500c677d6d37d6cd832652aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Once scene loading has finished successfully, this can be called to switch to that scene. <br /></td></tr>
<tr class="separator:ab620c351500c677d6d37d6cd832652aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad363f7941733f5eee7b312c94dd72c04" id="r_ad363f7941733f5eee7b312c94dd72c04"><td class="memItemLeft" align="right" valign="top"><a id="ad363f7941733f5eee7b312c94dd72c04" name="ad363f7941733f5eee7b312c94dd72c04"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetActiveSceneName</b> () const</td></tr>
<tr class="memdesc:ad363f7941733f5eee7b312c94dd72c04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the <a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> that is currently active. <br /></td></tr>
<tr class="separator:ad363f7941733f5eee7b312c94dd72c04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b9fe47750da2cece76dc3999470469" id="r_a12b9fe47750da2cece76dc3999470469"><td class="memItemLeft" align="right" valign="top"><a id="a12b9fe47750da2cece76dc3999470469" name="a12b9fe47750da2cece76dc3999470469"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetLoadingSceneName</b> () const</td></tr>
<tr class="memdesc:a12b9fe47750da2cece76dc3999470469"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the <a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> that is currently being loaded. <br /></td></tr>
<tr class="separator:a12b9fe47750da2cece76dc3999470469"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_game_state"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_game_state')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d9b/classpl_game_state.htm">plGameState</a></td></tr>
<tr class="memitem:afb0701438cd8e974f42e3fa9f9a37efc inherit pub_methods_classpl_game_state" id="r_afb0701438cd8e974f42e3fa9f9a37efc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d9b/classpl_game_state.htm#afb0701438cd8e974f42e3fa9f9a37efc">ScheduleRendering</a> () override</td></tr>
<tr class="memdesc:afb0701438cd8e974f42e3fa9f9a37efc inherit pub_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has to call plRenderLoop::AddMainView for all views that need to be rendered.  <br /></td></tr>
<tr class="separator:afb0701438cd8e974f42e3fa9f9a37efc inherit pub_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a45ce9a8444eba55e937724b6d075d4 inherit pub_methods_classpl_game_state" id="r_a2a45ce9a8444eba55e937724b6d075d4"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetMainCamera</b> ()</td></tr>
<tr class="memdesc:a2a45ce9a8444eba55e937724b6d075d4 inherit pub_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives access to the game state's main camera object. <br /></td></tr>
<tr class="separator:a2a45ce9a8444eba55e937724b6d075d4 inherit pub_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_game_state_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_game_state_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d7/dbf/classpl_game_state_base.htm">plGameStateBase</a></td></tr>
<tr class="memitem:aff93e3af215cd4b8c250211b6f2600c1 inherit pub_methods_classpl_game_state_base" id="r_aff93e3af215cd4b8c250211b6f2600c1"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>BeforeWorldUpdate</b> ()</td></tr>
<tr class="memdesc:aff93e3af215cd4b8c250211b6f2600c1 inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once each frame before the worlds are updated. <br /></td></tr>
<tr class="separator:aff93e3af215cd4b8c250211b6f2600c1 inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d73e81a96712306f628260e7c9937f2 inherit pub_methods_classpl_game_state_base" id="r_a6d73e81a96712306f628260e7c9937f2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dbf/classpl_game_state_base.htm#a6d73e81a96712306f628260e7c9937f2">RequestQuit</a> ()</td></tr>
<tr class="memdesc:a6d73e81a96712306f628260e7c9937f2 inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call this to signal that a game state requested the application to quit.  <br /></td></tr>
<tr class="separator:a6d73e81a96712306f628260e7c9937f2 inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a578c06dde871240f3a87a0206c1ec60f inherit pub_methods_classpl_game_state_base" id="r_a578c06dde871240f3a87a0206c1ec60f"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>WasQuitRequested</b> () const</td></tr>
<tr class="memdesc:a578c06dde871240f3a87a0206c1ec60f inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the game state wants to quit the application. <br /></td></tr>
<tr class="separator:a578c06dde871240f3a87a0206c1ec60f inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-types" name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:a487b7cef22d0b055db412a74f0757c20" id="r_a487b7cef22d0b055db412a74f0757c20"><td class="memItemLeft" align="right" valign="top"><a id="a487b7cef22d0b055db412a74f0757c20" name="a487b7cef22d0b055db412a74f0757c20"></a>enum class &#160;</td><td class="memItemRight" valign="bottom"><b>State</b> { <br />
&#160;&#160;<b>Ok</b>
, <b>NoProject</b>
, <b>BadProject</b>
, <b>NoScene</b>
, <br />
&#160;&#160;<b>BadScene</b>
<br />
 }</td></tr>
<tr class="separator:a487b7cef22d0b055db412a74f0757c20"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a932ab5b3cb7f50e2b87c66305da79602" id="r_a932ab5b3cb7f50e2b87c66305da79602"><td class="memItemLeft" align="right" valign="top"><a id="a932ab5b3cb7f50e2b87c66305da79602" name="a932ab5b3cb7f50e2b87c66305da79602"></a>
virtual <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateLoadingScreenWorld</b> ()</td></tr>
<tr class="memdesc:a932ab5b3cb7f50e2b87c66305da79602"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by <a class="el" href="#a801a6041550fd075bc506517473afd86" title="Creates a new world that&#39;s used as a temporary loading screen while waiting for loading of another wo...">SwitchToLoadingScreen()</a> to setup a new world that acts as the loading screen while waiting for another scene to finish loading. <br /></td></tr>
<tr class="separator:a932ab5b3cb7f50e2b87c66305da79602"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf583543d9987a1fc8c4697bad403767" id="r_aaf583543d9987a1fc8c4697bad403767"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaf583543d9987a1fc8c4697bad403767">ConfigureInputActions</a> () override</td></tr>
<tr class="memdesc:aaf583543d9987a1fc8c4697bad403767"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds custom input actions, if necessary. Unless overridden <a class="el" href="#a23befbbb17e472325ff36136379d2d78" title="When a game state was chosen, it gets activated through this function.">OnActivation()</a> will call this.  <br /></td></tr>
<tr class="separator:aaf583543d9987a1fc8c4697bad403767"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45988eee9be177ccdcac1ba854adb1cd" id="r_a45988eee9be177ccdcac1ba854adb1cd"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a45988eee9be177ccdcac1ba854adb1cd">SpawnPlayer</a> (const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> *pStartPosition) override</td></tr>
<tr class="memdesc:a45988eee9be177ccdcac1ba854adb1cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overridable function that may create a player object.  <br /></td></tr>
<tr class="separator:a45988eee9be177ccdcac1ba854adb1cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf816544bd6df56a13cd936f8d967d15" id="r_acf816544bd6df56a13cd936f8d967d15"><td class="memItemLeft" align="right" valign="top"><a id="acf816544bd6df56a13cd936f8d967d15" name="acf816544bd6df56a13cd936f8d967d15"></a>
virtual const <a class="el" href="../../d0/de6/classpl_camera_component.htm">plCameraComponent</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>FindActiveCameraComponent</b> ()</td></tr>
<tr class="separator:acf816544bd6df56a13cd936f8d967d15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae378845d0d60dfdb41aa12875eb01855" id="r_ae378845d0d60dfdb41aa12875eb01855"><td class="memItemLeft" align="right" valign="top"><a id="ae378845d0d60dfdb41aa12875eb01855" name="ae378845d0d60dfdb41aa12875eb01855"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>FindAvailableScenes</b> ()</td></tr>
<tr class="separator:ae378845d0d60dfdb41aa12875eb01855"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4166671c6c56d2b93184435234a83e4d" id="r_a4166671c6c56d2b93184435234a83e4d"><td class="memItemLeft" align="right" valign="top"><a id="a4166671c6c56d2b93184435234a83e4d" name="a4166671c6c56d2b93184435234a83e4d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>DisplayMenu</b> ()</td></tr>
<tr class="separator:a4166671c6c56d2b93184435234a83e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_game_state"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_game_state')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../db/d9b/classpl_game_state.htm">plGameState</a></td></tr>
<tr class="memitem:af277f92971183761c4361513e0fa1f27 inherit pro_methods_classpl_game_state" id="r_af277f92971183761c4361513e0fa1f27"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plGameState</b> ()</td></tr>
<tr class="memdesc:af277f92971183761c4361513e0fa1f27 inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class cannot be instantiated directly. <br /></td></tr>
<tr class="separator:af277f92971183761c4361513e0fa1f27 inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fca83680b629c9010544a6a7d46be05 inherit pro_methods_classpl_game_state" id="r_a7fca83680b629c9010544a6a7d46be05"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d9b/classpl_game_state.htm#a7fca83680b629c9010544a6a7d46be05">CreateActors</a> ()</td></tr>
<tr class="memdesc:a7fca83680b629c9010544a6a7d46be05 inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an actor with a default window (<a class="el" href="../../d7/d23/classpl_game_state_window.htm" title="A window class that expands a little on plWindow. Default type used by plGameState to create a window...">plGameStateWindow</a>) adds it to the application.  <br /></td></tr>
<tr class="separator:a7fca83680b629c9010544a6a7d46be05 inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a972edf0d7a9aacd90363c45f34d44f87 inherit pro_methods_classpl_game_state" id="r_a972edf0d7a9aacd90363c45f34d44f87"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d6/d5c/classpl_actor.htm">plActor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateXRActor</b> ()</td></tr>
<tr class="memdesc:a972edf0d7a9aacd90363c45f34d44f87 inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an XR Actor if XR is configured and available for the project. <br /></td></tr>
<tr class="separator:a972edf0d7a9aacd90363c45f34d44f87 inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac107f338f56c6718e256d469babfbae4 inherit pro_methods_classpl_game_state" id="r_ac107f338f56c6718e256d469babfbae4"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CreateMainView</b> ()</td></tr>
<tr class="memdesc:ac107f338f56c6718e256d469babfbae4 inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a default main view. <br /></td></tr>
<tr class="separator:ac107f338f56c6718e256d469babfbae4 inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0888317eebcfa2f76a652cc987957f9 inherit pro_methods_classpl_game_state" id="r_aa0888317eebcfa2f76a652cc987957f9"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>ChangeMainWorld</b> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pNewMainWorld)</td></tr>
<tr class="memdesc:aa0888317eebcfa2f76a652cc987957f9 inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets m_pMainWorld and updates m_pMainView to use that new world for rendering. <br /></td></tr>
<tr class="separator:aa0888317eebcfa2f76a652cc987957f9 inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91dcf621f5fe1e2fdbd3b1548475a12b inherit pro_methods_classpl_game_state" id="r_a91dcf621f5fe1e2fdbd3b1548475a12b"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ConfigureMainCamera</b> ()</td></tr>
<tr class="memdesc:a91dcf621f5fe1e2fdbd3b1548475a12b inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets up m_MainCamera for first use. <br /></td></tr>
<tr class="separator:a91dcf621f5fe1e2fdbd3b1548475a12b inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1a17873ca5cd9a0dd13e77359f40e60 inherit pro_methods_classpl_game_state" id="r_aa1a17873ca5cd9a0dd13e77359f40e60"><td class="memItemLeft" align="right" valign="top">
virtual <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../df/d28/classpl_window.htm">plWindow</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateMainWindow</b> ()</td></tr>
<tr class="memdesc:aa1a17873ca5cd9a0dd13e77359f40e60 inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to modify the default window creation behavior. Called by <a class="el" href="../../db/d9b/classpl_game_state.htm#a7fca83680b629c9010544a6a7d46be05" title="Creates an actor with a default window (plGameStateWindow) adds it to the application.">CreateActors()</a>. <br /></td></tr>
<tr class="separator:aa1a17873ca5cd9a0dd13e77359f40e60 inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae32a3b57a92efc7d86943f8b50c5490a inherit pro_methods_classpl_game_state" id="r_ae32a3b57a92efc7d86943f8b50c5490a"><td class="memItemLeft" align="right" valign="top">
virtual <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d5/d9d/classpl_window_output_target_g_a_l.htm">plWindowOutputTargetGAL</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateMainOutputTarget</b> (<a class="el" href="../../df/d28/classpl_window.htm">plWindow</a> *pMainWindow)</td></tr>
<tr class="memdesc:ae32a3b57a92efc7d86943f8b50c5490a inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to modify the default output target creation behavior. Called by <a class="el" href="../../db/d9b/classpl_game_state.htm#a7fca83680b629c9010544a6a7d46be05" title="Creates an actor with a default window (plGameStateWindow) adds it to the application.">CreateActors()</a>. <br /></td></tr>
<tr class="separator:ae32a3b57a92efc7d86943f8b50c5490a inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75071a4b6823bac38cfc891a00a8a2eb inherit pro_methods_classpl_game_state" id="r_a75071a4b6823bac38cfc891a00a8a2eb"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>SetupMainView</b> (<a class="el" href="../../d6/d88/classpl_g_a_l_swap_chain_handle.htm">plGALSwapChainHandle</a> hSwapChain, <a class="el" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a> viewportSize)</td></tr>
<tr class="memdesc:a75071a4b6823bac38cfc891a00a8a2eb inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a default render view. Unless overridden, <a class="el" href="../../db/d9b/classpl_game_state.htm#a0a8eea1595495fd55a2adc678ccc5f89" title="When a game state was chosen, it gets activated through this function.">OnActivation()</a> will do this for the main window. <br /></td></tr>
<tr class="separator:a75071a4b6823bac38cfc891a00a8a2eb inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb469968dadc03ef3df27b9ab715fc8a inherit pro_methods_classpl_game_state" id="r_afb469968dadc03ef3df27b9ab715fc8a"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ConfigureMainWindowInputDevices</b> (<a class="el" href="../../df/d28/classpl_window.htm">plWindow</a> *pWindow)</td></tr>
<tr class="memdesc:afb469968dadc03ef3df27b9ab715fc8a inherit pro_methods_classpl_game_state"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures available input devices, e.g. sets mouse speed, cursor clipping, etc. Called by <a class="el" href="../../db/d9b/classpl_game_state.htm#a7fca83680b629c9010544a6a7d46be05" title="Creates an actor with a default window (plGameStateWindow) adds it to the application.">CreateActors()</a> with the result of <a class="el" href="../../db/d9b/classpl_game_state.htm#aa1a17873ca5cd9a0dd13e77359f40e60" title="Override this to modify the default window creation behavior. Called by CreateActors().">CreateMainWindow()</a>. <br /></td></tr>
<tr class="separator:afb469968dadc03ef3df27b9ab715fc8a inherit pro_methods_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aecc3773f5295493d4a6f6424bff40457" id="r_aecc3773f5295493d4a6f6424bff40457"><td class="memItemLeft" align="right" valign="top"><a id="aecc3773f5295493d4a6f6424bff40457" name="aecc3773f5295493d4a6f6424bff40457"></a>
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iActiveCameraComponentIndex</b></td></tr>
<tr class="separator:aecc3773f5295493d4a6f6424bff40457"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41d717a23495c41b010c20af4798a87c" id="r_a41d717a23495c41b010c20af4798a87c"><td class="memItemLeft" align="right" valign="top"><a id="a41d717a23495c41b010c20af4798a87c" name="a41d717a23495c41b010c20af4798a87c"></a>
<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_pActiveWorld</b></td></tr>
<tr class="separator:a41d717a23495c41b010c20af4798a87c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ffbe9ebc391ef88efe63519b1087996" id="r_a0ffbe9ebc391ef88efe63519b1087996"><td class="memItemLeft" align="right" valign="top"><a id="a0ffbe9ebc391ef88efe63519b1087996" name="a0ffbe9ebc391ef88efe63519b1087996"></a>
<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../db/d83/classpl_scene_load_utility.htm">plSceneLoadUtility</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_pSceneToLoad</b></td></tr>
<tr class="separator:a0ffbe9ebc391ef88efe63519b1087996"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ba6bcce18d301b2ac98227060d29d0f" id="r_a0ba6bcce18d301b2ac98227060d29d0f"><td class="memItemLeft" align="right" valign="top"><a id="a0ba6bcce18d301b2ac98227060d29d0f" name="a0ba6bcce18d301b2ac98227060d29d0f"></a>
State&#160;</td><td class="memItemRight" valign="bottom"><b>m_State</b> = State::Ok</td></tr>
<tr class="separator:a0ba6bcce18d301b2ac98227060d29d0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d60569b302117c745ca2d3ed8275747" id="r_a2d60569b302117c745ca2d3ed8275747"><td class="memItemLeft" align="right" valign="top"><a id="a2d60569b302117c745ca2d3ed8275747" name="a2d60569b302117c745ca2d3ed8275747"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bShowMenu</b> = false</td></tr>
<tr class="separator:a2d60569b302117c745ca2d3ed8275747"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a327066f40bd41cde69f95ec75d613943" id="r_a327066f40bd41cde69f95ec75d613943"><td class="memItemLeft" align="right" valign="top"><a id="a327066f40bd41cde69f95ec75d613943" name="a327066f40bd41cde69f95ec75d613943"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bEnableSceneSelectionMenu</b> = true</td></tr>
<tr class="separator:a327066f40bd41cde69f95ec75d613943"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb5e1304f88bac5930544419d8f31e66" id="r_adb5e1304f88bac5930544419d8f31e66"><td class="memItemLeft" align="right" valign="top"><a id="adb5e1304f88bac5930544419d8f31e66" name="adb5e1304f88bac5930544419d8f31e66"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bEnableFreeCameras</b> = true</td></tr>
<tr class="separator:adb5e1304f88bac5930544419d8f31e66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4ed02f1cb2e9ca873fde62b375943de" id="r_ab4ed02f1cb2e9ca873fde62b375943de"><td class="memItemLeft" align="right" valign="top"><a id="ab4ed02f1cb2e9ca873fde62b375943de" name="ab4ed02f1cb2e9ca873fde62b375943de"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bIsInLoadingScreen</b> = false</td></tr>
<tr class="separator:ab4ed02f1cb2e9ca873fde62b375943de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28bacdf8e23936b542f1b2c17136805e" id="r_a28bacdf8e23936b542f1b2c17136805e"><td class="memItemLeft" align="right" valign="top"><a id="a28bacdf8e23936b542f1b2c17136805e" name="a28bacdf8e23936b542f1b2c17136805e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bAutoSwitchToLoadedScene</b> = true</td></tr>
<tr class="separator:a28bacdf8e23936b542f1b2c17136805e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3119d902fe2b30d1fd0c0cb48184628d" id="r_a3119d902fe2b30d1fd0c0cb48184628d"><td class="memItemLeft" align="right" valign="top"><a id="a3119d902fe2b30d1fd0c0cb48184628d" name="a3119d902fe2b30d1fd0c0cb48184628d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bCheckedForScenes</b> = false</td></tr>
<tr class="separator:a3119d902fe2b30d1fd0c0cb48184628d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8cfb348b9e5ad29ab1e33a5f9606e374" id="r_a8cfb348b9e5ad29ab1e33a5f9606e374"><td class="memItemLeft" align="right" valign="top"><a id="a8cfb348b9e5ad29ab1e33a5f9606e374" name="a8cfb348b9e5ad29ab1e33a5f9606e374"></a>
<a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_AvailableScenes</b></td></tr>
<tr class="separator:a8cfb348b9e5ad29ab1e33a5f9606e374"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cd15f45a6b6604e5c61a3decb034ccd" id="r_a1cd15f45a6b6604e5c61a3decb034ccd"><td class="memItemLeft" align="right" valign="top"><a id="a1cd15f45a6b6604e5c61a3decb034ccd" name="a1cd15f45a6b6604e5c61a3decb034ccd"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiSelectedScene</b> = 0</td></tr>
<tr class="separator:a1cd15f45a6b6604e5c61a3decb034ccd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab008238298937aa6bb381066f3777e4e" id="r_ab008238298937aa6bb381066f3777e4e"><td class="memItemLeft" align="right" valign="top"><a id="ab008238298937aa6bb381066f3777e4e" name="ab008238298937aa6bb381066f3777e4e"></a>
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sTitleOfLoadingScene</b></td></tr>
<tr class="separator:ab008238298937aa6bb381066f3777e4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae5d4d568278dc28f5e70f516f42c1f4" id="r_aae5d4d568278dc28f5e70f516f42c1f4"><td class="memItemLeft" align="right" valign="top"><a id="aae5d4d568278dc28f5e70f516f42c1f4" name="aae5d4d568278dc28f5e70f516f42c1f4"></a>
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sTitleOfActiveScene</b></td></tr>
<tr class="separator:aae5d4d568278dc28f5e70f516f42c1f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_game_state"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_game_state')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../db/d9b/classpl_game_state.htm">plGameState</a></td></tr>
<tr class="memitem:a22eb7dfb247e8fd3445a3db4d0af9cd6 inherit pro_attribs_classpl_game_state" id="r_a22eb7dfb247e8fd3445a3db4d0af9cd6"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d7/d9c/classpl_view_handle.htm">plViewHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hMainView</b></td></tr>
<tr class="separator:a22eb7dfb247e8fd3445a3db4d0af9cd6 inherit pro_attribs_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8944467e5fdadbe7cda04491775353d inherit pro_attribs_classpl_game_state" id="r_ac8944467e5fdadbe7cda04491775353d"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pMainWorld</b> = nullptr</td></tr>
<tr class="separator:ac8944467e5fdadbe7cda04491775353d inherit pro_attribs_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a5f810766b26228a929ad4eeeda143b inherit pro_attribs_classpl_game_state" id="r_a7a5f810766b26228a929ad4eeeda143b"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_MainCamera</b></td></tr>
<tr class="separator:a7a5f810766b26228a929ad4eeeda143b inherit pro_attribs_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8086118831452fa48cdea9493086e1d inherit pro_attribs_classpl_game_state" id="r_ae8086118831452fa48cdea9493086e1d"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bStateWantsToQuit</b> = false</td></tr>
<tr class="separator:ae8086118831452fa48cdea9493086e1d inherit pro_attribs_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d8a5edff534633078b48f17f1fb4018 inherit pro_attribs_classpl_game_state" id="r_a2d8a5edff534633078b48f17f1fb4018"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bXREnabled</b> = false</td></tr>
<tr class="separator:a2d8a5edff534633078b48f17f1fb4018 inherit pro_attribs_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0684a0055b1c82f5a777010a7d0f934 inherit pro_attribs_classpl_game_state" id="r_aa0684a0055b1c82f5a777010a7d0f934"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bXRRemotingEnabled</b> = false</td></tr>
<tr class="separator:aa0684a0055b1c82f5a777010a7d0f934 inherit pro_attribs_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d4561998037fe6532e67e2177a9020f inherit pro_attribs_classpl_game_state" id="r_a9d4561998037fe6532e67e2177a9020f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm">plDummyXR</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_pDummyXR</b></td></tr>
<tr class="separator:a9d4561998037fe6532e67e2177a9020f inherit pro_attribs_classpl_game_state"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_game_state_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_game_state_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d7/dbf/classpl_game_state_base.htm">plGameStateBase</a></td></tr>
<tr class="memitem:af8790ecc86f218e2b41ac95890fbdde4 inherit pro_attribs_classpl_game_state_base" id="r_af8790ecc86f218e2b41ac95890fbdde4"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bStateWantsToQuit</b> = false</td></tr>
<tr class="separator:af8790ecc86f218e2b41ac95890fbdde4 inherit pro_attribs_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../d6/da5/classpl_fallback_game_state.htm" title="plFallbackGameState is an plGameState that can handle existing worlds when no other game state is ava...">plFallbackGameState</a> is an <a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> that can handle existing worlds when no other game state is available. </p>
<p>This game state returns a priority of 'Fallback' in <a class="el" href="#a30ddd557f74a97d770f1ea20a265fe06" title="Returns plGameStatePriority::Fallback.">DeterminePriority()</a> and therefore only takes over when no other game state is available. It implements a simple first person camera to fly around a scene.</p>
<p>This game state cannot be used in stand-alone applications that require the game state to create a new world. It is mainly for plEditor and plPlayer which make sure that a world already exists. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a2c60fcdc74fb703b9cbc2580ce52d648" name="a2c60fcdc74fb703b9cbc2580ce52d648"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c60fcdc74fb703b9cbc2580ce52d648">&#9670;&#160;</a></span>AfterWorldUpdate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plFallbackGameState::AfterWorldUpdate </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called once each frame after the worlds have been updated. </p>

<p>Reimplemented from <a class="el" href="../../d7/dbf/classpl_game_state_base.htm#a7953f824240bfbcc9b198154c8981fa5">plGameStateBase</a>.</p>

</div>
</div>
<a id="aaf583543d9987a1fc8c4697bad403767" name="aaf583543d9987a1fc8c4697bad403767"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaf583543d9987a1fc8c4697bad403767">&#9670;&#160;</a></span>ConfigureInputActions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plFallbackGameState::ConfigureInputActions </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds custom input actions, if necessary. Unless overridden <a class="el" href="#a23befbbb17e472325ff36136379d2d78" title="When a game state was chosen, it gets activated through this function.">OnActivation()</a> will call this. </p>

<p>Reimplemented from <a class="el" href="../../db/d9b/classpl_game_state.htm#a69497fb9665fb7f421f290e04ed65dc7">plGameState</a>.</p>

</div>
</div>
<a id="a30ddd557f74a97d770f1ea20a265fe06" name="a30ddd557f74a97d770f1ea20a265fe06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a30ddd557f74a97d770f1ea20a265fe06">&#9670;&#160;</a></span>DeterminePriority()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">plGameStatePriority plFallbackGameState::DeterminePriority </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *</td>          <td class="paramname"><span class="paramname"><em>pWorld</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns plGameStatePriority::Fallback. </p>

<p>Implements <a class="el" href="../../d7/dbf/classpl_game_state_base.htm#abe9ed8e3c621e75aca2b3d92b6ece064">plGameStateBase</a>.</p>

</div>
</div>
<a id="ae96504eb3550ddc89a4df8a619cd1a49" name="ae96504eb3550ddc89a4df8a619cd1a49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae96504eb3550ddc89a4df8a619cd1a49">&#9670;&#160;</a></span>EnableFreeCameras()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plFallbackGameState::EnableFreeCameras </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bEnable</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If disabled, moving around a scene with a free camera won't be possible. </p>
<p>Also switching between scene cameras with Page Up/Down will be disabled. </p>

</div>
</div>
<a id="a23befbbb17e472325ff36136379d2d78" name="a23befbbb17e472325ff36136379d2d78"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23befbbb17e472325ff36136379d2d78">&#9670;&#160;</a></span>OnActivation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plFallbackGameState::OnActivation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *</td>          <td class="paramname"><span class="paramname"><em>pWorld</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> *</td>          <td class="paramname"><span class="paramname"><em>pStartPosition</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>When a game state was chosen, it gets activated through this function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pWorld</td><td>The game state is supposed to operate on the given world. In a stand-alone application pWorld will always be nullptr and the game state is expected to create worlds itself. When run inside the editor, pWorld will already exist and the game state is expected to work on it.</td></tr>
    <tr><td class="paramname">pStartPosition</td><td>An optional transform for the 'player object' to start at. Usually nullptr, but may be set by the editor to relocate or create the player object at the given destination. </td></tr>
  </table>
  </dd>
</dl>

<p>Reimplemented from <a class="el" href="../../db/d9b/classpl_game_state.htm#a0a8eea1595495fd55a2adc678ccc5f89">plGameState</a>.</p>

</div>
</div>
<a id="ad5085590e3bc800883eb8581aff7971d" name="ad5085590e3bc800883eb8581aff7971d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad5085590e3bc800883eb8581aff7971d">&#9670;&#160;</a></span>OnDeactivation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plFallbackGameState::OnDeactivation </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the game state is being shut down. </p>

<p>Reimplemented from <a class="el" href="../../db/d9b/classpl_game_state.htm#a6127fffcdc7d6dc3d3c76b61c9abe264">plGameState</a>.</p>

</div>
</div>
<a id="a780a1d5df2821f665b90181da76e533e" name="a780a1d5df2821f665b90181da76e533e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a780a1d5df2821f665b90181da76e533e">&#9670;&#160;</a></span>ProcessInput()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plFallbackGameState::ProcessInput </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called once per game update. Should handle input updates here. </p>

<p>Reimplemented from <a class="el" href="../../d7/dbf/classpl_game_state_base.htm#a9e376ed2af5b56b422f2942559b9cacb">plGameStateBase</a>.</p>

</div>
</div>
<a id="a45988eee9be177ccdcac1ba854adb1cd" name="a45988eee9be177ccdcac1ba854adb1cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45988eee9be177ccdcac1ba854adb1cd">&#9670;&#160;</a></span>SpawnPlayer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plFallbackGameState::SpawnPlayer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> *</td>          <td class="paramname"><span class="paramname"><em>pStartPosition</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overridable function that may create a player object. </p>
<p>By default called by <a class="el" href="#a23befbbb17e472325ff36136379d2d78" title="When a game state was chosen, it gets activated through this function.">OnActivation()</a>. The default implementation will search the world for plPlayerStartComponent's and instantiate the given player prefab at one of those locations. If pStartPosition is not nullptr, it will be used as the spawn position for the player prefab, otherwise the location of the plPlayerStartComponent will be used.</p>
<p>Returns PL_SUCCESS if a prefab was spawned, PL_FAILURE if nothing was done. </p>

<p>Reimplemented from <a class="el" href="../../db/d9b/classpl_game_state.htm#ade992af6c462ad739afc22b54023d461">plGameState</a>.</p>

</div>
</div>
<a id="ada60901672428a7ddefc9b4e7af5744c" name="ada60901672428a7ddefc9b4e7af5744c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada60901672428a7ddefc9b4e7af5744c">&#9670;&#160;</a></span>StartSceneLoading()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plFallbackGameState::StartSceneLoading </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sSceneFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPreloadCollection</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts loading a scene in the background. </p>
<p>If available, a collection can be provided. Resources referenced in the collection will be fully preloaded first and then the scene is loaded. This is the only way to get a proper estimation of loading progress and is necessary to get a smooth start, otherwise the engine will have to load resources on-demand, many of which will be needed during the first frame. </p>

</div>
</div>
<a id="a801a6041550fd075bc506517473afd86" name="a801a6041550fd075bc506517473afd86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a801a6041550fd075bc506517473afd86">&#9670;&#160;</a></span>SwitchToLoadingScreen()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plFallbackGameState::SwitchToLoadingScreen </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new world that's used as a temporary loading screen while waiting for loading of another world to finish. </p>
<p>Usually this world would be set up in code and would be very quick to create. By default an entirely empty world is created. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/GameEngine/GameState/<a class="el" href="../../d3/d22/_fallback_game_state_8h_source.htm">FallbackGameState.h</a></li>
<li>Code/Engine/GameEngine/GameState/Implementation/<b>FallbackGameState.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/da5/classpl_fallback_game_state.htm">plFallbackGameState</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
