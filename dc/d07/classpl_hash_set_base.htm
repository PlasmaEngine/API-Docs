<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plHashSetBase&lt; KeyType, Hasher &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dc/d07/classpl_hash_set_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../de/d62/classpl_hash_set_base-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plHashSetBase&lt; KeyType, Hasher &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Implementation of a hashset.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d2/dfc/_hash_set_8h_source.htm">HashSet.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plHashSetBase&lt; KeyType, Hasher &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../dc/d4e/classpl_hash_set_base__inherit__graph.png" border="0" usemap="#apl_hash_set_base_3_01_key_type_00_01_hasher_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_hash_set_base_3_01_key_type_00_01_hasher_01_4_inherit__map" id="apl_hash_set_base_3_01_key_type_00_01_hasher_01_4_inherit__map">
<area shape="rect" title="Implementation of a hashset." alt="" coords="5,267,184,309"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="275,5,416,32"/>
<area shape="poly" title=" " alt="" coords="103,251,120,203,146,146,182,89,205,64,230,42,251,30,274,22,276,27,253,35,233,46,209,68,187,93,151,149,125,205,108,252"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="253,56,439,83"/>
<area shape="poly" title=" " alt="" coords="109,251,128,213,155,170,189,128,230,92,253,81,255,86,233,97,193,132,159,173,133,216,113,253"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="241,107,451,149"/>
<area shape="poly" title=" " alt="" coords="121,253,169,205,199,180,230,159,255,147,257,152,233,164,202,184,173,209,125,257"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="270,173,422,200"/>
<area shape="poly" title=" " alt="" coords="140,256,183,231,231,210,269,198,270,203,233,214,185,236,143,261"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="253,224,439,251"/>
<area shape="poly" title=" " alt="" coords="198,264,275,249,276,254,199,270"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="260,275,432,301"/>
<area shape="poly" title=" " alt="" coords="199,285,259,285,259,291,199,291"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="232,325,460,352"/>
<area shape="poly" title=" " alt="" coords="199,306,276,322,275,327,198,312"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="249,376,443,419"/>
<area shape="poly" title=" " alt="" coords="144,315,187,339,233,362,263,373,261,378,231,366,184,344,142,320"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="235,443,456,469"/>
<area shape="poly" title=" " alt="" coords="121,320,168,377,199,405,233,428,259,440,256,444,230,433,196,409,165,380,117,324"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="247,493,445,536"/>
<area shape="poly" title=" " alt="" coords="114,322,133,359,160,402,194,443,233,479,253,491,250,495,230,483,190,447,156,405,129,362,109,324"/>
<area shape="rect" href="../../de/dad/classpl_hash_set.htm" title=" " alt="" coords="253,560,439,603"/>
<area shape="poly" title=" " alt="" coords="108,324,124,374,150,434,186,494,208,522,233,546,254,559,251,564,230,550,204,525,182,498,145,436,119,376,102,325"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const iterator.  <a href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a08aecdf49744c6b2f72465b10b4cda01" id="r_a08aecdf49744c6b2f72465b10b4cda01"><td class="memItemLeft" align="right" valign="top"><a id="a08aecdf49744c6b2f72465b10b4cda01" name="a08aecdf49744c6b2f72465b10b4cda01"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a08aecdf49744c6b2f72465b10b4cda01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this table to another table. <br /></td></tr>
<tr class="separator:a08aecdf49744c6b2f72465b10b4cda01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc529f30725693fb6c60d999f7592724" id="r_adc529f30725693fb6c60d999f7592724"><td class="memItemLeft" align="right" valign="top"><a id="adc529f30725693fb6c60d999f7592724" name="adc529f30725693fb6c60d999f7592724"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;)</td></tr>
<tr class="separator:adc529f30725693fb6c60d999f7592724"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbd446a2ff9a7e3807ed930798fe648d" id="r_abbd446a2ff9a7e3807ed930798fe648d"><td class="memItemLeft" align="right" valign="top"><a id="abbd446a2ff9a7e3807ed930798fe648d" name="abbd446a2ff9a7e3807ed930798fe648d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (plUInt32 uiCapacity)</td></tr>
<tr class="memdesc:abbd446a2ff9a7e3807ed930798fe648d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the hashset by over-allocating the internal storage so that the load factor is lower or equal to 60% when inserting the given number of entries. <br /></td></tr>
<tr class="separator:abbd446a2ff9a7e3807ed930798fe648d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6debf422dce33c8f57d878cb4df46737" id="r_a6debf422dce33c8f57d878cb4df46737"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6debf422dce33c8f57d878cb4df46737">Compact</a> ()</td></tr>
<tr class="memdesc:a6debf422dce33c8f57d878cb4df46737"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the hashset to avoid wasting memory.  <br /></td></tr>
<tr class="separator:a6debf422dce33c8f57d878cb4df46737"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab79c135d60cb442f7bb33098f9c83fee" id="r_ab79c135d60cb442f7bb33098f9c83fee"><td class="memItemLeft" align="right" valign="top"><a id="ab79c135d60cb442f7bb33098f9c83fee" name="ab79c135d60cb442f7bb33098f9c83fee"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:ab79c135d60cb442f7bb33098f9c83fee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active entries in the table. <br /></td></tr>
<tr class="separator:ab79c135d60cb442f7bb33098f9c83fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8756cb8af8d2643cb3276206e5c0333d" id="r_a8756cb8af8d2643cb3276206e5c0333d"><td class="memItemLeft" align="right" valign="top"><a id="a8756cb8af8d2643cb3276206e5c0333d" name="a8756cb8af8d2643cb3276206e5c0333d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:a8756cb8af8d2643cb3276206e5c0333d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the hashset does not contain any elements. <br /></td></tr>
<tr class="separator:a8756cb8af8d2643cb3276206e5c0333d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28cd256a6fae5853fbe24ce8eae3c9a4" id="r_a28cd256a6fae5853fbe24ce8eae3c9a4"><td class="memItemLeft" align="right" valign="top"><a id="a28cd256a6fae5853fbe24ce8eae3c9a4" name="a28cd256a6fae5853fbe24ce8eae3c9a4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a28cd256a6fae5853fbe24ce8eae3c9a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the table. <br /></td></tr>
<tr class="separator:a28cd256a6fae5853fbe24ce8eae3c9a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50640c77a1b350a7385a76e555c07700" id="r_a50640c77a1b350a7385a76e555c07700"><td class="memTemplParams" colspan="2"><a id="a50640c77a1b350a7385a76e555c07700" name="a50640c77a1b350a7385a76e555c07700"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a50640c77a1b350a7385a76e555c07700"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Insert</b> (CompatibleKeyType &amp;&amp;key)</td></tr>
<tr class="memdesc:a50640c77a1b350a7385a76e555c07700"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key. Returns whether the key was already existing. <br /></td></tr>
<tr class="separator:a50640c77a1b350a7385a76e555c07700"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affbdc1fba7458c4b8fe050aa2eade5fb" id="r_affbdc1fba7458c4b8fe050aa2eade5fb"><td class="memTemplParams" colspan="2"><a id="affbdc1fba7458c4b8fe050aa2eade5fb" name="affbdc1fba7458c4b8fe050aa2eade5fb"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:affbdc1fba7458c4b8fe050aa2eade5fb"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Remove</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:affbdc1fba7458c4b8fe050aa2eade5fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the entry with the given key. Returns if an entry was removed. <br /></td></tr>
<tr class="separator:affbdc1fba7458c4b8fe050aa2eade5fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a737bb208eb6af00d1785d1d2d27fb02e" id="r_a737bb208eb6af00d1785d1d2d27fb02e"><td class="memItemLeft" align="right" valign="top"><a id="a737bb208eb6af00d1785d1d2d27fb02e" name="a737bb208eb6af00d1785d1d2d27fb02e"></a>
<a class="el" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Remove</b> (const <a class="el" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a> &amp;pos)</td></tr>
<tr class="memdesc:a737bb208eb6af00d1785d1d2d27fb02e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key at the given Iterator. Returns an iterator to the element after the given iterator. <br /></td></tr>
<tr class="separator:a737bb208eb6af00d1785d1d2d27fb02e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e3a9521099f21f265f5f54a76c24fb5" id="r_a0e3a9521099f21f265f5f54a76c24fb5"><td class="memTemplParams" colspan="2"><a id="a0e3a9521099f21f265f5f54a76c24fb5" name="a0e3a9521099f21f265f5f54a76c24fb5"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a0e3a9521099f21f265f5f54a76c24fb5"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a0e3a9521099f21f265f5f54a76c24fb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if an entry with given key exists in the table. <br /></td></tr>
<tr class="separator:a0e3a9521099f21f265f5f54a76c24fb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9d51804256eed67c8a0ac3b75a5571d" id="r_aa9d51804256eed67c8a0ac3b75a5571d"><td class="memItemLeft" align="right" valign="top"><a id="aa9d51804256eed67c8a0ac3b75a5571d" name="aa9d51804256eed67c8a0ac3b75a5571d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>ContainsSet</b> (const <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand) const</td></tr>
<tr class="memdesc:aa9d51804256eed67c8a0ac3b75a5571d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all keys of the given set are in the container. <br /></td></tr>
<tr class="separator:aa9d51804256eed67c8a0ac3b75a5571d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7088a82693b353b2e36c9b615436d328" id="r_a7088a82693b353b2e36c9b615436d328"><td class="memItemLeft" align="right" valign="top"><a id="a7088a82693b353b2e36c9b615436d328" name="a7088a82693b353b2e36c9b615436d328"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Union</b> (const <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:a7088a82693b353b2e36c9b615436d328"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the union of itself and the operand. <br /></td></tr>
<tr class="separator:a7088a82693b353b2e36c9b615436d328"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3b092a011fc5a1dde8afa4e1a7520f2" id="r_ac3b092a011fc5a1dde8afa4e1a7520f2"><td class="memItemLeft" align="right" valign="top"><a id="ac3b092a011fc5a1dde8afa4e1a7520f2" name="ac3b092a011fc5a1dde8afa4e1a7520f2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Difference</b> (const <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:ac3b092a011fc5a1dde8afa4e1a7520f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the difference of itself and the operand, i.e. subtracts operand. <br /></td></tr>
<tr class="separator:ac3b092a011fc5a1dde8afa4e1a7520f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a535336e17a8ba7b2ae5acde2bf71932d" id="r_a535336e17a8ba7b2ae5acde2bf71932d"><td class="memItemLeft" align="right" valign="top"><a id="a535336e17a8ba7b2ae5acde2bf71932d" name="a535336e17a8ba7b2ae5acde2bf71932d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Intersection</b> (const <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:a535336e17a8ba7b2ae5acde2bf71932d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the intersection of itself and the operand. <br /></td></tr>
<tr class="separator:a535336e17a8ba7b2ae5acde2bf71932d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7f4069968d2aacec10eb279d0744332" id="r_ad7f4069968d2aacec10eb279d0744332"><td class="memItemLeft" align="right" valign="top"><a id="ad7f4069968d2aacec10eb279d0744332" name="ad7f4069968d2aacec10eb279d0744332"></a>
<a class="el" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:ad7f4069968d2aacec10eb279d0744332"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the very first element. <br /></td></tr>
<tr class="separator:ad7f4069968d2aacec10eb279d0744332"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd4edef10c6d85eae6047d8dd5f45000" id="r_afd4edef10c6d85eae6047d8dd5f45000"><td class="memItemLeft" align="right" valign="top"><a id="afd4edef10c6d85eae6047d8dd5f45000" name="afd4edef10c6d85eae6047d8dd5f45000"></a>
<a class="el" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetEndIterator</b> () const</td></tr>
<tr class="memdesc:afd4edef10c6d85eae6047d8dd5f45000"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the first element that is not part of the hashset. Needed to implement range based for loop support. <br /></td></tr>
<tr class="separator:afd4edef10c6d85eae6047d8dd5f45000"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67d2ad89b4a1a03d562023785586fdec" id="r_a67d2ad89b4a1a03d562023785586fdec"><td class="memItemLeft" align="right" valign="top"><a id="a67d2ad89b4a1a03d562023785586fdec" name="a67d2ad89b4a1a03d562023785586fdec"></a>
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:a67d2ad89b4a1a03d562023785586fdec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a67d2ad89b4a1a03d562023785586fdec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad69d61f67c679da0879713133e521570" id="r_ad69d61f67c679da0879713133e521570"><td class="memItemLeft" align="right" valign="top"><a id="ad69d61f67c679da0879713133e521570" name="ad69d61f67c679da0879713133e521570"></a>
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:ad69d61f67c679da0879713133e521570"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:ad69d61f67c679da0879713133e521570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba899f2205c7229f2bf7f9093d2705bb" id="r_aba899f2205c7229f2bf7f9093d2705bb"><td class="memItemLeft" align="right" valign="top"><a id="aba899f2205c7229f2bf7f9093d2705bb" name="aba899f2205c7229f2bf7f9093d2705bb"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;other)</td></tr>
<tr class="memdesc:aba899f2205c7229f2bf7f9093d2705bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:aba899f2205c7229f2bf7f9093d2705bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97ef27573c2c0b82be548e32cd23d624" id="r_a97ef27573c2c0b82be548e32cd23d624"><td class="memTemplParams" colspan="2"><a id="a97ef27573c2c0b82be548e32cd23d624" name="a97ef27573c2c0b82be548e32cd23d624"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a97ef27573c2c0b82be548e32cd23d624"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a97ef27573c2c0b82be548e32cd23d624"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns a <a class="el" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm" title="Const iterator.">ConstIterator</a> to it or an invalid iterator, if no such key is found. O(1) operation. <br /></td></tr>
<tr class="separator:a97ef27573c2c0b82be548e32cd23d624"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b6ff9aea06ac1a2b9fb28b2c240a8fd" id="r_a1b6ff9aea06ac1a2b9fb28b2c240a8fd"><td class="memTemplParams" colspan="2"><a id="a1b6ff9aea06ac1a2b9fb28b2c240a8fd" name="a1b6ff9aea06ac1a2b9fb28b2c240a8fd"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a1b6ff9aea06ac1a2b9fb28b2c240a8fd"><td class="memTemplItemLeft" align="right" valign="top">PL_FORCE_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a1b6ff9aea06ac1a2b9fb28b2c240a8fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc85dfd2de29215c268ce753bbdef474" id="r_afc85dfd2de29215c268ce753bbdef474"><td class="memTemplParams" colspan="2"><a id="afc85dfd2de29215c268ce753bbdef474" name="afc85dfd2de29215c268ce753bbdef474"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:afc85dfd2de29215c268ce753bbdef474"><td class="memTemplItemLeft" align="right" valign="top">PL_FORCE_INLINE <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; K, H &gt;::ConstIterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:afc85dfd2de29215c268ce753bbdef474"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85fa1ff27c52ac4722b904cc08232915" id="r_a85fa1ff27c52ac4722b904cc08232915"><td class="memTemplParams" colspan="2"><a id="a85fa1ff27c52ac4722b904cc08232915" name="a85fa1ff27c52ac4722b904cc08232915"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a85fa1ff27c52ac4722b904cc08232915"><td class="memTemplItemLeft" align="right" valign="top">PL_FORCE_INLINE plUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>FindEntry</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a85fa1ff27c52ac4722b904cc08232915"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ab4320d477a91b6b22ace187e9493dd67" id="r_ab4320d477a91b6b22ace187e9493dd67"><td class="memItemLeft" align="right" valign="top"><a id="ab4320d477a91b6b22ace187e9493dd67" name="ab4320d477a91b6b22ace187e9493dd67"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHashSetBase</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ab4320d477a91b6b22ace187e9493dd67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty hashset. Does not allocate any data yet. <br /></td></tr>
<tr class="separator:ab4320d477a91b6b22ace187e9493dd67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af36f0eddbd6bc223bf6881373b971011" id="r_af36f0eddbd6bc223bf6881373b971011"><td class="memItemLeft" align="right" valign="top"><a id="af36f0eddbd6bc223bf6881373b971011" name="af36f0eddbd6bc223bf6881373b971011"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHashSetBase</b> (const <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:af36f0eddbd6bc223bf6881373b971011"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given hashset. <br /></td></tr>
<tr class="separator:af36f0eddbd6bc223bf6881373b971011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bbff430f1abb2c8d66aeff61a9d51f8" id="r_a1bbff430f1abb2c8d66aeff61a9d51f8"><td class="memItemLeft" align="right" valign="top"><a id="a1bbff430f1abb2c8d66aeff61a9d51f8" name="a1bbff430f1abb2c8d66aeff61a9d51f8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHashSetBase</b> (<a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;&amp;rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a1bbff430f1abb2c8d66aeff61a9d51f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves data from an existing hashtable into this one. <br /></td></tr>
<tr class="separator:a1bbff430f1abb2c8d66aeff61a9d51f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80594120dbadfa53fa7d14ed702df1e7" id="r_a80594120dbadfa53fa7d14ed702df1e7"><td class="memItemLeft" align="right" valign="top"><a id="a80594120dbadfa53fa7d14ed702df1e7" name="a80594120dbadfa53fa7d14ed702df1e7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>~plHashSetBase</b> ()</td></tr>
<tr class="memdesc:a80594120dbadfa53fa7d14ed702df1e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a80594120dbadfa53fa7d14ed702df1e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8249769381fd0c518886d3697b0ef06" id="r_af8249769381fd0c518886d3697b0ef06"><td class="memItemLeft" align="right" valign="top"><a id="af8249769381fd0c518886d3697b0ef06" name="af8249769381fd0c518886d3697b0ef06"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs)</td></tr>
<tr class="memdesc:af8249769381fd0c518886d3697b0ef06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from another hashset into this one. <br /></td></tr>
<tr class="separator:af8249769381fd0c518886d3697b0ef06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca0dd0019b551a18782ea90e05310874" id="r_aca0dd0019b551a18782ea90e05310874"><td class="memItemLeft" align="right" valign="top"><a id="aca0dd0019b551a18782ea90e05310874" name="aca0dd0019b551a18782ea90e05310874"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;&amp;rhs)</td></tr>
<tr class="memdesc:aca0dd0019b551a18782ea90e05310874"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves data from an existing hashset into this one. <br /></td></tr>
<tr class="separator:aca0dd0019b551a18782ea90e05310874"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename KeyType, typename Hasher&gt;<br />
class plHashSetBase&lt; KeyType, Hasher &gt;</div><p>Implementation of a hashset. </p>
<p>The hashset stores values by using the hash as an index into the table. This implementation uses linear-probing to resolve hash collisions which means all values are stored in a linear array. All insertion/erasure/lookup functions take O(1) time if the table does not need to be expanded, which happens when the load gets greater than 60%. The hash function can be customized by providing a Hasher helper class like <a class="el" href="../../db/dd0/structpl_hash_helper.htm" title="Helper struct to calculate the Hash of different types.">plHashHelper</a>. </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../db/dd0/structpl_hash_helper.htm" title="Helper struct to calculate the Hash of different types.">plHashHelper</a> </dd></dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a6debf422dce33c8f57d878cb4df46737" name="a6debf422dce33c8f57d878cb4df46737"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6debf422dce33c8f57d878cb4df46737">&#9670;&#160;</a></span>Compact()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename K , typename H &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt; K, H &gt;::Compact </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tries to compact the hashset to avoid wasting memory. </p>
<p>The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the hashset is empty. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../d2/dfc/_hash_set_8h_source.htm">HashSet.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../df/dbb/_hash_set__inl_8h_source.htm">HashSet_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
