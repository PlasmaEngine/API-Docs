<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plParticleWorldModule Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dc/d81/classpl_particle_world_module.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="../../dd/d9a/classpl_particle_world_module-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plParticleWorldModule Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>This world module stores all particle effect data that is active in a given <a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> instance.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../da/d3c/_particle_world_module_8h_source.htm">ParticleWorldModule.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plParticleWorldModule:</div>
<div class="dyncontent">
<div class="center"><img src="../../de/d8f/classpl_particle_world_module__inherit__graph.png" border="0" usemap="#apl_particle_world_module_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_particle_world_module_inherit__map" id="apl_particle_world_module_inherit__map">
<area shape="rect" title="This world module stores all particle effect data that is active in a given plWorld instance." alt="" coords="5,229,157,256"/>
<area shape="rect" href="../../df/df2/classpl_world_module.htm" title=" " alt="" coords="27,155,135,181"/>
<area shape="poly" title=" " alt="" coords="84,197,84,229,78,229,78,197"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="22,80,140,107"/>
<area shape="poly" title=" " alt="" coords="84,122,84,154,78,154,78,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="42,5,120,32"/>
<area shape="poly" title=" " alt="" coords="84,48,84,80,78,80,78,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abc8c82a8069fc615483783ea92f40103" id="r_abc8c82a8069fc615483783ea92f40103"><td class="memItemLeft" align="right" valign="top"><a id="abc8c82a8069fc615483783ea92f40103" name="abc8c82a8069fc615483783ea92f40103"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plParticleWorldModule</b> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld)</td></tr>
<tr class="separator:abc8c82a8069fc615483783ea92f40103"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c3063843c590c8f0ea0333414321dbc" id="r_a4c3063843c590c8f0ea0333414321dbc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4c3063843c590c8f0ea0333414321dbc">Initialize</a> () override</td></tr>
<tr class="memdesc:a4c3063843c590c8f0ea0333414321dbc"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called after the constructor. A derived type can override this method to do initialization work. Typically this is the method where updates function are registered.  <br /></td></tr>
<tr class="separator:a4c3063843c590c8f0ea0333414321dbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbc888588594eb24aceb1141d1253ef6" id="r_adbc888588594eb24aceb1141d1253ef6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adbc888588594eb24aceb1141d1253ef6">Deinitialize</a> () override</td></tr>
<tr class="memdesc:adbc888588594eb24aceb1141d1253ef6"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called before the destructor. A derived type can override this method to do deinitialization work.  <br /></td></tr>
<tr class="separator:adbc888588594eb24aceb1141d1253ef6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc8c46c79137e078560d8c219f38024a" id="r_afc8c46c79137e078560d8c219f38024a"><td class="memItemLeft" align="right" valign="top"><a id="afc8c46c79137e078560d8c219f38024a" name="afc8c46c79137e078560d8c219f38024a"></a>
<a class="el" href="../../d3/dbf/classpl_particle_effect_handle.htm">plParticleEffectHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CreateEffectInstance</b> (const <a class="el" href="../../d4/db4/classpl_typed_resource_handle.htm">plParticleEffectResourceHandle</a> &amp;hResource, plUInt64 uiRandomSeed, const char *szSharedName, const void *&amp;inout_pSharedInstanceOwner, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../df/d0a/structpl_particle_effect_float_param.htm">plParticleEffectFloatParam</a> &gt; floatParams, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../d6/d5e/structpl_particle_effect_color_param.htm">plParticleEffectColorParam</a> &gt; colorParams)</td></tr>
<tr class="separator:afc8c46c79137e078560d8c219f38024a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa429813cef950e8fbc593a974491c86b" id="r_aa429813cef950e8fbc593a974491c86b"><td class="memItemLeft" align="right" valign="top"><a id="aa429813cef950e8fbc593a974491c86b" name="aa429813cef950e8fbc593a974491c86b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DestroyEffectInstance</b> (const <a class="el" href="../../d3/dbf/classpl_particle_effect_handle.htm">plParticleEffectHandle</a> &amp;hEffect, bool bInterruptImmediately, const void *pSharedInstanceOwner)</td></tr>
<tr class="memdesc:aa429813cef950e8fbc593a974491c86b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This does not actually the effect, it first stops it from emitting and destroys it once all particles have actually died of old age. <br /></td></tr>
<tr class="separator:aa429813cef950e8fbc593a974491c86b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac71415be30fa092fbca6f688a1a81dce" id="r_ac71415be30fa092fbca6f688a1a81dce"><td class="memItemLeft" align="right" valign="top"><a id="ac71415be30fa092fbca6f688a1a81dce" name="ac71415be30fa092fbca6f688a1a81dce"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>TryGetEffectInstance</b> (const <a class="el" href="../../d3/dbf/classpl_particle_effect_handle.htm">plParticleEffectHandle</a> &amp;hEffect, <a class="el" href="../../d3/dda/classpl_particle_effect_instance.htm">plParticleEffectInstance</a> *&amp;out_pEffect)</td></tr>
<tr class="separator:ac71415be30fa092fbca6f688a1a81dce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9aa6d3bc06831c8a12a22c75cb6d46e" id="r_ae9aa6d3bc06831c8a12a22c75cb6d46e"><td class="memItemLeft" align="right" valign="top"><a id="ae9aa6d3bc06831c8a12a22c75cb6d46e" name="ae9aa6d3bc06831c8a12a22c75cb6d46e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>TryGetEffectInstance</b> (const <a class="el" href="../../d3/dbf/classpl_particle_effect_handle.htm">plParticleEffectHandle</a> &amp;hEffect, const <a class="el" href="../../d3/dda/classpl_particle_effect_instance.htm">plParticleEffectInstance</a> *&amp;out_pEffect) const</td></tr>
<tr class="separator:ae9aa6d3bc06831c8a12a22c75cb6d46e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988674ecc0fefd8adda9ddfab324f990" id="r_a988674ecc0fefd8adda9ddfab324f990"><td class="memItemLeft" align="right" valign="top"><a id="a988674ecc0fefd8adda9ddfab324f990" name="a988674ecc0fefd8adda9ddfab324f990"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ExtractEffectRenderData</b> (const <a class="el" href="../../d3/dda/classpl_particle_effect_instance.htm">plParticleEffectInstance</a> *pEffect, <a class="el" href="../../d1/de3/structpl_msg_extract_render_data.htm">plMsgExtractRenderData</a> &amp;ref_msg, const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;systemTransform) const</td></tr>
<tr class="memdesc:a988674ecc0fefd8adda9ddfab324f990"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts render data for the given effect. <br /></td></tr>
<tr class="separator:a988674ecc0fefd8adda9ddfab324f990"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b3ff3ee17309995285c8c42a9baaf3b" id="r_a6b3ff3ee17309995285c8c42a9baaf3b"><td class="memItemLeft" align="right" valign="top"><a id="a6b3ff3ee17309995285c8c42a9baaf3b" name="a6b3ff3ee17309995285c8c42a9baaf3b"></a>
<a class="el" href="../../dc/d8c/classpl_particle_system_instance.htm">plParticleSystemInstance</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CreateSystemInstance</b> (plUInt32 uiMaxParticles, <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld, <a class="el" href="../../d3/dda/classpl_particle_effect_instance.htm">plParticleEffectInstance</a> *pOwnerEffect, float fSpawnMultiplier)</td></tr>
<tr class="separator:a6b3ff3ee17309995285c8c42a9baaf3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb21803e8c4a0834182dd89bcb1f39e9" id="r_acb21803e8c4a0834182dd89bcb1f39e9"><td class="memItemLeft" align="right" valign="top"><a id="acb21803e8c4a0834182dd89bcb1f39e9" name="acb21803e8c4a0834182dd89bcb1f39e9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DestroySystemInstance</b> (<a class="el" href="../../dc/d8c/classpl_particle_system_instance.htm">plParticleSystemInstance</a> *pInstance)</td></tr>
<tr class="separator:acb21803e8c4a0834182dd89bcb1f39e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95f7fc8fed50b5025621de52d35bd7d2" id="r_a95f7fc8fed50b5025621de52d35bd7d2"><td class="memItemLeft" align="right" valign="top"><a id="a95f7fc8fed50b5025621de52d35bd7d2" name="a95f7fc8fed50b5025621de52d35bd7d2"></a>
<a class="el" href="../../de/d89/classpl_particle_stream.htm">plParticleStream</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CreateStreamDefaultInitializer</b> (<a class="el" href="../../dc/d8c/classpl_particle_system_instance.htm">plParticleSystemInstance</a> *pOwner, const char *szFullStreamName) const</td></tr>
<tr class="separator:a95f7fc8fed50b5025621de52d35bd7d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a762b5c3432bdaabf564b83ff61275bc1" id="r_a762b5c3432bdaabf564b83ff61275bc1"><td class="memItemLeft" align="right" valign="top"><a id="a762b5c3432bdaabf564b83ff61275bc1" name="a762b5c3432bdaabf564b83ff61275bc1"></a>
<a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetCachedWorldModule</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pRtti) const</td></tr>
<tr class="memdesc:a762b5c3432bdaabf564b83ff61275bc1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be called at any time (e.g. during plParticleBehaviorFactory::CopyBehaviorProperties()) to query a previously cached world module, even if that happens on a thread which would not be allowed to query this from the <a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> at that time. <br /></td></tr>
<tr class="separator:a762b5c3432bdaabf564b83ff61275bc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0191de796050c7a513f3365bb6ba03c" id="r_ab0191de796050c7a513f3365bb6ba03c"><td class="memTemplParams" colspan="2"><a id="ab0191de796050c7a513f3365bb6ba03c" name="ab0191de796050c7a513f3365bb6ba03c"></a>
template&lt;class T &gt; </td></tr>
<tr class="memitem:ab0191de796050c7a513f3365bb6ba03c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>CacheWorldModule</b> ()</td></tr>
<tr class="memdesc:ab0191de796050c7a513f3365bb6ba03c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by <a class="el" href="../../dc/d21/classpl_particle_module.htm#a06ab4ddb20d7d0764594b77960c6502b" title="Override this to cache world module pointers for later (through plParticleWorldModule::GetCachedWorld...">plParticleModule::RequestRequiredWorldModulesForCache()</a> to cache a pointer to a world module that is needed later. <br /></td></tr>
<tr class="separator:ab0191de796050c7a513f3365bb6ba03c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad748d2b4ebfd0079ec3fc0d8408cc06a" id="r_ad748d2b4ebfd0079ec3fc0d8408cc06a"><td class="memItemLeft" align="right" valign="top"><a id="ad748d2b4ebfd0079ec3fc0d8408cc06a" name="ad748d2b4ebfd0079ec3fc0d8408cc06a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CacheWorldModule</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pRtti)</td></tr>
<tr class="memdesc:ad748d2b4ebfd0079ec3fc0d8408cc06a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by <a class="el" href="../../dc/d21/classpl_particle_module.htm#a06ab4ddb20d7d0764594b77960c6502b" title="Override this to cache world module pointers for later (through plParticleWorldModule::GetCachedWorld...">plParticleModule::RequestRequiredWorldModulesForCache()</a> to cache a pointer to a world module that is needed later. <br /></td></tr>
<tr class="separator:ad748d2b4ebfd0079ec3fc0d8408cc06a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_world_module"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_world_module')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a></td></tr>
<tr class="memitem:a3b9e7276ad2b2bb01b7044a396f64a1f inherit pub_methods_classpl_world_module" id="r_a3b9e7276ad2b2bb01b7044a396f64a1f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> ()</td></tr>
<tr class="memdesc:a3b9e7276ad2b2bb01b7044a396f64a1f inherit pub_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding world to this module. <br /></td></tr>
<tr class="separator:a3b9e7276ad2b2bb01b7044a396f64a1f inherit pub_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9b2d97799741747b2f3476ab40d1131 inherit pub_methods_classpl_world_module" id="r_ab9b2d97799741747b2f3476ab40d1131"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> () const</td></tr>
<tr class="memdesc:ab9b2d97799741747b2f3476ab40d1131 inherit pub_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding world to this module. <br /></td></tr>
<tr class="separator:ab9b2d97799741747b2f3476ab40d1131 inherit pub_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8284a9a7125ab7358654a366e0e4fc5 inherit pub_methods_classpl_world_module" id="r_aa8284a9a7125ab7358654a366e0e4fc5"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorldIndex</b> () const</td></tr>
<tr class="memdesc:aa8284a9a7125ab7358654a366e0e4fc5 inherit pub_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="../../df/df2/classpl_world_module.htm#a3b9e7276ad2b2bb01b7044a396f64a1f" title="Returns the corresponding world to this module.">GetWorld()</a>-&gt;GetIndex(). Needed to break circular include dependencies. <br /></td></tr>
<tr class="separator:aa8284a9a7125ab7358654a366e0e4fc5 inherit pub_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:aa7d52a1a6d7cce2de62678446a4f3e87" id="r_aa7d52a1a6d7cce2de62678446a4f3e87"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa7d52a1a6d7cce2de62678446a4f3e87">WorldClear</a> () override</td></tr>
<tr class="memdesc:aa7d52a1a6d7cce2de62678446a4f3e87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by <a class="el" href="../../d2/d12/classpl_world.htm#aab76861451ee04683cb3aae694e5ffaa" title="Deletes all game objects in a world.">plWorld::Clear()</a>. Can be used to clear cached data when a world is completely cleared of objects (but not deleted).  <br /></td></tr>
<tr class="separator:aa7d52a1a6d7cce2de62678446a4f3e87"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classpl_world_module"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_types_classpl_world_module')"><img src="../../closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a></td></tr>
<tr class="memitem:ad1ce14c53b26d35ec2ced99ae11d8321 inherit pro_types_classpl_world_module" id="r_ad1ce14c53b26d35ec2ced99ae11d8321"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateFunction</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt;void(const <a class="el" href="../../d2/d11/structpl_world_module_1_1_update_context.htm">UpdateContext</a>&amp;)&gt;</td></tr>
<tr class="memdesc:ad1ce14c53b26d35ec2ced99ae11d8321 inherit pro_types_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update function delegate. <br /></td></tr>
<tr class="separator:ad1ce14c53b26d35ec2ced99ae11d8321 inherit pro_types_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_world_module"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_world_module')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a></td></tr>
<tr class="memitem:ae973b8ae4e4c2e7c204291270152751a inherit pro_methods_classpl_world_module" id="r_ae973b8ae4e4c2e7c204291270152751a"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plWorldModule</b> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld)</td></tr>
<tr class="separator:ae973b8ae4e4c2e7c204291270152751a inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cbfdcd959972b4049328d9806b80930 inherit pro_methods_classpl_world_module" id="r_a4cbfdcd959972b4049328d9806b80930"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterUpdateFunction</b> (const <a class="el" href="../../de/ddb/structpl_world_module_1_1_update_function_desc.htm">UpdateFunctionDesc</a> &amp;desc)</td></tr>
<tr class="memdesc:a4cbfdcd959972b4049328d9806b80930 inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers the given update function at the world. <br /></td></tr>
<tr class="separator:a4cbfdcd959972b4049328d9806b80930 inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f0de506fb73de8c02f0ece7b8e0d329 inherit pro_methods_classpl_world_module" id="r_a2f0de506fb73de8c02f0ece7b8e0d329"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>DeregisterUpdateFunction</b> (const <a class="el" href="../../de/ddb/structpl_world_module_1_1_update_function_desc.htm">UpdateFunctionDesc</a> &amp;desc)</td></tr>
<tr class="memdesc:a2f0de506fb73de8c02f0ece7b8e0d329 inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">De-registers the given update function from the world. Note that only the m_Function and the m_Phase of the description have to be valid for de-registration. <br /></td></tr>
<tr class="separator:a2f0de506fb73de8c02f0ece7b8e0d329 inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d760b5ccef2486ab9af3bfc3c5bbf9b inherit pro_methods_classpl_world_module" id="r_a4d760b5ccef2486ab9af3bfc3c5bbf9b"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> ()</td></tr>
<tr class="memdesc:a4d760b5ccef2486ab9af3bfc3c5bbf9b inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator used by the world. <br /></td></tr>
<tr class="separator:a4d760b5ccef2486ab9af3bfc3c5bbf9b inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10a8edbc5b8a3fc4748da171fa942c28 inherit pro_methods_classpl_world_module" id="r_a10a8edbc5b8a3fc4748da171fa942c28"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/d2e/classpl_large_block_allocator.htm">plInternal::WorldLargeBlockAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetBlockAllocator</b> ()</td></tr>
<tr class="memdesc:a10a8edbc5b8a3fc4748da171fa942c28 inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the block allocator used by the world. <br /></td></tr>
<tr class="separator:a10a8edbc5b8a3fc4748da171fa942c28 inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad26a4d36aa09ab224e4cd5f399c5e67c inherit pro_methods_classpl_world_module" id="r_ad26a4d36aa09ab224e4cd5f399c5e67c"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorldSimulationEnabled</b> () const</td></tr>
<tr class="memdesc:ad26a4d36aa09ab224e4cd5f399c5e67c inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the world simulation is enabled. <br /></td></tr>
<tr class="separator:ad26a4d36aa09ab224e4cd5f399c5e67c inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a7c7e9de1f96ebd7c6916417f795186 inherit pro_methods_classpl_world_module" id="r_a2a7c7e9de1f96ebd7c6916417f795186"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/df2/classpl_world_module.htm#a2a7c7e9de1f96ebd7c6916417f795186">OnSimulationStarted</a> ()</td></tr>
<tr class="memdesc:a2a7c7e9de1f96ebd7c6916417f795186 inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called at the start of the next world update when the world is simulated. This method will be called after the initialization method.  <br /></td></tr>
<tr class="separator:a2a7c7e9de1f96ebd7c6916417f795186 inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_world_module"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_world_module')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a></td></tr>
<tr class="memitem:a7b71803478bd5100e41c87972924f8a4 inherit pro_attribs_classpl_world_module" id="r_a7b71803478bd5100e41c87972924f8a4"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pWorld</b></td></tr>
<tr class="separator:a7b71803478bd5100e41c87972924f8a4 inherit pro_attribs_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This world module stores all particle effect data that is active in a given <a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> instance. </p>
<p>It is used to update all effects in one world and also to render them. When an effect is stopped, it only stops emitting new particles, but it lives on until all particles are dead. Therefore particle effects need to be managed outside of components. When a component dies, it only tells the world module to 'destroy' it's effect, the rest is handled behind the scenes. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="adbc888588594eb24aceb1141d1253ef6" name="adbc888588594eb24aceb1141d1253ef6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adbc888588594eb24aceb1141d1253ef6">&#9670;&#160;</a></span>Deinitialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plParticleWorldModule::Deinitialize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called before the destructor. A derived type can override this method to do deinitialization work. </p>

<p>Reimplemented from <a class="el" href="../../df/df2/classpl_world_module.htm#aa57b8eff4e502f7b502f085a26127141">plWorldModule</a>.</p>

</div>
</div>
<a id="a4c3063843c590c8f0ea0333414321dbc" name="a4c3063843c590c8f0ea0333414321dbc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4c3063843c590c8f0ea0333414321dbc">&#9670;&#160;</a></span>Initialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plParticleWorldModule::Initialize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called after the constructor. A derived type can override this method to do initialization work. Typically this is the method where updates function are registered. </p>

<p>Reimplemented from <a class="el" href="../../df/df2/classpl_world_module.htm#a67272ece6b8b8d0ca3b526c7953b994d">plWorldModule</a>.</p>

</div>
</div>
<a id="aa7d52a1a6d7cce2de62678446a4f3e87" name="aa7d52a1a6d7cce2de62678446a4f3e87"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7d52a1a6d7cce2de62678446a4f3e87">&#9670;&#160;</a></span>WorldClear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plParticleWorldModule::WorldClear </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called by <a class="el" href="../../d2/d12/classpl_world.htm#aab76861451ee04683cb3aae694e5ffaa" title="Deletes all game objects in a world.">plWorld::Clear()</a>. Can be used to clear cached data when a world is completely cleared of objects (but not deleted). </p>

<p>Reimplemented from <a class="el" href="../../df/df2/classpl_world_module.htm#ac0d9a5a1dbcf2b77e9d4ce35de0d7a73">plWorldModule</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/EnginePlugins/ParticlePlugin/WorldModule/<a class="el" href="../../da/d3c/_particle_world_module_8h_source.htm">ParticleWorldModule.h</a></li>
<li>Code/EnginePlugins/ParticlePlugin/WorldModule/<b>ParticleEffects.cpp</b></li>
<li>Code/EnginePlugins/ParticlePlugin/WorldModule/<b>ParticleSystems.cpp</b></li>
<li>Code/EnginePlugins/ParticlePlugin/WorldModule/<b>ParticleWorldModule.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dc/d81/classpl_particle_world_module.htm">plParticleWorldModule</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
