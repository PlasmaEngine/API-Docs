<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Todo List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dd/da0/todo.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div><div class="header">
  <div class="headertitle"><div class="title">Todo List</div></div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="reflist">
<dt>Member <a class="el" href="../../d4/dbc/classpl_ai_actions.htm#a2cbb19bc0b610a9dc8614932d2351916">plAiActions::MapMenuActions</a>  ()</dt>
<dd><a class="anchor" id="_todo000007"></a>Is there a way to integrate into ALL document types in a specific menu (ie. project settings)  </dd>
<dt>Member <a class="el" href="../../da/d22/classpl_application_file_system_config.htm#a6e0c7551182b2cc02ce1e7bdc13ec3ae">plApplicationFileSystemConfig::Load</a>  (<a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a> sPath=s_sConfigFile)</dt>
<dd><a class="anchor" id="_todo000027"></a>Temp fix for backwards compatibility  </dd>
<dt>Struct <a class="el" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">plArrayMapBase&lt; KEY, VALUE &gt;::Pair</a>  </dt>
<dd><a class="anchor" id="_todo000034"></a>Custom comparer  </dd>
<dt>Member <a class="el" href="../../dd/dca/classpl_asset_document.htm#a4ad4200852500097a3768a8aeb9696c3">plAssetDocument::InternalAfterSaveDocument</a>  () override</dt>
<dd><a class="anchor" id="_todo000001"></a>Should only be done for platform agnostic assets  </dd>
<dt>Member <a class="el" href="../../dd/dca/classpl_asset_document.htm#ae349eeffa511159398e7b474dec85fa0">plAssetDocument::SaveThumbnail</a>  (const <a class="el" href="../../de/d27/classpl_image.htm" title="A class containing image data and associated meta data.">plImage</a> &amp;img, const <a class="el" href="../../df/ddd/classpl_asset_document_1_1_thumbnail_info.htm" title="The thumbnail info containing the hash of the file is appended to assets. The serialized size of this...">ThumbnailInfo</a> &amp;thumbnailInfo) const</dt>
<dd><a class="anchor" id="_todo000002"></a>A conversion to B8G8R8X8_UNORM currently fails  </dd>
<dt>Member <a class="el" href="../../d5/d2b/classpl_chunk_stream_writer.htm#aaf3c33bd2b5bc25ca367d472cab2dc0a">plChunkStreamWriter::EndChunk</a>  ()</dt>
<dd><a class="anchor" id="_todo000038"></a>Write Chunk CRC  </dd>
<dt>Member <a class="el" href="../../d7/d2f/classpl_color_gradient.htm#af008e056945c7bb81c29f19a426bbd9d">plColorGradient::EvaluateAlpha</a>  (double x, plUInt8 &amp;ref_uiAlpha) const</dt>
<dd><a class="anchor" id="_todo000057"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../d7/d2f/classpl_color_gradient.htm#abd7e33c641266f0a6742a1d8e8ed6bb1">plColorGradient::EvaluateColor</a>  (double x, <a class="el" href="../../d9/d1d/classpl_color.htm" title="plColor represents an RGBA color in linear color space. Values are stored as float,...">plColor</a> &amp;ref_rgb) const</dt>
<dd><a class="anchor" id="_todo000056"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../d7/d2f/classpl_color_gradient.htm#a8eb9393a29387ee0da1a90fa78f7863d">plColorGradient::EvaluateIntensity</a>  (double x, float &amp;ref_fIntensity) const</dt>
<dd><a class="anchor" id="_todo000058"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../d9/d0f/classpl_color_gradient_asset_data.htm#a2f393f7720a2b1d659b7f50d68e315f5">plColorGradientAssetData::TickFromTime</a>  (<a class="el" href="../../d1/df6/structpl_time.htm" title="The time class encapsulates a double value storing the time in seconds.">plTime</a> time)</dt>
<dd><a class="anchor" id="_todo000008"></a>Make this a property ?  </dd>
<dt>Member <a class="el" href="../../d9/d37/classpl_command_history.htm#a2d79b52ca47615bd3b68e9ac94cc2d51">plCommandHistory::MergeLastTwoTransactions</a>  ()</dt>
<dd><a class="anchor" id="_todo000135"></a>This would not be necessary, if hierarchical transactions would not crash  </dd>
<dt>Member <a class="el" href="../../d9/d37/classpl_command_history.htm#a1d50aabf80864b88414e71122ce12c8d">plCommandHistory::StartTransaction</a>  (const <a class="el" href="../../d6/d9a/classpl_format_string.htm" title="Implements formating of strings with placeholders and formatting options.">plFormatString</a> &amp;displayString)</dt>
<dd><a class="anchor" id="_todo000134"></a>Allow to have a limited transaction history and clean up transactions after a while  </dd>
<dt>Member <a class="el" href="../../d2/d79/classpl_curve1_d.htm#a219923e93af283ee3fd9331be2dfaa35">plCurve1D::CreateLinearApproximation</a>  (double fMaxError=0.01, plUInt8 uiMaxSubDivs=8)</dt>
<dd><a class="anchor" id="_todo000059"></a>Since we do this, we actually don't need the linear approximation anymore and could just evaluate the full curve  </dd>
<dt>Member <a class="el" href="../../dc/d1f/structpl_curve1_d_resource_descriptor.htm#a7786adecdb9c51f193523a2d2347d5e3">plCurve1DResourceDescriptor::Load</a>  (<a class="el" href="../../df/d3d/classpl_stream_reader.htm" title="Interface for binary in (read) streams.">plStreamReader</a> &amp;inout_stream)</dt>
<dd><a class="anchor" id="_todo000020"></a>We can do this on load, or somehow ensure this is always already correctly saved  </dd>
<dt>Member <a class="el" href="../../d1/d9c/classpl_dds_file_format.htm#abf3532e4a9012541aaa5e1ca04e25843">plDdsFileFormat::WriteImage</a>  (<a class="el" href="../../d6/d90/classpl_stream_writer.htm" title="Interface for binary out (write) streams.">plStreamWriter</a> &amp;inout_stream, const <a class="el" href="../../da/d4f/classpl_image_view.htm" title="A class referencing image data and holding metadata about the image.">plImageView</a> &amp;image, <a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a> sFileExtension) const override</dt>
<dd><a class="anchor" id="_todo000094"></a>sub-image size  </dd>
<dt>Member <a class="el" href="../../d9/dea/classpl_document_object.htm#af803c56030c2e9448125793b3582ee66">plDocumentObject::IsOnHeap</a>  () const</dt>
<dd><a class="anchor" id="_todo000137"></a>Christopher: This crashes when the pointer is nullptr, which appears to be possible It happened for me when duplicating (CTRL+D) 2 objects 2 times then moving them and finally undoing everything  </dd>
<dt>Member <a class="el" href="../../d1/d3b/classpl_edit_action.htm#af462c759e4b62ed3ea8c26343e64aec0">plEditAction::plEditAction</a>  (const <a class="el" href="../../d5/d0b/structpl_action_context.htm">plActionContext</a> &amp;context, const char *szName, ButtonType button)</dt>
<dd><a class="anchor" id="_todo000130"></a>Icon  </dd>
<dt>Member <a class="el" href="../../dd/d91/classpl_editor_shape_icons_extractor.htm#af1b02901f8294453351c7f0e3db32fc2">plEditorShapeIconsExtractor::Extract</a>  (const <a class="el" href="../../d5/d7d/classpl_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">plView</a> &amp;view, const <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt; const plGameObject * &gt;</a> &amp;visibleObjects, <a class="el" href="../../d7/ddf/classpl_extracted_render_data.htm">plExtractedRenderData</a> &amp;ref_extractedRenderData) override</dt>
<dd><a class="anchor" id="_todo000019"></a>Once we have a solution for objects that only have a shape icon we can switch this loop to use visibleObjects instead.  </dd>
<dt>Member <a class="el" href="../../d7/dc0/classpl_fileserve_client.htm#a11e35fc50bc3799b8500e11ae22e9685">plFileserveClient::EnsureConnected</a>  (<a class="el" href="../../d1/df6/structpl_time.htm" title="The time class encapsulates a double value storing the time in seconds.">plTime</a> timeout=<a class="el" href="../../d1/df6/structpl_time.htm#a3d1efa40afb39795fad0f3b6401626f1" title="Creates an instance of plTime that was initialized from seconds.">plTime::MakeFromSeconds</a>(-5))</dt>
<dd><a class="anchor" id="_todo000095"></a>Somehow abstract this away ?  </dd>
<dt>Member <a class="el" href="../../d7/dc0/classpl_fileserve_client.htm#a046e402b3d6e0127fa8c3344100295d8">plFileserveClient::WaitForServerInfo</a>  (<a class="el" href="../../d1/df6/structpl_time.htm" title="The time class encapsulates a double value storing the time in seconds.">plTime</a> timeout=<a class="el" href="../../d1/df6/structpl_time.htm#a3d1efa40afb39795fad0f3b6401626f1" title="Creates an instance of plTime that was initialized from seconds.">plTime::MakeFromSeconds</a>(60.0 *5))</dt>
<dd><a class="anchor" id="_todo000097"></a>Abstract this somehow ?  </dd>
<dt>Member <a class="el" href="../../d5/d08/classpl_file_system.htm#ae9df47fe919975a016611a0d5404b9fe">plFileSystem::ResolvePath</a>  (<a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a> sPath, <a class="el" href="../../d3/d2d/classpl_string_builder.htm" title="plStringBuilder is a class that is meant for creating and modifying strings.">plStringBuilder</a> *out_pAbsolutePath, <a class="el" href="../../d3/d2d/classpl_string_builder.htm" title="plStringBuilder is a class that is meant for creating and modifying strings.">plStringBuilder</a> *out_pDataDirRelativePath, const <a class="el" href="../../d4/d13/structpl_data_directory_info.htm">plDataDirectoryInfo</a> **out_pDataDir=nullptr)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000036"></a>We might also need the none-redirected path as an output </p>
<p class="enddd"><a class="anchor" id="_todo000037"></a>We might also need the none-redirected path as an output  </p>
</dd>
<dt>Member <a class="el" href="../../d5/d88/classpl_fmod_event_component.htm#a4b0d417ec89ff1abf7acd8966d56e7a3">plFmodEventComponent::SetPitch</a>  (float f)</dt>
<dd><a class="anchor" id="_todo000098"></a>Global pitch might better be a bus setting  </dd>
<dt>Member <a class="el" href="../../dc/d59/classpl_g_a_l_command_encoder.htm#ad6d82dd55f55f3aa677a384285609fea">plGALCommandEncoder::SetIndexBuffer</a>  (<a class="el" href="../../db/d57/classpl_g_a_l_buffer_handle.htm">plGALBufferHandle</a> hIndexBuffer)</dt>
<dd><a class="anchor" id="_todo000085"></a>Assert on index buffer type (if non nullptr)  </dd>
<dt>Member <a class="el" href="../../dc/d59/classpl_g_a_l_command_encoder.htm#ac223ee7f940c17156e4477f6d65904ff">plGALCommandEncoder::SetShader</a>  (<a class="el" href="../../d0/d24/classpl_g_a_l_shader_handle.htm">plGALShaderHandle</a> hShader)</dt>
<dd><a class="anchor" id="_todo000084"></a>Assert for shader capabilities (supported shader stages etc.)  </dd>
<dt>Member <a class="el" href="../../d0/dcd/classpl_g_a_l_command_encoder_impl_d_x11.htm#ad28e7e7889ddbfbf6742796a5161cd95">plGALCommandEncoderImplDX11::ReadbackTexturePlatform</a>  (const <a class="el" href="../../d8/da4/classpl_g_a_l_texture.htm">plGALTexture</a> *pTexture) override</dt>
<dd><a class="anchor" id="_todo000078"></a>Other mip levels etc?  </dd>
<dt>Member <a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm#af026531ce28e83128874724dbea4ce80">plGALDevice::CreateBuffer</a>  (const <a class="el" href="../../da/d7b/structpl_g_a_l_buffer_creation_description.htm">plGALBufferCreationDescription</a> &amp;description, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt; const plUInt8 &gt;</a> initialData=<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt; const plUInt8 &gt;()</a>)</dt>
<dd><a class="anchor" id="_todo000088"></a>Platform independent validation (buffer type supported)  </dd>
<dt>Member <a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm#a7225b50c7008566a1c3b70daa507789d">plGALDevice::CreateRenderTargetView</a>  (const <a class="el" href="../../d1/df1/structpl_g_a_l_render_target_view_creation_description.htm">plGALRenderTargetViewCreationDescription</a> &amp;description)</dt>
<dd><a class="anchor" id="_todo000091"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm#a7daa961db5440a3bb66b35f8b1d9c1c1">plGALDevice::CreateSamplerState</a>  (const <a class="el" href="../../da/da8/structpl_g_a_l_sampler_state_creation_description.htm">plGALSamplerStateCreationDescription</a> &amp;description)</dt>
<dd><a class="anchor" id="_todo000087"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm#a0c715a17cce2bbc9c6121a512d9c3e4b">plGALDevice::CreateSharedTexture</a>  (const <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &amp;description, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt; plGALSystemMemoryDescription &gt;</a> initialData={})</dt>
<dd><a class="anchor" id="_todo000090"></a>Platform independent validation (desc width &amp; height &lt; platform maximum, format, etc.)  </dd>
<dt>Member <a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm#a8a72553be01f47fd50417a4777fb908c">plGALDevice::CreateTexture</a>  (const <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &amp;description, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt; plGALSystemMemoryDescription &gt;</a> initialData=<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt; plGALSystemMemoryDescription &gt;()</a>)</dt>
<dd><a class="anchor" id="_todo000089"></a>Platform independent validation (desc width &amp; height &lt; platform maximum, format, etc.)  </dd>
<dt>Member <a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm#a03d3e6ceb77f28f5d57ff4a3bf45990b">plGALDevice::CreateVertexDeclaration</a>  (const <a class="el" href="../../d3/dc1/structpl_g_a_l_vertex_declaration_creation_description.htm">plGALVertexDeclarationCreationDescription</a> &amp;description)</dt>
<dd><a class="anchor" id="_todo000092"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm#ad798ff36b6befb7dfe24619b3040b7fa">plGALDevice::GetBackBufferTextureFromSwapChain</a>  (<a class="el" href="../../d6/d88/classpl_g_a_l_swap_chain_handle.htm">plGALSwapChainHandle</a> hSwapChain)</dt>
<dd><a class="anchor" id="_todo000086"></a>Map functions to save on memcpys  </dd>
<dt>Member <a class="el" href="../../dd/d82/structpl_g_a_l_resource_format.htm#a513e5623a007f93864cdcc8bd8335968">plGALResourceFormat::IsDepthFormat</a>  (plGALResourceFormat::Enum format)</dt>
<dd><a class="anchor" id="_todo000093"></a>A combination of propertyflags, something like srgb, normalized, ...  </dd>
<dt>Member <a class="el" href="../../d1/db8/classpl_g_a_l_swap_chain_d_x11.htm#add3bd244d9561122b7214e6ee4863399">plGALSwapChainDX11::InitPlatform</a>  (<a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm" title="The plRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...">plGALDevice</a> *pDevice) override</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000079"></a>The mode switch needs to be handled (ResizeBuffers + communication with engine) </p>
<p class="interdd"><a class="anchor" id="_todo000080"></a>Get from MSAA value of the m_WindowDesc </p>
<p class="enddd"><a class="anchor" id="_todo000081"></a>Get from enumeration of available modes  </p>
</dd>
<dt>Member <a class="el" href="../../d1/d0e/classpl_g_a_l_texture_d_x11.htm#a080ec1e53fa912b7ca95b45309faddbd">plGALTextureDX11::InitFromNativeObject</a>  (<a class="el" href="../../d0/d44/classpl_g_a_l_device_d_x11.htm" title="The DX11 device implementation of the graphics abstraction layer.">plGALDeviceDX11</a> *pDXDevice)</dt>
<dd><a class="anchor" id="_todo000082"></a>Validation if interface of corresponding texture object exists  </dd>
<dt>Member <a class="el" href="../../dc/d11/classpl_g_a_l_vertex_declaration_d_x11.htm#a2607393e3fa39f61bc2bb2b640653b7c">plGALVertexDeclarationDX11::InitPlatform</a>  (<a class="el" href="../../d2/d8c/classpl_g_a_l_device.htm" title="The plRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...">plGALDevice</a> *pDevice) override</dt>
<dd><a class="anchor" id="_todo000083"></a>Expose step rate?  </dd>
<dt>Member <a class="el" href="../../db/d17/classpl_game_application.htm#af2dbfc7e03bf53ee04b84304428d9c47">plGameApplication::Init_SetupDefaultResources</a>  () override</dt>
<dd><a class="anchor" id="_todo000065"></a>Loading Cubemap Texture  </dd>
<dt>Member <a class="el" href="../../d5/de0/classpl_game_object_document.htm#a212c355aabbe60236fdc33530c7f5793">plGameObjectDocument::InvalidateGlobalTransformValue</a>  (const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *pObject) const</dt>
<dd><a class="anchor" id="_todo000003"></a>If all parents are always inserted as well, we can stop once an object is found that is not in the list  </dd>
<dt>Member <a class="el" href="../../d8/db0/classpl_game_object_gizmo_edit_tool.htm#abcd4dc788d878ea739d9a458392743ab">plGameObjectGizmoEditTool::UpdateGizmoTransformation</a>  ()</dt>
<dd><a class="anchor" id="_todo000005"></a>Pivot point  </dd>
<dt>Struct <a class="el" href="../../dd/d49/structpl_generic_id.htm">plGenericId&lt; InstanceIndexBits, GenerationBits &gt;</a>  </dt>
<dd><a class="anchor" id="_todo000060"></a>Document this better.  </dd>
<dt>Member <a class="el" href="../../d0/d27/classpl_jolt_actions.htm#a4eafd9118bfc4f55b6eb7c27ba28747f">plJoltActions::MapMenuActions</a>  ()</dt>
<dd><a class="anchor" id="_todo000014"></a>Is there a way to integrate into ALL document types in a specific menu (ie. project settings)  </dd>
<dt>Member <a class="el" href="../../d2/ddd/classpl_jolt_mesh_resource.htm#a2f5b1957fa3d9e29470c06b1517dbee5">plJoltMeshResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000102"></a>Compute memory usage  </dd>
<dt>Member <a class="el" href="../../dc/dc8/classpl_material_asset_document.htm#acb1cfcc30a5b5c10d01a2a8b21bf7abe">plMaterialAssetDocument::InternalTransformAsset</a>  (const char *szTargetFile, <a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a> sOutputTag, const <a class="el" href="../../d3/d1f/classpl_platform_profile.htm">plPlatformProfile</a> *pAssetProfile, const <a class="el" href="../../db/db1/classpl_asset_file_header.htm" title="Simple class to handle asset file headers (the very first bytes in all transformed asset files)">plAssetFileHeader</a> &amp;AssetHeader, plBitflags&lt; plTransformFlags &gt; transformFlags) override</dt>
<dd><a class="anchor" id="_todo000009"></a>Rendering platform is currently hardcoded  </dd>
<dt>Member <a class="el" href="../../dc/dc8/classpl_material_asset_document.htm#a6de41458019d7afc935f9e916878b7c0">plMaterialAssetDocument::UpdateAssetDocumentInfo</a>  (<a class="el" href="../../d2/db7/classpl_asset_document_info.htm">plAssetDocumentInfo</a> *pInfo) const override</dt>
<dd><a class="anchor" id="_todo000010"></a>The Visual Shader node configuration files would need to be a dependency of the auto-generated shader.  </dd>
<dt>Member <a class="el" href="../../dd/def/classpl_mesh_resource_descriptor.htm#ad5aca78857a585cf61ebcfb6769796b5">plMeshResourceDescriptor::Load</a>  (<a class="el" href="../../df/d3d/classpl_stream_reader.htm" title="Interface for binary in (read) streams.">plStreamReader</a> &amp;inout_stream)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000072"></a><a class="el" href="../../d0/de3/structpl_mesh_resource_descriptor_1_1_material.htm">Material</a> Path (relative to mesh file) </p>
<p class="enddd"><a class="anchor" id="_todo000073"></a>load from file  </p>
</dd>
<dt>Member <a class="el" href="../../dd/def/classpl_mesh_resource_descriptor.htm#a5066ba72909f13e6d5ed99374ab70d60">plMeshResourceDescriptor::Save</a>  (<a class="el" href="../../d6/d90/classpl_stream_writer.htm" title="Interface for binary out (write) streams.">plStreamWriter</a> &amp;inout_stream)</dt>
<dd><a class="anchor" id="_todo000071"></a><a class="el" href="../../d0/de3/structpl_mesh_resource_descriptor_1_1_material.htm">Material</a> Path (relative to mesh file)  </dd>
<dt>Member <a class="el" href="../../d4/dc9/classpl_open_ddl_parser.htm#a76d84aa70ba363e8f81bd1ca7cb8cacf">plOpenDdlParser::OnPrimitiveBool</a>  (plUInt32 count, const bool *pData, bool bThisIsAll)=0</dt>
<dd><a class="anchor" id="_todo000045"></a>Currently not supported  </dd>
<dt>Member <a class="el" href="../../d4/da4/classpl_particle_behavior___color_gradient.htm#a80c2fc1397b308b6d8bc10995798f13c">plParticleBehavior_ColorGradient::Process</a>  (plUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000103"></a>Use level of detail to reduce the update interval further up close, with a high interval, animations appear choppy, especially when fading stuff out at the end  </dd>
<dt>Member <a class="el" href="../../db/dda/classpl_particle_behavior___fade_out.htm#a41ac07b8149c6b2dfe9b6307f65dde68">plParticleBehavior_FadeOut::Process</a>  (plUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000104"></a>Use level of detail to reduce the update interval further up close, with a high interval, animations appear choppy, especially when fading stuff out at the end  </dd>
<dt>Member <a class="el" href="../../db/d72/classpl_particle_behavior___raycast.htm#a2b7c2d3054bc89817f4a97785bea129d">plParticleBehavior_Raycast::Process</a>  (plUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000105"></a>Get current element index from iterator ?  </dd>
<dt>Member <a class="el" href="../../dd/db7/classpl_particle_component.htm#a39f7a00754f5ea1862a78b2efa6420d2">plParticleComponent::SerializeComponent</a>  (<a class="el" href="../../dc/dd6/classpl_world_writer.htm" title="Stores an entire plWorld in a stream.">plWorldWriter</a> &amp;inout_stream) const override</dt>
<dd><a class="anchor" id="_todo000106"></a>store effect state  </dd>
<dt>Member <a class="el" href="../../d2/d9f/classpl_particle_effect_resource.htm#a561716a76cad347a6a2bc523af23a049">plParticleEffectResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000108"></a>Clear something  </dd>
<dt>Member <a class="el" href="../../d2/d9f/classpl_particle_effect_resource.htm#a34c033b3b28a6d668915b8e2e5e82845">plParticleEffectResource::UpdateMemoryUsage</a>  (MemoryUsage &amp;out_NewMemoryUsage) override</dt>
<dd><a class="anchor" id="_todo000109"></a>Better statistics  </dd>
<dt>Member <a class="el" href="../../d5/d39/classpl_particle_finalizer___age.htm#a68509cfb699118bc217edd0d151db039">plParticleFinalizer_Age::Process</a>  (plUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000107"></a>Get current element index from iterator ?  </dd>
<dt>Member <a class="el" href="../../d4/d8f/classpl_particle_type_light.htm#a5ffa1ae6b1d4d8f37f86b58df07e3735">plParticleTypeLight::CreateRequiredStreams</a>  () override</dt>
<dd><a class="anchor" id="_todo000110"></a>Initialize (instead of during extraction)  </dd>
<dt>Member <a class="el" href="../../dd/db3/classpl_particle_type_trail.htm#af0ff761910cf22bc981f1e2a8e15ebd9">plParticleTypeTrail::ExtractTypeRenderData</a>  (<a class="el" href="../../d1/de3/structpl_msg_extract_render_data.htm">plMsgExtractRenderData</a> &amp;ref_msg, const plTransform &amp;instanceTransform) const override</dt>
<dd><a class="anchor" id="_todo000111"></a>This loop could be done without a condition  </dd>
<dt>Member <a class="el" href="../../dd/db3/classpl_particle_type_trail.htm#a6b5eac3736bf6ac8d7ab8d0d55f8c952">plParticleTypeTrail::GetMaxParticleRadius</a>  (float fParticleSize) const override</dt>
<dd><a class="anchor" id="_todo000112"></a>This is a hacky guess, one would actually need to inspect the trail positions  </dd>
<dt>Member <a class="el" href="../../dd/db3/classpl_particle_type_trail.htm#a4634a91afcd39d258a2b4752df6047bc">plParticleTypeTrail::m_TrailPoints64</a>  </dt>
<dd><a class="anchor" id="_todo000113"></a>Use a shared freelist across effects instead  </dd>
<dt>Member <a class="el" href="../../dd/dcf/classpl_phantom_rtti_manager.htm#a962645e68cb1d4893e3de7d2a9bf1949">plPhantomRttiManager::RegisterType</a>  (<a class="el" href="../../d3/d5c/structpl_reflected_type_descriptor.htm" title="Stores the description of a reflected type in a serializable form. Used by plPhantomRttiManager to ad...">plReflectedTypeDescriptor</a> &amp;ref_desc)</dt>
<dd><a class="anchor" id="_todo000138"></a>Had to increase the recursion depth to allow registering phantom types that are based on actual types coming from the engine process  </dd>
<dt>Member <a class="el" href="../../d9/df3/classpl_processing_stream.htm#a9a57123f73e723470750fadc91cdf002">plProcessingStream::SetSize</a>  (plUInt64 uiNumElements)</dt>
<dd><a class="anchor" id="_todo000035"></a>Allow to reuse memory from a pool ?  </dd>
<dt>Member <a class="el" href="../../d8/d12/classpl_property_anim_component.htm#a1ffdf2f1aab8835433ec4f7922318be4">plPropertyAnimComponent::SerializeComponent</a>  (<a class="el" href="../../dc/dd6/classpl_world_writer.htm" title="Stores an entire plWorld in a stream.">plWorldWriter</a> &amp;inout_stream) const override</dt>
<dd><a class="anchor" id="_todo000061"></a>Somehow store the animation state (not necessary for new scenes, but for quicksaves)  </dd>
<dt>Member <a class="el" href="../../d0/d49/classpl_qt_color_gradient_widget.htm#a572ea31de2055584744c4d92bf8b4919">plQtColorGradientWidget::mouseMoveEvent</a>  (QMouseEvent *event) override</dt>
<dd><a class="anchor" id="_todo000133"></a>Why not += ?  </dd>
<dt>Member <a class="el" href="../../da/d71/classpl_qt_data_widget.htm#a34853432b90a0e268f539f334e2d7c09">plQtDataWidget::plQtDataWidget</a>  (QWidget *pParent=0)</dt>
<dd><a class="anchor" id="_todo000127"></a>Improve Data Transfer UI  </dd>
<dt>Member <a class="el" href="../../d9/d02/classpl_qt_duplicate_dlg.htm#a21424f99576803b90be4c8d5d667273c">plQtDuplicateDlg::plQtDuplicateDlg</a>  (QWidget *pParent=nullptr)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000017"></a>Boundingbox helper not implemented yet (get bbox size from selection) </p>
<p class="enddd"><a class="anchor" id="_todo000018"></a>Grouping of duplicates not implemented yet  </p>
</dd>
<dt>Member <a class="el" href="../../d8/de1/classpl_qt_engine_view_widget.htm#abf7b82cdfedcc060651d09749f6e12c2">plQtEngineViewWidget::UpdateCameraInterpolation</a>  ()</dt>
<dd><a class="anchor" id="_todo000004"></a>Hard coded up vector  </dd>
<dt>Member <a class="el" href="../../dc/db7/classpl_qt_property_editor_tag_set_widget.htm#ad421a60cbe70a4f696c8a8a08050b13b">plQtPropertyEditorTagSetWidget::OnInit</a>  () override</dt>
<dd><a class="anchor" id="_todo000132"></a><a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a> is POD? -&gt; array&lt;stringview&gt;::Remove(stringview) fails, because of memcmp  </dd>
<dt>Member <a class="el" href="../../d3/dca/classpl_qt_reflection_widget.htm#a9142eec76748e9ce0b9906e5a2498fc4">plQtReflectionWidget::ProcessTelemetry</a>  (void *pUnuseed)</dt>
<dd><a class="anchor" id="_todo000128"></a>should read the message handlers here  </dd>
<dt>Member <a class="el" href="../../dc/dae/classpl_qt_shortcut_editor_dlg.htm#ae59a0f4505ec0c82b932fcdc7eb146d1">plQtShortcutEditorDlg::plQtShortcutEditorDlg</a>  (QWidget *pParent)</dt>
<dd><a class="anchor" id="_todo000131"></a>Instead of removing &amp;, replace it by underlined text (requires formatted text output)  </dd>
<dt>Member <a class="el" href="../../dc/d34/classpl_random.htm#af707c8db08c2d4fa7b9e23735d35c66f">plRandom::DoubleMinMax</a>  (double fMinValue, double fMaxValue)</dt>
<dd><a class="anchor" id="_todo000046"></a>Probably not correct  </dd>
<dt>Member <a class="el" href="../../dc/d34/classpl_random.htm#ace3d95c002f61f8c54179fed91eaf965">plRandom::DoubleVariance</a>  (double fValue, double fVariance)</dt>
<dd><a class="anchor" id="_todo000047"></a>Test whether this is actually correct  </dd>
<dt>Member <a class="el" href="../../dc/d34/classpl_random.htm#a9cb46b4d3d49d4c9669e6793e3e81000">plRandom::DoubleVarianceAroundZero</a>  (double fAbsMaxValue)</dt>
<dd><a class="anchor" id="_todo000048"></a>Test whether this is actually correct  </dd>
<dt>Member <a class="el" href="../../da/d62/classpl_rc_agent_component.htm#a1acba3e94d27da5aaa27538b2154f421">plRcAgentComponent::FindNavMeshPolyAt</a>  (const plVec3 &amp;vPosition, dtPolyRef &amp;out_polyRef, plVec3 *out_pAdjustedPosition=nullptr, float fPlaneEpsilon=0.01f, float fHeightEpsilon=1.0f) const</dt>
<dd><a class="anchor" id="_todo000116"></a>Hard-coded filter  </dd>
<dt>Member <a class="el" href="../../da/d62/classpl_rc_agent_component.htm#a2ed0e8b52c720bd9f7a724f9e81975b5">plRcAgentComponent::HasReachedPosition</a>  (const plVec3 &amp;vPos, float fMaxDistance) const</dt>
<dd><a class="anchor" id="_todo000119"></a>The comment below may not always be true  </dd>
<dt>Class <a class="el" href="../../d2/d26/classpl_remote_message.htm">plRemoteMessage</a>  </dt>
<dd><a class="anchor" id="_todo000031"></a>Add move semantics for <a class="el" href="../../d2/d26/classpl_remote_message.htm" title="Encapsulates all the data that is transmitted when sending or receiving a message with plRemoteInterf...">plRemoteMessage</a>  </dd>
<dt>Member <a class="el" href="../../dc/d68/structpl_resource_flags.htm#a73f5d4b7743a6abb2ea309d45628025aac887de0ae915bcddb910ef91dce9e664">plResourceFlags::ResourceHasFallback</a>  </dt>
<dd><a class="anchor" id="_todo000023"></a>implement NoFileAccessRequired  </dd>
<dt>Member <a class="el" href="../../d1/d0e/classpl_rotor_component.htm#a8fb17c07b72e6c69cdeed2f4cde973c8">plRotorComponent::Update</a>  ()</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000062"></a>Scripting integration </p>
<p class="interdd"><a class="anchor" id="_todo000063"></a>Scripting integration </p>
<p class="enddd"><a class="anchor" id="_todo000064"></a>This will probably give precision issues pretty quickly  </p>
</dd>
<dt>Member <a class="el" href="../../d2/de8/classpl_scene_actions.htm#a64ab99f61736557334203010e31da8dd">plSceneActions::MapToolbarActions</a>  (<a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a> sMapping)</dt>
<dd><a class="anchor" id="_todo000015"></a>This works incorrectly with value 6.0f -&gt; it places the action inside the snap category  </dd>
<dt>Member <a class="el" href="../../dc/d6b/classpl_selection_context.htm#a49df3f5b8f5d74439c29ed4cd4e398ea">plSelectionContext::DoKeyPressEvent</a>  (QKeyEvent *e) override</dt>
<dd><a class="anchor" id="_todo000006"></a>Handle the current cursor (icon) across all active input contexts  </dd>
<dt>Member <a class="el" href="../../dc/d40/classpl_shadow_pool.htm#af0f4f33d703d4d4146cca3e8a1496960">plShadowPool::AddPointLight</a>  (const <a class="el" href="../../d2/df7/classpl_point_light_component.htm" title="Adds a dynamic point light to the scene, optionally casting shadows.">plPointLightComponent</a> *pPointLight, float fScreenSpaceSize, const <a class="el" href="../../d5/d7d/classpl_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">plView</a> *pReferenceView)</dt>
<dd><a class="anchor" id="_todo000069"></a>expose somewhere  </dd>
<dt>Member <a class="el" href="../../dc/d40/classpl_shadow_pool.htm#a650c2f298d06404cd41628cfcfec4c75">plShadowPool::AddSpotLight</a>  (const <a class="el" href="../../d8/dea/classpl_spot_light_component.htm" title="Adds a spotlight to the scene, optionally casting shadows.">plSpotLightComponent</a> *pSpotLight, float fScreenSpaceSize, const <a class="el" href="../../d5/d7d/classpl_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">plView</a> *pReferenceView)</dt>
<dd><a class="anchor" id="_todo000070"></a>expose somewhere  </dd>
<dt>Member <a class="el" href="../../d0/db0/classpl_simd_mat4f.htm#a552f3e1f19b934d531182c0b0e2322f6">plSimdMat4f::Invert</a>  (const <a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> &amp;fEpsilon=plMath::SmallEpsilon&lt; float &gt;())</dt>
<dd><a class="anchor" id="_todo000052"></a>optimize  </dd>
<dt>Member <a class="el" href="../../d9/d3b/structpl_simd_math.htm#a61c7bfcd269da853c13da379af5e350e">plSimdMath::Exp</a>  (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm" title="A 4-component SIMD vector class.">plSimdVec4f</a> &amp;f)</dt>
<dd><a class="anchor" id="_todo000053"></a>optimize these methods if needed  </dd>
<dt>Member <a class="el" href="../../d4/dc4/classpl_simd_quat.htm#ad599c813d62b26f9ba2bada45bf4679f">plSimdQuat::GetRotationAxisAndAngle</a>  (<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm" title="A 4-component SIMD vector class.">plSimdVec4f</a> &amp;ref_vAxis, <a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> &amp;ref_fAngle, const <a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> &amp;fEpsilon=plMath::DefaultEpsilon&lt; float &gt;()) const</dt>
<dd><a class="anchor" id="_todo000055"></a>optimize  </dd>
<dt>Member <a class="el" href="../../d4/dc4/classpl_simd_quat.htm#a156864a75b59c8f7670a2875869492a8">plSimdQuat::MakeFromAxisAndAngle</a>  (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm" title="A 4-component SIMD vector class.">plSimdVec4f</a> &amp;vRotationAxis, const <a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> &amp;fAngle)</dt>
<dd><a class="anchor" id="_todo000054"></a>optimize  </dd>
<dt>Member <a class="el" href="../../d0/ddb/classpl_singleton_registry.htm#ae6713688a57f2dbab789f700f1b92d15">plSingletonRegistry::GetSingletonInstance</a>  ()</dt>
<dd><a class="anchor" id="_todo000033"></a>Events for new/deleted singletons -&gt; plInspector integration  </dd>
<dt>Member <a class="el" href="../../da/d19/classpl_sound_bank_asset_document.htm#ab503ed3461e94714d9f7b22c2c9afb8a">plSoundBankAssetDocument::InternalTransformAsset</a>  (<a class="el" href="../../d6/d90/classpl_stream_writer.htm" title="Interface for binary out (write) streams.">plStreamWriter</a> &amp;stream, <a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a> sOutputTag, const <a class="el" href="../../d3/d1f/classpl_platform_profile.htm">plPlatformProfile</a> *pAssetProfile, const <a class="el" href="../../db/db1/classpl_asset_file_header.htm" title="Simple class to handle asset file headers (the very first bytes in all transformed asset files)">plAssetFileHeader</a> &amp;AssetHeader, plBitflags&lt; plTransformFlags &gt; transformFlags) override</dt>
<dd><a class="anchor" id="_todo000012"></a>For platform specific sound banks, adjust the path to point to the correct file  </dd>
<dt>Member <a class="el" href="../../dc/dd9/classpl_surface_resource.htm#a2e19b23ccd5bd58c808bf786dcfa06c5">plSurfaceResource::InteractWithSurface</a>  (<a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> *pWorld, <a class="el" href="../../d2/d49/structpl_game_object_handle.htm" title="A handle to a game object.">plGameObjectHandle</a> hObject, const plVec3 &amp;vPosition, const plVec3 &amp;vSurfaceNormal, const plVec3 &amp;vIncomingDirection, const <a class="el" href="../../d3/d33/classpl_temp_hashed_string.htm" title="A class to use together with plHashedString for quick comparisons with temporary strings that need no...">plTempHashedString</a> &amp;sInteraction, const plUInt16 *pOverrideTeamID, float fImpulseSqr=0.0f) const</dt>
<dd><a class="anchor" id="_todo000022"></a>do random deviation, make sure to clamp max deviation angle  </dd>
<dt>Class <a class="el" href="../../de/d87/classpl_telemetry.htm">plTelemetry</a>  </dt>
<dd><a class="anchor" id="_todo000032"></a>document and test (and finish)  </dd>
<dt>Member <a class="el" href="../../d9/d05/classpl_texture_resource_loader.htm#a9583450c1688505bd4d2c43f65f47419">plTextureResourceLoader::OpenDataStream</a>  (const <a class="el" href="../../d8/d1c/classpl_resource.htm" title="The base class for all resources.">plResource</a> *pResource) override</dt>
<dd><a class="anchor" id="_todo000076"></a>A conversion to B8G8R8X8_UNORM currently fails  </dd>
<dt>Member <a class="el" href="../../d6/d57/structpl_texture_utils.htm#a0c9bbed9fa52a4f16d011c893c4e0df4">plTextureUtils::ImageFormatToGalFormat</a>  (<a class="el" href="../../db/db2/structpl_image_format.htm#acab2bc1a9e5b69f2aee6557ac29facfc" title="Enum describing the encoding format of the pixels of an image.">plImageFormat::Enum</a> format, bool bSRGB)</dt>
<dd><a class="anchor" id="_todo000077"></a>Not supported by some GPUs ?  </dd>
<dt>Member <a class="el" href="../../d8/d73/classpl_tokenizer.htm#a85b685d8091c0324af231843d130ec1e">plTokenizer::GetNextLine</a>  (plUInt32 &amp;ref_uiFirstToken, <a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray&lt; const plToken *, 32 &gt;</a> &amp;ref_tokens) const</dt>
<dd><a class="anchor" id="_todo000030"></a>Theoretically, if the line ends with an identifier, and the next directly starts with one again,  </dd>
<dt>Class <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransformTemplate&lt; Type &gt;</a>  </dt>
<dd><a class="anchor" id="_todo000049"></a>Fix docs and unit tests  </dd>
<dt>Member <a class="el" href="../../d3/dba/classpl_visual_shader_node_manager.htm#a76c89c97ecfb1063a6552bf201c0bac4">plVisualShaderNodeManager::InternalCanAdd</a>  (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm" title="This class holds information about reflected types. Each instance represents one type that is known t...">plRTTI</a> *pRtti, const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *pParent, <a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a> sParentProperty, const <a class="el" href="../../da/d4c/classpl_variant.htm" title="plVariant is a class that can store different types of variables, which is useful in situations where...">plVariant</a> &amp;index) const override</dt>
<dd><a class="anchor" id="_todo000011"></a>This is an arbitrary limit and it does not count how many nodes reference the same texture  </dd>
<dt>Member <a class="el" href="../../df/d28/classpl_window.htm#a62daf000d383575e50b34caec143adff">plWindow::Initialize</a>  ()</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000025"></a>Expose icon functionality somehow (101 == IDI_ICON1, see resource.h) </p>
<p class="enddd"><a class="anchor" id="_todo000026"></a>test &amp; support for multiple windows  </p>
</dd>
<dt>Member <a class="el" href="../../d5/d9d/classpl_window_output_target_g_a_l.htm#acfa5a0193b1bdb9b5beb4380e7d9b694">plWindowOutputTargetGAL::CaptureImage</a>  (<a class="el" href="../../de/d27/classpl_image.htm" title="A class containing image data and associated meta data.">plImage</a> &amp;out_image) override</dt>
<dd><a class="anchor" id="_todo000066"></a>Make this more efficient </dd>
</dl>
</div></div><!-- contents -->
</div><!-- PageDoc -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
