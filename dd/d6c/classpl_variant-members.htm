<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Member List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('da/d4c/classpl_variant.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">plVariant Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#acee6294d59c2b90e36873fa7af1c3335">CanConvertTo</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#ab3bfa578f49e2628b84d756456d63c1f">CanConvertTo</a>(Type::Enum type) const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>CanConvertTo</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>CompareFunc</b> (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#aa267cffdfb0a021d71fe578a2d34f7fd">ComputeHash</a>(plUInt64 uiSeed=0) const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a86b157bdd88b07b364d78b25f850d05c">ConvertTo</a>(plResult *out_pConversionStatus=nullptr) const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a122602202eb64f595fa3873895049f3e">ConvertTo</a>(Type::Enum type, plResult *out_pConversionStatus=nullptr) const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a0b03355328991c40e24a43128d429939">CopyTypedObject</a>(const void *value, const plRTTI *pType)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#ab1336e12e4e9fb278991d2fe0e8c469a">DispatchTo</a>(Functor &amp;ref_functor, Type::Enum type, Args &amp;&amp;... args)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#adc3de72cc347c83a7d6048347693a0e8">Get</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Get</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Get</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Get</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Get</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Get</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Get</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a714146850f08f502480c438685f9fbfa">GetData</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a0fb46746378594373b74130ba7f3255c">GetReflectedType</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#ac94599ada8024c478bbc3533c8776073">GetType</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>GetTypeFromVariantFunc</b> (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GetWritable</b>() (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>GetWritable</b>() (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GetWritable</b>() (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>GetWritable</b>() (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GetWritable</b>() (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a8bc607b0b0c9a866911949563dfff7a8">GetWriteAccess</a>()</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a45303b799748b74e0e87c28f1ee9631e">InitInplace</a>(const T &amp;value)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>InitShared</b>(const T &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InitTypedObject</b>(const T &amp;value, plTraitInt&lt; 0 &gt;) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>InitTypedObject</b>(const T &amp;value, plTraitInt&lt; 1 &gt;) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#adcc086406e186bf6ae4824c506a2273b">IsA</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>IsA</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsA</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>IsA</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsA</b>() const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#ac01340a19137e7526f549a4f1cfd12f5">IsFloatingPoint</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a1e8fc2bb6b2e7a650c16b0c36901cd6f">IsHashedString</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a68ceef2497a809053fab2badda147752">IsNumber</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#aacf0c8da07b5e5869e3f4ac764fae7f8">IsString</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a49803212a366ca0df24bab01061a3ede">IsValid</a>() const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a67d4435c3467eb57bea7361d4f76abcd">MoveTypedObject</a>(void *value, const plRTTI *pType)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#ad72ba9df066ce53e3f25213b67c9c1c5">operator=</a>(const plVariant &amp;other)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a700d773fa1a8bc3f38798d85d336d30f">operator=</a>(plVariant &amp;&amp;other) noexcept</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a866d392b81b5d1fc6393e7759a2e4b2f">operator=</a>(const T &amp;value)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator=</b>(const T &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a5ea37ecdc9fbe795d03902eee48736a5">operator==</a>(const plVariant &amp;other) const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a66a3138de0cac816e24e0f0166e2b100">operator==</a>(const T &amp;other) const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>operator==</b>(const T &amp;other) const (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a04d96408f2d559ac538461e54bdfa863">operator[]</a>(plUInt32 uiIndex) const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a4fca797a59228c08cfc339b26031db63">operator[]</a>(StringWrapper key) const</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b>(const plVariant &amp;) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a171f21e027c38dfacf5431d7630ebdea">plVariant</a>()</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#ada90bbbda7a21033b0e91f7b3492c555">plVariant</a>(const plVariant &amp;other)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a417bec50ab0a54a246b8aec9707e8797">plVariant</a>(plVariant &amp;&amp;other) noexcept</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const bool &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plInt8 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plUInt8 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plInt16 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plUInt16 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plInt32 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plUInt32 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plInt64 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plUInt64 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const float &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const double &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plColor &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plVec2 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plVec3 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plVec4 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plVec2I32 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plVec3I32 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plVec4I32 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plVec2U32 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plVec3U32 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plVec4U32 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plQuat &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#aad284b5940970284b115c6f429ef795e">plVariant</a>(const plMat3 &amp;value)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plMat4 &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plTransform &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const char *value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plString &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plUntrackedString &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plStringView &amp;value, bool bCopyString=true) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plDataBuffer &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plTime &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plUuid &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plAngle &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plColorGammaUB &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plHashedString &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plTempHashedString &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plVariantArray &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plVariantDictionary &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const plTypedPointer &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const plTypedObject &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const T &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const T *value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a6ae03a6de95af228208b4c0cf308e15a">plVariant</a>(void *value, const plRTTI *pType)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariant</b>(const T &amp;value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>plVariant</b>(const T *value) (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plVariantHelper</b> (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Type</b> typedef (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>TypeDeduction</b> typedef (defined in <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>)</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm#a6a677a677c522a123cf7fe532ca11415">~plVariant</a>()</td><td class="entry"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
