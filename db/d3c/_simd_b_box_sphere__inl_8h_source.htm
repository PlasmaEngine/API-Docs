<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Foundation/SimdMath/Implementation/SimdBBoxSphere_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/d3c/_simd_b_box_sphere__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">SimdBBoxSphere_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span>PL_ALWAYS_INLINE <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a54be40852ede10ef75c0ecdfa8a4e67a">plSimdBBoxSphere::plSimdBBoxSphere</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="foldopen" id="foldopen00005" data-start="{" data-end="}">
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a272656dc758ddd559e341b2e7c8ef213">    5</a></span>PL_ALWAYS_INLINE <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a54be40852ede10ef75c0ecdfa8a4e67a">plSimdBBoxSphere::plSimdBBoxSphere</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; vCenter, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; vBoxHalfExtents, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a>&amp; fSphereRadius)</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>  : m_CenterAndRadius(vCenter)</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  , m_BoxHalfExtents(vBoxHalfExtents)</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>{</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  m_CenterAndRadius.SetW(fSphereRadius);</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>}</div>
</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="}">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#acd803e1841aeef3083167f2ea5693b59">   12</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a54be40852ede10ef75c0ecdfa8a4e67a">plSimdBBoxSphere::plSimdBBoxSphere</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d01/classpl_simd_b_box.htm">plSimdBBox</a>&amp; box, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a>&amp; sphere)</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  *<span class="keyword">this</span> = <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a92aafd2fa3a9c11f70bf119f1bcfaf25">MakeFromBoxAndSphere</a>(box, sphere);</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>}</div>
</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="}">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a3fc3dc26d92382ebb180847d481e1773">   17</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a54be40852ede10ef75c0ecdfa8a4e67a">plSimdBBoxSphere::plSimdBBoxSphere</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d01/classpl_simd_b_box.htm">plSimdBBox</a>&amp; box)</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  : m_CenterAndRadius(box.GetCenter())</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  , m_BoxHalfExtents(m_CenterAndRadius - box.m_Min)</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>{</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  m_CenterAndRadius.SetW(m_BoxHalfExtents.GetLength&lt;3&gt;());</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>}</div>
</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="foldopen" id="foldopen00024" data-start="{" data-end="}">
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a9aeef54d0d33f437f2bfcea0c0e74a1a">   24</a></span>PL_ALWAYS_INLINE <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a54be40852ede10ef75c0ecdfa8a4e67a">plSimdBBoxSphere::plSimdBBoxSphere</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a>&amp; sphere)</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  : m_CenterAndRadius(sphere.m_CenterAndRadius)</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  , m_BoxHalfExtents(<a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(sphere.GetRadius()))</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>{</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>}</div>
</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="foldopen" id="foldopen00030" data-start="{" data-end="}">
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a46e1e8b8a8fe6c29f3da13328a6097f7">   30</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a46e1e8b8a8fe6c29f3da13328a6097f7">plSimdBBoxSphere::MakeZero</a>()</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>{</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> res;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  res.m_CenterAndRadius = <a class="code hl_function" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a>();</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  res.m_BoxHalfExtents = <a class="code hl_function" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a>();</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>}</div>
</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="foldopen" id="foldopen00038" data-start="{" data-end="}">
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#af07a247b69666043577d64ca31fb3a21">   38</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#af07a247b69666043577d64ca31fb3a21">plSimdBBoxSphere::MakeInvalid</a>()</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> res;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  res.m_CenterAndRadius.Set(0.0f, 0.0f, 0.0f, -plMath::SmallEpsilon&lt;float&gt;());</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  res.m_BoxHalfExtents.Set(-<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a6173d524e4c3564b75deacc577ad176a">plMath::MaxValue&lt;float&gt;</a>());</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>}</div>
</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#ae7e221b990ed5fbab99a33af126b8df3">   46</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#ae7e221b990ed5fbab99a33af126b8df3">plSimdBBoxSphere::MakeFromCenterExtents</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; vCenter, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; vBoxHalfExtents, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a>&amp; fSphereRadius)</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>{</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> res;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  res.m_CenterAndRadius = vCenter;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  res.m_BoxHalfExtents = vBoxHalfExtents;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  res.m_CenterAndRadius.SetW(fSphereRadius);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>}</div>
</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a44c0ffef52d8aac341f41c53aea88dfb">   55</a></span><span class="keyword">inline</span> <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a44c0ffef52d8aac341f41c53aea88dfb">plSimdBBoxSphere::MakeFromPoints</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>* pPoints, plUInt32 uiNumPoints, plUInt32 uiStride <span class="comment">/*= sizeof(plSimdVec4f)*/</span>)</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>{</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d0/d01/classpl_simd_b_box.htm">plSimdBBox</a> box = <a class="code hl_function" href="../../d0/d01/classpl_simd_b_box.htm#a3055fedcdecd42684fdf7deb64c3b846">plSimdBBox::MakeFromPoints</a>(pPoints, uiNumPoints, uiStride);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> res;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  res.m_CenterAndRadius = box.<a class="code hl_function" href="../../d0/d01/classpl_simd_b_box.htm#acc6ae00773f733458a233be00eb92fe6">GetCenter</a>();</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  res.m_BoxHalfExtents = res.m_CenterAndRadius - box.m_Min;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <a class="code hl_class" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> sphere(res.m_CenterAndRadius, <a class="code hl_function" href="../../d6/d46/classpl_simd_float.htm#ac1e5fde02ac38476a85a6f785738bced">plSimdFloat::MakeZero</a>());</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  sphere.<a class="code hl_function" href="../../db/d6f/classpl_simd_b_sphere.htm#a732dfc6a3f75673f776c35f84c063b2a">ExpandToInclude</a>(pPoints, uiNumPoints, uiStride);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  res.m_CenterAndRadius.SetW(sphere.<a class="code hl_function" href="../../db/d6f/classpl_simd_b_sphere.htm#a1bf766d8ec156ba05d5716b51a4a24e2">GetRadius</a>());</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>}</div>
</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="foldopen" id="foldopen00072" data-start="{" data-end="}">
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a85cce2b5fd7350a2cb2a3bd9a84e3a77">   72</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a85cce2b5fd7350a2cb2a3bd9a84e3a77">plSimdBBoxSphere::MakeFromBox</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d01/classpl_simd_b_box.htm">plSimdBBox</a>&amp; box)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>{</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a54be40852ede10ef75c0ecdfa8a4e67a">plSimdBBoxSphere</a>(box);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>}</div>
</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="foldopen" id="foldopen00077" data-start="{" data-end="}">
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#ad26dc8d1c831ded7ba52c18c76d1ccd1">   77</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#ad26dc8d1c831ded7ba52c18c76d1ccd1">plSimdBBoxSphere::MakeFromSphere</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a>&amp; sphere)</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>{</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a54be40852ede10ef75c0ecdfa8a4e67a">plSimdBBoxSphere</a>(sphere);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>}</div>
</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="}">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a92aafd2fa3a9c11f70bf119f1bcfaf25">   82</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a92aafd2fa3a9c11f70bf119f1bcfaf25">plSimdBBoxSphere::MakeFromBoxAndSphere</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d01/classpl_simd_b_box.htm">plSimdBBox</a>&amp; box, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a>&amp; sphere)</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>{</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a> res;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  res.m_CenterAndRadius = box.<a class="code hl_function" href="../../d0/d01/classpl_simd_b_box.htm#acc6ae00773f733458a233be00eb92fe6">GetCenter</a>();</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  res.m_BoxHalfExtents = res.m_CenterAndRadius - box.m_Min;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  res.m_CenterAndRadius.SetW(res.m_BoxHalfExtents.GetLength&lt;3&gt;().Min((sphere.<a class="code hl_function" href="../../db/d6f/classpl_simd_b_sphere.htm#a9210aff5071e43895a226ce8688ce53d">GetCenter</a>() - res.m_CenterAndRadius).GetLength&lt;3&gt;() + sphere.<a class="code hl_function" href="../../db/d6f/classpl_simd_b_sphere.htm#a1bf766d8ec156ba05d5716b51a4a24e2">GetRadius</a>()));</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>}</div>
</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="foldopen" id="foldopen00091" data-start="{" data-end="}">
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a55af7064b55965639cf47051c8f1d241">   91</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a55af7064b55965639cf47051c8f1d241">plSimdBBoxSphere::SetInvalid</a>()</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>{</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  m_CenterAndRadius.Set(0.0f, 0.0f, 0.0f, -plMath::SmallEpsilon&lt;float&gt;());</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  m_BoxHalfExtents.Set(-<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a6173d524e4c3564b75deacc577ad176a">plMath::MaxValue&lt;float&gt;</a>());</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>}</div>
</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="foldopen" id="foldopen00097" data-start="{" data-end="}">
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#af5801c509b5d2c68a137c8be19774da3">   97</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#af5801c509b5d2c68a137c8be19774da3">plSimdBBoxSphere::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keywordflow">return</span> m_CenterAndRadius.IsValid&lt;4&gt;() &amp;&amp; m_CenterAndRadius.w() &gt;= <a class="code hl_function" href="../../d6/d46/classpl_simd_float.htm#ac1e5fde02ac38476a85a6f785738bced">plSimdFloat::MakeZero</a>() &amp;&amp; m_BoxHalfExtents.IsValid&lt;3&gt;() &amp;&amp;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>         (m_BoxHalfExtents &gt;= <a class="code hl_function" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a>()).AllSet&lt;3&gt;();</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>}</div>
</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="foldopen" id="foldopen00103" data-start="{" data-end="}">
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6b3b214c5fc1decdf8334fcc231fb55d">  103</a></span><span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6b3b214c5fc1decdf8334fcc231fb55d">plSimdBBoxSphere::IsNaN</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keywordflow">return</span> m_CenterAndRadius.IsNaN&lt;4&gt;() || m_BoxHalfExtents.IsNaN&lt;3&gt;();</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>}</div>
</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="foldopen" id="foldopen00108" data-start="{" data-end="}">
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a84f1801e15fc630c463986cc659cffa9">  108</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a84f1801e15fc630c463986cc659cffa9">plSimdBBoxSphere::SetFromPoints</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>* pPoints, plUInt32 uiNumPoints, plUInt32 uiStride)</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>{</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  *<span class="keyword">this</span> = <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a44c0ffef52d8aac341f41c53aea88dfb">MakeFromPoints</a>(pPoints, uiNumPoints, uiStride);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>}</div>
</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="foldopen" id="foldopen00113" data-start="{" data-end="}">
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#add303bf86cdef69fa3eb89a2e10d949b">  113</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d0/d01/classpl_simd_b_box.htm">plSimdBBox</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#add303bf86cdef69fa3eb89a2e10d949b">plSimdBBoxSphere::GetBox</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d0/d01/classpl_simd_b_box.htm#ae3e6d952d4d7f75f66da6ea2c200ddab">plSimdBBox::MakeFromCenterAndHalfExtents</a>(m_CenterAndRadius, m_BoxHalfExtents);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>}</div>
</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="foldopen" id="foldopen00118" data-start="{" data-end="}">
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a06726855df1880944379c6b477aa34fe">  118</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a06726855df1880944379c6b477aa34fe">plSimdBBoxSphere::GetSphere</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  <a class="code hl_class" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> sphere;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  sphere.m_CenterAndRadius = m_CenterAndRadius;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keywordflow">return</span> sphere;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>}</div>
</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="foldopen" id="foldopen00125" data-start="{" data-end="}">
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6a454ad2527244430a417b1f1afb8ccd">  125</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6a454ad2527244430a417b1f1afb8ccd">plSimdBBoxSphere::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a>&amp; rhs)</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>{</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <a class="code hl_class" href="../../d0/d01/classpl_simd_b_box.htm">plSimdBBox</a> box = <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#add303bf86cdef69fa3eb89a2e10d949b">GetBox</a>();</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  box.<a class="code hl_function" href="../../d0/d01/classpl_simd_b_box.htm#ac7c19af1c8264ee4492d3c3ceabc83f9">ExpandToInclude</a>(rhs.<a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#add303bf86cdef69fa3eb89a2e10d949b">GetBox</a>());</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> center = box.<a class="code hl_function" href="../../d0/d01/classpl_simd_b_box.htm#acc6ae00773f733458a233be00eb92fe6">GetCenter</a>();</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> boxHalfExtents = center - box.m_Min;</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> tmpRadius = boxHalfExtents.GetLength&lt;3&gt;();</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> fSphereRadiusA = (m_CenterAndRadius - center).GetLength&lt;3&gt;() + m_CenterAndRadius.w();</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> fSphereRadiusB = (rhs.m_CenterAndRadius - center).GetLength&lt;3&gt;() + rhs.m_CenterAndRadius.w();</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  m_CenterAndRadius = center;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  m_CenterAndRadius.SetW(tmpRadius.Min(fSphereRadiusA.Max(fSphereRadiusB)));</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  m_BoxHalfExtents = boxHalfExtents;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>}</div>
</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="foldopen" id="foldopen00142" data-start="{" data-end="}">
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6161a06054364fcccf770c34d5f2e459">  142</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6161a06054364fcccf770c34d5f2e459">plSimdBBoxSphere::Transform</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d2/d16/classpl_simd_transform.htm">plSimdTransform</a>&amp; t)</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>{</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6161a06054364fcccf770c34d5f2e459">Transform</a>(t.<a class="code hl_function" href="../../d2/d16/classpl_simd_transform.htm#a9efb6c0fd39a3c245c769702188d2502">GetAsMat4</a>());</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>}</div>
</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="foldopen" id="foldopen00147" data-start="{" data-end="}">
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno"><a class="line" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a205aad13e252e535b7cfa3e18e2b4188">  147</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6161a06054364fcccf770c34d5f2e459">plSimdBBoxSphere::Transform</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/db0/classpl_simd_mat4f.htm">plSimdMat4f</a>&amp; mMat)</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>{</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> radius = m_CenterAndRadius.w();</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  m_CenterAndRadius = mMat.<a class="code hl_function" href="../../d0/db0/classpl_simd_mat4f.htm#aac3ae50ed5703ff34c89c9ab23352653">TransformPosition</a>(m_CenterAndRadius);</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> maxRadius = mMat.m_col0.Dot&lt;3&gt;(mMat.m_col0);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  maxRadius = maxRadius.Max(mMat.m_col1.Dot&lt;3&gt;(mMat.m_col1));</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  maxRadius = maxRadius.Max(mMat.m_col2.Dot&lt;3&gt;(mMat.m_col2));</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  radius *= maxRadius.GetSqrt();</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  m_CenterAndRadius.SetW(radius);</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> newHalfExtents = mMat.m_col0.Abs() * m_BoxHalfExtents.x();</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  newHalfExtents += mMat.m_col1.Abs() * m_BoxHalfExtents.y();</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  newHalfExtents += mMat.m_col2.Abs() * m_BoxHalfExtents.z();</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  m_BoxHalfExtents = newHalfExtents.CompMin(<a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(radius));</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>}</div>
</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> plSimdBBoxSphere::operator==(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <span class="keywordflow">return</span> (m_CenterAndRadius == rhs.m_CenterAndRadius).AllSet&lt;4&gt;() &amp;&amp; (m_BoxHalfExtents == rhs.m_BoxHalfExtents).AllSet&lt;3&gt;();</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>}</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> plSimdBBoxSphere::operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == rhs);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>}</div>
<div class="ttc" id="aclasspl_simd_b_box_htm"><div class="ttname"><a href="../../d0/d01/classpl_simd_b_box.htm">plSimdBBox</a></div><div class="ttdef"><b>Definition</b> SimdBBox.h:6</div></div>
<div class="ttc" id="aclasspl_simd_b_box_htm_a3055fedcdecd42684fdf7deb64c3b846"><div class="ttname"><a href="../../d0/d01/classpl_simd_b_box.htm#a3055fedcdecd42684fdf7deb64c3b846">plSimdBBox::MakeFromPoints</a></div><div class="ttdeci">static plSimdBBox MakeFromPoints(const plSimdVec4f *pPoints, plUInt32 uiNumPoints, plUInt32 uiStride=sizeof(plSimdVec4f))</div><div class="ttdoc">Creates a box around the given set of points. If uiNumPoints is zero, the returned box is invalid (sa...</div><div class="ttdef"><b>Definition</b> SimdBBox_inl.h:31</div></div>
<div class="ttc" id="aclasspl_simd_b_box_htm_ac7c19af1c8264ee4492d3c3ceabc83f9"><div class="ttname"><a href="../../d0/d01/classpl_simd_b_box.htm#ac7c19af1c8264ee4492d3c3ceabc83f9">plSimdBBox::ExpandToInclude</a></div><div class="ttdeci">void ExpandToInclude(const plSimdVec4f &amp;vPoint)</div><div class="ttdoc">Expands the box such that the given point is inside it.</div><div class="ttdef"><b>Definition</b> SimdBBox_inl.h:81</div></div>
<div class="ttc" id="aclasspl_simd_b_box_htm_acc6ae00773f733458a233be00eb92fe6"><div class="ttname"><a href="../../d0/d01/classpl_simd_b_box.htm#acc6ae00773f733458a233be00eb92fe6">plSimdBBox::GetCenter</a></div><div class="ttdeci">plSimdVec4f GetCenter() const</div><div class="ttdoc">Returns the center position of the box.</div><div class="ttdef"><b>Definition</b> SimdBBox_inl.h:66</div></div>
<div class="ttc" id="aclasspl_simd_b_box_htm_ae3e6d952d4d7f75f66da6ea2c200ddab"><div class="ttname"><a href="../../d0/d01/classpl_simd_b_box.htm#ae3e6d952d4d7f75f66da6ea2c200ddab">plSimdBBox::MakeFromCenterAndHalfExtents</a></div><div class="ttdeci">static plSimdBBox MakeFromCenterAndHalfExtents(const plSimdVec4f &amp;vCenter, const plSimdVec4f &amp;vHalfExtents)</div><div class="ttdoc">Creates a box from a center point and half-extents for each axis.</div><div class="ttdef"><b>Definition</b> SimdBBox_inl.h:21</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm">plSimdBBoxSphere</a></div><div class="ttdef"><b>Definition</b> SimdBBoxSphere.h:6</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a06726855df1880944379c6b477aa34fe"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a06726855df1880944379c6b477aa34fe">plSimdBBoxSphere::GetSphere</a></div><div class="ttdeci">plSimdBSphere GetSphere() const</div><div class="ttdoc">Returns the bounding sphere.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:118</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a44c0ffef52d8aac341f41c53aea88dfb"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a44c0ffef52d8aac341f41c53aea88dfb">plSimdBBoxSphere::MakeFromPoints</a></div><div class="ttdeci">static plSimdBBoxSphere MakeFromPoints(const plSimdVec4f *pPoints, plUInt32 uiNumPoints, plUInt32 uiStride=sizeof(plSimdVec4f))</div><div class="ttdoc">Creates an object that contains all the provided points.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:55</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a46e1e8b8a8fe6c29f3da13328a6097f7"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a46e1e8b8a8fe6c29f3da13328a6097f7">plSimdBBoxSphere::MakeZero</a></div><div class="ttdeci">static plSimdBBoxSphere MakeZero()</div><div class="ttdoc">Creates an object with all zero values. These are valid bounds around the origin with no volume.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:30</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a54be40852ede10ef75c0ecdfa8a4e67a"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a54be40852ede10ef75c0ecdfa8a4e67a">plSimdBBoxSphere::plSimdBBoxSphere</a></div><div class="ttdeci">plSimdBBoxSphere()</div><div class="ttdoc">Default constructor does not initialize anything.</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a55af7064b55965639cf47051c8f1d241"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a55af7064b55965639cf47051c8f1d241">plSimdBBoxSphere::SetInvalid</a></div><div class="ttdeci">void SetInvalid()</div><div class="ttdoc">Resets the bounds to an invalid state.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:91</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a6161a06054364fcccf770c34d5f2e459"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6161a06054364fcccf770c34d5f2e459">plSimdBBoxSphere::Transform</a></div><div class="ttdeci">void Transform(const plSimdTransform &amp;t)</div><div class="ttdoc">Transforms the bounds in its local space.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:142</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a6a454ad2527244430a417b1f1afb8ccd"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6a454ad2527244430a417b1f1afb8ccd">plSimdBBoxSphere::ExpandToInclude</a></div><div class="ttdeci">void ExpandToInclude(const plSimdBBoxSphere &amp;rhs)</div><div class="ttdoc">Expands the bounds such that the given bounds are inside it.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:125</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a6b3b214c5fc1decdf8334fcc231fb55d"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a6b3b214c5fc1decdf8334fcc231fb55d">plSimdBBoxSphere::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:103</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a84f1801e15fc630c463986cc659cffa9"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a84f1801e15fc630c463986cc659cffa9">plSimdBBoxSphere::SetFromPoints</a></div><div class="ttdeci">void SetFromPoints(const plSimdVec4f *pPoints, plUInt32 uiNumPoints, plUInt32 uiStride=sizeof(plSimdVec4f))</div><div class="ttdoc">Calculates the bounds from given set of points.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:108</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a85cce2b5fd7350a2cb2a3bd9a84e3a77"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a85cce2b5fd7350a2cb2a3bd9a84e3a77">plSimdBBoxSphere::MakeFromBox</a></div><div class="ttdeci">static plSimdBBoxSphere MakeFromBox(const plSimdBBox &amp;box)</div><div class="ttdoc">Creates an object from another bounding box.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:72</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_a92aafd2fa3a9c11f70bf119f1bcfaf25"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#a92aafd2fa3a9c11f70bf119f1bcfaf25">plSimdBBoxSphere::MakeFromBoxAndSphere</a></div><div class="ttdeci">static plSimdBBoxSphere MakeFromBoxAndSphere(const plSimdBBox &amp;box, const plSimdBSphere &amp;sphere)</div><div class="ttdoc">Creates an object from another bounding box and a sphere.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:82</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_ad26dc8d1c831ded7ba52c18c76d1ccd1"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#ad26dc8d1c831ded7ba52c18c76d1ccd1">plSimdBBoxSphere::MakeFromSphere</a></div><div class="ttdeci">static plSimdBBoxSphere MakeFromSphere(const plSimdBSphere &amp;sphere)</div><div class="ttdoc">Creates an object from another bounding sphere.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:77</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_add303bf86cdef69fa3eb89a2e10d949b"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#add303bf86cdef69fa3eb89a2e10d949b">plSimdBBoxSphere::GetBox</a></div><div class="ttdeci">plSimdBBox GetBox() const</div><div class="ttdoc">Returns the bounding box.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:113</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_ae7e221b990ed5fbab99a33af126b8df3"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#ae7e221b990ed5fbab99a33af126b8df3">plSimdBBoxSphere::MakeFromCenterExtents</a></div><div class="ttdeci">static plSimdBBoxSphere MakeFromCenterExtents(const plSimdVec4f &amp;vCenter, const plSimdVec4f &amp;vBoxHalfExtents, const plSimdFloat &amp;fSphereRadius)</div><div class="ttdoc">Creates an object from the given center point and extents.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:46</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_af07a247b69666043577d64ca31fb3a21"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#af07a247b69666043577d64ca31fb3a21">plSimdBBoxSphere::MakeInvalid</a></div><div class="ttdeci">static plSimdBBoxSphere MakeInvalid()</div><div class="ttdoc">Creates an 'invalid' object, ie one with negative extents/radius. Invalid objects can be made valid t...</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:38</div></div>
<div class="ttc" id="aclasspl_simd_b_box_sphere_htm_af5801c509b5d2c68a137c8be19774da3"><div class="ttname"><a href="../../d6/dcd/classpl_simd_b_box_sphere.htm#af5801c509b5d2c68a137c8be19774da3">plSimdBBoxSphere::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether the bounds is in an invalid state.</div><div class="ttdef"><b>Definition</b> SimdBBoxSphere_inl.h:97</div></div>
<div class="ttc" id="aclasspl_simd_b_sphere_htm"><div class="ttname"><a href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a></div><div class="ttdef"><b>Definition</b> SimdBSphere.h:6</div></div>
<div class="ttc" id="aclasspl_simd_b_sphere_htm_a1bf766d8ec156ba05d5716b51a4a24e2"><div class="ttname"><a href="../../db/d6f/classpl_simd_b_sphere.htm#a1bf766d8ec156ba05d5716b51a4a24e2">plSimdBSphere::GetRadius</a></div><div class="ttdeci">plSimdFloat GetRadius() const</div><div class="ttdoc">Returns the radius.</div><div class="ttdef"><b>Definition</b> SimdBSphere_inl.h:85</div></div>
<div class="ttc" id="aclasspl_simd_b_sphere_htm_a732dfc6a3f75673f776c35f84c063b2a"><div class="ttname"><a href="../../db/d6f/classpl_simd_b_sphere.htm#a732dfc6a3f75673f776c35f84c063b2a">plSimdBSphere::ExpandToInclude</a></div><div class="ttdeci">void ExpandToInclude(const plSimdVec4f &amp;vPoint)</div><div class="ttdoc">Increases the sphere's radius to include this point.</div><div class="ttdef"><b>Definition</b> SimdBSphere_inl.h:95</div></div>
<div class="ttc" id="aclasspl_simd_b_sphere_htm_a9210aff5071e43895a226ce8688ce53d"><div class="ttname"><a href="../../db/d6f/classpl_simd_b_sphere.htm#a9210aff5071e43895a226ce8688ce53d">plSimdBSphere::GetCenter</a></div><div class="ttdeci">plSimdVec4f GetCenter() const</div><div class="ttdoc">Returns the center.</div><div class="ttdef"><b>Definition</b> SimdBSphere_inl.h:80</div></div>
<div class="ttc" id="aclasspl_simd_float_htm"><div class="ttname"><a href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a></div><div class="ttdef"><b>Definition</b> SimdFloat.h:7</div></div>
<div class="ttc" id="aclasspl_simd_float_htm_ac1e5fde02ac38476a85a6f785738bced"><div class="ttname"><a href="../../d6/d46/classpl_simd_float.htm#ac1e5fde02ac38476a85a6f785738bced">plSimdFloat::MakeZero</a></div><div class="ttdeci">static plSimdFloat MakeZero()</div><div class="ttdoc">Creates an plSimdFloat that is initialized to zero.</div><div class="ttdef"><b>Definition</b> FPUFloat_inl.h:36</div></div>
<div class="ttc" id="aclasspl_simd_mat4f_htm"><div class="ttname"><a href="../../d0/db0/classpl_simd_mat4f.htm">plSimdMat4f</a></div><div class="ttdoc">A 4x4 matrix class.</div><div class="ttdef"><b>Definition</b> SimdMat4f.h:7</div></div>
<div class="ttc" id="aclasspl_simd_mat4f_htm_aac3ae50ed5703ff34c89c9ab23352653"><div class="ttname"><a href="../../d0/db0/classpl_simd_mat4f.htm#aac3ae50ed5703ff34c89c9ab23352653">plSimdMat4f::TransformPosition</a></div><div class="ttdeci">plSimdVec4f TransformPosition(const plSimdVec4f &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is one (default behavior).</div><div class="ttdef"><b>Definition</b> SimdMat4f_inl.h:141</div></div>
<div class="ttc" id="aclasspl_simd_transform_htm"><div class="ttname"><a href="../../d2/d16/classpl_simd_transform.htm">plSimdTransform</a></div><div class="ttdef"><b>Definition</b> SimdTransform.h:6</div></div>
<div class="ttc" id="aclasspl_simd_transform_htm_a9efb6c0fd39a3c245c769702188d2502"><div class="ttname"><a href="../../d2/d16/classpl_simd_transform.htm#a9efb6c0fd39a3c245c769702188d2502">plSimdTransform::GetAsMat4</a></div><div class="ttdeci">plSimdMat4f GetAsMat4() const</div><div class="ttdoc">Returns the transformation as a matrix.</div><div class="ttdef"><b>Definition</b> SimdTransform_inl.h:90</div></div>
<div class="ttc" id="aclasspl_simd_vec4f_htm"><div class="ttname"><a href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a></div><div class="ttdoc">A 4-component SIMD vector class.</div><div class="ttdef"><b>Definition</b> SimdVec4f.h:8</div></div>
<div class="ttc" id="aclasspl_simd_vec4f_htm_a9079be9cc5ff9c8644d5a275f1099c0f"><div class="ttname"><a href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a></div><div class="ttdeci">static plSimdVec4f MakeZero()</div><div class="ttdoc">Creates an plSimdVec4f that is initialized to zero.</div><div class="ttdef"><b>Definition</b> SimdVec4f_inl.h:8</div></div>
<div class="ttc" id="anamespacepl_math_htm_a6173d524e4c3564b75deacc577ad176a"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a6173d524e4c3564b75deacc577ad176a">plMath::MaxValue</a></div><div class="ttdeci">constexpr TYPE MaxValue()</div><div class="ttdoc">Returns the largest possible positive value (that is not infinity).</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_e0773f6bc48aee020523ff8d30d00c02.htm">SimdMath</a></li><li class="navelem"><a class="el" href="../../dir_3ba8ecdc8c842079897e8785b600fb10.htm">Implementation</a></li><li class="navelem"><b>SimdBBoxSphere_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
