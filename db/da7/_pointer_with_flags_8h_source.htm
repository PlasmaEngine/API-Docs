<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/Types/PointerWithFlags.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/da7/_pointer_with_flags_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">PointerWithFlags.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> PtrType, plUInt8 NumFlagBits = 2&gt;</div>
<div class="foldopen" id="foldopen00011" data-start="{" data-end="};">
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm">   11</a></span><span class="keyword">class </span><a class="code hl_class" href="../../da/db4/classpl_pointer_with_flags.htm">plPointerWithFlags</a></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  enum : <span class="keywordtype">size_t</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  {</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>    AllOnes = (std::size_t)(-1),</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    PtrBits = <span class="keyword">sizeof</span>(<span class="keywordtype">void</span>*) * 8,</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    FlagsMask = (AllOnes &gt;&gt; (PtrBits - NumFlagBits)),</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    PtrMask = ~FlagsMask,</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  };</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <span class="keywordtype">void</span>* m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a82ac1169b6c4cb0bd336db9c01d0866b">   26</a></span>  <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a82ac1169b6c4cb0bd336db9c01d0866b">plPointerWithFlags</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a4585bd84f2e3e1df91fcd5f5998e755f">   29</a></span>  <span class="keyword">explicit</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a4585bd84f2e3e1df91fcd5f5998e755f">plPointerWithFlags</a>(PtrType* pPtr, plUInt8 uiFlags = 0) { <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a184bb97b0be4631b2f0a83811b261e66">SetPtrAndFlags</a>(pPtr, uiFlags); }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="foldopen" id="foldopen00032" data-start="{" data-end="}">
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a184bb97b0be4631b2f0a83811b261e66">   32</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a184bb97b0be4631b2f0a83811b261e66">SetPtrAndFlags</a>(PtrType* pPtr, plUInt8 uiFlags)</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  {</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keyword">const</span> std::uintptr_t isrc = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;pPtr);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    iptr = (isrc &amp; PtrMask) | (uiFlags &amp; FlagsMask);</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  }</div>
</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="foldopen" id="foldopen00041" data-start="{" data-end="}">
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">   41</a></span>  <span class="keyword">const</span> PtrType* <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <span class="keyword">const</span> std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>PtrType*<span class="keyword">&gt;</span>(iptr &amp; PtrMask); <span class="comment">// mask off lower N bits</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  }</div>
</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="foldopen" id="foldopen00048" data-start="{" data-end="}">
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a3864bde3f9a61ba7558cc49f00266add">   48</a></span>  PtrType* <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a3864bde3f9a61ba7558cc49f00266add">GetPtr</a>()</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  {</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span>PtrType*<span class="keyword">&gt;</span>(iptr &amp; PtrMask); <span class="comment">// mask off lower N bits</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  }</div>
</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a4d00b2f779005c3134158d7e1e1f2c7e">   55</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a4d00b2f779005c3134158d7e1e1f2c7e">SetPtr</a>(PtrType* pPtr)</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  {</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    <span class="keyword">const</span> std::uintptr_t isrc = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;pPtr);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    PL_ASSERT_DEBUG(</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>      (isrc &amp; FlagsMask) == 0, <span class="stringliteral">&quot;The given pointer does not have an {} byte alignment and thus cannot be stored lossless.&quot;</span>, 1u &lt;&lt; NumFlagBits);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    iptr = (isrc &amp; PtrMask) | (iptr &amp; FlagsMask);</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  }</div>
</div>
<div class="foldopen" id="foldopen00066" data-start="{" data-end="}">
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a5894a2db2ff2b7c58e6425406ad646c3">   66</a></span>  plUInt8 <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a5894a2db2ff2b7c58e6425406ad646c3">GetFlags</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <span class="keyword">const</span> std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>plUInt8<span class="keyword">&gt;</span>(iptr &amp; FlagsMask);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  }</div>
</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="foldopen" id="foldopen00073" data-start="{" data-end="}">
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a8a0d46bc0550848ee3c297ad674b798b">   73</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a8a0d46bc0550848ee3c297ad674b798b">SetFlags</a>(plUInt8 uiFlags)</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  {</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    PL_ASSERT_DEBUG(uiFlags &lt;= FlagsMask, <span class="stringliteral">&quot;The flag value {} requires more than {} bits&quot;</span>, uiFlags, NumFlagBits);</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    std::uintptr_t&amp; iptr = *<span class="keyword">reinterpret_cast&lt;</span>std::uintptr_t*<span class="keyword">&gt;</span>(&amp;m_pPtr);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    iptr = (iptr &amp; PtrMask) | (uiFlags &amp; FlagsMask);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  }</div>
</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a04f7449a42e8f30d647ad19962c50160">   83</a></span>  <span class="keyword">operator</span> PtrType*() { <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>(); }</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a0ff7dff0b5fec72eb1dfbd5a34f10f9c">   86</a></span>  <span class="keyword">operator</span> <span class="keyword">const</span> PtrType*() <span class="keyword">const</span> { <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>(); }</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#abb69fe38dfe5dc59793829ba4375b47e">   89</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#abb69fe38dfe5dc59793829ba4375b47e">operator=</a>(PtrType* pPtr) { <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a4d00b2f779005c3134158d7e1e1f2c7e">SetPtr</a>(pPtr); }</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  template &lt;typename = typename std::enable_if&lt;std::is_const&lt;PtrType&gt;::value == <span class="keyword">false</span>&gt;&gt;</div>
<div class="foldopen" id="foldopen00093" data-start="{" data-end="}">
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a5d6293d75c33ecbc2dfd884a10ecd5fc">   93</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a5d6293d75c33ecbc2dfd884a10ecd5fc">operator==</a>(<span class="keyword">const</span> PtrType* pPtr)<span class="keyword"> const</span></div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>() == pPtr;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  }</div>
</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="preprocessor">#if PL_DISABLED(PL_USE_CPP20_OPERATORS)</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  template &lt;typename = typename std::enable_if&lt;std::is_const&lt;PtrType&gt;::value == <span class="keyword">false</span>&gt;&gt;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> PtrType* pPtr)<span class="keyword"> const</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == pPtr);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a5d6293d75c33ecbc2dfd884a10ecd5fc">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/db4/classpl_pointer_with_flags.htm">plPointerWithFlags&lt;PtrType, NumFlagBits&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>() == rhs.<a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>();</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  }</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  PL_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <a class="code hl_class" href="../../da/db4/classpl_pointer_with_flags.htm">plPointerWithFlags&lt;PtrType, NumFlagBits&gt;</a>&amp;);</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a4fd7380898f207f83e7d43563ba34c0e">  115</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a4fd7380898f207f83e7d43563ba34c0e">operator==</a>(PtrType* pPtr)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>() == pPtr; }</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  PL_ADD_DEFAULT_OPERATOR_NOTEQUAL(PtrType*);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#aa64d7ac3ed6453f67a3d9ca31221f4d3">  119</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#aa64d7ac3ed6453f67a3d9ca31221f4d3">operator==</a>(std::nullptr_t)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>() == <span class="keyword">nullptr</span>; }</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  PL_ADD_DEFAULT_OPERATOR_NOTEQUAL(std::nullptr_t);</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a209c63641949be08a9ceec51b04b67f3">  123</a></span>  <span class="keyword">explicit</span> <span class="keyword">operator</span> bool()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>() != <span class="keyword">nullptr</span>; }</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#af14d13e273ccbc0f9a41ca97f635ac68">  126</a></span>  <span class="keyword">const</span> PtrType* <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#af14d13e273ccbc0f9a41ca97f635ac68">operator-&gt;</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>(); }</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#ad2987200a4ef37de3498b497677444ec">  129</a></span>  PtrType* <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#ad2987200a4ef37de3498b497677444ec">operator-&gt;</a>() { <span class="keywordflow">return</span> <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>(); }</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#a04ed655ace4c265571d6376e59a4141e">  132</a></span>  <span class="keyword">const</span> PtrType&amp; <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a04ed655ace4c265571d6376e59a4141e">operator*</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> *<a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>(); }</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno"><a class="line" href="../../da/db4/classpl_pointer_with_flags.htm#ae37ca19dcee7cb7a1794a733bc5e73df">  135</a></span>  PtrType&amp; <a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#ae37ca19dcee7cb7a1794a733bc5e73df">operator*</a>() { <span class="keywordflow">return</span> *<a class="code hl_function" href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">GetPtr</a>(); }</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>};</div>
</div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm">plPointerWithFlags</a></div><div class="ttdoc">A wrapper around a raw pointer that allows to use the lower N bits for flags.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:12</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a04ed655ace4c265571d6376e59a4141e"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a04ed655ace4c265571d6376e59a4141e">plPointerWithFlags::operator*</a></div><div class="ttdeci">const PtrType &amp; operator*() const</div><div class="ttdoc">Dereferences the pointer.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:132</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a184bb97b0be4631b2f0a83811b261e66"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a184bb97b0be4631b2f0a83811b261e66">plPointerWithFlags::SetPtrAndFlags</a></div><div class="ttdeci">void SetPtrAndFlags(PtrType *pPtr, plUInt8 uiFlags)</div><div class="ttdoc">Changes the pointer and flags.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:32</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a2a5d5027f5f85fbe111fa190f90fa040"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a2a5d5027f5f85fbe111fa190f90fa040">plPointerWithFlags::GetPtr</a></div><div class="ttdeci">const PtrType * GetPtr() const</div><div class="ttdoc">Returns the masked off pointer value.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:41</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a3864bde3f9a61ba7558cc49f00266add"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a3864bde3f9a61ba7558cc49f00266add">plPointerWithFlags::GetPtr</a></div><div class="ttdeci">PtrType * GetPtr()</div><div class="ttdoc">Returns the masked off pointer value.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:48</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a4585bd84f2e3e1df91fcd5f5998e755f"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a4585bd84f2e3e1df91fcd5f5998e755f">plPointerWithFlags::plPointerWithFlags</a></div><div class="ttdeci">plPointerWithFlags(PtrType *pPtr, plUInt8 uiFlags=0)</div><div class="ttdoc">Initializes the pointer and flags.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:29</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a4d00b2f779005c3134158d7e1e1f2c7e"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a4d00b2f779005c3134158d7e1e1f2c7e">plPointerWithFlags::SetPtr</a></div><div class="ttdeci">void SetPtr(PtrType *pPtr)</div><div class="ttdoc">Changes the pointer value only. Flags stay unchanged.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:55</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a4fd7380898f207f83e7d43563ba34c0e"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a4fd7380898f207f83e7d43563ba34c0e">plPointerWithFlags::operator==</a></div><div class="ttdeci">bool operator==(PtrType *pPtr) const</div><div class="ttdoc">Compares the pointer part for equality (flags are ignored)</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:115</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a5894a2db2ff2b7c58e6425406ad646c3"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a5894a2db2ff2b7c58e6425406ad646c3">plPointerWithFlags::GetFlags</a></div><div class="ttdeci">plUInt8 GetFlags() const</div><div class="ttdoc">Returns the flags value only.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:66</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a5d6293d75c33ecbc2dfd884a10ecd5fc"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a5d6293d75c33ecbc2dfd884a10ecd5fc">plPointerWithFlags::operator==</a></div><div class="ttdeci">bool operator==(const PtrType *pPtr) const</div><div class="ttdoc">Compares the pointer part for equality (flags are ignored)</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:93</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a82ac1169b6c4cb0bd336db9c01d0866b"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a82ac1169b6c4cb0bd336db9c01d0866b">plPointerWithFlags::plPointerWithFlags</a></div><div class="ttdeci">plPointerWithFlags()=default</div><div class="ttdoc">Initializes the pointer and flags with zero.</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_a8a0d46bc0550848ee3c297ad674b798b"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#a8a0d46bc0550848ee3c297ad674b798b">plPointerWithFlags::SetFlags</a></div><div class="ttdeci">void SetFlags(plUInt8 uiFlags)</div><div class="ttdoc">Changes only the flags value. The given value must fit into the reserved bits.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:73</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_aa64d7ac3ed6453f67a3d9ca31221f4d3"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#aa64d7ac3ed6453f67a3d9ca31221f4d3">plPointerWithFlags::operator==</a></div><div class="ttdeci">bool operator==(std::nullptr_t) const</div><div class="ttdoc">Compares the pointer part for equality (flags are ignored)</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:119</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_abb69fe38dfe5dc59793829ba4375b47e"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#abb69fe38dfe5dc59793829ba4375b47e">plPointerWithFlags::operator=</a></div><div class="ttdeci">void operator=(PtrType *pPtr)</div><div class="ttdoc">Changes the pointer value only. Flags stay unchanged.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:89</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_ad2987200a4ef37de3498b497677444ec"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#ad2987200a4ef37de3498b497677444ec">plPointerWithFlags::operator-&gt;</a></div><div class="ttdeci">PtrType * operator-&gt;()</div><div class="ttdoc">Dereferences the pointer.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:129</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_ae37ca19dcee7cb7a1794a733bc5e73df"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#ae37ca19dcee7cb7a1794a733bc5e73df">plPointerWithFlags::operator*</a></div><div class="ttdeci">PtrType &amp; operator*()</div><div class="ttdoc">Dereferences the pointer.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:135</div></div>
<div class="ttc" id="aclasspl_pointer_with_flags_htm_af14d13e273ccbc0f9a41ca97f635ac68"><div class="ttname"><a href="../../da/db4/classpl_pointer_with_flags.htm#af14d13e273ccbc0f9a41ca97f635ac68">plPointerWithFlags::operator-&gt;</a></div><div class="ttdeci">const PtrType * operator-&gt;() const</div><div class="ttdoc">Dereferences the pointer.</div><div class="ttdef"><b>Definition</b> PointerWithFlags.h:126</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c32432c00eff92f753f8e1e2859d61e1.htm">Types</a></li><li class="navelem"><b>PointerWithFlags.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
