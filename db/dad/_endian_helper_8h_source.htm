<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/Memory/EndianHelper.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/dad/_endian_helper_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">EndianHelper.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="foldopen" id="foldopen00006" data-start="{" data-end="};">
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm">    6</a></span><span class="keyword">struct </span>PL_FOUNDATION_DLL <a class="code hl_struct" href="../../d2/dcc/structpl_endian_helper.htm">plEndianHelper</a></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="}">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#a48631f9674eec020198d882065027310">   12</a></span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#a48631f9674eec020198d882065027310">IsBigEndian</a>()</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  {</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>    <span class="keyword">const</span> <span class="keywordtype">int</span> i = 1;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>    <span class="keywordflow">return</span> (*(<span class="keywordtype">char</span>*)&amp;i) == 0;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  }</div>
</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#ad06af6e880a55e7423a6d4ea3c2e8e76">   21</a></span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#ad06af6e880a55e7423a6d4ea3c2e8e76">IsLittleEndian</a>() { <span class="keywordflow">return</span> !IsBigEndian(); }</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="foldopen" id="foldopen00024" data-start="{" data-end="}">
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#ae0ac5b4a08aa14ddf6c3e0f815158551">   24</a></span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#ae0ac5b4a08aa14ddf6c3e0f815158551">SwitchWords</a>(plUInt16* pWords, plUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  {</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    <span class="keywordflow">for</span> (plUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>      pWords[i] = Switch(pWords[i]);</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  }</div>
</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#a17e7d51430c44ab42787ff2cbb668c76">   31</a></span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#a17e7d51430c44ab42787ff2cbb668c76">SwitchDWords</a>(plUInt32* pDWords, plUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  {</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <span class="keywordflow">for</span> (plUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>      pDWords[i] = Switch(pDWords[i]);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  }</div>
</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="foldopen" id="foldopen00038" data-start="{" data-end="}">
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#a5b42b9395d84f9967bb75543c3dda29a">   38</a></span>  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#a5b42b9395d84f9967bb75543c3dda29a">SwitchQWords</a>(plUInt64* pQWords, plUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  {</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    <span class="keywordflow">for</span> (plUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>      pQWords[i] = Switch(pQWords[i]);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  }</div>
</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="foldopen" id="foldopen00045" data-start="{" data-end="}">
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#a36b208854ef9545ce78e1f6086047855">   45</a></span>  <span class="keyword">static</span> PL_ALWAYS_INLINE plUInt16 <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#a36b208854ef9545ce78e1f6086047855">Switch</a>(plUInt16 uiWord) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  {</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    <span class="keywordflow">return</span> (((uiWord &amp; 0xFF) &lt;&lt; 8) | ((uiWord &gt;&gt; 8) &amp; 0xFF));</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  }</div>
</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="foldopen" id="foldopen00051" data-start="{" data-end="}">
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#a549862c35dd838a2765a7609c878c90b">   51</a></span>  <span class="keyword">static</span> PL_ALWAYS_INLINE plUInt32 <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#a549862c35dd838a2765a7609c878c90b">Switch</a>(plUInt32 uiDWord) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  {</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    <span class="keywordflow">return</span> (((uiDWord &amp; 0xFF) &lt;&lt; 24) | (((uiDWord &gt;&gt; 8) &amp; 0xFF) &lt;&lt; 16) | (((uiDWord &gt;&gt; 16) &amp; 0xFF) &lt;&lt; 8) | ((uiDWord &gt;&gt; 24) &amp; 0xFF));</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  }</div>
</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="foldopen" id="foldopen00057" data-start="{" data-end="}">
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#abe14b0c5916cf60f50c5be7b7f91341d">   57</a></span>  <span class="keyword">static</span> PL_ALWAYS_INLINE plUInt64 <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#abe14b0c5916cf60f50c5be7b7f91341d">Switch</a>(plUInt64 uiQWord) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  {</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <span class="keywordflow">return</span> (((uiQWord &amp; 0xFF) &lt;&lt; 56) | ((uiQWord &amp; 0xFF00) &lt;&lt; 40) | ((uiQWord &amp; 0xFF0000) &lt;&lt; 24) | ((uiQWord &amp; 0xFF000000) &lt;&lt; 8) |</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>            ((uiQWord &amp; 0xFF00000000) &gt;&gt; 8) | ((uiQWord &amp; 0xFF0000000000) &gt;&gt; 24) | ((uiQWord &amp; 0xFF000000000000) &gt;&gt; 40) |</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>            ((uiQWord &amp; 0xFF00000000000000) &gt;&gt; 56));</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  }</div>
</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00066" data-start="{" data-end="}">
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#acf453f393a4d3c59b488986115082036">   66</a></span>  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#acf453f393a4d3c59b488986115082036">SwitchInPlace</a>(T* pValue) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  {</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <span class="keyword">static_assert</span>(</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>      (<span class="keyword">sizeof</span>(T) == 2 || <span class="keyword">sizeof</span>(T) == 4 || <span class="keyword">sizeof</span>(T) == 8), <span class="stringliteral">&quot;Switch in place only works for type equivalents of plUInt16, plUInt32, plUInt64!&quot;</span>);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 2)</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>      <span class="keyword">struct </span>TAnd16BitUnion</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>      {</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>        <span class="keyword">union</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>        {</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>          plUInt16 BitValue;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>          T TValue;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>        };</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>      };</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>      TAnd16BitUnion Temp;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>      Temp.TValue = *pValue;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>      *pValue = Temp.TValue;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 4)</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    {</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>      <span class="keyword">struct </span>TAnd32BitUnion</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>      {</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>        <span class="keyword">union</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>        {</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>          plUInt32 BitValue;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>          T TValue;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>        };</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>      };</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      TAnd32BitUnion Temp;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>      Temp.TValue = *pValue;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>      *pValue = Temp.TValue;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 8)</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    {</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>      <span class="keyword">struct </span>TAnd64BitUnion</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>      {</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>        <span class="keyword">union</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>        {</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>          plUInt64 BitValue;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>          T TValue;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>        };</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>      };</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>      TAnd64BitUnion Temp;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>      Temp.TValue = *pValue;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      *pValue = Temp.TValue;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    }</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  }</div>
</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="preprocessor">#if PL_ENABLED(PL_PLATFORM_LITTLE_ENDIAN)</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(plUInt16* <span class="comment">/*pWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>)</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  {</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  }</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(plUInt16* <span class="comment">/*pWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(plUInt32* <span class="comment">/*pDWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(plUInt32* <span class="comment">/*pDWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(plUInt64* <span class="comment">/*pQWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(plUInt64* <span class="comment">/*pQWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(plUInt16* pWords, plUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(plUInt16* pWords, plUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(plUInt32* pDWords, plUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(plUInt32* pDWords, plUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(plUInt64* pQWords, plUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(plUInt64* pQWords, plUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_BIG_ENDIAN)</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(plUInt16* pWords, plUInt32 uiCount)</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  {</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    SwitchWords(pWords, uiCount);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  }</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(plUInt16* pWords, plUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(plUInt32* pDWords, plUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(plUInt32* pDWords, plUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(plUInt64* pQWords, plUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(plUInt64* pQWords, plUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(plUInt16* <span class="comment">/*pWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(plUInt16* <span class="comment">/*pWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(plUInt32* <span class="comment">/*pWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(plUInt32* <span class="comment">/*pWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(plUInt64* <span class="comment">/*pWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <span class="keyword">static</span> PL_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(plUInt64* <span class="comment">/*pWords*/</span>, plUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> SwitchStruct(<span class="keywordtype">void</span>* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00195" data-start="{" data-end="}">
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#ae00a5598f9a212a17e0b7f8517afb14e">  195</a></span>  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#ae00a5598f9a212a17e0b7f8517afb14e">SwitchStruct</a>(T* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  {</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    SwitchStruct(<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span>*<span class="keyword">&gt;</span>(pDataPointer), szFormat);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  }</div>
</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> SwitchStructs(<span class="keywordtype">void</span>* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, plUInt32 uiStride, plUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00211" data-start="{" data-end="}">
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno"><a class="line" href="../../d2/dcc/structpl_endian_helper.htm#a9d049fa341ab0306ea8458183997924a">  211</a></span>  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d2/dcc/structpl_endian_helper.htm#a9d049fa341ab0306ea8458183997924a">SwitchStructs</a>(T* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, plUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>  {</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    SwitchStructs(<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span>*<span class="keyword">&gt;</span>(pDataPointer), szFormat, <span class="keyword">sizeof</span>(T), uiCount);</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  }</div>
</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>};</div>
</div>
<div class="ttc" id="astructpl_endian_helper_htm"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm">plEndianHelper</a></div><div class="ttdoc">Collection of helper methods when working with endianess &quot;problems&quot;.</div><div class="ttdef"><b>Definition</b> EndianHelper.h:7</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_a17e7d51430c44ab42787ff2cbb668c76"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#a17e7d51430c44ab42787ff2cbb668c76">plEndianHelper::SwitchDWords</a></div><div class="ttdeci">static void SwitchDWords(plUInt32 *pDWords, plUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of double words (32 bit values).</div><div class="ttdef"><b>Definition</b> EndianHelper.h:31</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_a36b208854ef9545ce78e1f6086047855"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#a36b208854ef9545ce78e1f6086047855">plEndianHelper::Switch</a></div><div class="ttdeci">static PL_ALWAYS_INLINE plUInt16 Switch(plUInt16 uiWord)</div><div class="ttdoc">Returns a single switched word (16 bit value).</div><div class="ttdef"><b>Definition</b> EndianHelper.h:45</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_a48631f9674eec020198d882065027310"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#a48631f9674eec020198d882065027310">plEndianHelper::IsBigEndian</a></div><div class="ttdeci">static bool IsBigEndian()</div><div class="ttdoc">Returns true if called on a big endian system, false otherwise.</div><div class="ttdef"><b>Definition</b> EndianHelper.h:12</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_a549862c35dd838a2765a7609c878c90b"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#a549862c35dd838a2765a7609c878c90b">plEndianHelper::Switch</a></div><div class="ttdeci">static PL_ALWAYS_INLINE plUInt32 Switch(plUInt32 uiDWord)</div><div class="ttdoc">Returns a single switched double word (32 bit value).</div><div class="ttdef"><b>Definition</b> EndianHelper.h:51</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_a5b42b9395d84f9967bb75543c3dda29a"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#a5b42b9395d84f9967bb75543c3dda29a">plEndianHelper::SwitchQWords</a></div><div class="ttdeci">static void SwitchQWords(plUInt64 *pQWords, plUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of quad words (64 bit values).</div><div class="ttdef"><b>Definition</b> EndianHelper.h:38</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_a9d049fa341ab0306ea8458183997924a"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#a9d049fa341ab0306ea8458183997924a">plEndianHelper::SwitchStructs</a></div><div class="ttdeci">static void SwitchStructs(T *pDataPointer, const char *szFormat, plUInt32 uiCount)</div><div class="ttdoc">Templated helper method for SwitchStructs.</div><div class="ttdef"><b>Definition</b> EndianHelper.h:211</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_abe14b0c5916cf60f50c5be7b7f91341d"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#abe14b0c5916cf60f50c5be7b7f91341d">plEndianHelper::Switch</a></div><div class="ttdeci">static PL_ALWAYS_INLINE plUInt64 Switch(plUInt64 uiQWord)</div><div class="ttdoc">Returns a single switched quad word (64 bit value).</div><div class="ttdef"><b>Definition</b> EndianHelper.h:57</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_acf453f393a4d3c59b488986115082036"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#acf453f393a4d3c59b488986115082036">plEndianHelper::SwitchInPlace</a></div><div class="ttdeci">static void SwitchInPlace(T *pValue)</div><div class="ttdoc">Switches a value in place (template accepts pointers for 2, 4 &amp; 8 byte data types)</div><div class="ttdef"><b>Definition</b> EndianHelper.h:66</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_ad06af6e880a55e7423a6d4ea3c2e8e76"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#ad06af6e880a55e7423a6d4ea3c2e8e76">plEndianHelper::IsLittleEndian</a></div><div class="ttdeci">static bool IsLittleEndian()</div><div class="ttdoc">Returns true if called on a little endian system, false otherwise.</div><div class="ttdef"><b>Definition</b> EndianHelper.h:21</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_ae00a5598f9a212a17e0b7f8517afb14e"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#ae00a5598f9a212a17e0b7f8517afb14e">plEndianHelper::SwitchStruct</a></div><div class="ttdeci">static void SwitchStruct(T *pDataPointer, const char *szFormat)</div><div class="ttdoc">Templated helper method for SwitchStruct.</div><div class="ttdef"><b>Definition</b> EndianHelper.h:195</div></div>
<div class="ttc" id="astructpl_endian_helper_htm_ae0ac5b4a08aa14ddf6c3e0f815158551"><div class="ttname"><a href="../../d2/dcc/structpl_endian_helper.htm#ae0ac5b4a08aa14ddf6c3e0f815158551">plEndianHelper::SwitchWords</a></div><div class="ttdeci">static void SwitchWords(plUInt16 *pWords, plUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of words (16 bit values).</div><div class="ttdef"><b>Definition</b> EndianHelper.h:24</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4fbc68de02063aadaaa993e858caad29.htm">Memory</a></li><li class="navelem"><b>EndianHelper.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
