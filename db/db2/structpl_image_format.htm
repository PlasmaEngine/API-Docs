<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plImageFormat Struct Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/db2/structpl_image_format.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../df/dbb/structpl_image_format-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plImageFormat Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Enum describing the encoding format of the pixels of an image.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d5d/_image_format_8h_source.htm">ImageFormat.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:acab2bc1a9e5b69f2aee6557ac29facfc" id="r_acab2bc1a9e5b69f2aee6557ac29facfc"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> : plUInt16 { <br />
&#160;&#160;<b>UNKNOWN</b>
, <b>R32G32B32A32_FLOAT</b>
, <b>R32G32B32A32_UINT</b>
, <b>R32G32B32A32_SINT</b>
, <br />
&#160;&#160;<b>R32G32B32_FLOAT</b>
, <b>R32G32B32_UINT</b>
, <b>R32G32B32_SINT</b>
, <b>R16G16B16A16_FLOAT</b>
, <br />
&#160;&#160;<b>R16G16B16A16_UNORM</b>
, <b>R16G16B16A16_UINT</b>
, <b>R16G16B16A16_SNORM</b>
, <b>R16G16B16A16_SINT</b>
, <br />
&#160;&#160;<b>R16G16B16_UNORM</b>
, <b>R32G32_FLOAT</b>
, <b>R32G32_UINT</b>
, <b>R32G32_SINT</b>
, <br />
&#160;&#160;<b>D32_FLOAT_S8X24_UINT</b>
, <b>R10G10B10A2_UNORM</b>
, <b>R10G10B10A2_UINT</b>
, <b>R11G11B10_FLOAT</b>
, <br />
&#160;&#160;<b>R8G8B8A8_UNORM</b>
, <b>R8G8B8A8_UNORM_SRGB</b>
, <b>R8G8B8A8_UINT</b>
, <b>R8G8B8A8_SNORM</b>
, <br />
&#160;&#160;<b>R8G8B8A8_SINT</b>
, <b>B8G8R8A8_UNORM</b>
, <b>B8G8R8A8_UNORM_SRGB</b>
, <b>B8G8R8X8_UNORM</b>
, <br />
&#160;&#160;<b>B8G8R8X8_UNORM_SRGB</b>
, <b>R16G16_FLOAT</b>
, <b>R16G16_UNORM</b>
, <b>R16G16_UINT</b>
, <br />
&#160;&#160;<b>R16G16_SNORM</b>
, <b>R16G16_SINT</b>
, <b>D32_FLOAT</b>
, <b>R32_FLOAT</b>
, <br />
&#160;&#160;<b>R32_UINT</b>
, <b>R32_SINT</b>
, <b>D24_UNORM_S8_UINT</b>
, <b>R8G8B8_UNORM</b>
, <br />
&#160;&#160;<b>R8G8B8_UNORM_SRGB</b>
, <b>B8G8R8_UNORM</b>
, <b>B8G8R8_UNORM_SRGB</b>
, <b>R8G8_UNORM</b>
, <br />
&#160;&#160;<b>R8G8_UINT</b>
, <b>R8G8_SNORM</b>
, <b>R8G8_SINT</b>
, <b>R16_FLOAT</b>
, <br />
&#160;&#160;<b>D16_UNORM</b>
, <b>R16_UNORM</b>
, <b>R16_UINT</b>
, <b>R16_SNORM</b>
, <br />
&#160;&#160;<b>R16_SINT</b>
, <b>R8_UNORM</b>
, <b>R8_UINT</b>
, <b>R8_SNORM</b>
, <br />
&#160;&#160;<b>R8_SINT</b>
, <b>BC1_UNORM</b>
, <b>BC1_UNORM_SRGB</b>
, <b>BC2_UNORM</b>
, <br />
&#160;&#160;<b>BC2_UNORM_SRGB</b>
, <b>BC3_UNORM</b>
, <b>BC3_UNORM_SRGB</b>
, <b>BC4_UNORM</b>
, <br />
&#160;&#160;<b>BC4_SNORM</b>
, <b>BC5_UNORM</b>
, <b>BC5_SNORM</b>
, <b>BC6H_UF16</b>
, <br />
&#160;&#160;<b>BC6H_SF16</b>
, <b>BC7_UNORM</b>
, <b>BC7_UNORM_SRGB</b>
, <b>ASTC_4x4_UNORM</b>
, <br />
&#160;&#160;<b>ASTC_4x4_UNORM_SRGB</b>
, <b>ASTC_5x4_UNORM</b>
, <b>ASTC_5x4_UNORM_SRGB</b>
, <b>ASTC_5x5_UNORM</b>
, <br />
&#160;&#160;<b>ASTC_5x5_UNORM_SRGB</b>
, <b>ASTC_6x5_UNORM</b>
, <b>ASTC_6x5_UNORM_SRGB</b>
, <b>ASTC_6x6_UNORM</b>
, <br />
&#160;&#160;<b>ASTC_6x6_UNORM_SRGB</b>
, <b>ASTC_8x5_UNORM</b>
, <b>ASTC_8x5_UNORM_SRGB</b>
, <b>ASTC_8x6_UNORM</b>
, <br />
&#160;&#160;<b>ASTC_8x6_UNORM_SRGB</b>
, <b>ASTC_10x5_UNORM</b>
, <b>ASTC_10x5_UNORM_SRGB</b>
, <b>ASTC_10x6_UNORM</b>
, <br />
&#160;&#160;<b>ASTC_10x6_UNORM_SRGB</b>
, <b>ASTC_8x8_UNORM</b>
, <b>ASTC_8x8_UNORM_SRGB</b>
, <b>ASTC_10x8_UNORM</b>
, <br />
&#160;&#160;<b>ASTC_10x8_UNORM_SRGB</b>
, <b>ASTC_10x10_UNORM</b>
, <b>ASTC_10x10_UNORM_SRGB</b>
, <b>ASTC_12x10_UNORM</b>
, <br />
&#160;&#160;<b>ASTC_12x10_UNORM_SRGB</b>
, <b>ASTC_12x12_UNORM</b>
, <b>ASTC_12x12_UNORM_SRGB</b>
, <b>B4G4R4A4_UNORM</b>
, <br />
&#160;&#160;<b>B4G4R4A4_UNORM_SRGB</b>
, <b>A4B4G4R4_UNORM</b>
, <b>A4B4G4R4_UNORM_SRGB</b>
, <b>B5G6R5_UNORM</b>
, <br />
&#160;&#160;<b>B5G6R5_UNORM_SRGB</b>
, <b>B5G5R5A1_UNORM</b>
, <b>B5G5R5A1_UNORM_SRGB</b>
, <b>B5G5R5X1_UNORM</b>
, <br />
&#160;&#160;<b>B5G5R5X1_UNORM_SRGB</b>
, <b>A1B5G5R5_UNORM</b>
, <b>A1B5G5R5_UNORM_SRGB</b>
, <b>X1B5G5R5_UNORM</b>
, <br />
&#160;&#160;<b>X1B5G5R5_UNORM_SRGB</b>
, <b>NV12</b>
, <b>NUM_FORMATS</b>
, <b>Default</b> = UNKNOWN
<br />
 }</td></tr>
<tr class="memdesc:acab2bc1a9e5b69f2aee6557ac29facfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enum describing the encoding format of the pixels of an image.  <a href="#acab2bc1a9e5b69f2aee6557ac29facfc">More...</a><br /></td></tr>
<tr class="separator:acab2bc1a9e5b69f2aee6557ac29facfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acea6d5511fb6797efb4a3b5d3d682be4" id="r_acea6d5511fb6797efb4a3b5d3d682be4"><td class="memItemLeft" align="right" valign="top"><a id="acea6d5511fb6797efb4a3b5d3d682be4" name="acea6d5511fb6797efb4a3b5d3d682be4"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>StorageType</b> = plUInt16</td></tr>
<tr class="separator:acea6d5511fb6797efb4a3b5d3d682be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a5abb5e87a3a045b97d2e15a1e68a010d" id="r_a5abb5e87a3a045b97d2e15a1e68a010d"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5abb5e87a3a045b97d2e15a1e68a010d">GetName</a> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a5abb5e87a3a045b97d2e15a1e68a010d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the given format.  <br /></td></tr>
<tr class="separator:a5abb5e87a3a045b97d2e15a1e68a010d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26e41f5f2a9266174cb123832809a466" id="r_a26e41f5f2a9266174cb123832809a466"><td class="memItemLeft" align="right" valign="top"><a id="a26e41f5f2a9266174cb123832809a466" name="a26e41f5f2a9266174cb123832809a466"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetPlaneCount</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a26e41f5f2a9266174cb123832809a466"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of planes in the format, or 1 for non-planar formats. <br /></td></tr>
<tr class="separator:a26e41f5f2a9266174cb123832809a466"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46634cb54701aa7f30c6a6c704bd6356" id="r_a46634cb54701aa7f30c6a6c704bd6356"><td class="memItemLeft" align="right" valign="top"><a id="a46634cb54701aa7f30c6a6c704bd6356" name="a46634cb54701aa7f30c6a6c704bd6356"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetBitsPerPixel</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a46634cb54701aa7f30c6a6c704bd6356"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of bits per pixel of the given format. If the format's bpp is non-integral, the returned value rounded up to to the next integer. <br /></td></tr>
<tr class="separator:a46634cb54701aa7f30c6a6c704bd6356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0fac2f97758ba67a2e6f530e1852d38" id="r_af0fac2f97758ba67a2e6f530e1852d38"><td class="memItemLeft" align="right" valign="top"><a id="af0fac2f97758ba67a2e6f530e1852d38" name="af0fac2f97758ba67a2e6f530e1852d38"></a>
static float&#160;</td><td class="memItemRight" valign="bottom"><b>GetExactBitsPerPixel</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:af0fac2f97758ba67a2e6f530e1852d38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exact pixel size in bits. May be non-integral for some compressed formats. <br /></td></tr>
<tr class="separator:af0fac2f97758ba67a2e6f530e1852d38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a728c1e6c01619e3843508086f917c0f2" id="r_a728c1e6c01619e3843508086f917c0f2"><td class="memItemLeft" align="right" valign="top"><a id="a728c1e6c01619e3843508086f917c0f2" name="a728c1e6c01619e3843508086f917c0f2"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetBitsPerBlock</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a728c1e6c01619e3843508086f917c0f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the block size in bits. For uncompressed formats, a block is considered a single pixel. <br /></td></tr>
<tr class="separator:a728c1e6c01619e3843508086f917c0f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75266a2acba430e860c993dde71fbd1d" id="r_a75266a2acba430e860c993dde71fbd1d"><td class="memItemLeft" align="right" valign="top"><a id="a75266a2acba430e860c993dde71fbd1d" name="a75266a2acba430e860c993dde71fbd1d"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetNumChannels</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a75266a2acba430e860c993dde71fbd1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of channels (r, g, b, a, depth, stencil) supported by this format. <br /></td></tr>
<tr class="separator:a75266a2acba430e860c993dde71fbd1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69e63b1532368cf1e4a7abe28e3cf473" id="r_a69e63b1532368cf1e4a7abe28e3cf473"><td class="memItemLeft" align="right" valign="top"><a id="a69e63b1532368cf1e4a7abe28e3cf473" name="a69e63b1532368cf1e4a7abe28e3cf473"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetChannelMask</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, <a class="el" href="../../d8/d6a/structpl_image_format_channel.htm#a355637045a67ef8219c15e97ce26df41">plImageFormatChannel::Enum</a> c)</td></tr>
<tr class="memdesc:a69e63b1532368cf1e4a7abe28e3cf473"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bitmask of each channel of the format. This is not defined for some formats, and may return 0. <br /></td></tr>
<tr class="separator:a69e63b1532368cf1e4a7abe28e3cf473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40ebe17aa875c082836b801d2781010b" id="r_a40ebe17aa875c082836b801d2781010b"><td class="memItemLeft" align="right" valign="top"><a id="a40ebe17aa875c082836b801d2781010b" name="a40ebe17aa875c082836b801d2781010b"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetBitsPerChannel</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, <a class="el" href="../../d8/d6a/structpl_image_format_channel.htm#a355637045a67ef8219c15e97ce26df41">plImageFormatChannel::Enum</a> c)</td></tr>
<tr class="memdesc:a40ebe17aa875c082836b801d2781010b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of bits for each channel of the format. <br /></td></tr>
<tr class="separator:a40ebe17aa875c082836b801d2781010b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c1937627bdb634e8288a582757f230d" id="r_a9c1937627bdb634e8288a582757f230d"><td class="memItemLeft" align="right" valign="top"><a id="a9c1937627bdb634e8288a582757f230d" name="a9c1937627bdb634e8288a582757f230d"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetRedMask</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a9c1937627bdb634e8288a582757f230d"><td class="mdescLeft">&#160;</td><td class="mdescRight">If applicable, returns a bitmask for the red component of the format. <br /></td></tr>
<tr class="separator:a9c1937627bdb634e8288a582757f230d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab34574d3396bcd8cb0e9a74a4669b30a" id="r_ab34574d3396bcd8cb0e9a74a4669b30a"><td class="memItemLeft" align="right" valign="top"><a id="ab34574d3396bcd8cb0e9a74a4669b30a" name="ab34574d3396bcd8cb0e9a74a4669b30a"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetGreenMask</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:ab34574d3396bcd8cb0e9a74a4669b30a"><td class="mdescLeft">&#160;</td><td class="mdescRight">If applicable, returns a bitmask for the green component of the format. <br /></td></tr>
<tr class="separator:ab34574d3396bcd8cb0e9a74a4669b30a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f84f63d361637056511bf5cc36ec590" id="r_a2f84f63d361637056511bf5cc36ec590"><td class="memItemLeft" align="right" valign="top"><a id="a2f84f63d361637056511bf5cc36ec590" name="a2f84f63d361637056511bf5cc36ec590"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetBlueMask</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a2f84f63d361637056511bf5cc36ec590"><td class="mdescLeft">&#160;</td><td class="mdescRight">If applicable, returns a bitmask for the blue component of the format. <br /></td></tr>
<tr class="separator:a2f84f63d361637056511bf5cc36ec590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a597e2313c8b4d42140c333f58cc76372" id="r_a597e2313c8b4d42140c333f58cc76372"><td class="memItemLeft" align="right" valign="top"><a id="a597e2313c8b4d42140c333f58cc76372" name="a597e2313c8b4d42140c333f58cc76372"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetAlphaMask</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a597e2313c8b4d42140c333f58cc76372"><td class="mdescLeft">&#160;</td><td class="mdescRight">If applicable, returns a bitmask for the alpha component of the format. <br /></td></tr>
<tr class="separator:a597e2313c8b4d42140c333f58cc76372"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf02434e0afe11ce2809fea71cbd1a4b" id="r_acf02434e0afe11ce2809fea71cbd1a4b"><td class="memItemLeft" align="right" valign="top"><a id="acf02434e0afe11ce2809fea71cbd1a4b" name="acf02434e0afe11ce2809fea71cbd1a4b"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetBlockWidth</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:acf02434e0afe11ce2809fea71cbd1a4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Block width of a compressed format. Defaults to 1 for uncompressed formats. <br /></td></tr>
<tr class="separator:acf02434e0afe11ce2809fea71cbd1a4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a621fee49d2cf222f9ac9b351e9b8ba34" id="r_a621fee49d2cf222f9ac9b351e9b8ba34"><td class="memItemLeft" align="right" valign="top"><a id="a621fee49d2cf222f9ac9b351e9b8ba34" name="a621fee49d2cf222f9ac9b351e9b8ba34"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetBlockHeight</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a621fee49d2cf222f9ac9b351e9b8ba34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Block height of a compressed format. Defaults to 1 for uncompressed formats. <br /></td></tr>
<tr class="separator:a621fee49d2cf222f9ac9b351e9b8ba34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5766bedbbd12307d7b2338fb4531ccd2" id="r_a5766bedbbd12307d7b2338fb4531ccd2"><td class="memItemLeft" align="right" valign="top"><a id="a5766bedbbd12307d7b2338fb4531ccd2" name="a5766bedbbd12307d7b2338fb4531ccd2"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetBlockDepth</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a5766bedbbd12307d7b2338fb4531ccd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Block depth of a compressed format. Defaults to 1 for uncompressed formats. <br /></td></tr>
<tr class="separator:a5766bedbbd12307d7b2338fb4531ccd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1e64cc8c531b4db777d21e3a1ac7730" id="r_ab1e64cc8c531b4db777d21e3a1ac7730"><td class="memItemLeft" align="right" valign="top"><a id="ab1e64cc8c531b4db777d21e3a1ac7730" name="ab1e64cc8c531b4db777d21e3a1ac7730"></a>
static <a class="el" href="../../d6/dc5/structpl_image_format_data_type.htm#a379647770d08ea9ef9c5965d1a55e3be">plImageFormatDataType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetDataType</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:ab1e64cc8c531b4db777d21e3a1ac7730"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data type represented by a format. <br /></td></tr>
<tr class="separator:ab1e64cc8c531b4db777d21e3a1ac7730"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31bbc98678bbc1ec1dbe6c38563d1836" id="r_a31bbc98678bbc1ec1dbe6c38563d1836"><td class="memItemLeft" align="right" valign="top"><a id="a31bbc98678bbc1ec1dbe6c38563d1836" name="a31bbc98678bbc1ec1dbe6c38563d1836"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsCompressed</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a31bbc98678bbc1ec1dbe6c38563d1836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the format is compressed. <br /></td></tr>
<tr class="separator:a31bbc98678bbc1ec1dbe6c38563d1836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdf7983d26cda08448d82320d11e692f" id="r_acdf7983d26cda08448d82320d11e692f"><td class="memItemLeft" align="right" valign="top"><a id="acdf7983d26cda08448d82320d11e692f" name="acdf7983d26cda08448d82320d11e692f"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsDepth</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:acdf7983d26cda08448d82320d11e692f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the format is a depth format. <br /></td></tr>
<tr class="separator:acdf7983d26cda08448d82320d11e692f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61372fb7d218cb7815a9479debbcb740" id="r_a61372fb7d218cb7815a9479debbcb740"><td class="memItemLeft" align="right" valign="top"><a id="a61372fb7d218cb7815a9479debbcb740" name="a61372fb7d218cb7815a9479debbcb740"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsSrgb</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a61372fb7d218cb7815a9479debbcb740"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the given format is an sRGB format. <br /></td></tr>
<tr class="separator:a61372fb7d218cb7815a9479debbcb740"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee16e4770ff9a0611c2022e47692998" id="r_a2ee16e4770ff9a0611c2022e47692998"><td class="memItemLeft" align="right" valign="top"><a id="a2ee16e4770ff9a0611c2022e47692998" name="a2ee16e4770ff9a0611c2022e47692998"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsStencil</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a2ee16e4770ff9a0611c2022e47692998"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the format is a stencil format. <br /></td></tr>
<tr class="separator:a2ee16e4770ff9a0611c2022e47692998"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad193bf747001efa41244617f30a7ab82" id="r_ad193bf747001efa41244617f30a7ab82"><td class="memItemLeft" align="right" valign="top"><a id="ad193bf747001efa41244617f30a7ab82" name="ad193bf747001efa41244617f30a7ab82"></a>
static <a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>AsSrgb</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:ad193bf747001efa41244617f30a7ab82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding sRGB format if one exists; otherwise returns the unmodified format. <br /></td></tr>
<tr class="separator:ad193bf747001efa41244617f30a7ab82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a437aeb577c58563f4a8c0cffcd6724ba" id="r_a437aeb577c58563f4a8c0cffcd6724ba"><td class="memItemLeft" align="right" valign="top"><a id="a437aeb577c58563f4a8c0cffcd6724ba" name="a437aeb577c58563f4a8c0cffcd6724ba"></a>
static <a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>AsLinear</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a437aeb577c58563f4a8c0cffcd6724ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding linear format if one exists; otherwise returns the unmodified format. <br /></td></tr>
<tr class="separator:a437aeb577c58563f4a8c0cffcd6724ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96b40460e6c93e4b43f55768e445de3b" id="r_a96b40460e6c93e4b43f55768e445de3b"><td class="memItemLeft" align="right" valign="top"><a id="a96b40460e6c93e4b43f55768e445de3b" name="a96b40460e6c93e4b43f55768e445de3b"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetNumBlocksX</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiWidth, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a96b40460e6c93e4b43f55768e445de3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the number of blocks in X direction (compressed) or pixels (if uncompressed) for a given width (in pixels). <br /></td></tr>
<tr class="separator:a96b40460e6c93e4b43f55768e445de3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abaa7e8179230aa70bd82272f033f6a23" id="r_abaa7e8179230aa70bd82272f033f6a23"><td class="memItemLeft" align="right" valign="top"><a id="abaa7e8179230aa70bd82272f033f6a23" name="abaa7e8179230aa70bd82272f033f6a23"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetNumBlocksY</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiHeight, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:abaa7e8179230aa70bd82272f033f6a23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the number of blocks in Y direction (compressed) or pixels (if uncompressed) for a given height (in pixels). <br /></td></tr>
<tr class="separator:abaa7e8179230aa70bd82272f033f6a23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c23aa4e29f693255f7fcf4b331b28ef" id="r_a0c23aa4e29f693255f7fcf4b331b28ef"><td class="memItemLeft" align="right" valign="top"><a id="a0c23aa4e29f693255f7fcf4b331b28ef" name="a0c23aa4e29f693255f7fcf4b331b28ef"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetNumBlocksZ</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiDepth, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a0c23aa4e29f693255f7fcf4b331b28ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the number of blocks in Z direction (compressed) or pixels (if uncompressed) for a given height (in pixels). <br /></td></tr>
<tr class="separator:a0c23aa4e29f693255f7fcf4b331b28ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d52b1ae45c89cc25efd2086b783aaf9" id="r_a3d52b1ae45c89cc25efd2086b783aaf9"><td class="memItemLeft" align="right" valign="top"><a id="a3d52b1ae45c89cc25efd2086b783aaf9" name="a3d52b1ae45c89cc25efd2086b783aaf9"></a>
static plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetRowPitch</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiWidth, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a3d52b1ae45c89cc25efd2086b783aaf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the size in bytes of a row of blocks (compressed) or pixels (if uncompressed) of the given width. <br /></td></tr>
<tr class="separator:a3d52b1ae45c89cc25efd2086b783aaf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2953a761f582aa3bbb8395c911fda1b1" id="r_a2953a761f582aa3bbb8395c911fda1b1"><td class="memItemLeft" align="right" valign="top"><a id="a2953a761f582aa3bbb8395c911fda1b1" name="a2953a761f582aa3bbb8395c911fda1b1"></a>
static plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetDepthPitch</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format, plUInt32 uiWidth, plUInt32 uiHeight, plUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a2953a761f582aa3bbb8395c911fda1b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the size in bytes of a 2D slice of blocks (compressed) or pixels (if uncompressed) of the given width and height. <br /></td></tr>
<tr class="separator:a2953a761f582aa3bbb8395c911fda1b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2626322fd90bb69aacc6f4775f80e117" id="r_a2626322fd90bb69aacc6f4775f80e117"><td class="memItemLeft" align="right" valign="top"><a id="a2626322fd90bb69aacc6f4775f80e117" name="a2626322fd90bb69aacc6f4775f80e117"></a>
static <a class="el" href="../../d5/d36/structpl_image_format_type.htm#a37e207963b7c32c4cd8a2b5982289ca0">plImageFormatType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetType</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a2626322fd90bb69aacc6f4775f80e117"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the image format. <br /></td></tr>
<tr class="separator:a2626322fd90bb69aacc6f4775f80e117"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e00a52c2fd936efcde947992cb7a8b5" id="r_a4e00a52c2fd936efcde947992cb7a8b5"><td class="memItemLeft" align="right" valign="top"><a id="a4e00a52c2fd936efcde947992cb7a8b5" name="a4e00a52c2fd936efcde947992cb7a8b5"></a>
static <a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">plImageFormat::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>FromPixelMask</b> (plUInt32 uiRedMask, plUInt32 uiGreenMask, plUInt32 uiBlueMask, plUInt32 uiAlphaMask, plUInt32 uiBitsPerPixel)</td></tr>
<tr class="memdesc:a4e00a52c2fd936efcde947992cb7a8b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds a format matching the given component masks. <br /></td></tr>
<tr class="separator:a4e00a52c2fd936efcde947992cb7a8b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b7fbdb0b024ff3b90d186fac53b5ff1" id="r_a3b7fbdb0b024ff3b90d186fac53b5ff1"><td class="memItemLeft" align="right" valign="top"><a id="a3b7fbdb0b024ff3b90d186fac53b5ff1" name="a3b7fbdb0b024ff3b90d186fac53b5ff1"></a>
static <a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">plImageFormat::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPlaneSubFormat</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">plImageFormat::Enum</a> format, plUInt32 uiPlaneIndex)</td></tr>
<tr class="memdesc:a3b7fbdb0b024ff3b90d186fac53b5ff1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the format of a subplane of a given format. <br /></td></tr>
<tr class="separator:a3b7fbdb0b024ff3b90d186fac53b5ff1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75841b87629f9c576ee95c260ea1861a" id="r_a75841b87629f9c576ee95c260ea1861a"><td class="memItemLeft" align="right" valign="top"><a id="a75841b87629f9c576ee95c260ea1861a" name="a75841b87629f9c576ee95c260ea1861a"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsCompatible</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> left, <a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> right)</td></tr>
<tr class="memdesc:a75841b87629f9c576ee95c260ea1861a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the data formats are compatible, i.e. can be copied into one another. <br /></td></tr>
<tr class="separator:a75841b87629f9c576ee95c260ea1861a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33abe5de4da1d7c06fef11680506c295" id="r_a33abe5de4da1d7c06fef11680506c295"><td class="memItemLeft" align="right" valign="top"><a id="a33abe5de4da1d7c06fef11680506c295" name="a33abe5de4da1d7c06fef11680506c295"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>RequiresFirstLevelBlockAlignment</b> (<a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a> format)</td></tr>
<tr class="memdesc:a33abe5de4da1d7c06fef11680506c295"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the most high-res miplevel requires block alignment. <br /></td></tr>
<tr class="separator:a33abe5de4da1d7c06fef11680506c295"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Enum describing the encoding format of the pixels of an image. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="acab2bc1a9e5b69f2aee6557ac29facfc" name="acab2bc1a9e5b69f2aee6557ac29facfc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acab2bc1a9e5b69f2aee6557ac29facfc">&#9670;&#160;</a></span>Enum</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">plImageFormat::Enum</a> : plUInt16</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enum describing the encoding format of the pixels of an image. </p>
<p>Image formats can be separated into three types: linear, block compressed, and planar. In linear formats, the various channels of each pixel (such as R, G, B) are stored interleaved in memory [RGBRGBRGB...]. This is in contrast to planar formats, where each channel is stored in a separate slice of memory [RRR...GGG...BBB...]. Planar formats are typically used for video formats with luma and chroma channels, and may also be partially planarized. For example, NV12 has a luma (Y) plane and a chroma (UV) plane, where the chroma plane again stores the two sub-channels linearly interleaved. For these formats, <a class="el" href="#a3b7fbdb0b024ff3b90d186fac53b5ff1" title="Returns the format of a subplane of a given format.">GetPlaneSubFormat()</a> returns a description of the encoding within each plane. Block compressed formats use a different approach, where pixels are arranged in blocks of a fixed format-dependent size (from 4x4 for BC1-7 and up to 12x12 for some ASTC formats), with colors encoded with a fixed ratio compression. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5abb5e87a3a045b97d2e15a1e68a010d" name="a5abb5e87a3a045b97d2e15a1e68a010d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5abb5e87a3a045b97d2e15a1e68a010d">&#9670;&#160;</a></span>GetName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * plImageFormat::GetName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#acab2bc1a9e5b69f2aee6557ac29facfc">Enum</a></td>          <td class="paramname"><span class="paramname"><em>format</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the name of the given format. </p>
<p>The returned string is guaranteed to be stable across engine versions and thus suitable for serialization. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>Code/Engine/Texture/Image/<a class="el" href="../../d3/d5d/_image_format_8h_source.htm">ImageFormat.h</a></li>
<li>Code/Engine/Texture/Image/Implementation/<b>ImageFormat.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/db2/structpl_image_format.htm">plImageFormat</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
