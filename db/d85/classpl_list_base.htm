<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plListBase&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/d85/classpl_list_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../d6/d7c/classpl_list_base-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plListBase&lt; T &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A List-class, similar to STL::list.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dc/d1f/_list_8h_source.htm">List.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plListBase&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../dd/dea/classpl_list_base__inherit__graph.png" border="0" usemap="#apl_list_base_3_01_t_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_list_base_3_01_t_01_4_inherit__map" id="apl_list_base_3_01_t_01_4_inherit__map">
<area shape="rect" title="A List&#45;class, similar to STL::list." alt="" coords="44,5,158,32"/>
<area shape="rect" href="../../de/d99/classpl_list.htm" title=" " alt="" coords="5,80,197,107"/>
<area shape="poly" title=" " alt="" coords="104,48,104,80,98,80,98,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A forward-iterator. Allows sequential access from front-to-back.  <a href="../../d9/dde/structpl_list_base_1_1_iterator.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab4732ee74e05a8a305f93bcc51f3f218" id="r_ab4732ee74e05a8a305f93bcc51f3f218"><td class="memItemLeft" align="right" valign="top"><a id="ab4732ee74e05a8a305f93bcc51f3f218" name="ab4732ee74e05a8a305f93bcc51f3f218"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:ab4732ee74e05a8a305f93bcc51f3f218"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the list, afterwards it is empty. <br /></td></tr>
<tr class="separator:ab4732ee74e05a8a305f93bcc51f3f218"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91b87ea6f64ea9968b0c2b7ceeae0d30" id="r_a91b87ea6f64ea9968b0c2b7ceeae0d30"><td class="memItemLeft" align="right" valign="top"><a id="a91b87ea6f64ea9968b0c2b7ceeae0d30" name="a91b87ea6f64ea9968b0c2b7ceeae0d30"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> ()</td></tr>
<tr class="memdesc:a91b87ea6f64ea9968b0c2b7ceeae0d30"><td class="mdescLeft">&#160;</td><td class="mdescRight">See <a class="el" href="../../d9/d4c/classpl_deque_base.htm#a9a4594efd648df3894ddb72782dc8f12">plDeque::Compact()</a> <br /></td></tr>
<tr class="separator:a91b87ea6f64ea9968b0c2b7ceeae0d30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f72ad6ded42b4070023bf40aa1e80f5" id="r_a0f72ad6ded42b4070023bf40aa1e80f5"><td class="memItemLeft" align="right" valign="top"><a id="a0f72ad6ded42b4070023bf40aa1e80f5" name="a0f72ad6ded42b4070023bf40aa1e80f5"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:a0f72ad6ded42b4070023bf40aa1e80f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements in the list. O(1) operation. <br /></td></tr>
<tr class="separator:a0f72ad6ded42b4070023bf40aa1e80f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae908b213ebb19ad241e201ef7a7b5ab9" id="r_ae908b213ebb19ad241e201ef7a7b5ab9"><td class="memItemLeft" align="right" valign="top"><a id="ae908b213ebb19ad241e201ef7a7b5ab9" name="ae908b213ebb19ad241e201ef7a7b5ab9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:ae908b213ebb19ad241e201ef7a7b5ab9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether size == 0. O(1) operation. <br /></td></tr>
<tr class="separator:ae908b213ebb19ad241e201ef7a7b5ab9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa70e3db3c5b970e3f3de0815c241da4e" id="r_aa70e3db3c5b970e3f3de0815c241da4e"><td class="memItemLeft" align="right" valign="top"><a id="aa70e3db3c5b970e3f3de0815c241da4e" name="aa70e3db3c5b970e3f3de0815c241da4e"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekFront</b> () const</td></tr>
<tr class="memdesc:aa70e3db3c5b970e3f3de0815c241da4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the very first element in the list. <br /></td></tr>
<tr class="separator:aa70e3db3c5b970e3f3de0815c241da4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84bc527ec428498368b0785e6a79c05b" id="r_a84bc527ec428498368b0785e6a79c05b"><td class="memItemLeft" align="right" valign="top"><a id="a84bc527ec428498368b0785e6a79c05b" name="a84bc527ec428498368b0785e6a79c05b"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> () const</td></tr>
<tr class="memdesc:a84bc527ec428498368b0785e6a79c05b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the very last element in the list. <br /></td></tr>
<tr class="separator:a84bc527ec428498368b0785e6a79c05b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a506a18dad678ae3c306eabdde7965463" id="r_a506a18dad678ae3c306eabdde7965463"><td class="memItemLeft" align="right" valign="top"><a id="a506a18dad678ae3c306eabdde7965463" name="a506a18dad678ae3c306eabdde7965463"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekFront</b> ()</td></tr>
<tr class="memdesc:a506a18dad678ae3c306eabdde7965463"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the very first element in the list. <br /></td></tr>
<tr class="separator:a506a18dad678ae3c306eabdde7965463"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7c591d6c97b8cd3c6d0c6438d1c9622" id="r_ae7c591d6c97b8cd3c6d0c6438d1c9622"><td class="memItemLeft" align="right" valign="top"><a id="ae7c591d6c97b8cd3c6d0c6438d1c9622" name="ae7c591d6c97b8cd3c6d0c6438d1c9622"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> ()</td></tr>
<tr class="memdesc:ae7c591d6c97b8cd3c6d0c6438d1c9622"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the very last element in the list. <br /></td></tr>
<tr class="separator:ae7c591d6c97b8cd3c6d0c6438d1c9622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa12bda6672fc6ba0e09663175b613203" id="r_aa12bda6672fc6ba0e09663175b613203"><td class="memItemLeft" align="right" valign="top"><a id="aa12bda6672fc6ba0e09663175b613203" name="aa12bda6672fc6ba0e09663175b613203"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> ()</td></tr>
<tr class="memdesc:aa12bda6672fc6ba0e09663175b613203"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends a default-constructed element to the list and returns a reference to it. <br /></td></tr>
<tr class="separator:aa12bda6672fc6ba0e09663175b613203"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf7b9cd6d39b7b205b875e1254cd5557" id="r_aaf7b9cd6d39b7b205b875e1254cd5557"><td class="memItemLeft" align="right" valign="top"><a id="aaf7b9cd6d39b7b205b875e1254cd5557" name="aaf7b9cd6d39b7b205b875e1254cd5557"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;element)</td></tr>
<tr class="memdesc:aaf7b9cd6d39b7b205b875e1254cd5557"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends a copy of the given element to the list. <br /></td></tr>
<tr class="separator:aaf7b9cd6d39b7b205b875e1254cd5557"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a758853f7e43a965c8d717da29c691d70" id="r_a758853f7e43a965c8d717da29c691d70"><td class="memItemLeft" align="right" valign="top"><a id="a758853f7e43a965c8d717da29c691d70" name="a758853f7e43a965c8d717da29c691d70"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PopBack</b> ()</td></tr>
<tr class="memdesc:a758853f7e43a965c8d717da29c691d70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the very last element from the list. <br /></td></tr>
<tr class="separator:a758853f7e43a965c8d717da29c691d70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cb2407d38c1e3f3456c11f9c4895b48" id="r_a6cb2407d38c1e3f3456c11f9c4895b48"><td class="memItemLeft" align="right" valign="top"><a id="a6cb2407d38c1e3f3456c11f9c4895b48" name="a6cb2407d38c1e3f3456c11f9c4895b48"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PushFront</b> ()</td></tr>
<tr class="memdesc:a6cb2407d38c1e3f3456c11f9c4895b48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends a default-constructed element to the front of the list and returns a reference to it. <br /></td></tr>
<tr class="separator:a6cb2407d38c1e3f3456c11f9c4895b48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6772263f4a2741e619d08b304e9d26d3" id="r_a6772263f4a2741e619d08b304e9d26d3"><td class="memItemLeft" align="right" valign="top"><a id="a6772263f4a2741e619d08b304e9d26d3" name="a6772263f4a2741e619d08b304e9d26d3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushFront</b> (const T &amp;element)</td></tr>
<tr class="memdesc:a6772263f4a2741e619d08b304e9d26d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Appends a copy of the given element to the front of the list. <br /></td></tr>
<tr class="separator:a6772263f4a2741e619d08b304e9d26d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a680f2d516218892941dfaf7e7e1f1818" id="r_a680f2d516218892941dfaf7e7e1f1818"><td class="memItemLeft" align="right" valign="top"><a id="a680f2d516218892941dfaf7e7e1f1818" name="a680f2d516218892941dfaf7e7e1f1818"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PopFront</b> ()</td></tr>
<tr class="memdesc:a680f2d516218892941dfaf7e7e1f1818"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the very first element from the list. <br /></td></tr>
<tr class="separator:a680f2d516218892941dfaf7e7e1f1818"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c6c2e3a44507b78458a9b871f9d2837" id="r_a3c6c2e3a44507b78458a9b871f9d2837"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c6c2e3a44507b78458a9b871f9d2837">SetCount</a> (plUInt32 uiNewSize)</td></tr>
<tr class="memdesc:a3c6c2e3a44507b78458a9b871f9d2837"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the number of elements that are in the list.  <br /></td></tr>
<tr class="separator:a3c6c2e3a44507b78458a9b871f9d2837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc8d95b2d8a2e981bb85cece962893c0" id="r_abc8d95b2d8a2e981bb85cece962893c0"><td class="memItemLeft" align="right" valign="top"><a id="abc8d95b2d8a2e981bb85cece962893c0" name="abc8d95b2d8a2e981bb85cece962893c0"></a>
<a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (const <a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a> &amp;pos, const T &amp;data)</td></tr>
<tr class="memdesc:abc8d95b2d8a2e981bb85cece962893c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts one element before the position defined by the iterator. <br /></td></tr>
<tr class="separator:abc8d95b2d8a2e981bb85cece962893c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13f207212e8b5aec5645000bac5ad0bd" id="r_a13f207212e8b5aec5645000bac5ad0bd"><td class="memItemLeft" align="right" valign="top"><a id="a13f207212e8b5aec5645000bac5ad0bd" name="a13f207212e8b5aec5645000bac5ad0bd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (const <a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a> &amp;pos, ConstIterator first, const ConstIterator &amp;last)</td></tr>
<tr class="memdesc:a13f207212e8b5aec5645000bac5ad0bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the range defined by [first;last) after pos. <br /></td></tr>
<tr class="separator:a13f207212e8b5aec5645000bac5ad0bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0835481a756a698c2726747bf00fb244" id="r_a0835481a756a698c2726747bf00fb244"><td class="memItemLeft" align="right" valign="top"><a id="a0835481a756a698c2726747bf00fb244" name="a0835481a756a698c2726747bf00fb244"></a>
<a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (const <a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a> &amp;pos)</td></tr>
<tr class="memdesc:a0835481a756a698c2726747bf00fb244"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts a default constructed element before the position defined by the iterator. <br /></td></tr>
<tr class="separator:a0835481a756a698c2726747bf00fb244"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a674759d77f0a6a4e523d275480e91ed9" id="r_a674759d77f0a6a4e523d275480e91ed9"><td class="memItemLeft" align="right" valign="top"><a id="a674759d77f0a6a4e523d275480e91ed9" name="a674759d77f0a6a4e523d275480e91ed9"></a>
<a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Remove</b> (const <a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a> &amp;pos)</td></tr>
<tr class="memdesc:a674759d77f0a6a4e523d275480e91ed9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the element pointed to by the iterator. <br /></td></tr>
<tr class="separator:a674759d77f0a6a4e523d275480e91ed9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8842fc41677429e37faa45833c2fd3a" id="r_ab8842fc41677429e37faa45833c2fd3a"><td class="memItemLeft" align="right" valign="top"><a id="ab8842fc41677429e37faa45833c2fd3a" name="ab8842fc41677429e37faa45833c2fd3a"></a>
<a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Remove</b> (<a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a> first, const <a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a> &amp;last)</td></tr>
<tr class="memdesc:ab8842fc41677429e37faa45833c2fd3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases range [first; last). <br /></td></tr>
<tr class="separator:ab8842fc41677429e37faa45833c2fd3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af92a1c5eac5873e1592a24d509826aa0" id="r_af92a1c5eac5873e1592a24d509826aa0"><td class="memItemLeft" align="right" valign="top"><a id="af92a1c5eac5873e1592a24d509826aa0" name="af92a1c5eac5873e1592a24d509826aa0"></a>
<a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> ()</td></tr>
<tr class="memdesc:af92a1c5eac5873e1592a24d509826aa0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to the first list-element. <br /></td></tr>
<tr class="separator:af92a1c5eac5873e1592a24d509826aa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecd0bbb3b0cab1001976754ecca981f3" id="r_aecd0bbb3b0cab1001976754ecca981f3"><td class="memItemLeft" align="right" valign="top"><a id="aecd0bbb3b0cab1001976754ecca981f3" name="aecd0bbb3b0cab1001976754ecca981f3"></a>
<a class="el" href="../../d9/dde/structpl_list_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetEndIterator</b> ()</td></tr>
<tr class="memdesc:aecd0bbb3b0cab1001976754ecca981f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator pointing behind the last element. Necessary if one wants to insert elements at the end of a list. <br /></td></tr>
<tr class="separator:aecd0bbb3b0cab1001976754ecca981f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd85677845d31e52b5c48e05af48ca90" id="r_abd85677845d31e52b5c48e05af48ca90"><td class="memItemLeft" align="right" valign="top"><a id="abd85677845d31e52b5c48e05af48ca90" name="abd85677845d31e52b5c48e05af48ca90"></a>
ConstIterator&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:abd85677845d31e52b5c48e05af48ca90"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a const-iterator to the first list-element. <br /></td></tr>
<tr class="separator:abd85677845d31e52b5c48e05af48ca90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5b82b29056c529617bf59ee08a821a2" id="r_af5b82b29056c529617bf59ee08a821a2"><td class="memItemLeft" align="right" valign="top"><a id="af5b82b29056c529617bf59ee08a821a2" name="af5b82b29056c529617bf59ee08a821a2"></a>
ConstIterator&#160;</td><td class="memItemRight" valign="bottom"><b>GetEndIterator</b> () const</td></tr>
<tr class="memdesc:af5b82b29056c529617bf59ee08a821a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a const-iterator pointing behind the last element. Necessary if one wants to insert elements at the end of a list. <br /></td></tr>
<tr class="separator:af5b82b29056c529617bf59ee08a821a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5178a1132663b057924bf891c05eca39" id="r_a5178a1132663b057924bf891c05eca39"><td class="memItemLeft" align="right" valign="top"><a id="a5178a1132663b057924bf891c05eca39" name="a5178a1132663b057924bf891c05eca39"></a>
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:a5178a1132663b057924bf891c05eca39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a5178a1132663b057924bf891c05eca39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbfb075d918ba6eac037d84642539299" id="r_afbfb075d918ba6eac037d84642539299"><td class="memItemLeft" align="right" valign="top"><a id="afbfb075d918ba6eac037d84642539299" name="afbfb075d918ba6eac037d84642539299"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../db/d85/classpl_list_base.htm">plListBase</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:afbfb075d918ba6eac037d84642539299"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator. <br /></td></tr>
<tr class="separator:afbfb075d918ba6eac037d84642539299"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27ea6284e17258824f783282ecbb883c" id="r_a27ea6284e17258824f783282ecbb883c"><td class="memItemLeft" align="right" valign="top"><a id="a27ea6284e17258824f783282ecbb883c" name="a27ea6284e17258824f783282ecbb883c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../db/d85/classpl_list_base.htm">plListBase</a>&lt; T &gt; &amp;)</td></tr>
<tr class="separator:a27ea6284e17258824f783282ecbb883c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55b44554f0fda5b99c419e8ec2cd9cd1" id="r_a55b44554f0fda5b99c419e8ec2cd9cd1"><td class="memItemLeft" align="right" valign="top"><a id="a55b44554f0fda5b99c419e8ec2cd9cd1" name="a55b44554f0fda5b99c419e8ec2cd9cd1"></a>
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:a55b44554f0fda5b99c419e8ec2cd9cd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a55b44554f0fda5b99c419e8ec2cd9cd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a678705060f403dfa449ff4064e146db3" id="r_a678705060f403dfa449ff4064e146db3"><td class="memItemLeft" align="right" valign="top"><a id="a678705060f403dfa449ff4064e146db3" name="a678705060f403dfa449ff4064e146db3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plListBase</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a678705060f403dfa449ff4064e146db3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the list to be empty. <br /></td></tr>
<tr class="separator:a678705060f403dfa449ff4064e146db3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf0fcdc4fea24b30629c137779121096" id="r_abf0fcdc4fea24b30629c137779121096"><td class="memItemLeft" align="right" valign="top"><a id="abf0fcdc4fea24b30629c137779121096" name="abf0fcdc4fea24b30629c137779121096"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plListBase</b> (const <a class="el" href="../../db/d85/classpl_list_base.htm">plListBase</a>&lt; T &gt; &amp;cc, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:abf0fcdc4fea24b30629c137779121096"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the list with a copy from another list. <br /></td></tr>
<tr class="separator:abf0fcdc4fea24b30629c137779121096"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf526859a184754341cad311333a306" id="r_a3bf526859a184754341cad311333a306"><td class="memItemLeft" align="right" valign="top"><a id="a3bf526859a184754341cad311333a306" name="a3bf526859a184754341cad311333a306"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>~plListBase</b> ()</td></tr>
<tr class="memdesc:a3bf526859a184754341cad311333a306"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the list and all its content. <br /></td></tr>
<tr class="separator:a3bf526859a184754341cad311333a306"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa29cb1d61606e61eb23886d14ec475cf" id="r_aa29cb1d61606e61eb23886d14ec475cf"><td class="memItemLeft" align="right" valign="top"><a id="aa29cb1d61606e61eb23886d14ec475cf" name="aa29cb1d61606e61eb23886d14ec475cf"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../db/d85/classpl_list_base.htm">plListBase</a>&lt; T &gt; &amp;cc)</td></tr>
<tr class="memdesc:aa29cb1d61606e61eb23886d14ec475cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the list cc into this list. <br /></td></tr>
<tr class="separator:aa29cb1d61606e61eb23886d14ec475cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename T&gt;<br />
class plListBase&lt; T &gt;</div><p>A List-class, similar to STL::list. </p>
<p>This container class allows fast insertion and erasure of elements. Access is limited to iteration from front-to-back or back-to-front, there is no random-access. Define the type of object to store in the list via the template argument T. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a3c6c2e3a44507b78458a9b871f9d2837" name="a3c6c2e3a44507b78458a9b871f9d2837"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c6c2e3a44507b78458a9b871f9d2837">&#9670;&#160;</a></span>SetCount()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../db/d85/classpl_list_base.htm">plListBase</a>&lt; T &gt;::SetCount </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiNewSize</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the number of elements that are in the list. </p>
<p>If uiNewSize is smaller than the size of the list, elements are popped from the back, until the desired size is reached. If uiNewSize is larger than the size of the list, default-constructed elements are appended to the list, until the desired size is reached. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../dc/d1f/_list_8h_source.htm">List.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../d6/d2b/_list__inl_8h_source.htm">List_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/d85/classpl_list_base.htm">plListBase</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
