<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plVec4Template&lt; Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d1/d4b/classpl_vec4_template.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d3/d10/classpl_vec4_template-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plVec4Template&lt; Type &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A 4-component vector class.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../df/d6a/_vec4_8h_source.htm">Vec4.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aed7876477f0a6e0877d4eeb8a07e9da0" id="r_aed7876477f0a6e0877d4eeb8a07e9da0"><td class="memItemLeft" align="right" valign="top"><a id="aed7876477f0a6e0877d4eeb8a07e9da0" name="aed7876477f0a6e0877d4eeb8a07e9da0"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ComponentType</b> = Type</td></tr>
<tr class="separator:aed7876477f0a6e0877d4eeb8a07e9da0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a275a97596005ed42c8ae8f98625bca95" id="r_a275a97596005ed42c8ae8f98625bca95"><td class="memItemLeft" align="right" valign="top"><a id="a275a97596005ed42c8ae8f98625bca95" name="a275a97596005ed42c8ae8f98625bca95"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a275a97596005ed42c8ae8f98625bca95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1df7a3eb8d9a7ade48d8ac075d86fcc9" id="r_a1df7a3eb8d9a7ade48d8ac075d86fcc9"><td class="memItemLeft" align="right" valign="top"><a id="a1df7a3eb8d9a7ade48d8ac075d86fcc9" name="a1df7a3eb8d9a7ade48d8ac075d86fcc9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plVec4Template</b> ()</td></tr>
<tr class="memdesc:a1df7a3eb8d9a7ade48d8ac075d86fcc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default-constructed vector is uninitialized (for speed) <br /></td></tr>
<tr class="separator:a1df7a3eb8d9a7ade48d8ac075d86fcc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8b440ab8f0eedab8787c506d8f030f3" id="r_af8b440ab8f0eedab8787c506d8f030f3"><td class="memItemLeft" align="right" valign="top"><a id="af8b440ab8f0eedab8787c506d8f030f3" name="af8b440ab8f0eedab8787c506d8f030f3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plVec4Template</b> (Type x, Type y, Type z, Type w)</td></tr>
<tr class="memdesc:af8b440ab8f0eedab8787c506d8f030f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the vector with x,y,z,w. <br /></td></tr>
<tr class="separator:af8b440ab8f0eedab8787c506d8f030f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a5ba3e3a1107043e080cc46b8af3686" id="r_a2a5ba3e3a1107043e080cc46b8af3686"><td class="memItemLeft" align="right" valign="top"><a id="a2a5ba3e3a1107043e080cc46b8af3686" name="a2a5ba3e3a1107043e080cc46b8af3686"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plVec4Template</b> (<a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template</a>&lt; Type &gt; vXyz, Type w)</td></tr>
<tr class="memdesc:a2a5ba3e3a1107043e080cc46b8af3686"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the vector from a vec3 and a float. <br /></td></tr>
<tr class="separator:a2a5ba3e3a1107043e080cc46b8af3686"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5dcbf49feca61df141ad963a2f6e8b75" id="r_a5dcbf49feca61df141ad963a2f6e8b75"><td class="memItemLeft" align="right" valign="top"><a id="a5dcbf49feca61df141ad963a2f6e8b75" name="a5dcbf49feca61df141ad963a2f6e8b75"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plVec4Template</b> (Type v)</td></tr>
<tr class="memdesc:a5dcbf49feca61df141ad963a2f6e8b75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes all 4 components with xyzw. <br /></td></tr>
<tr class="separator:a5dcbf49feca61df141ad963a2f6e8b75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9fac6afdb98f2889d6ca57e96168ecf" id="r_ad9fac6afdb98f2889d6ca57e96168ecf"><td class="memItemLeft" align="right" valign="top"><a id="ad9fac6afdb98f2889d6ca57e96168ecf" name="ad9fac6afdb98f2889d6ca57e96168ecf"></a>
const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAsVec2</b> () const</td></tr>
<tr class="memdesc:ad9fac6afdb98f2889d6ca57e96168ecf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../d1/dd1/classpl_vec2_template.htm" title="A 2-component vector class.">plVec2Template</a> with x and y from this vector. <br /></td></tr>
<tr class="separator:ad9fac6afdb98f2889d6ca57e96168ecf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56f3b4f1eda6f19111a0b6e26f3c51af" id="r_a56f3b4f1eda6f19111a0b6e26f3c51af"><td class="memItemLeft" align="right" valign="top"><a id="a56f3b4f1eda6f19111a0b6e26f3c51af" name="a56f3b4f1eda6f19111a0b6e26f3c51af"></a>
const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAsVec3</b> () const</td></tr>
<tr class="memdesc:a56f3b4f1eda6f19111a0b6e26f3c51af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../df/d1f/classpl_vec3_template.htm" title="A 3-component vector class.">plVec3Template</a> with x,y and z from this vector. <br /></td></tr>
<tr class="separator:a56f3b4f1eda6f19111a0b6e26f3c51af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d056bacf3e79666a81e5b5fc144d8e3" id="r_a9d056bacf3e79666a81e5b5fc144d8e3"><td class="memItemLeft" align="right" valign="top"><a id="a9d056bacf3e79666a81e5b5fc144d8e3" name="a9d056bacf3e79666a81e5b5fc144d8e3"></a>
const Type *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:a9d056bacf3e79666a81e5b5fc144d8e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data as an array. <br /></td></tr>
<tr class="separator:a9d056bacf3e79666a81e5b5fc144d8e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9639a89a89d26ee76a607c989d87cdf9" id="r_a9639a89a89d26ee76a607c989d87cdf9"><td class="memItemLeft" align="right" valign="top"><a id="a9639a89a89d26ee76a607c989d87cdf9" name="a9639a89a89d26ee76a607c989d87cdf9"></a>
Type *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> ()</td></tr>
<tr class="memdesc:a9639a89a89d26ee76a607c989d87cdf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data as an array. <br /></td></tr>
<tr class="separator:a9639a89a89d26ee76a607c989d87cdf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6403f5250b3bd48817b7ae0529ac253" id="r_ac6403f5250b3bd48817b7ae0529ac253"><td class="memItemLeft" align="right" valign="top"><a id="ac6403f5250b3bd48817b7ae0529ac253" name="ac6403f5250b3bd48817b7ae0529ac253"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (Type xyzw)</td></tr>
<tr class="memdesc:ac6403f5250b3bd48817b7ae0529ac253"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets all 4 components to this value. <br /></td></tr>
<tr class="separator:ac6403f5250b3bd48817b7ae0529ac253"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2845c501082f31c2cd2ed453b8de3056" id="r_a2845c501082f31c2cd2ed453b8de3056"><td class="memItemLeft" align="right" valign="top"><a id="a2845c501082f31c2cd2ed453b8de3056" name="a2845c501082f31c2cd2ed453b8de3056"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (Type x, Type y, Type z, Type w)</td></tr>
<tr class="memdesc:a2845c501082f31c2cd2ed453b8de3056"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the vector to these values. <br /></td></tr>
<tr class="separator:a2845c501082f31c2cd2ed453b8de3056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3affb7629cb1a3c21759aae7ce37333a" id="r_a3affb7629cb1a3c21759aae7ce37333a"><td class="memItemLeft" align="right" valign="top"><a id="a3affb7629cb1a3c21759aae7ce37333a" name="a3affb7629cb1a3c21759aae7ce37333a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetZero</b> ()</td></tr>
<tr class="memdesc:a3affb7629cb1a3c21759aae7ce37333a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the vector to all zero. <br /></td></tr>
<tr class="separator:a3affb7629cb1a3c21759aae7ce37333a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afecac8bb1380f23bd22d7569c84ba9eb" id="r_afecac8bb1380f23bd22d7569c84ba9eb"><td class="memItemLeft" align="right" valign="top"><a id="afecac8bb1380f23bd22d7569c84ba9eb" name="afecac8bb1380f23bd22d7569c84ba9eb"></a>
PL_DECLARE_IF_FLOAT_TYPE Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetLength</b> () const</td></tr>
<tr class="memdesc:afecac8bb1380f23bd22d7569c84ba9eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the length of the vector. <br /></td></tr>
<tr class="separator:afecac8bb1380f23bd22d7569c84ba9eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4165bf0507c82caa79dd307c790bb17" id="r_af4165bf0507c82caa79dd307c790bb17"><td class="memItemLeft" align="right" valign="top"><a id="af4165bf0507c82caa79dd307c790bb17" name="af4165bf0507c82caa79dd307c790bb17"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetLengthSquared</b> () const</td></tr>
<tr class="memdesc:af4165bf0507c82caa79dd307c790bb17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compare the lengths of two vectors. <br /></td></tr>
<tr class="separator:af4165bf0507c82caa79dd307c790bb17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a29d62cc57c1150da9a3b93c52ea4de" id="r_a4a29d62cc57c1150da9a3b93c52ea4de"><td class="memItemLeft" align="right" valign="top"><a id="a4a29d62cc57c1150da9a3b93c52ea4de" name="a4a29d62cc57c1150da9a3b93c52ea4de"></a>
PL_DECLARE_IF_FLOAT_TYPE Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetLengthAndNormalize</b> ()</td></tr>
<tr class="memdesc:a4a29d62cc57c1150da9a3b93c52ea4de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes this vector and returns its previous length in one operation. More efficient than calling GetLength and then Normalize. <br /></td></tr>
<tr class="separator:a4a29d62cc57c1150da9a3b93c52ea4de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab25aabcf5bdbaf53567917554ed637b0" id="r_ab25aabcf5bdbaf53567917554ed637b0"><td class="memItemLeft" align="right" valign="top"><a id="ab25aabcf5bdbaf53567917554ed637b0" name="ab25aabcf5bdbaf53567917554ed637b0"></a>
PL_DECLARE_IF_FLOAT_TYPE const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetNormalized</b> () const</td></tr>
<tr class="memdesc:ab25aabcf5bdbaf53567917554ed637b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a normalized version of this vector, leaves the vector itself unchanged. <br /></td></tr>
<tr class="separator:ab25aabcf5bdbaf53567917554ed637b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72b391c034c09c96a3e923bdbc485590" id="r_a72b391c034c09c96a3e923bdbc485590"><td class="memItemLeft" align="right" valign="top"><a id="a72b391c034c09c96a3e923bdbc485590" name="a72b391c034c09c96a3e923bdbc485590"></a>
PL_DECLARE_IF_FLOAT_TYPE void&#160;</td><td class="memItemRight" valign="bottom"><b>Normalize</b> ()</td></tr>
<tr class="memdesc:a72b391c034c09c96a3e923bdbc485590"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes this vector. <br /></td></tr>
<tr class="separator:a72b391c034c09c96a3e923bdbc485590"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d6d3cfbf1747a22f79b181b2e506133" id="r_a1d6d3cfbf1747a22f79b181b2e506133"><td class="memItemLeft" align="right" valign="top"><a id="a1d6d3cfbf1747a22f79b181b2e506133" name="a1d6d3cfbf1747a22f79b181b2e506133"></a>
PL_DECLARE_IF_FLOAT_TYPE <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>NormalizeIfNotZero</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;vFallback=<a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;(1, 0, 0, 0), Type fEpsilon=plMath::SmallEpsilon&lt; Type &gt;())</td></tr>
<tr class="memdesc:a1d6d3cfbf1747a22f79b181b2e506133"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to normalize this vector. If the vector is too close to zero, PL_FAILURE is returned and the vector is set to the given fallback value. <br /></td></tr>
<tr class="separator:a1d6d3cfbf1747a22f79b181b2e506133"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209ff370e5ab96ff91545104f1fd0d14" id="r_a209ff370e5ab96ff91545104f1fd0d14"><td class="memItemLeft" align="right" valign="top"><a id="a209ff370e5ab96ff91545104f1fd0d14" name="a209ff370e5ab96ff91545104f1fd0d14"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsZero</b> () const</td></tr>
<tr class="memdesc:a209ff370e5ab96ff91545104f1fd0d14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether this vector is (0, 0, 0, 0). <br /></td></tr>
<tr class="separator:a209ff370e5ab96ff91545104f1fd0d14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef35b3db65136c2f8b1ec3baf790b9e2" id="r_aef35b3db65136c2f8b1ec3baf790b9e2"><td class="memItemLeft" align="right" valign="top"><a id="aef35b3db65136c2f8b1ec3baf790b9e2" name="aef35b3db65136c2f8b1ec3baf790b9e2"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsZero</b> (Type fEpsilon) const</td></tr>
<tr class="memdesc:aef35b3db65136c2f8b1ec3baf790b9e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether this vector is (0, 0, 0, 0). <br /></td></tr>
<tr class="separator:aef35b3db65136c2f8b1ec3baf790b9e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12505373062fce634fb984495700563b" id="r_a12505373062fce634fb984495700563b"><td class="memItemLeft" align="right" valign="top">PL_DECLARE_IF_FLOAT_TYPE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a12505373062fce634fb984495700563b">IsNormalized</a> (Type fEpsilon=plMath::HugeEpsilon&lt; Type &gt;()) const</td></tr>
<tr class="memdesc:a12505373062fce634fb984495700563b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether the squared length of this vector is between 0.999f and 1.001f.  <br /></td></tr>
<tr class="separator:a12505373062fce634fb984495700563b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f08e5ee3a02f308fd6405a2258e2c07" id="r_a5f08e5ee3a02f308fd6405a2258e2c07"><td class="memItemLeft" align="right" valign="top"><a id="a5f08e5ee3a02f308fd6405a2258e2c07" name="a5f08e5ee3a02f308fd6405a2258e2c07"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsNaN</b> () const</td></tr>
<tr class="memdesc:a5f08e5ee3a02f308fd6405a2258e2c07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if any of x, y, z or w is NaN. <br /></td></tr>
<tr class="separator:a5f08e5ee3a02f308fd6405a2258e2c07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae79e34e2815fa391e812699feb0d423c" id="r_ae79e34e2815fa391e812699feb0d423c"><td class="memItemLeft" align="right" valign="top"><a id="ae79e34e2815fa391e812699feb0d423c" name="ae79e34e2815fa391e812699feb0d423c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValid</b> () const</td></tr>
<tr class="memdesc:ae79e34e2815fa391e812699feb0d423c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that all components are finite numbers. <br /></td></tr>
<tr class="separator:ae79e34e2815fa391e812699feb0d423c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fb967145be9d74e70e07a8a327b95ea" id="r_a7fb967145be9d74e70e07a8a327b95ea"><td class="memItemLeft" align="right" valign="top"><a id="a7fb967145be9d74e70e07a8a327b95ea" name="a7fb967145be9d74e70e07a8a327b95ea"></a>
const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> () const</td></tr>
<tr class="memdesc:a7fb967145be9d74e70e07a8a327b95ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the negation of this vector. <br /></td></tr>
<tr class="separator:a7fb967145be9d74e70e07a8a327b95ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca6e4a5a9d6631259f3046c1878fd135" id="r_aca6e4a5a9d6631259f3046c1878fd135"><td class="memItemLeft" align="right" valign="top"><a id="aca6e4a5a9d6631259f3046c1878fd135" name="aca6e4a5a9d6631259f3046c1878fd135"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;vCc)</td></tr>
<tr class="memdesc:aca6e4a5a9d6631259f3046c1878fd135"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds cc component-wise to this vector. <br /></td></tr>
<tr class="separator:aca6e4a5a9d6631259f3046c1878fd135"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57cb1f382e28af289496ab276e768fe9" id="r_a57cb1f382e28af289496ab276e768fe9"><td class="memItemLeft" align="right" valign="top"><a id="a57cb1f382e28af289496ab276e768fe9" name="a57cb1f382e28af289496ab276e768fe9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;vCc)</td></tr>
<tr class="memdesc:a57cb1f382e28af289496ab276e768fe9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts cc component-wise from this vector. <br /></td></tr>
<tr class="separator:a57cb1f382e28af289496ab276e768fe9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac590eb66a041e15bf55ebf6b3b9d3837" id="r_ac590eb66a041e15bf55ebf6b3b9d3837"><td class="memItemLeft" align="right" valign="top"><a id="ac590eb66a041e15bf55ebf6b3b9d3837" name="ac590eb66a041e15bf55ebf6b3b9d3837"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (Type f)</td></tr>
<tr class="memdesc:ac590eb66a041e15bf55ebf6b3b9d3837"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies all components of this vector with f. <br /></td></tr>
<tr class="separator:ac590eb66a041e15bf55ebf6b3b9d3837"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a811900898a6f92b4cdbd42821914ca58" id="r_a811900898a6f92b4cdbd42821914ca58"><td class="memItemLeft" align="right" valign="top"><a id="a811900898a6f92b4cdbd42821914ca58" name="a811900898a6f92b4cdbd42821914ca58"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (Type f)</td></tr>
<tr class="memdesc:a811900898a6f92b4cdbd42821914ca58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides all components of this vector by f. <br /></td></tr>
<tr class="separator:a811900898a6f92b4cdbd42821914ca58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbeb567a25881eefa31f53b548940131" id="r_acbeb567a25881eefa31f53b548940131"><td class="memItemLeft" align="right" valign="top"><a id="acbeb567a25881eefa31f53b548940131" name="acbeb567a25881eefa31f53b548940131"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsIdentical</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:acbeb567a25881eefa31f53b548940131"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality Check (bitwise). <br /></td></tr>
<tr class="separator:acbeb567a25881eefa31f53b548940131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc14b0966bd0aec76ede511e558cbff" id="r_a2bc14b0966bd0aec76ede511e558cbff"><td class="memItemLeft" align="right" valign="top"><a id="a2bc14b0966bd0aec76ede511e558cbff" name="a2bc14b0966bd0aec76ede511e558cbff"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEqual</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;rhs, Type fEpsilon) const</td></tr>
<tr class="memdesc:a2bc14b0966bd0aec76ede511e558cbff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality Check with epsilon. <br /></td></tr>
<tr class="separator:a2bc14b0966bd0aec76ede511e558cbff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac25affb4e91fb4e85902b640440f8bbd" id="r_ac25affb4e91fb4e85902b640440f8bbd"><td class="memItemLeft" align="right" valign="top"><a id="ac25affb4e91fb4e85902b640440f8bbd" name="ac25affb4e91fb4e85902b640440f8bbd"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>Dot</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ac25affb4e91fb4e85902b640440f8bbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the dot-product of the two vectors (commutative, order does not matter). <br /></td></tr>
<tr class="separator:ac25affb4e91fb4e85902b640440f8bbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f08ae2d434fe9486ef2775038da0859" id="r_a1f08ae2d434fe9486ef2775038da0859"><td class="memItemLeft" align="right" valign="top"><a id="a1f08ae2d434fe9486ef2775038da0859" name="a1f08ae2d434fe9486ef2775038da0859"></a>
const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompMin</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a1f08ae2d434fe9486ef2775038da0859"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise minimum of *this and rhs. <br /></td></tr>
<tr class="separator:a1f08ae2d434fe9486ef2775038da0859"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace1621ad2804312b30c875338189d6ab" id="r_ace1621ad2804312b30c875338189d6ab"><td class="memItemLeft" align="right" valign="top"><a id="ace1621ad2804312b30c875338189d6ab" name="ace1621ad2804312b30c875338189d6ab"></a>
const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompMax</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ace1621ad2804312b30c875338189d6ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise maximum of *this and rhs. <br /></td></tr>
<tr class="separator:ace1621ad2804312b30c875338189d6ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69e35a330e0b1e5dea93775026888360" id="r_a69e35a330e0b1e5dea93775026888360"><td class="memItemLeft" align="right" valign="top"><a id="a69e35a330e0b1e5dea93775026888360" name="a69e35a330e0b1e5dea93775026888360"></a>
const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompClamp</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;vLow, const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;vHigh) const</td></tr>
<tr class="memdesc:a69e35a330e0b1e5dea93775026888360"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise clamped value of *this between low and high. <br /></td></tr>
<tr class="separator:a69e35a330e0b1e5dea93775026888360"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8c39a01ba3509bb2d10727b0034e9c5" id="r_ac8c39a01ba3509bb2d10727b0034e9c5"><td class="memItemLeft" align="right" valign="top"><a id="ac8c39a01ba3509bb2d10727b0034e9c5" name="ac8c39a01ba3509bb2d10727b0034e9c5"></a>
const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompMul</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ac8c39a01ba3509bb2d10727b0034e9c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise multiplication of *this and rhs. <br /></td></tr>
<tr class="separator:ac8c39a01ba3509bb2d10727b0034e9c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a306e67269a6421b2276a8c125fd8c6b8" id="r_a306e67269a6421b2276a8c125fd8c6b8"><td class="memItemLeft" align="right" valign="top"><a id="a306e67269a6421b2276a8c125fd8c6b8" name="a306e67269a6421b2276a8c125fd8c6b8"></a>
const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompDiv</b> (const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a306e67269a6421b2276a8c125fd8c6b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise division of *this and rhs. <br /></td></tr>
<tr class="separator:a306e67269a6421b2276a8c125fd8c6b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89addb92897f36719e0b44793f5b2621" id="r_a89addb92897f36719e0b44793f5b2621"><td class="memItemLeft" align="right" valign="top"><a id="a89addb92897f36719e0b44793f5b2621" name="a89addb92897f36719e0b44793f5b2621"></a>
const <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Abs</b> () const</td></tr>
<tr class="memdesc:a89addb92897f36719e0b44793f5b2621"><td class="mdescLeft">&#160;</td><td class="mdescRight">brief Returns the component-wise absolute of *this. <br /></td></tr>
<tr class="separator:a89addb92897f36719e0b44793f5b2621"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ad171221ca4fd16a24990c15a171dc56e" id="r_ad171221ca4fd16a24990c15a171dc56e"><td class="memItemLeft" align="right" valign="top"><a id="ad171221ca4fd16a24990c15a171dc56e" name="ad171221ca4fd16a24990c15a171dc56e"></a>
static PL_DECLARE_IF_FLOAT_TYPE <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>MakeNaN</b> ()</td></tr>
<tr class="memdesc:ad171221ca4fd16a24990c15a171dc56e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector with all components set to Not-a-Number (NaN). <br /></td></tr>
<tr class="separator:ad171221ca4fd16a24990c15a171dc56e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92d27df6e9bbf5254b896f74c9a8ab3a" id="r_a92d27df6e9bbf5254b896f74c9a8ab3a"><td class="memItemLeft" align="right" valign="top"><a id="a92d27df6e9bbf5254b896f74c9a8ab3a" name="a92d27df6e9bbf5254b896f74c9a8ab3a"></a>
static <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>MakeZero</b> ()</td></tr>
<tr class="memdesc:a92d27df6e9bbf5254b896f74c9a8ab3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector with all components set to zero. <br /></td></tr>
<tr class="separator:a92d27df6e9bbf5254b896f74c9a8ab3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a0e7655e1e507dc0567392c91031efbc9" id="r_a0e7655e1e507dc0567392c91031efbc9"><td class="memItemLeft" align="right" valign="top"><a id="a0e7655e1e507dc0567392c91031efbc9" name="a0e7655e1e507dc0567392c91031efbc9"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>x</b></td></tr>
<tr class="separator:a0e7655e1e507dc0567392c91031efbc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c0325e003d02071db0a3013150d63cf" id="r_a5c0325e003d02071db0a3013150d63cf"><td class="memItemLeft" align="right" valign="top"><a id="a5c0325e003d02071db0a3013150d63cf" name="a5c0325e003d02071db0a3013150d63cf"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>y</b></td></tr>
<tr class="separator:a5c0325e003d02071db0a3013150d63cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abffa1106076f01fca32f1b1aae4f6bd7" id="r_abffa1106076f01fca32f1b1aae4f6bd7"><td class="memItemLeft" align="right" valign="top"><a id="abffa1106076f01fca32f1b1aae4f6bd7" name="abffa1106076f01fca32f1b1aae4f6bd7"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>z</b></td></tr>
<tr class="separator:abffa1106076f01fca32f1b1aae4f6bd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf8d03f679544a318929951321944992" id="r_aaf8d03f679544a318929951321944992"><td class="memItemLeft" align="right" valign="top"><a id="aaf8d03f679544a318929951321944992" name="aaf8d03f679544a318929951321944992"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>w</b></td></tr>
<tr class="separator:aaf8d03f679544a318929951321944992"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Type&gt;<br />
class plVec4Template&lt; Type &gt;</div><p>A 4-component vector class. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a12505373062fce634fb984495700563b" name="a12505373062fce634fb984495700563b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12505373062fce634fb984495700563b">&#9670;&#160;</a></span>IsNormalized()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PL_IMPLEMENT_IF_FLOAT_TYPE bool <a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a>&lt; Type &gt;::IsNormalized </td>
          <td>(</td>
          <td class="paramtype">Type</td>          <td class="paramname"><span class="paramname"><em>fEpsilon</em></span><span class="paramdefsep"> = </span><span class="paramdefval">plMath::HugeEpsilon&lt;Type&gt;()</span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns, whether the squared length of this vector is between 0.999f and 1.001f. </p>
<dl class="section note"><dt>Note</dt><dd>Normalization, especially with SSE is not very precise. So this function checks whether the (squared) length is between a lower and upper limit. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Math/<a class="el" href="../../d4/dbc/_engine_2_foundation_2_math_2_declarations_8h_source.htm">Declarations.h</a></li>
<li>Code/Engine/Foundation/Math/<a class="el" href="../../df/d6a/_vec4_8h_source.htm">Vec4.h</a></li>
<li>Code/Engine/Foundation/Math/Implementation/<a class="el" href="../../db/dba/_vec4__inl_8h_source.htm">Vec4_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
