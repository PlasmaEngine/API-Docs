<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plLSAOPass Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d1/df2/classpl_l_s_a_o_pass.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../dc/dc2/classpl_l_s_a_o_pass-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plLSAOPass Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d0/dd9/_l_s_a_o_pass_8h_source.htm">LSAOPass.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plLSAOPass:</div>
<div class="dyncontent">
<div class="center"><img src="../../db/d97/classpl_l_s_a_o_pass__inherit__graph.png" border="0" usemap="#apl_l_s_a_o_pass_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_l_s_a_o_pass_inherit__map" id="apl_l_s_a_o_pass_inherit__map">
<area shape="rect" title=" " alt="" coords="31,304,128,331"/>
<area shape="rect" href="../../d8/da4/classpl_render_pipeline_pass.htm" title=" " alt="" coords="5,229,154,256"/>
<area shape="poly" title=" " alt="" coords="82,272,82,304,77,304,77,272"/>
<area shape="rect" href="../../df/db6/classpl_render_pipeline_node.htm" title=" " alt="" coords="5,155,154,181"/>
<area shape="poly" title=" " alt="" coords="82,197,82,229,77,229,77,197"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="20,80,139,107"/>
<area shape="poly" title=" " alt="" coords="82,122,82,154,77,154,77,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="41,5,118,32"/>
<area shape="poly" title=" " alt="" coords="82,48,82,80,77,80,77,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab28e9a8d2ff8089d596b32a909917c53" id="r_ab28e9a8d2ff8089d596b32a909917c53"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab28e9a8d2ff8089d596b32a909917c53">GetRenderTargetDescriptions</a> (const <a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> &amp;view, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> *const &gt; inputs, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &gt; outputs) override</td></tr>
<tr class="memdesc:ab28e9a8d2ff8089d596b32a909917c53"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins.  <br /></td></tr>
<tr class="separator:ab28e9a8d2ff8089d596b32a909917c53"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fbd1a0d1b9028229b292c40c381a6cd" id="r_a5fbd1a0d1b9028229b292c40c381a6cd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5fbd1a0d1b9028229b292c40c381a6cd">InitRenderPipelinePass</a> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="memdesc:a5fbd1a0d1b9028229b292c40c381a6cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer.  <br /></td></tr>
<tr class="separator:a5fbd1a0d1b9028229b292c40c381a6cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff2ac225c02af6e40d1c724cb2cc925a" id="r_aff2ac225c02af6e40d1c724cb2cc925a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aff2ac225c02af6e40d1c724cb2cc925a">Execute</a> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="memdesc:aff2ac225c02af6e40d1c724cb2cc925a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data.  <br /></td></tr>
<tr class="separator:aff2ac225c02af6e40d1c724cb2cc925a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d7fe2ef74ff43b9649326543cf0d45c" id="r_a0d7fe2ef74ff43b9649326543cf0d45c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d7fe2ef74ff43b9649326543cf0d45c">ExecuteInactive</a> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="separator:a0d7fe2ef74ff43b9649326543cf0d45c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36012525d374cb80aaebfb7db9883a19" id="r_a36012525d374cb80aaebfb7db9883a19"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a36012525d374cb80aaebfb7db9883a19">Serialize</a> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_stream) const override</td></tr>
<tr class="separator:a36012525d374cb80aaebfb7db9883a19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add7a69dc31a781309ced5dcd6f90a236" id="r_add7a69dc31a781309ced5dcd6f90a236"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add7a69dc31a781309ced5dcd6f90a236">Deserialize</a> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &amp;inout_stream) override</td></tr>
<tr class="separator:add7a69dc31a781309ced5dcd6f90a236"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14c230b8d137ba5340e4d60566efedd2" id="r_a14c230b8d137ba5340e4d60566efedd2"><td class="memItemLeft" align="right" valign="top"><a id="a14c230b8d137ba5340e4d60566efedd2" name="a14c230b8d137ba5340e4d60566efedd2"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetLineToLinePixelOffset</b> () const</td></tr>
<tr class="separator:a14c230b8d137ba5340e4d60566efedd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6c12f8857abe5c15e2a950ad8f7aacc" id="r_ae6c12f8857abe5c15e2a950ad8f7aacc"><td class="memItemLeft" align="right" valign="top"><a id="ae6c12f8857abe5c15e2a950ad8f7aacc" name="ae6c12f8857abe5c15e2a950ad8f7aacc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetLineToLinePixelOffset</b> (plUInt32 uiPixelOffset)</td></tr>
<tr class="separator:ae6c12f8857abe5c15e2a950ad8f7aacc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23354c0ba3a01fc154050527922d06cc" id="r_a23354c0ba3a01fc154050527922d06cc"><td class="memItemLeft" align="right" valign="top"><a id="a23354c0ba3a01fc154050527922d06cc" name="a23354c0ba3a01fc154050527922d06cc"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetLineSamplePixelOffset</b> () const</td></tr>
<tr class="separator:a23354c0ba3a01fc154050527922d06cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93278c8c1d5405fa1428dc38fe680d76" id="r_a93278c8c1d5405fa1428dc38fe680d76"><td class="memItemLeft" align="right" valign="top"><a id="a93278c8c1d5405fa1428dc38fe680d76" name="a93278c8c1d5405fa1428dc38fe680d76"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetLineSamplePixelOffset</b> (plUInt32 uiPixelOffset)</td></tr>
<tr class="separator:a93278c8c1d5405fa1428dc38fe680d76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49d0bc6bbc5808e9a6bfbf253b451bd4" id="r_a49d0bc6bbc5808e9a6bfbf253b451bd4"><td class="memItemLeft" align="right" valign="top"><a id="a49d0bc6bbc5808e9a6bfbf253b451bd4" name="a49d0bc6bbc5808e9a6bfbf253b451bd4"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetDepthCutoffDistance</b> () const</td></tr>
<tr class="separator:a49d0bc6bbc5808e9a6bfbf253b451bd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49a782236d3d22a1ada4f77fa1ce4265" id="r_a49a782236d3d22a1ada4f77fa1ce4265"><td class="memItemLeft" align="right" valign="top"><a id="a49a782236d3d22a1ada4f77fa1ce4265" name="a49a782236d3d22a1ada4f77fa1ce4265"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetDepthCutoffDistance</b> (float fDepthCutoffDistance)</td></tr>
<tr class="separator:a49a782236d3d22a1ada4f77fa1ce4265"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaf672c3a3bb37c0026cc1823660f333" id="r_aaaf672c3a3bb37c0026cc1823660f333"><td class="memItemLeft" align="right" valign="top"><a id="aaaf672c3a3bb37c0026cc1823660f333" name="aaaf672c3a3bb37c0026cc1823660f333"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetOcclusionFalloff</b> () const</td></tr>
<tr class="separator:aaaf672c3a3bb37c0026cc1823660f333"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bfbef65ea6539d58bab4ad8173b79bf" id="r_a7bfbef65ea6539d58bab4ad8173b79bf"><td class="memItemLeft" align="right" valign="top"><a id="a7bfbef65ea6539d58bab4ad8173b79bf" name="a7bfbef65ea6539d58bab4ad8173b79bf"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetOcclusionFalloff</b> (float fFalloff)</td></tr>
<tr class="separator:a7bfbef65ea6539d58bab4ad8173b79bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_render_pipeline_pass"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_render_pipeline_pass')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm">plRenderPipelinePass</a></td></tr>
<tr class="memitem:ab2ea6a9ffdd7fbc5491adcf4fa5e8f89 inherit pub_methods_classpl_render_pipeline_pass" id="r_ab2ea6a9ffdd7fbc5491adcf4fa5e8f89"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plRenderPipelinePass</b> (const char *szName, bool bIsStereoAware=false)</td></tr>
<tr class="separator:ab2ea6a9ffdd7fbc5491adcf4fa5e8f89 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcaba0f06de6de84e30e5d3f6696adf9 inherit pub_methods_classpl_render_pipeline_pass" id="r_adcaba0f06de6de84e30e5d3f6696adf9"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetName</b> (const char *szName)</td></tr>
<tr class="memdesc:adcaba0f06de6de84e30e5d3f6696adf9 inherit pub_methods_classpl_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the pass. <br /></td></tr>
<tr class="separator:adcaba0f06de6de84e30e5d3f6696adf9 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eb1431a92264d223132de89f1bc7247 inherit pub_methods_classpl_render_pipeline_pass" id="r_a2eb1431a92264d223132de89f1bc7247"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="memdesc:a2eb1431a92264d223132de89f1bc7247 inherit pub_methods_classpl_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the name of the pass. <br /></td></tr>
<tr class="separator:a2eb1431a92264d223132de89f1bc7247 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf57bfc210229eb46fb1b2e478e933e inherit pub_methods_classpl_render_pipeline_pass" id="r_a3bf57bfc210229eb46fb1b2e478e933e"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsStereoAware</b> () const</td></tr>
<tr class="memdesc:a3bf57bfc210229eb46fb1b2e478e933e inherit pub_methods_classpl_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">True if the render pipeline pass can handle stereo cameras correctly. <br /></td></tr>
<tr class="separator:a3bf57bfc210229eb46fb1b2e478e933e inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad327da9e098bd64f650d827e8f255e77 inherit pub_methods_classpl_render_pipeline_pass" id="r_ad327da9e098bd64f650d827e8f255e77"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/de5/classpl_g_a_l_texture_handle.htm">plGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#ad327da9e098bd64f650d827e8f255e77">QueryTextureProvider</a> (const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *pPin, const <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &amp;desc)</td></tr>
<tr class="separator:ad327da9e098bd64f650d827e8f255e77 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae149ec39db8045806742a934e5adf72b inherit pub_methods_classpl_render_pipeline_pass" id="r_ae149ec39db8045806742a934e5adf72b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#ae149ec39db8045806742a934e5adf72b">ReadBackProperties</a> (<a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *pView)</td></tr>
<tr class="memdesc:ae149ec39db8045806742a934e5adf72b inherit pub_methods_classpl_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows for the pass to write data back using plView::SetRenderPassReadBackProperty. E.g. picking results etc.  <br /></td></tr>
<tr class="separator:ae149ec39db8045806742a934e5adf72b inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adafff9984ae9b103ebea9e09ad0150fa inherit pub_methods_classpl_render_pipeline_pass" id="r_adafff9984ae9b103ebea9e09ad0150fa"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RenderDataWithCategory</b> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, <a class="el" href="../../d7/d4c/structpl_render_data_1_1_category.htm">plRenderData::Category</a> category, <a class="el" href="../../dd/d63/classpl_render_data_batch.htm#a6f40beec8fc9f38ae41fdee67974aaec">plRenderDataBatch::Filter</a> filter=<a class="el" href="../../dd/d63/classpl_render_data_batch.htm#a6f40beec8fc9f38ae41fdee67974aaec">plRenderDataBatch::Filter</a>())</td></tr>
<tr class="separator:adafff9984ae9b103ebea9e09ad0150fa inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09fed82adf3a76148e63b05d63782b19 inherit pub_methods_classpl_render_pipeline_pass" id="r_a09fed82adf3a76148e63b05d63782b19"><td class="memItemLeft" align="right" valign="top">
PL_ALWAYS_INLINE <a class="el" href="../../d5/d68/classpl_render_pipeline.htm">plRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> ()</td></tr>
<tr class="separator:a09fed82adf3a76148e63b05d63782b19 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b8bac1b9fcd90e56174acfb4ab399b0 inherit pub_methods_classpl_render_pipeline_pass" id="r_a0b8bac1b9fcd90e56174acfb4ab399b0"><td class="memItemLeft" align="right" valign="top">
PL_ALWAYS_INLINE const <a class="el" href="../../d5/d68/classpl_render_pipeline.htm">plRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> () const</td></tr>
<tr class="separator:a0b8bac1b9fcd90e56174acfb4ab399b0 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_render_pipeline_node"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_render_pipeline_node')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a></td></tr>
<tr class="memitem:af4e0ff1f11b514ad62a39778cd841202 inherit pub_methods_classpl_render_pipeline_node" id="r_af4e0ff1f11b514ad62a39778cd841202"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InitializePins</b> ()</td></tr>
<tr class="separator:af4e0ff1f11b514ad62a39778cd841202 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4e37109bde78bda2e197351c301979 inherit pub_methods_classpl_render_pipeline_node" id="r_aed4e37109bde78bda2e197351c301979"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinName</b> (const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *pPin) const</td></tr>
<tr class="separator:aed4e37109bde78bda2e197351c301979 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07cc899d36529c5602bb5f37c47b01ff inherit pub_methods_classpl_render_pipeline_node" id="r_a07cc899d36529c5602bb5f37c47b01ff"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (const char *szName) const</td></tr>
<tr class="separator:a07cc899d36529c5602bb5f37c47b01ff inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631d4aae4d9689d4da14bcbece9d7969 inherit pub_methods_classpl_render_pipeline_node" id="r_a631d4aae4d9689d4da14bcbece9d7969"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (<a class="el" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> sName) const</td></tr>
<tr class="separator:a631d4aae4d9689d4da14bcbece9d7969 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c53266f359cf29e7ab5a367517eda73 inherit pub_methods_classpl_render_pipeline_node" id="r_a5c53266f359cf29e7ab5a367517eda73"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputPins</b> () const</td></tr>
<tr class="separator:a5c53266f359cf29e7ab5a367517eda73 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae681612860ed7b6b3babfa5f71ecdc33 inherit pub_methods_classpl_render_pipeline_node" id="r_ae681612860ed7b6b3babfa5f71ecdc33"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetOutputPins</b> () const</td></tr>
<tr class="separator:ae681612860ed7b6b3babfa5f71ecdc33 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a4e4e1afed58a39af868e1b13b95b15d9" id="r_a4e4e1afed58a39af868e1b13b95b15d9"><td class="memItemLeft" align="right" valign="top"><a id="a4e4e1afed58a39af868e1b13b95b15d9" name="a4e4e1afed58a39af868e1b13b95b15d9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DestroyLineSweepData</b> ()</td></tr>
<tr class="memdesc:a4e4e1afed58a39af868e1b13b95b15d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all GPU data that might have been created in in SetupLineSweepData. <br /></td></tr>
<tr class="separator:a4e4e1afed58a39af868e1b13b95b15d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eae524842ddea8ed695854b2e61dfbd" id="r_a3eae524842ddea8ed695854b2e61dfbd"><td class="memItemLeft" align="right" valign="top"><a id="a3eae524842ddea8ed695854b2e61dfbd" name="a3eae524842ddea8ed695854b2e61dfbd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetupLineSweepData</b> (const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3I32</a> &amp;imageResolution)</td></tr>
<tr class="separator:a3eae524842ddea8ed695854b2e61dfbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f0a633c064947a12ff1361b53d53480" id="r_a7f0a633c064947a12ff1361b53d53480"><td class="memItemLeft" align="right" valign="top"><a id="a7f0a633c064947a12ff1361b53d53480" name="a7f0a633c064947a12ff1361b53d53480"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddLinesForDirection</b> (const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3I32</a> &amp;imageResolution, const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2I32</a> &amp;sampleDir, plUInt32 lineIndex, <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; LineInstruction &gt; &amp;outinLineInstructions, plUInt32 &amp;outinTotalNumberOfSamples)</td></tr>
<tr class="separator:a7f0a633c064947a12ff1361b53d53480"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a8f1dfac2c391dd1cd7ed1cbfa2686398" id="r_a8f1dfac2c391dd1cd7ed1cbfa2686398"><td class="memItemLeft" align="right" valign="top"><a id="a8f1dfac2c391dd1cd7ed1cbfa2686398" name="a8f1dfac2c391dd1cd7ed1cbfa2686398"></a>
<a class="el" href="../../d3/d46/structpl_render_pipeline_node_input_pin.htm">plRenderPipelineNodeInputPin</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_PinDepthInput</b></td></tr>
<tr class="separator:a8f1dfac2c391dd1cd7ed1cbfa2686398"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3110cdf3dafdabb79a54e8ae806f22ba" id="r_a3110cdf3dafdabb79a54e8ae806f22ba"><td class="memItemLeft" align="right" valign="top"><a id="a3110cdf3dafdabb79a54e8ae806f22ba" name="a3110cdf3dafdabb79a54e8ae806f22ba"></a>
<a class="el" href="../../d0/de1/structpl_render_pipeline_node_output_pin.htm">plRenderPipelineNodeOutputPin</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_PinOutput</b></td></tr>
<tr class="separator:a3110cdf3dafdabb79a54e8ae806f22ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3ccff999b0d5ba7f8d9fb92c9f9155a" id="r_ab3ccff999b0d5ba7f8d9fb92c9f9155a"><td class="memItemLeft" align="right" valign="top"><a id="ab3ccff999b0d5ba7f8d9fb92c9f9155a" name="ab3ccff999b0d5ba7f8d9fb92c9f9155a"></a>
<a class="el" href="../../da/d2e/classpl_constant_buffer_storage_handle.htm">plConstantBufferStorageHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineSweepCB</b></td></tr>
<tr class="separator:ab3ccff999b0d5ba7f8d9fb92c9f9155a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08fe93d22d3199c57946a41ebcde3a62" id="r_a08fe93d22d3199c57946a41ebcde3a62"><td class="memItemLeft" align="right" valign="top"><a id="a08fe93d22d3199c57946a41ebcde3a62" name="a08fe93d22d3199c57946a41ebcde3a62"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bSweepDataDirty</b> = true</td></tr>
<tr class="separator:a08fe93d22d3199c57946a41ebcde3a62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aa5cbdee434567c20d3d6486ab92a7e" id="r_a5aa5cbdee434567c20d3d6486ab92a7e"><td class="memItemLeft" align="right" valign="top"><a id="a5aa5cbdee434567c20d3d6486ab92a7e" name="a5aa5cbdee434567c20d3d6486ab92a7e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bConstantsDirty</b> = true</td></tr>
<tr class="separator:a5aa5cbdee434567c20d3d6486ab92a7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4685b8fac694321bd5654d084d0a4fe1" id="r_a4685b8fac694321bd5654d084d0a4fe1"><td class="memItemLeft" align="right" valign="top"><a id="a4685b8fac694321bd5654d084d0a4fe1" name="a4685b8fac694321bd5654d084d0a4fe1"></a>
<a class="el" href="../../db/d57/classpl_g_a_l_buffer_handle.htm">plGALBufferHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineSweepOutputBuffer</b></td></tr>
<tr class="memdesc:a4685b8fac694321bd5654d084d0a4fe1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output of the line sweep pass. <br /></td></tr>
<tr class="separator:a4685b8fac694321bd5654d084d0a4fe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadfd15f377f0e2ee909b54b7ffe66b7a" id="r_aadfd15f377f0e2ee909b54b7ffe66b7a"><td class="memItemLeft" align="right" valign="top"><a id="aadfd15f377f0e2ee909b54b7ffe66b7a" name="aadfd15f377f0e2ee909b54b7ffe66b7a"></a>
<a class="el" href="../../d5/d6c/classpl_g_a_l_buffer_unordered_access_view_handle.htm">plGALBufferUnorderedAccessViewHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineSweepOutputUAV</b></td></tr>
<tr class="separator:aadfd15f377f0e2ee909b54b7ffe66b7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf30dcdb76d923e4051021a1038d77ae" id="r_adf30dcdb76d923e4051021a1038d77ae"><td class="memItemLeft" align="right" valign="top"><a id="adf30dcdb76d923e4051021a1038d77ae" name="adf30dcdb76d923e4051021a1038d77ae"></a>
<a class="el" href="../../df/d63/classpl_g_a_l_buffer_resource_view_handle.htm">plGALBufferResourceViewHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineSweepOutputSRV</b></td></tr>
<tr class="separator:adf30dcdb76d923e4051021a1038d77ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7e758397c5bca12b3a7d458bbe23c5e" id="r_aa7e758397c5bca12b3a7d458bbe23c5e"><td class="memItemLeft" align="right" valign="top"><a id="aa7e758397c5bca12b3a7d458bbe23c5e" name="aa7e758397c5bca12b3a7d458bbe23c5e"></a>
<a class="el" href="../../db/d57/classpl_g_a_l_buffer_handle.htm">plGALBufferHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineInfoBuffer</b></td></tr>
<tr class="memdesc:aa7e758397c5bca12b3a7d458bbe23c5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structured buffer containing instructions for every single line to trace. <br /></td></tr>
<tr class="separator:aa7e758397c5bca12b3a7d458bbe23c5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c501cbdcb76a5fffd5f74f0f258530" id="r_ab5c501cbdcb76a5fffd5f74f0f258530"><td class="memItemLeft" align="right" valign="top"><a id="ab5c501cbdcb76a5fffd5f74f0f258530" name="ab5c501cbdcb76a5fffd5f74f0f258530"></a>
<a class="el" href="../../df/d63/classpl_g_a_l_buffer_resource_view_handle.htm">plGALBufferResourceViewHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineSweepInfoSRV</b></td></tr>
<tr class="separator:ab5c501cbdcb76a5fffd5f74f0f258530"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42ba7e6e8c2fbc8d8c2386284546d000" id="r_a42ba7e6e8c2fbc8d8c2386284546d000"><td class="memItemLeft" align="right" valign="top"><a id="a42ba7e6e8c2fbc8d8c2386284546d000" name="a42ba7e6e8c2fbc8d8c2386284546d000"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiNumSweepLines</b> = 0</td></tr>
<tr class="memdesc:a42ba7e6e8c2fbc8d8c2386284546d000"><td class="mdescLeft">&#160;</td><td class="mdescRight">Total number of lines to be traced. <br /></td></tr>
<tr class="separator:a42ba7e6e8c2fbc8d8c2386284546d000"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a333e135d35e8feaca6bccf61c77a859d" id="r_a333e135d35e8feaca6bccf61c77a859d"><td class="memItemLeft" align="right" valign="top"><a id="a333e135d35e8feaca6bccf61c77a859d" name="a333e135d35e8feaca6bccf61c77a859d"></a>
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iLineToLinePixelOffset</b> = 2</td></tr>
<tr class="separator:a333e135d35e8feaca6bccf61c77a859d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51d470dad0c256a8fa48fb601c7a4bc3" id="r_a51d470dad0c256a8fa48fb601c7a4bc3"><td class="memItemLeft" align="right" valign="top"><a id="a51d470dad0c256a8fa48fb601c7a4bc3" name="a51d470dad0c256a8fa48fb601c7a4bc3"></a>
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iLineSamplePixelOffsetFactor</b> = 1</td></tr>
<tr class="separator:a51d470dad0c256a8fa48fb601c7a4bc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7862af0aff567531120270b33ff0a525" id="r_a7862af0aff567531120270b33ff0a525"><td class="memItemLeft" align="right" valign="top"><a id="a7862af0aff567531120270b33ff0a525" name="a7862af0aff567531120270b33ff0a525"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fOcclusionFalloff</b> = 0.2f</td></tr>
<tr class="separator:a7862af0aff567531120270b33ff0a525"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc4ed1e5e8fde873088c6e0229043137" id="r_afc4ed1e5e8fde873088c6e0229043137"><td class="memItemLeft" align="right" valign="top"><a id="afc4ed1e5e8fde873088c6e0229043137" name="afc4ed1e5e8fde873088c6e0229043137"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fDepthCutoffDistance</b> = 4.0f</td></tr>
<tr class="separator:afc4ed1e5e8fde873088c6e0229043137"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3726d707f51259d4269a81bcc094990e" id="r_a3726d707f51259d4269a81bcc094990e"><td class="memItemLeft" align="right" valign="top"><a id="a3726d707f51259d4269a81bcc094990e" name="a3726d707f51259d4269a81bcc094990e"></a>
<a class="el" href="../../dd/d09/structpl_enum.htm">plEnum</a>&lt; <a class="el" href="../../da/d1b/structpl_l_s_a_o_depth_compare_function.htm">plLSAODepthCompareFunction</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_DepthCompareFunction</b></td></tr>
<tr class="separator:a3726d707f51259d4269a81bcc094990e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78379ccbec459b57393f3299f2351ee7" id="r_a78379ccbec459b57393f3299f2351ee7"><td class="memItemLeft" align="right" valign="top"><a id="a78379ccbec459b57393f3299f2351ee7" name="a78379ccbec459b57393f3299f2351ee7"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bDistributedGathering</b> = true</td></tr>
<tr class="separator:a78379ccbec459b57393f3299f2351ee7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76e86ec7b023daa161e6182070ac787c" id="r_a76e86ec7b023daa161e6182070ac787c"><td class="memItemLeft" align="right" valign="top"><a id="a76e86ec7b023daa161e6182070ac787c" name="a76e86ec7b023daa161e6182070ac787c"></a>
<a class="el" href="../../d4/db4/classpl_typed_resource_handle.htm">plShaderResourceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hShaderLineSweep</b></td></tr>
<tr class="separator:a76e86ec7b023daa161e6182070ac787c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb0e092339c544795ad337501bf5f7dd" id="r_aeb0e092339c544795ad337501bf5f7dd"><td class="memItemLeft" align="right" valign="top"><a id="aeb0e092339c544795ad337501bf5f7dd" name="aeb0e092339c544795ad337501bf5f7dd"></a>
<a class="el" href="../../d4/db4/classpl_typed_resource_handle.htm">plShaderResourceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hShaderGather</b></td></tr>
<tr class="separator:aeb0e092339c544795ad337501bf5f7dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32495df1af0a1028e039d4de99b9be4a" id="r_a32495df1af0a1028e039d4de99b9be4a"><td class="memItemLeft" align="right" valign="top"><a id="a32495df1af0a1028e039d4de99b9be4a" name="a32495df1af0a1028e039d4de99b9be4a"></a>
<a class="el" href="../../d4/db4/classpl_typed_resource_handle.htm">plShaderResourceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hShaderAverage</b></td></tr>
<tr class="separator:a32495df1af0a1028e039d4de99b9be4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Screen space ambient occlusion using "line sweep ambient occlusion" by Ville Timonen</p>
<p>Resources: Use in Quantum Break: <a href="http://wili.cc/research/quantum_break/SIGGRAPH_2015_Remedy_Notes.pdf">http://wili.cc/research/quantum_break/SIGGRAPH_2015_Remedy_Notes.pdf</a> Presentation slides EGSR: <a href="http://wili.cc/research/lsao/EGSR13_LSAO.pdf">http://wili.cc/research/lsao/EGSR13_LSAO.pdf</a> Paper: <a href="http://wili.cc/research/lsao/lsao.pdf">http://wili.cc/research/lsao/lsao.pdf</a></p>
<p>There are a few adjustments and own ideas worked into this implementation. The biggest change probably is that pixels in the gather pass compute their target linesample arithmetically instead of relying on lookups. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="add7a69dc31a781309ced5dcd6f90a236" name="add7a69dc31a781309ced5dcd6f90a236"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add7a69dc31a781309ced5dcd6f90a236">&#9670;&#160;</a></span>Deserialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plLSAOPass::Deserialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>inout_stream</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm">plRenderPipelinePass</a>.</p>

</div>
</div>
<a id="aff2ac225c02af6e40d1c724cb2cc925a" name="aff2ac225c02af6e40d1c724cb2cc925a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff2ac225c02af6e40d1c724cb2cc925a">&#9670;&#160;</a></span>Execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plLSAOPass::Execute </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>renderViewContext</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data. </p>

<p>Implements <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#a77f066867e0b0ce045317520d7083d8d">plRenderPipelinePass</a>.</p>

</div>
</div>
<a id="a0d7fe2ef74ff43b9649326543cf0d45c" name="a0d7fe2ef74ff43b9649326543cf0d45c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d7fe2ef74ff43b9649326543cf0d45c">&#9670;&#160;</a></span>ExecuteInactive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plLSAOPass::ExecuteInactive </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>renderViewContext</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm">plRenderPipelinePass</a>.</p>

</div>
</div>
<a id="ab28e9a8d2ff8089d596b32a909917c53" name="ab28e9a8d2ff8089d596b32a909917c53"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab28e9a8d2ff8089d596b32a909917c53">&#9670;&#160;</a></span>GetRenderTargetDescriptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plLSAOPass::GetRenderTargetDescriptions </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>view</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins. </p>

<p>Implements <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#aef04db804311bd7ad00cb5b42230cef2">plRenderPipelinePass</a>.</p>

</div>
</div>
<a id="a5fbd1a0d1b9028229b292c40c381a6cd" name="a5fbd1a0d1b9028229b292c40c381a6cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fbd1a0d1b9028229b292c40c381a6cd">&#9670;&#160;</a></span>InitRenderPipelinePass()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plLSAOPass::InitRenderPipelinePass </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer. </p>

<p>Reimplemented from <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#a72e182c70f3b83e9ba377ff9bb5178b3">plRenderPipelinePass</a>.</p>

</div>
</div>
<a id="a36012525d374cb80aaebfb7db9883a19" name="a36012525d374cb80aaebfb7db9883a19"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a36012525d374cb80aaebfb7db9883a19">&#9670;&#160;</a></span>Serialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plLSAOPass::Serialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>inout_stream</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm">plRenderPipelinePass</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/RendererCore/Pipeline/Passes/<a class="el" href="../../d0/dd9/_l_s_a_o_pass_8h_source.htm">LSAOPass.h</a></li>
<li>Code/Engine/RendererCore/Pipeline/Implementation/Passes/<b>LSAOPass.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/df2/classpl_l_s_a_o_pass.htm">plLSAOPass</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
