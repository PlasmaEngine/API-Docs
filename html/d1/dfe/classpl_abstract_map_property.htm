<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plAbstractMapProperty Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d1/dfe/classpl_abstract_map_property.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d5/d96/classpl_abstract_map_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAbstractMapProperty Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>The base class for a property that represents a set of values.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/d4a/_abstract_property_8h_source.htm">AbstractProperty.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plAbstractMapProperty:</div>
<div class="dyncontent">
<div class="center"><img src="../../d2/dc9/classpl_abstract_map_property__inherit__graph.png" border="0" usemap="#apl_abstract_map_property_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_abstract_map_property_inherit__map" id="apl_abstract_map_property_inherit__map">
<area shape="rect" title="The base class for a property that represents a set of values." alt="" coords="183,88,337,115"/>
<area shape="rect" href="../../d5/dd2/classpl_typed_map_property.htm" title=" " alt="" coords="385,5,581,64"/>
<area shape="poly" title=" " alt="" coords="321,80,384,61,385,67,323,86"/>
<area shape="rect" href="../../d3/df3/classpl_phantom_map_property.htm" title=" " alt="" coords="404,88,562,115"/>
<area shape="poly" title=" " alt="" coords="352,99,404,99,404,104,352,104"/>
<area shape="rect" href="../../d5/dd2/classpl_typed_map_property.htm" title=" " alt="" coords="413,139,553,181"/>
<area shape="poly" title=" " alt="" coords="329,117,413,139,412,144,328,122"/>
<area shape="rect" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="5,88,135,115"/>
<area shape="poly" title=" " alt="" coords="151,99,183,99,183,104,151,104"/>
<area shape="rect" href="../../db/df3/classpl_member_map_property.htm" title=" " alt="" coords="649,5,801,64"/>
<area shape="poly" title=" " alt="" coords="597,32,648,32,648,37,597,37"/>
<area shape="rect" href="../../dc/d5e/classpl_accessor_map_property.htm" title=" " alt="" coords="636,113,814,156"/>
<area shape="poly" title=" " alt="" coords="568,148,636,141,636,147,569,154"/>
<area shape="rect" href="../../d2/d2f/classpl_write_accessor_map_property.htm" title=" " alt="" coords="629,180,821,223"/>
<area shape="poly" title=" " alt="" coords="569,172,629,182,628,188,568,177"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1a62d3ff3a04162fec26cd4f2508cf65" id="r_a1a62d3ff3a04162fec26cd4f2508cf65"><td class="memItemLeft" align="right" valign="top"><a id="a1a62d3ff3a04162fec26cd4f2508cf65" name="a1a62d3ff3a04162fec26cd4f2508cf65"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractMapProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a1a62d3ff3a04162fec26cd4f2508cf65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">plAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a1a62d3ff3a04162fec26cd4f2508cf65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad13b6a857bfe8d53fe14fe6385cfeb54" id="r_ad13b6a857bfe8d53fe14fe6385cfeb54"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad13b6a857bfe8d53fe14fe6385cfeb54">GetCategory</a> () const override</td></tr>
<tr class="memdesc:ad13b6a857bfe8d53fe14fe6385cfeb54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7a7b2b5030e879bd3a19e8cd405c16aac7" title="The property is actually a map from string to values. Cast to plAbstractMapProperty.">plPropertyCategory::Map</a>.  <br /></td></tr>
<tr class="separator:ad13b6a857bfe8d53fe14fe6385cfeb54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dda589b6eb170f136dee1f03f0a3d3d" id="r_a1dda589b6eb170f136dee1f03f0a3d3d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1dda589b6eb170f136dee1f03f0a3d3d">IsEmpty</a> (const void *pInstance) const =0</td></tr>
<tr class="memdesc:a1dda589b6eb170f136dee1f03f0a3d3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the set is empty.  <br /></td></tr>
<tr class="separator:a1dda589b6eb170f136dee1f03f0a3d3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3ecf444d0ff87c9d5da71efdeb26835" id="r_ad3ecf444d0ff87c9d5da71efdeb26835"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad3ecf444d0ff87c9d5da71efdeb26835">Clear</a> (void *pInstance) const =0</td></tr>
<tr class="memdesc:ad3ecf444d0ff87c9d5da71efdeb26835"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the set.  <br /></td></tr>
<tr class="separator:ad3ecf444d0ff87c9d5da71efdeb26835"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13f70fc1dca6643388f03885f6ecef88" id="r_a13f70fc1dca6643388f03885f6ecef88"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a13f70fc1dca6643388f03885f6ecef88">Insert</a> (void *pInstance, const char *szKey, const void *pObject) const =0</td></tr>
<tr class="memdesc:a13f70fc1dca6643388f03885f6ecef88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the target of pObject into the set.  <br /></td></tr>
<tr class="separator:a13f70fc1dca6643388f03885f6ecef88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e65e5f63738815199d117e215010e43" id="r_a4e65e5f63738815199d117e215010e43"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4e65e5f63738815199d117e215010e43">Remove</a> (void *pInstance, const char *szKey) const =0</td></tr>
<tr class="memdesc:a4e65e5f63738815199d117e215010e43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the target of pObject from the set.  <br /></td></tr>
<tr class="separator:a4e65e5f63738815199d117e215010e43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f0a6d168d2c31f098dbcdd14faf5e80" id="r_a5f0a6d168d2c31f098dbcdd14faf5e80"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5f0a6d168d2c31f098dbcdd14faf5e80">Contains</a> (const void *pInstance, const char *szKey) const =0</td></tr>
<tr class="memdesc:a5f0a6d168d2c31f098dbcdd14faf5e80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the target of pObject is in the set.  <br /></td></tr>
<tr class="separator:a5f0a6d168d2c31f098dbcdd14faf5e80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90bf6d521e1d1da7679f2eddfe5ff32d" id="r_a90bf6d521e1d1da7679f2eddfe5ff32d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a90bf6d521e1d1da7679f2eddfe5ff32d">GetValue</a> (const void *pInstance, const char *szKey, void *pObject) const =0</td></tr>
<tr class="memdesc:a90bf6d521e1d1da7679f2eddfe5ff32d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes element at index uiIndex to the target of pObject.  <br /></td></tr>
<tr class="separator:a90bf6d521e1d1da7679f2eddfe5ff32d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22d247329b24dd88bc764c0ea5ee0d9d" id="r_a22d247329b24dd88bc764c0ea5ee0d9d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22d247329b24dd88bc764c0ea5ee0d9d">GetKeys</a> (const void *pInstance, <a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>, 16 &gt; &amp;out_keys) const =0</td></tr>
<tr class="memdesc:a22d247329b24dd88bc764c0ea5ee0d9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the content of the set to out_keys.  <br /></td></tr>
<tr class="separator:a22d247329b24dd88bc764c0ea5ee0d9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property" id="r_a8ae8dcf20f01b0926e321d68fd38d243"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property" id="r_ab192fac6724fcbd56a160013230bad0b"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbd1806e4b123998797a4c080ad9fbb1 inherit pub_methods_classpl_abstract_property" id="r_acbd1806e4b123998797a4c080ad9fbb1"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dd7/classpl_abstract_property.htm#acbd1806e4b123998797a4c080ad9fbb1">GetSpecificType</a> () const =0</td></tr>
<tr class="memdesc:acbd1806e4b123998797a4c080ad9fbb1 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dd/d62/classpl_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">plTypedConstantProperty</a>.  <br /></td></tr>
<tr class="separator:acbd1806e4b123998797a4c080ad9fbb1 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property" id="r_a988149e0184a527d89a6fc7b529aa6fc"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property" id="r_a1a7c0de0ecff4c5ab4a37987f9780a64"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property" id="r_a249245c8d8a5bd14d12b7b72920b4d5e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property" id="r_aa28f7ffab1bd6667a67f94a351e618ba"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property" id="r_a74666a9b6312d9e8a0208ff67ec56a7d"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property" id="r_a5226bc2ced2436f3aeaf96fadea40f70"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property" id="r_a135a819e72ea2827916acdefd2fb6848"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property" id="r_aaf46ae0b97785db5048abb483c603cea"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *, 2, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The base class for a property that represents a set of values. </p>
<p>The element type must either be a standard type or a pointer. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ad3ecf444d0ff87c9d5da71efdeb26835" name="ad3ecf444d0ff87c9d5da71efdeb26835"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3ecf444d0ff87c9d5da71efdeb26835">&#9670;&#160;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAbstractMapProperty::Clear </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clears the set. </p>

<p>Implemented in <a class="el" href="../../dc/d5e/classpl_accessor_map_property.htm#a18162954f66aa718a340a83ae021a90b">plAccessorMapProperty&lt; Class, Type, Container &gt;</a>, <a class="el" href="../../db/df3/classpl_member_map_property.htm#ad843b5d77f9f46f809ac0e40a869c57f">plMemberMapProperty&lt; Class, Container, Type &gt;</a>, <a class="el" href="../../d3/df3/classpl_phantom_map_property.htm#a4b76ce665b8ec38f5796421f91f4708f">plPhantomMapProperty</a>, and <a class="el" href="../../d2/d2f/classpl_write_accessor_map_property.htm#aef6797a5c392644a2ef8778eeb18c1dc">plWriteAccessorMapProperty&lt; Class, Type, Container &gt;</a>.</p>

</div>
</div>
<a id="a5f0a6d168d2c31f098dbcdd14faf5e80" name="a5f0a6d168d2c31f098dbcdd14faf5e80"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f0a6d168d2c31f098dbcdd14faf5e80">&#9670;&#160;</a></span>Contains()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plAbstractMapProperty::Contains </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szKey</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether the target of pObject is in the set. </p>

<p>Implemented in <a class="el" href="../../dc/d5e/classpl_accessor_map_property.htm#a2ba7fb5d62fa45a1c60cd98c2270c5d5">plAccessorMapProperty&lt; Class, Type, Container &gt;</a>, <a class="el" href="../../db/df3/classpl_member_map_property.htm#a5a0079ded1c83f95a7d6a856a2f857e7">plMemberMapProperty&lt; Class, Container, Type &gt;</a>, <a class="el" href="../../d3/df3/classpl_phantom_map_property.htm#a2f98f52e1b1dce4f7b8357bd92398a5a">plPhantomMapProperty</a>, and <a class="el" href="../../d2/d2f/classpl_write_accessor_map_property.htm#a3d04247584ceca917529fe0156664283">plWriteAccessorMapProperty&lt; Class, Type, Container &gt;</a>.</p>

</div>
</div>
<a id="ad13b6a857bfe8d53fe14fe6385cfeb54" name="ad13b6a857bfe8d53fe14fe6385cfeb54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad13b6a857bfe8d53fe14fe6385cfeb54">&#9670;&#160;</a></span>GetCategory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a> plAbstractMapProperty::GetCategory </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7a7b2b5030e879bd3a19e8cd405c16aac7" title="The property is actually a map from string to values. Cast to plAbstractMapProperty.">plPropertyCategory::Map</a>. </p>

<p>Implements <a class="el" href="../../d4/dd7/classpl_abstract_property.htm#a234883c7cab039c992bfeb662ce4ecd5">plAbstractProperty</a>.</p>

</div>
</div>
<a id="a22d247329b24dd88bc764c0ea5ee0d9d" name="a22d247329b24dd88bc764c0ea5ee0d9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22d247329b24dd88bc764c0ea5ee0d9d">&#9670;&#160;</a></span>GetKeys()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAbstractMapProperty::GetKeys </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>, 16 &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>out_keys</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes the content of the set to out_keys. </p>

<p>Implemented in <a class="el" href="../../dc/d5e/classpl_accessor_map_property.htm#a6b766f1650b48c103334b8d2939e3070">plAccessorMapProperty&lt; Class, Type, Container &gt;</a>, <a class="el" href="../../db/df3/classpl_member_map_property.htm#ac752bc3b7beceafe69bc823bbe89a10a">plMemberMapProperty&lt; Class, Container, Type &gt;</a>, <a class="el" href="../../d3/df3/classpl_phantom_map_property.htm#a723bbc1d9b86fa25ae03106e06b00382">plPhantomMapProperty</a>, and <a class="el" href="../../d2/d2f/classpl_write_accessor_map_property.htm#a2cd5563a26584860de6336931e66c3af">plWriteAccessorMapProperty&lt; Class, Type, Container &gt;</a>.</p>

</div>
</div>
<a id="a90bf6d521e1d1da7679f2eddfe5ff32d" name="a90bf6d521e1d1da7679f2eddfe5ff32d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a90bf6d521e1d1da7679f2eddfe5ff32d">&#9670;&#160;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plAbstractMapProperty::GetValue </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes element at index uiIndex to the target of pObject. </p>

<p>Implemented in <a class="el" href="../../dc/d5e/classpl_accessor_map_property.htm#a12aeed94d9a5f395315edecf3a160533">plAccessorMapProperty&lt; Class, Type, Container &gt;</a>, <a class="el" href="../../db/df3/classpl_member_map_property.htm#a22878d5bea12dee078db8eff20dca562">plMemberMapProperty&lt; Class, Container, Type &gt;</a>, <a class="el" href="../../d3/df3/classpl_phantom_map_property.htm#a903c4d826fca31f3e1574e244523a2e8">plPhantomMapProperty</a>, and <a class="el" href="../../d2/d2f/classpl_write_accessor_map_property.htm#ace1272af590f327c57c3dc48c6a3eaec">plWriteAccessorMapProperty&lt; Class, Type, Container &gt;</a>.</p>

</div>
</div>
<a id="a13f70fc1dca6643388f03885f6ecef88" name="a13f70fc1dca6643388f03885f6ecef88"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a13f70fc1dca6643388f03885f6ecef88">&#9670;&#160;</a></span>Insert()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAbstractMapProperty::Insert </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szKey</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Inserts the target of pObject into the set. </p>

<p>Implemented in <a class="el" href="../../dc/d5e/classpl_accessor_map_property.htm#a6358345256f88497fb16cd7a5d566432">plAccessorMapProperty&lt; Class, Type, Container &gt;</a>, <a class="el" href="../../db/df3/classpl_member_map_property.htm#a8bf278ea1e70734b748bbe25baf1edd0">plMemberMapProperty&lt; Class, Container, Type &gt;</a>, <a class="el" href="../../d3/df3/classpl_phantom_map_property.htm#a901f4b1ea35d702ee2ac003819a41548">plPhantomMapProperty</a>, and <a class="el" href="../../d2/d2f/classpl_write_accessor_map_property.htm#acb758a168c5da1f551f6172f493f03e8">plWriteAccessorMapProperty&lt; Class, Type, Container &gt;</a>.</p>

</div>
</div>
<a id="a1dda589b6eb170f136dee1f03f0a3d3d" name="a1dda589b6eb170f136dee1f03f0a3d3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1dda589b6eb170f136dee1f03f0a3d3d">&#9670;&#160;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plAbstractMapProperty::IsEmpty </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether the set is empty. </p>

<p>Implemented in <a class="el" href="../../dc/d5e/classpl_accessor_map_property.htm#a9a40901c1b04f65e6d578cfc584f27a0">plAccessorMapProperty&lt; Class, Type, Container &gt;</a>, <a class="el" href="../../db/df3/classpl_member_map_property.htm#a9edbf448642fc4ee0d8fc0b001af5343">plMemberMapProperty&lt; Class, Container, Type &gt;</a>, <a class="el" href="../../d3/df3/classpl_phantom_map_property.htm#a874ecf6f01ab1041509a917c295ff381">plPhantomMapProperty</a>, and <a class="el" href="../../d2/d2f/classpl_write_accessor_map_property.htm#a0d9f837608ac8813d5101fee09eced04">plWriteAccessorMapProperty&lt; Class, Type, Container &gt;</a>.</p>

</div>
</div>
<a id="a4e65e5f63738815199d117e215010e43" name="a4e65e5f63738815199d117e215010e43"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e65e5f63738815199d117e215010e43">&#9670;&#160;</a></span>Remove()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAbstractMapProperty::Remove </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szKey</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes the target of pObject from the set. </p>

<p>Implemented in <a class="el" href="../../dc/d5e/classpl_accessor_map_property.htm#a94f17981945e4804c972236353b67bc6">plAccessorMapProperty&lt; Class, Type, Container &gt;</a>, <a class="el" href="../../db/df3/classpl_member_map_property.htm#ad72bd2c14c2b746a23427394d57b135e">plMemberMapProperty&lt; Class, Container, Type &gt;</a>, <a class="el" href="../../d3/df3/classpl_phantom_map_property.htm#a77588716689da80cf26b4e6c3907fd5b">plPhantomMapProperty</a>, and <a class="el" href="../../d2/d2f/classpl_write_accessor_map_property.htm#a4d29d08cde13706930ad826400c74867">plWriteAccessorMapProperty&lt; Class, Type, Container &gt;</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../d8/d4a/_abstract_property_8h_source.htm">AbstractProperty.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/dfe/classpl_abstract_map_property.htm">plAbstractMapProperty</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
