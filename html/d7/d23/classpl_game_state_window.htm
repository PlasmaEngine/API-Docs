<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plGameStateWindow Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d7/d23/classpl_game_state_window.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="../../d0/dea/classpl_game_state_window-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plGameStateWindow Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A window class that expands a little on <a class="el" href="../../df/d28/classpl_window.htm" title="A simple abstraction for platform specific window creation.">plWindow</a>. Default type used by <a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> to create a window.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d4/d1a/_game_state_window_8h_source.htm">GameStateWindow.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plGameStateWindow:</div>
<div class="dyncontent">
<div class="center"><img src="../../db/de9/classpl_game_state_window__inherit__graph.png" border="0" usemap="#apl_game_state_window_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_game_state_window_inherit__map" id="apl_game_state_window_inherit__map">
<area shape="rect" title="A window class that expands a little on plWindow. Default type used by plGameState to create a window..." alt="" coords="5,155,149,181"/>
<area shape="rect" href="../../df/d28/classpl_window.htm" title="A simple abstraction for platform specific window creation." alt="" coords="38,80,116,107"/>
<area shape="poly" title=" " alt="" coords="80,122,80,154,74,154,74,122"/>
<area shape="rect" href="../../d8/d8b/classpl_window_base.htm" title="Base class of all window classes that have a client area and a native window handle." alt="" coords="23,5,131,32"/>
<area shape="poly" title=" " alt="" coords="80,48,80,80,74,80,74,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:adf7acf82a04816553a53f978ecd9d2af" id="r_adf7acf82a04816553a53f978ecd9d2af"><td class="memItemLeft" align="right" valign="top"><a id="adf7acf82a04816553a53f978ecd9d2af" name="adf7acf82a04816553a53f978ecd9d2af"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plGameStateWindow</b> (const <a class="el" href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a> &amp;windowdesc, <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt; void()&gt; onClickClose={})</td></tr>
<tr class="separator:adf7acf82a04816553a53f978ecd9d2af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17fa6527f05cee956d94bb6bd7de8b1e" id="r_a17fa6527f05cee956d94bb6bd7de8b1e"><td class="memItemLeft" align="right" valign="top"><a id="a17fa6527f05cee956d94bb6bd7de8b1e" name="a17fa6527f05cee956d94bb6bd7de8b1e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ResetOnClickClose</b> (<a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt; void()&gt; onClickClose)</td></tr>
<tr class="separator:a17fa6527f05cee956d94bb6bd7de8b1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_window"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_window')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/d28/classpl_window.htm">plWindow</a></td></tr>
<tr class="memitem:a49111ad161be908a3a61c3997e27ef0b inherit pub_methods_classpl_window" id="r_a49111ad161be908a3a61c3997e27ef0b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#a49111ad161be908a3a61c3997e27ef0b">plWindow</a> ()</td></tr>
<tr class="memdesc:a49111ad161be908a3a61c3997e27ef0b inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates empty window instance with standard settings.  <br /></td></tr>
<tr class="separator:a49111ad161be908a3a61c3997e27ef0b inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fafdf7875e77196398c6d400256547c inherit pub_methods_classpl_window" id="r_a3fafdf7875e77196398c6d400256547c"><td class="memItemLeft" align="right" valign="top">
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>~plWindow</b> ()</td></tr>
<tr class="memdesc:a3fafdf7875e77196398c6d400256547c inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the window if not already done. <br /></td></tr>
<tr class="separator:a3fafdf7875e77196398c6d400256547c inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5101f7e4fe071cc9d9b791d42ebb14ef inherit pub_methods_classpl_window" id="r_a5101f7e4fe071cc9d9b791d42ebb14ef"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetCreationDescription</b> () const</td></tr>
<tr class="memdesc:a5101f7e4fe071cc9d9b791d42ebb14ef inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the currently active description struct. <br /></td></tr>
<tr class="separator:a5101f7e4fe071cc9d9b791d42ebb14ef inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6115abe9c9901875749c5120a5dbf398 inherit pub_methods_classpl_window" id="r_a6115abe9c9901875749c5120a5dbf398"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#a6115abe9c9901875749c5120a5dbf398">GetClientAreaSize</a> () const override</td></tr>
<tr class="memdesc:a6115abe9c9901875749c5120a5dbf398 inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size of the client area / ie. the window resolution.  <br /></td></tr>
<tr class="separator:a6115abe9c9901875749c5120a5dbf398 inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad926e529542e338803a4c9566ab10285 inherit pub_methods_classpl_window" id="r_ad926e529542e338803a4c9566ab10285"><td class="memItemLeft" align="right" valign="top">virtual plWindowHandle&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#ad926e529542e338803a4c9566ab10285">GetNativeWindowHandle</a> () const override</td></tr>
<tr class="memdesc:ad926e529542e338803a4c9566ab10285 inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the platform specific window handle.  <br /></td></tr>
<tr class="separator:ad926e529542e338803a4c9566ab10285 inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b81723a3473ead14edb024e94cbb6ea inherit pub_methods_classpl_window" id="r_a1b81723a3473ead14edb024e94cbb6ea"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#a1b81723a3473ead14edb024e94cbb6ea">IsFullscreenWindow</a> (bool bOnlyProperFullscreenMode=false) const override</td></tr>
<tr class="memdesc:a1b81723a3473ead14edb024e94cbb6ea inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the window covers an entire monitor.  <br /></td></tr>
<tr class="separator:a1b81723a3473ead14edb024e94cbb6ea inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf77c8a410a8f0656ac48570f7818e54 inherit pub_methods_classpl_window" id="r_adf77c8a410a8f0656ac48570f7818e54"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#adf77c8a410a8f0656ac48570f7818e54">IsVisible</a> () const override</td></tr>
<tr class="memdesc:adf77c8a410a8f0656ac48570f7818e54 inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the window can potentially be seen by the user. Windows that are minimized or hidden are not visible.  <br /></td></tr>
<tr class="separator:adf77c8a410a8f0656ac48570f7818e54 inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff8e952f2a99bffa67ed494cb8b5c91f inherit pub_methods_classpl_window" id="r_aff8e952f2a99bffa67ed494cb8b5c91f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#aff8e952f2a99bffa67ed494cb8b5c91f">AddReference</a> () override</td></tr>
<tr class="separator:aff8e952f2a99bffa67ed494cb8b5c91f inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44448b857803b6494c3fb7509ca00629 inherit pub_methods_classpl_window" id="r_a44448b857803b6494c3fb7509ca00629"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#a44448b857803b6494c3fb7509ca00629">RemoveReference</a> () override</td></tr>
<tr class="separator:a44448b857803b6494c3fb7509ca00629 inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acdc5306b224cbbef2b85b54fe392b2ef inherit pub_methods_classpl_window" id="r_acdc5306b224cbbef2b85b54fe392b2ef"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#acdc5306b224cbbef2b85b54fe392b2ef">ProcessWindowMessages</a> () override</td></tr>
<tr class="memdesc:acdc5306b224cbbef2b85b54fe392b2ef inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Runs the platform specific message pump.  <br /></td></tr>
<tr class="separator:acdc5306b224cbbef2b85b54fe392b2ef inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62daf000d383575e50b34caec143adff inherit pub_methods_classpl_window" id="r_a62daf000d383575e50b34caec143adff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#a62daf000d383575e50b34caec143adff">Initialize</a> ()</td></tr>
<tr class="memdesc:a62daf000d383575e50b34caec143adff inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new platform specific window with the current settings.  <br /></td></tr>
<tr class="separator:a62daf000d383575e50b34caec143adff inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73485ab7b4225ec19f57618784f21278 inherit pub_methods_classpl_window" id="r_a73485ab7b4225ec19f57618784f21278"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#a73485ab7b4225ec19f57618784f21278">Initialize</a> (const <a class="el" href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a> &amp;creationDescription)</td></tr>
<tr class="memdesc:a73485ab7b4225ec19f57618784f21278 inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new platform specific window with the given settings.  <br /></td></tr>
<tr class="separator:a73485ab7b4225ec19f57618784f21278 inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9d899474c90e9c899b067f32bafda5c inherit pub_methods_classpl_window" id="r_af9d899474c90e9c899b067f32bafda5c"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInitialized</b> () const</td></tr>
<tr class="memdesc:af9d899474c90e9c899b067f32bafda5c inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets if the window is up and running. <br /></td></tr>
<tr class="separator:af9d899474c90e9c899b067f32bafda5c inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7debd425407d0f4859e3819e1829970a inherit pub_methods_classpl_window" id="r_a7debd425407d0f4859e3819e1829970a"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Destroy</b> ()</td></tr>
<tr class="memdesc:a7debd425407d0f4859e3819e1829970a inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the window. <br /></td></tr>
<tr class="separator:a7debd425407d0f4859e3819e1829970a inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63426f01f4da150b255bd1ab753ad30b inherit pub_methods_classpl_window" id="r_a63426f01f4da150b255bd1ab753ad30b"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Resize</b> (const <a class="el" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a> &amp;newWindowSize)</td></tr>
<tr class="memdesc:a63426f01f4da150b255bd1ab753ad30b inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to resize the window. Override OnResize to get the actual new window size. <br /></td></tr>
<tr class="separator:a63426f01f4da150b255bd1ab753ad30b inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a584e162009a872cca10e5424a8445282 inherit pub_methods_classpl_window" id="r_a584e162009a872cca10e5424a8445282"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>OnWindowMove</b> (const plInt32 iNewPosX, const plInt32 iNewPosY)</td></tr>
<tr class="memdesc:a584e162009a872cca10e5424a8445282 inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the window position is changed. Not possible on all OSes. <br /></td></tr>
<tr class="separator:a584e162009a872cca10e5424a8445282 inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff2fbabc88afb503145631625b36a00 inherit pub_methods_classpl_window" id="r_a9ff2fbabc88afb503145631625b36a00"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>OnFocus</b> (bool bHasFocus)</td></tr>
<tr class="memdesc:a9ff2fbabc88afb503145631625b36a00 inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the window gets focus or loses focus. <br /></td></tr>
<tr class="separator:a9ff2fbabc88afb503145631625b36a00 inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b5a8d493cb488b70800096ac1b54ed8 inherit pub_methods_classpl_window" id="r_a8b5a8d493cb488b70800096ac1b54ed8"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>OnVisibleChange</b> (bool bVisible)</td></tr>
<tr class="memdesc:a8b5a8d493cb488b70800096ac1b54ed8 inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the window gets focus or loses focus. <br /></td></tr>
<tr class="separator:a8b5a8d493cb488b70800096ac1b54ed8 inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae032cae78b74a594b3ee35ee0b23016c inherit pub_methods_classpl_window" id="r_ae032cae78b74a594b3ee35ee0b23016c"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d7/dff/classpl_standard_input_device.htm">plStandardInputDevice</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputDevice</b> () const</td></tr>
<tr class="memdesc:ae032cae78b74a594b3ee35ee0b23016c inherit pub_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the input device that is attached to this window and typically provides mouse / keyboard input. <br /></td></tr>
<tr class="separator:ae032cae78b74a594b3ee35ee0b23016c inherit pub_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:add379c09667386485f32d3493d9bb4d5" id="r_add379c09667386485f32d3493d9bb4d5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#add379c09667386485f32d3493d9bb4d5">OnResize</a> (const <a class="el" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a> &amp;newWindowSize) override</td></tr>
<tr class="memdesc:add379c09667386485f32d3493d9bb4d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called on window resize messages.  <br /></td></tr>
<tr class="separator:add379c09667386485f32d3493d9bb4d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b5edb4ae16d8f8da8e9749a32647c69" id="r_a4b5edb4ae16d8f8da8e9749a32647c69"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4b5edb4ae16d8f8da8e9749a32647c69">OnClickClose</a> () override</td></tr>
<tr class="memdesc:a4b5edb4ae16d8f8da8e9749a32647c69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the close button of the window is clicked. Does nothing by default.  <br /></td></tr>
<tr class="separator:a4b5edb4ae16d8f8da8e9749a32647c69"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_window"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_window')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../df/d28/classpl_window.htm">plWindow</a></td></tr>
<tr class="memitem:aafdcb06843fb3ee776f4b7ec568321b9 inherit pub_static_methods_classpl_window" id="r_aafdcb06843fb3ee776f4b7ec568321b9"><td class="memItemLeft" align="right" valign="top">static plUInt8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#aafdcb06843fb3ee776f4b7ec568321b9">GetNextUnusedWindowNumber</a> ()</td></tr>
<tr class="memdesc:aafdcb06843fb3ee776f4b7ec568321b9 inherit pub_static_methods_classpl_window"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a number that can be used as a window number in <a class="el" href="../../d9/d6d/structpl_window_creation_desc.htm" title="Parameters for creating a window, such as position and resolution.">plWindowCreationDesc</a>.  <br /></td></tr>
<tr class="separator:aafdcb06843fb3ee776f4b7ec568321b9 inherit pub_static_methods_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_window"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_window')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../df/d28/classpl_window.htm">plWindow</a></td></tr>
<tr class="memitem:ac58fa7c4296ae8a7696fe19840ef784c inherit pro_attribs_classpl_window" id="r_ac58fa7c4296ae8a7696fe19840ef784c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d28/classpl_window.htm#ac58fa7c4296ae8a7696fe19840ef784c">m_CreationDescription</a></td></tr>
<tr class="separator:ac58fa7c4296ae8a7696fe19840ef784c inherit pro_attribs_classpl_window"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A window class that expands a little on <a class="el" href="../../df/d28/classpl_window.htm" title="A simple abstraction for platform specific window creation.">plWindow</a>. Default type used by <a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> to create a window. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a4b5edb4ae16d8f8da8e9749a32647c69" name="a4b5edb4ae16d8f8da8e9749a32647c69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b5edb4ae16d8f8da8e9749a32647c69">&#9670;&#160;</a></span>OnClickClose()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plGameStateWindow::OnClickClose </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the close button of the window is clicked. Does nothing by default. </p>

<p>Reimplemented from <a class="el" href="../../df/d28/classpl_window.htm#a3f35499d576253dedfc6353583917e0e">plWindow</a>.</p>

</div>
</div>
<a id="add379c09667386485f32d3493d9bb4d5" name="add379c09667386485f32d3493d9bb4d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#add379c09667386485f32d3493d9bb4d5">&#9670;&#160;</a></span>OnResize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plGameStateWindow::OnResize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>newWindowSize</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called on window resize messages. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">newWindowSize</td><td>New window size in pixel. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd>OnWindowMessage </dd></dl>

<p>Reimplemented from <a class="el" href="../../df/d28/classpl_window.htm#a22b8bd4a707c53b3b24867b473de00f8">plWindow</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Core/GameState/<a class="el" href="../../d4/d1a/_game_state_window_8h_source.htm">GameStateWindow.h</a></li>
<li>Code/Engine/Core/GameState/Implementation/<b>GameStateWindow.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d7/d23/classpl_game_state_window.htm">plGameStateWindow</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
