<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plDataDirectory::ArchiveType Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d7/dd2/classpl_data_directory_1_1_archive_type.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d4/d56/classpl_data_directory_1_1_archive_type-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plDataDirectory::ArchiveType Class Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for plDataDirectory::ArchiveType:</div>
<div class="dyncontent">
<div class="center"><img src="../../d5/dad/classpl_data_directory_1_1_archive_type__inherit__graph.png" border="0" usemap="#apl_data_directory_1_1_archive_type_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_data_directory_1_1_archive_type_inherit__map" id="apl_data_directory_1_1_archive_type_inherit__map">
<area shape="rect" title=" " alt="" coords="5,80,194,107"/>
<area shape="rect" href="../../d5/d80/classpl_data_directory_type.htm" title="The base class for all data directory types." alt="" coords="30,5,169,32"/>
<area shape="poly" title=" " alt="" coords="102,48,102,80,97,80,97,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1d0bb038713a54ae2a5705ec57ae2ab4" id="r_a1d0bb038713a54ae2a5705ec57ae2ab4"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString128</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1d0bb038713a54ae2a5705ec57ae2ab4">GetRedirectedDataDirectoryPath</a> () const override</td></tr>
<tr class="memdesc:a1d0bb038713a54ae2a5705ec57ae2ab4"><td class="mdescLeft">&#160;</td><td class="mdescRight">By default this is the same as <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a9a38ee90562c8b7028f579b0b41cc321" title="Returns the absolute path to the data directory.">GetDataDirectoryPath()</a>, but derived implementations may use a different location where they actually get the files from.  <br /></td></tr>
<tr class="separator:a1d0bb038713a54ae2a5705ec57ae2ab4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_data_directory_type"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_data_directory_type')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d5/d80/classpl_data_directory_type.htm">plDataDirectoryType</a></td></tr>
<tr class="memitem:a9a38ee90562c8b7028f579b0b41cc321 inherit pub_methods_classpl_data_directory_type" id="r_a9a38ee90562c8b7028f579b0b41cc321"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString128</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetDataDirectoryPath</b> () const</td></tr>
<tr class="memdesc:a9a38ee90562c8b7028f579b0b41cc321 inherit pub_methods_classpl_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the absolute path to the data directory. <br /></td></tr>
<tr class="separator:a9a38ee90562c8b7028f579b0b41cc321 inherit pub_methods_classpl_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb4b562d1d52e43acd5e204e6640a94b inherit pub_methods_classpl_data_directory_type" id="r_aeb4b562d1d52e43acd5e204e6640a94b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d80/classpl_data_directory_type.htm#aeb4b562d1d52e43acd5e204e6640a94b">ReloadExternalConfigs</a> ()</td></tr>
<tr class="memdesc:aeb4b562d1d52e43acd5e204e6640a94b inherit pub_methods_classpl_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">Some data directory types may use external configuration files (e.g. asset lookup tables) that may get updated, while the directory is mounted. This function allows each directory type to implement reloading and reapplying of configurations, without dismounting and remounting the data directory.  <br /></td></tr>
<tr class="separator:aeb4b562d1d52e43acd5e204e6640a94b inherit pub_methods_classpl_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ab407389c8d480c2081d1a64f71823019" id="r_ab407389c8d480c2081d1a64f71823019"><td class="memItemLeft" align="right" valign="top"><a id="ab407389c8d480c2081d1a64f71823019" name="ab407389c8d480c2081d1a64f71823019"></a>
static <a class="el" href="../../d5/d80/classpl_data_directory_type.htm">plDataDirectoryType</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Factory</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sDataDirectory, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sGroup, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sRootName, plDataDirUsage usage)</td></tr>
<tr class="separator:ab407389c8d480c2081d1a64f71823019"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a42a40741577aaa341d8c952690826c31" id="r_a42a40741577aaa341d8c952690826c31"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/d59/classpl_data_directory_reader.htm">plDataDirectoryReader</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a42a40741577aaa341d8c952690826c31">OpenFileToRead</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFile, <a class="el" href="../../db/d23/structpl_file_share_mode.htm#a1400fe5ee10902f78b84190c7abe7038">plFileShareMode::Enum</a> FileShareMode, bool bSpecificallyThisDataDir) override</td></tr>
<tr class="memdesc:a42a40741577aaa341d8c952690826c31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Must be implemented to create a <a class="el" href="../../d0/d59/classpl_data_directory_reader.htm" title="A base class for readers that handle reading from a (virtual) file inside a data directory.">plDataDirectoryReader</a> for accessing the given file. Returns nullptr if the file could not be opened.  <br /></td></tr>
<tr class="separator:a42a40741577aaa341d8c952690826c31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45902dd0d30e0269b9f9348746825ca6" id="r_a45902dd0d30e0269b9f9348746825ca6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a45902dd0d30e0269b9f9348746825ca6">RemoveDataDirectory</a> () override</td></tr>
<tr class="memdesc:a45902dd0d30e0269b9f9348746825ca6"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called by the filesystem when a data directory is removed.  <br /></td></tr>
<tr class="separator:a45902dd0d30e0269b9f9348746825ca6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fa934fc49d672f2dd8a5b3706a3fbec" id="r_a3fa934fc49d672f2dd8a5b3706a3fbec"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3fa934fc49d672f2dd8a5b3706a3fbec">ExistsFile</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFile, bool bOneSpecificDataDir) override</td></tr>
<tr class="memdesc:a3fa934fc49d672f2dd8a5b3706a3fbec"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function checks whether the given file exists in this data directory.  <br /></td></tr>
<tr class="separator:a3fa934fc49d672f2dd8a5b3706a3fbec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a103c5baa0fdd33676b720e0b7b9239fa" id="r_a103c5baa0fdd33676b720e0b7b9239fa"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a103c5baa0fdd33676b720e0b7b9239fa">GetFileStats</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFileOrFolder, bool bOneSpecificDataDir, <a class="el" href="../../da/db9/structpl_file_stats.htm">plFileStats</a> &amp;out_Stats) override</td></tr>
<tr class="memdesc:a103c5baa0fdd33676b720e0b7b9239fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Upon success returns the <a class="el" href="../../da/db9/structpl_file_stats.htm" title="Holds the stats for a file.">plFileStats</a> for a file in this data directory.  <br /></td></tr>
<tr class="separator:a103c5baa0fdd33676b720e0b7b9239fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a864be6e249e5ef8c5c66422b9b93b703" id="r_a864be6e249e5ef8c5c66422b9b93b703"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a864be6e249e5ef8c5c66422b9b93b703">InternalInitializeDataDirectory</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sDirectory) override</td></tr>
<tr class="memdesc:a864be6e249e5ef8c5c66422b9b93b703"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function should only be used by a Factory (which should be a static function in the respective <a class="el" href="../../d5/d80/classpl_data_directory_type.htm" title="The base class for all data directory types.">plDataDirectoryType</a>).  <br /></td></tr>
<tr class="separator:a864be6e249e5ef8c5c66422b9b93b703"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a479a0e0f6edcdbf7d35d165eb0e1ad1b" id="r_a479a0e0f6edcdbf7d35d165eb0e1ad1b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a479a0e0f6edcdbf7d35d165eb0e1ad1b">OnReaderWriterClose</a> (<a class="el" href="../../d6/df0/classpl_data_directory_reader_writer_base.htm">plDataDirectoryReaderWriterBase</a> *pClosed) override</td></tr>
<tr class="memdesc:a479a0e0f6edcdbf7d35d165eb0e1ad1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">This is automatically called whenever a <a class="el" href="../../d6/df0/classpl_data_directory_reader_writer_base.htm" title="This is the base class for all data directory readers/writers.">plDataDirectoryReaderWriterBase</a> that was opened by this type is being closed.  <br /></td></tr>
<tr class="separator:a479a0e0f6edcdbf7d35d165eb0e1ad1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_data_directory_type"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_data_directory_type')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d5/d80/classpl_data_directory_type.htm">plDataDirectoryType</a></td></tr>
<tr class="memitem:a3c990fbf6add6ea1791721f40a8505af inherit pro_methods_classpl_data_directory_type" id="r_a3c990fbf6add6ea1791721f40a8505af"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InitializeDataDirectory</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sDataDirPath)</td></tr>
<tr class="memdesc:a3c990fbf6add6ea1791721f40a8505af inherit pro_methods_classpl_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to setup the data directory. Can fail, if the type is incorrect (e.g. a ZIP file data directory type cannot handle a simple folder and vice versa) <br /></td></tr>
<tr class="separator:a3c990fbf6add6ea1791721f40a8505af inherit pro_methods_classpl_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0fc0215500fe4c0e0a648590d6f4454 inherit pro_methods_classpl_data_directory_type" id="r_ac0fc0215500fe4c0e0a648590d6f4454"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/ded/classpl_data_directory_writer.htm">plDataDirectoryWriter</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d80/classpl_data_directory_type.htm#ac0fc0215500fe4c0e0a648590d6f4454">OpenFileToWrite</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFile, <a class="el" href="../../db/d23/structpl_file_share_mode.htm#a1400fe5ee10902f78b84190c7abe7038">plFileShareMode::Enum</a> FileShareMode)</td></tr>
<tr class="memdesc:ac0fc0215500fe4c0e0a648590d6f4454 inherit pro_methods_classpl_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">Must be implemented to create a <a class="el" href="../../dc/ded/classpl_data_directory_writer.htm" title="A base class for writers that handle writing to a (virtual) file inside a data directory.">plDataDirectoryWriter</a> for accessing the given file. Returns nullptr if the file could not be opened.  <br /></td></tr>
<tr class="separator:ac0fc0215500fe4c0e0a648590d6f4454 inherit pro_methods_classpl_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a503031fd4efe9848ebf13dca35738d9c inherit pro_methods_classpl_data_directory_type" id="r_a503031fd4efe9848ebf13dca35738d9c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a503031fd4efe9848ebf13dca35738d9c">DeleteFile</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFile)</td></tr>
<tr class="memdesc:a503031fd4efe9848ebf13dca35738d9c inherit pro_methods_classpl_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">If a Data Directory Type supports it, this function will remove the given file from it.  <br /></td></tr>
<tr class="separator:a503031fd4efe9848ebf13dca35738d9c inherit pro_methods_classpl_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9cba091787785fc98beea27a52ec4dd inherit pro_methods_classpl_data_directory_type" id="r_aa9cba091787785fc98beea27a52ec4dd"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d80/classpl_data_directory_type.htm#aa9cba091787785fc98beea27a52ec4dd">ResolveAssetRedirection</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPathOrAssetGuid, <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;out_sRedirection)</td></tr>
<tr class="memdesc:aa9cba091787785fc98beea27a52ec4dd inherit pro_methods_classpl_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this data directory knows how to redirect the given path, it should do so and return true. Called by <a class="el" href="../../d5/d08/classpl_file_system.htm#af99533696503349a6dd6dec73bf67692" title="Returns true, if any data directory knows how to redirect the given path. Otherwise the original stri...">plFileSystem::ResolveAssetRedirection</a>.  <br /></td></tr>
<tr class="separator:aa9cba091787785fc98beea27a52ec4dd inherit pro_methods_classpl_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a6eb5292a0017a3ab7e91ca84eb9022c9" id="r_a6eb5292a0017a3ab7e91ca84eb9022c9"><td class="memItemLeft" align="right" valign="top"><a id="a6eb5292a0017a3ab7e91ca84eb9022c9" name="a6eb5292a0017a3ab7e91ca84eb9022c9"></a>
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString128</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sRedirectedDataDirPath</b></td></tr>
<tr class="separator:a6eb5292a0017a3ab7e91ca84eb9022c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b84a1486a17d4bdc62a6ec0f73e7450" id="r_a9b84a1486a17d4bdc62a6ec0f73e7450"><td class="memItemLeft" align="right" valign="top"><a id="a9b84a1486a17d4bdc62a6ec0f73e7450" name="a9b84a1486a17d4bdc62a6ec0f73e7450"></a>
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString32</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sArchiveSubFolder</b></td></tr>
<tr class="separator:a9b84a1486a17d4bdc62a6ec0f73e7450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59d7a3553df1a83afc398360077337eb" id="r_a59d7a3553df1a83afc398360077337eb"><td class="memItemLeft" align="right" valign="top"><a id="a59d7a3553df1a83afc398360077337eb" name="a59d7a3553df1a83afc398360077337eb"></a>
<a class="el" href="../../d9/d94/classpl_timestamp.htm">plTimestamp</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_LastModificationTime</b></td></tr>
<tr class="separator:a59d7a3553df1a83afc398360077337eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabc704b8ac096dabea4c23a692a51c24" id="r_aabc704b8ac096dabea4c23a692a51c24"><td class="memItemLeft" align="right" valign="top"><a id="aabc704b8ac096dabea4c23a692a51c24" name="aabc704b8ac096dabea4c23a692a51c24"></a>
<a class="el" href="../../de/d00/classpl_archive_reader.htm">plArchiveReader</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ArchiveReader</b></td></tr>
<tr class="separator:aabc704b8ac096dabea4c23a692a51c24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7e47c3a8f1894fb1b1c8352f7a2d85f" id="r_ad7e47c3a8f1894fb1b1c8352f7a2d85f"><td class="memItemLeft" align="right" valign="top"><a id="ad7e47c3a8f1894fb1b1c8352f7a2d85f" name="ad7e47c3a8f1894fb1b1c8352f7a2d85f"></a>
<a class="el" href="../../d1/df4/classpl_mutex.htm">plMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ReaderMutex</b></td></tr>
<tr class="separator:ad7e47c3a8f1894fb1b1c8352f7a2d85f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b8169dd4421f67ab93b83ca252aa5c6" id="r_a1b8169dd4421f67ab93b83ca252aa5c6"><td class="memItemLeft" align="right" valign="top"><a id="a1b8169dd4421f67ab93b83ca252aa5c6" name="a1b8169dd4421f67ab93b83ca252aa5c6"></a>
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d5/d7c/classpl_data_directory_1_1_archive_reader_uncompressed.htm">ArchiveReaderUncompressed</a> &gt;, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_ReadersUncompressed</b></td></tr>
<tr class="separator:a1b8169dd4421f67ab93b83ca252aa5c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a099f3dfd0d595ad049b6d4059d09b3a3" id="r_a099f3dfd0d595ad049b6d4059d09b3a3"><td class="memItemLeft" align="right" valign="top"><a id="a099f3dfd0d595ad049b6d4059d09b3a3" name="a099f3dfd0d595ad049b6d4059d09b3a3"></a>
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; <a class="el" href="../../d5/d7c/classpl_data_directory_1_1_archive_reader_uncompressed.htm">ArchiveReaderUncompressed</a> *, 4 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_FreeReadersUncompressed</b></td></tr>
<tr class="separator:a099f3dfd0d595ad049b6d4059d09b3a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_data_directory_type"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_data_directory_type')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d5/d80/classpl_data_directory_type.htm">plDataDirectoryType</a></td></tr>
<tr class="memitem:a8721073045be6595035fbac6708709a3 inherit pro_attribs_classpl_data_directory_type" id="r_a8721073045be6595035fbac6708709a3"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString128</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sDataDirectoryPath</b></td></tr>
<tr class="memdesc:a8721073045be6595035fbac6708709a3 inherit pro_attribs_classpl_data_directory_type"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes can use 'GetDataDirectoryPath' to access this data. <br /></td></tr>
<tr class="separator:a8721073045be6595035fbac6708709a3 inherit pro_attribs_classpl_data_directory_type"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3fa934fc49d672f2dd8a5b3706a3fbec" name="a3fa934fc49d672f2dd8a5b3706a3fbec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3fa934fc49d672f2dd8a5b3706a3fbec">&#9670;&#160;</a></span>ExistsFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plDataDirectory::ArchiveType::ExistsFile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bOneSpecificDataDir</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function checks whether the given file exists in this data directory. </p>
<p>The default implementation simply calls <a class="el" href="../../d4/d6f/classpl_o_s_file.htm#a5a83090effcd12facb5e1b9d2e3c4265" title="Checks whether the given file exists.">plOSFile::ExistsFile</a> An optimized implementation might look this information up in some hash-map. </p>

<p>Reimplemented from <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a93aafe1b728e07502ead637b999676b0">plDataDirectoryType</a>.</p>

</div>
</div>
<a id="a103c5baa0fdd33676b720e0b7b9239fa" name="a103c5baa0fdd33676b720e0b7b9239fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a103c5baa0fdd33676b720e0b7b9239fa">&#9670;&#160;</a></span>GetFileStats()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plDataDirectory::ArchiveType::GetFileStats </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFileOrFolder</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bOneSpecificDataDir</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/db9/structpl_file_stats.htm">plFileStats</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_Stats</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Upon success returns the <a class="el" href="../../da/db9/structpl_file_stats.htm" title="Holds the stats for a file.">plFileStats</a> for a file in this data directory. </p>

<p>Implements <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a448708adb2b0dded43fb080c5f760a4c">plDataDirectoryType</a>.</p>

</div>
</div>
<a id="a1d0bb038713a54ae2a5705ec57ae2ab4" name="a1d0bb038713a54ae2a5705ec57ae2ab4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d0bb038713a54ae2a5705ec57ae2ab4">&#9670;&#160;</a></span>GetRedirectedDataDirectoryPath()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString128</a> &amp; plDataDirectory::ArchiveType::GetRedirectedDataDirectoryPath </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>By default this is the same as <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a9a38ee90562c8b7028f579b0b41cc321" title="Returns the absolute path to the data directory.">GetDataDirectoryPath()</a>, but derived implementations may use a different location where they actually get the files from. </p>

<p>Reimplemented from <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a2a274c949a7273d83a70d294bdf7ac83">plDataDirectoryType</a>.</p>

</div>
</div>
<a id="a864be6e249e5ef8c5c66422b9b93b703" name="a864be6e249e5ef8c5c66422b9b93b703"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a864be6e249e5ef8c5c66422b9b93b703">&#9670;&#160;</a></span>InternalInitializeDataDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plDataDirectory::ArchiveType::InternalInitializeDataDirectory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sDirectory</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function should only be used by a Factory (which should be a static function in the respective <a class="el" href="../../d5/d80/classpl_data_directory_type.htm" title="The base class for all data directory types.">plDataDirectoryType</a>). </p>
<p>It is used to initialize the data directory. If this <a class="el" href="../../d5/d80/classpl_data_directory_type.htm" title="The base class for all data directory types.">plDataDirectoryType</a> cannot handle the given type, it must return PL_FAILURE and the Factory needs to clean it up properly. </p>

<p>Implements <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a9226f3d09bdeccd5c220aeaebb41d078">plDataDirectoryType</a>.</p>

</div>
</div>
<a id="a479a0e0f6edcdbf7d35d165eb0e1ad1b" name="a479a0e0f6edcdbf7d35d165eb0e1ad1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a479a0e0f6edcdbf7d35d165eb0e1ad1b">&#9670;&#160;</a></span>OnReaderWriterClose()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plDataDirectory::ArchiveType::OnReaderWriterClose </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/df0/classpl_data_directory_reader_writer_base.htm">plDataDirectoryReaderWriterBase</a> *</td>          <td class="paramname"><span class="paramname"><em>pClosed</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This is automatically called whenever a <a class="el" href="../../d6/df0/classpl_data_directory_reader_writer_base.htm" title="This is the base class for all data directory readers/writers.">plDataDirectoryReaderWriterBase</a> that was opened by this type is being closed. </p>
<p>It allows the <a class="el" href="../../d5/d80/classpl_data_directory_type.htm" title="The base class for all data directory types.">plDataDirectoryType</a> to return the reader/writer to a pool of reusable objects, or to destroy it using the proper allocator. </p>

<p>Reimplemented from <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#aacf40536ce60d8229e75867b414102a9">plDataDirectoryType</a>.</p>

</div>
</div>
<a id="a42a40741577aaa341d8c952690826c31" name="a42a40741577aaa341d8c952690826c31"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42a40741577aaa341d8c952690826c31">&#9670;&#160;</a></span>OpenFileToRead()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d0/d59/classpl_data_directory_reader.htm">plDataDirectoryReader</a> * plDataDirectory::ArchiveType::OpenFileToRead </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFile</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d23/structpl_file_share_mode.htm#a1400fe5ee10902f78b84190c7abe7038">plFileShareMode::Enum</a></td>          <td class="paramname"><span class="paramname"><em>FileShareMode</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bSpecificallyThisDataDir</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Must be implemented to create a <a class="el" href="../../d0/d59/classpl_data_directory_reader.htm" title="A base class for readers that handle reading from a (virtual) file inside a data directory.">plDataDirectoryReader</a> for accessing the given file. Returns nullptr if the file could not be opened. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szFile</td><td>is given as a path relative to the data directory's path. So unless the data directory path is empty, this will never be an absolute path. If a rooted path was given, the root name is also removed and only the relative part is passed along. </td></tr>
    <tr><td class="paramname">bSpecificallyThisDataDir</td><td>This is true when the original path specified to open the file through exactly this data directory, by using a rooted path. If an absolute path is used, which incidentally matches the prefix of this data directory, bSpecificallyThisDataDir is NOT set to true, as there might be other data directories that also match. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a1e2109891a46998f4ae11a270140ed35">plDataDirectoryType</a>.</p>

</div>
</div>
<a id="a45902dd0d30e0269b9f9348746825ca6" name="a45902dd0d30e0269b9f9348746825ca6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45902dd0d30e0269b9f9348746825ca6">&#9670;&#160;</a></span>RemoveDataDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plDataDirectory::ArchiveType::RemoveDataDirectory </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function is called by the filesystem when a data directory is removed. </p>
<p>It should delete itself using the proper allocator. </p>

<p>Implements <a class="el" href="../../d5/d80/classpl_data_directory_type.htm#a6b3ec6383084f4828ca38a4b6dc100e4">plDataDirectoryType</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/IO/Archive/<a class="el" href="../../d5/d4f/_data_dir_type_archive_8h_source.htm">DataDirTypeArchive.h</a></li>
<li>Code/Engine/Foundation/IO/Archive/Implementation/<b>DataDirTypeArchive.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><b>plDataDirectory</b></li><li class="navelem"><a class="el" href="../../d7/dd2/classpl_data_directory_1_1_archive_type.htm">ArchiveType</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
