<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plDynamicArrayBase&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d7/d89/classpl_dynamic_array_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../df/da4/classpl_dynamic_array_base-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plDynamicArrayBase&lt; T &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Implementation of a dynamically growing array.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d2/da7/_dynamic_array_8h_source.htm">DynamicArray.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plDynamicArrayBase&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d5/d90/classpl_dynamic_array_base__inherit__graph.png" border="0" usemap="#apl_dynamic_array_base_3_01_t_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_dynamic_array_base_3_01_t_01_4_inherit__map" id="apl_dynamic_array_base_3_01_t_01_4_inherit__map">
<area shape="rect" title="Implementation of a dynamically growing array." alt="" coords="234,113,408,140"/>
<area shape="rect" href="../../d0/d4e/classpl_dynamic_array.htm" title=" " alt="" coords="460,39,647,81"/>
<area shape="poly" title=" " alt="" coords="384,106,476,79,477,85,386,111"/>
<area shape="rect" href="../../d0/d4e/classpl_dynamic_array.htm" title=" " alt="" coords="456,105,651,148"/>
<area shape="poly" title=" " alt="" coords="424,124,455,124,455,129,424,129"/>
<area shape="rect" href="../../d0/d4e/classpl_dynamic_array.htm" title=" " alt="" coords="485,172,622,215"/>
<area shape="poly" title=" " alt="" coords="386,142,485,171,484,176,384,147"/>
<area shape="rect" href="../../d4/dc8/classpl_array_base.htm" title=" " alt="" coords="5,105,186,148"/>
<area shape="poly" title=" " alt="" coords="201,124,233,124,233,129,201,129"/>
<area shape="rect" href="../../d8/dcc/classpl_hybrid_array.htm" title=" " alt="" coords="699,5,876,48"/>
<area shape="poly" title=" " alt="" coords="662,42,698,37,699,42,663,47"/>
<area shape="rect" href="../../d8/dcc/classpl_hybrid_array.htm" title="A hybrid array uses in&#45;place storage to handle the first few elements without any allocation...." alt="" coords="709,72,866,115"/>
<area shape="poly" title=" " alt="" coords="663,73,709,80,708,85,662,78"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa96e27368b10b59593239a9981eba7d0" id="r_aa96e27368b10b59593239a9981eba7d0"><td class="memItemLeft" align="right" valign="top"><a id="aa96e27368b10b59593239a9981eba7d0" name="aa96e27368b10b59593239a9981eba7d0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (plUInt32 uiCapacity)</td></tr>
<tr class="memdesc:aa96e27368b10b59593239a9981eba7d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array so it can at least store the given capacity. <br /></td></tr>
<tr class="separator:aa96e27368b10b59593239a9981eba7d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7abf7d1371d93a5e67d33d43904b9c94" id="r_a7abf7d1371d93a5e67d33d43904b9c94"><td class="memItemLeft" align="right" valign="top"><a id="a7abf7d1371d93a5e67d33d43904b9c94" name="a7abf7d1371d93a5e67d33d43904b9c94"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> ()</td></tr>
<tr class="memdesc:a7abf7d1371d93a5e67d33d43904b9c94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the array is empty. <br /></td></tr>
<tr class="separator:a7abf7d1371d93a5e67d33d43904b9c94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e798e376d697a13db7f7ab27c59327e" id="r_a2e798e376d697a13db7f7ab27c59327e"><td class="memItemLeft" align="right" valign="top"><a id="a2e798e376d697a13db7f7ab27c59327e" name="a2e798e376d697a13db7f7ab27c59327e"></a>
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:a2e798e376d697a13db7f7ab27c59327e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a2e798e376d697a13db7f7ab27c59327e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a697d1f2eebc611f87111ccaea7ac68f4" id="r_a697d1f2eebc611f87111ccaea7ac68f4"><td class="memItemLeft" align="right" valign="top"><a id="a697d1f2eebc611f87111ccaea7ac68f4" name="a697d1f2eebc611f87111ccaea7ac68f4"></a>
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:a697d1f2eebc611f87111ccaea7ac68f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a697d1f2eebc611f87111ccaea7ac68f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55aae7d3c5d07b0cd1364036a365917a" id="r_a55aae7d3c5d07b0cd1364036a365917a"><td class="memItemLeft" align="right" valign="top"><a id="a55aae7d3c5d07b0cd1364036a365917a" name="a55aae7d3c5d07b0cd1364036a365917a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a55aae7d3c5d07b0cd1364036a365917a"><td class="mdescLeft">&#160;</td><td class="mdescRight">swaps the contents of this array with another one <br /></td></tr>
<tr class="separator:a55aae7d3c5d07b0cd1364036a365917a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/dc8/classpl_array_base.htm">plArrayBase&lt; T, plDynamicArrayBase&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:a7f635dbe751343d9f040cd204390b135 inherit pub_methods_classpl_array_base" id="r_a7f635dbe751343d9f040cd204390b135"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plArrayBase</b> ()</td></tr>
<tr class="memdesc:a7f635dbe751343d9f040cd204390b135 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:a7f635dbe751343d9f040cd204390b135 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a044334d6500cb835983a0de69a1c8d8b inherit pub_methods_classpl_array_base" id="r_a044334d6500cb835983a0de69a1c8d8b"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>~plArrayBase</b> ()</td></tr>
<tr class="memdesc:a044334d6500cb835983a0de69a1c8d8b inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a044334d6500cb835983a0de69a1c8d8b inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab668bf9dbd2be7d2f5c374f7de70cc55 inherit pub_methods_classpl_array_base" id="r_ab668bf9dbd2be7d2f5c374f7de70cc55"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:ab668bf9dbd2be7d2f5c374f7de70cc55 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:ab668bf9dbd2be7d2f5c374f7de70cc55 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b18c787345e0b3bb435e4754409e4dd inherit pub_methods_classpl_array_base" id="r_a0b18c787345e0b3bb435e4754409e4dd"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator plArrayPtr&lt; const T &gt;</b> () const</td></tr>
<tr class="memdesc:a0b18c787345e0b3bb435e4754409e4dd inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to const <a class="el" href="../../db/d81/classpl_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">plArrayPtr</a>. <br /></td></tr>
<tr class="separator:a0b18c787345e0b3bb435e4754409e4dd inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f7b8feae7eee8cf3eac5b1fbb46d82e inherit pub_methods_classpl_array_base" id="r_a0f7b8feae7eee8cf3eac5b1fbb46d82e"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator plArrayPtr&lt; T &gt;</b> ()</td></tr>
<tr class="memdesc:a0f7b8feae7eee8cf3eac5b1fbb46d82e inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="../../db/d81/classpl_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">plArrayPtr</a>. <br /></td></tr>
<tr class="separator:a0f7b8feae7eee8cf3eac5b1fbb46d82e inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a447132c39ffa4551021c78a119b57ed3 inherit pub_methods_classpl_array_base" id="r_a447132c39ffa4551021c78a119b57ed3"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/dc8/classpl_array_base.htm">plArrayBase</a>&lt; T, <a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a447132c39ffa4551021c78a119b57ed3 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:a447132c39ffa4551021c78a119b57ed3 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55a7cd2e4a46b8c1bbb0872d2d7f731d inherit pub_methods_classpl_array_base" id="r_a55a7cd2e4a46b8c1bbb0872d2d7f731d"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d4/dc8/classpl_array_base.htm">plArrayBase</a>&lt; T, <a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:a55a7cd2e4a46b8c1bbb0872d2d7f731d inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0468174ef99e893249943140b8e0b02 inherit pub_methods_classpl_array_base" id="r_ab0468174ef99e893249943140b8e0b02"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d4/dc8/classpl_array_base.htm">plArrayBase</a>&lt; T, <a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ab0468174ef99e893249943140b8e0b02 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:ab0468174ef99e893249943140b8e0b02 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa15fdf832e3fc712b702d5acdec3e8da inherit pub_methods_classpl_array_base" id="r_aa15fdf832e3fc712b702d5acdec3e8da"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:aa15fdf832e3fc712b702d5acdec3e8da inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:aa15fdf832e3fc712b702d5acdec3e8da inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d280cf1b3c736ddd4fc155eebb81275 inherit pub_methods_classpl_array_base" id="r_a3d280cf1b3c736ddd4fc155eebb81275"><td class="memItemLeft" align="right" valign="top">
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (plUInt32 uiIndex) const</td></tr>
<tr class="memdesc:a3d280cf1b3c736ddd4fc155eebb81275 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a3d280cf1b3c736ddd4fc155eebb81275 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3306118727eee641060341c90a2daff inherit pub_methods_classpl_array_base" id="r_ac3306118727eee641060341c90a2daff"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (plUInt32 uiIndex)</td></tr>
<tr class="memdesc:ac3306118727eee641060341c90a2daff inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:ac3306118727eee641060341c90a2daff inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a8268942c59e7215cd9d55498540e42 inherit pub_methods_classpl_array_base" id="r_a7a8268942c59e7215cd9d55498540e42"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (plUInt32 uiCount)</td></tr>
<tr class="memdesc:a7a8268942c59e7215cd9d55498540e42 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is grown. <br /></td></tr>
<tr class="separator:a7a8268942c59e7215cd9d55498540e42 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc768de300571218e7fa5d41a2749aab inherit pub_methods_classpl_array_base" id="r_acc768de300571218e7fa5d41a2749aab"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (plUInt32 uiCount, const T &amp;fillValue)</td></tr>
<tr class="memdesc:acc768de300571218e7fa5d41a2749aab inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Constructs all new elements by copying the FillValue. <br /></td></tr>
<tr class="separator:acc768de300571218e7fa5d41a2749aab inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bf05fc414d10cd1945a8aa42b5981ce inherit pub_methods_classpl_array_base" id="r_a6bf05fc414d10cd1945a8aa42b5981ce"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCountUninitialized</b> (plUInt32 uiCount)</td></tr>
<tr class="memdesc:a6bf05fc414d10cd1945a8aa42b5981ce inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized. <br /></td></tr>
<tr class="separator:a6bf05fc414d10cd1945a8aa42b5981ce inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a963cbc439559b6a3d872561740e39e7d inherit pub_methods_classpl_array_base" id="r_a963cbc439559b6a3d872561740e39e7d"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (plUInt32 uiCount)</td></tr>
<tr class="memdesc:a963cbc439559b6a3d872561740e39e7d inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the container has at least <em>uiCount</em> elements. Ie. calls <a class="el" href="../../d4/dc8/classpl_array_base.htm#a7a8268942c59e7215cd9d55498540e42">SetCount()</a> if the container has fewer elements, does nothing otherwise. <br /></td></tr>
<tr class="separator:a963cbc439559b6a3d872561740e39e7d inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1fcadea5a992d6b5d0a1788a379de65 inherit pub_methods_classpl_array_base" id="r_af1fcadea5a992d6b5d0a1788a379de65"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:af1fcadea5a992d6b5d0a1788a379de65 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active elements in the array. <br /></td></tr>
<tr class="separator:af1fcadea5a992d6b5d0a1788a379de65 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addd94d248b34174e025b8c053c65b422 inherit pub_methods_classpl_array_base" id="r_addd94d248b34174e025b8c053c65b422"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:addd94d248b34174e025b8c053c65b422 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the array does not contain any elements. <br /></td></tr>
<tr class="separator:addd94d248b34174e025b8c053c65b422 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a595f66bad2baf69b07afd02a8d8e43c6 inherit pub_methods_classpl_array_base" id="r_a595f66bad2baf69b07afd02a8d8e43c6"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a595f66bad2baf69b07afd02a8d8e43c6 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a595f66bad2baf69b07afd02a8d8e43c6 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1530eded137d950524bba01e10ecb628 inherit pub_methods_classpl_array_base" id="r_a1530eded137d950524bba01e10ecb628"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const T &amp;value) const</td></tr>
<tr class="memdesc:a1530eded137d950524bba01e10ecb628 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given value can be found in the array. O(n) complexity. <br /></td></tr>
<tr class="separator:a1530eded137d950524bba01e10ecb628 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f08ce74aede6de6b65b394901d377d1 inherit pub_methods_classpl_array_base" id="r_a5f08ce74aede6de6b65b394901d377d1"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (plUInt32 uiIndex, const T &amp;value)</td></tr>
<tr class="memdesc:a5f08ce74aede6de6b65b394901d377d1 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a5f08ce74aede6de6b65b394901d377d1 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d54f9f568661912ccf7115c5b35c650 inherit pub_methods_classpl_array_base" id="r_a5d54f9f568661912ccf7115c5b35c650"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (plUInt32 uiIndex, T &amp;&amp;value)</td></tr>
<tr class="memdesc:a5d54f9f568661912ccf7115c5b35c650 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a5d54f9f568661912ccf7115c5b35c650 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaea1c005ddf1eaa9bcabdaee11215ca4 inherit pub_methods_classpl_array_base" id="r_aaea1c005ddf1eaa9bcabdaee11215ca4"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertRange</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;range, plUInt32 uiIndex)</td></tr>
<tr class="memdesc:aaea1c005ddf1eaa9bcabdaee11215ca4 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts all elements in the range starting at the given index, shifting the elements after the index. <br /></td></tr>
<tr class="separator:aaea1c005ddf1eaa9bcabdaee11215ca4 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8febaa1a5ebba42182115f402723824a inherit pub_methods_classpl_array_base" id="r_a8febaa1a5ebba42182115f402723824a"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndCopy</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a8febaa1a5ebba42182115f402723824a inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a8febaa1a5ebba42182115f402723824a inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5eb2c604ccf3ecf2cffd13c5114a449 inherit pub_methods_classpl_array_base" id="r_ad5eb2c604ccf3ecf2cffd13c5114a449"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndSwap</b> (const T &amp;value)</td></tr>
<tr class="memdesc:ad5eb2c604ccf3ecf2cffd13c5114a449 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:ad5eb2c604ccf3ecf2cffd13c5114a449 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a271ac4725101378c66fb1a62638f808b inherit pub_methods_classpl_array_base" id="r_a271ac4725101378c66fb1a62638f808b"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndCopy</b> (plUInt32 uiIndex, plUInt32 uiNumElements=1)</td></tr>
<tr class="memdesc:a271ac4725101378c66fb1a62638f808b inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a271ac4725101378c66fb1a62638f808b inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af35d0d7affaa5e101fc24af8c646374c inherit pub_methods_classpl_array_base" id="r_af35d0d7affaa5e101fc24af8c646374c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndSwap</b> (plUInt32 uiIndex, plUInt32 uiNumElements=1)</td></tr>
<tr class="memdesc:af35d0d7affaa5e101fc24af8c646374c inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:af35d0d7affaa5e101fc24af8c646374c inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9b72e7c7ef6423dd6b44031ce038c0e inherit pub_methods_classpl_array_base" id="r_ad9b72e7c7ef6423dd6b44031ce038c0e"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>IndexOf</b> (const T &amp;value, plUInt32 uiStartIndex=0) const</td></tr>
<tr class="memdesc:ad9b72e7c7ef6423dd6b44031ce038c0e inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the first occurrence of the given value and returns its index or plInvalidIndex if not found. <br /></td></tr>
<tr class="separator:ad9b72e7c7ef6423dd6b44031ce038c0e inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f47f6b317773e5c3d57a984d7cc7848 inherit pub_methods_classpl_array_base" id="r_a9f47f6b317773e5c3d57a984d7cc7848"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>LastIndexOf</b> (const T &amp;value, plUInt32 uiStartIndex=plInvalidIndex) const</td></tr>
<tr class="memdesc:a9f47f6b317773e5c3d57a984d7cc7848 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the last occurrence of the given value and returns its index or plInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a9f47f6b317773e5c3d57a984d7cc7848 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20523db7df58c7800d7a8b149a212ccb inherit pub_methods_classpl_array_base" id="r_a20523db7df58c7800d7a8b149a212ccb"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> ()</td></tr>
<tr class="memdesc:a20523db7df58c7800d7a8b149a212ccb inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grows the array by one element and returns a reference to the newly created element. <br /></td></tr>
<tr class="separator:a20523db7df58c7800d7a8b149a212ccb inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0462fe31382a3840901f3ab080ae870 inherit pub_methods_classpl_array_base" id="r_aa0462fe31382a3840901f3ab080ae870"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandBy</b> (plUInt32 uiNumNewItems)</td></tr>
<tr class="memdesc:aa0462fe31382a3840901f3ab080ae870 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array by N new items and returns a pointer to the first new one. <br /></td></tr>
<tr class="separator:aa0462fe31382a3840901f3ab080ae870 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e8ff51c4a7aa0afcfac3aa6206e08ff inherit pub_methods_classpl_array_base" id="r_a3e8ff51c4a7aa0afcfac3aa6206e08ff"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a3e8ff51c4a7aa0afcfac3aa6206e08ff inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a3e8ff51c4a7aa0afcfac3aa6206e08ff inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d0434d5870665826c65cee008d3f963 inherit pub_methods_classpl_array_base" id="r_a1d0434d5870665826c65cee008d3f963"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a1d0434d5870665826c65cee008d3f963 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a1d0434d5870665826c65cee008d3f963 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6f4b9b3e0bffbe6e9282e0e51d0b64f inherit pub_methods_classpl_array_base" id="r_ad6f4b9b3e0bffbe6e9282e0e51d0b64f"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (const T &amp;value)</td></tr>
<tr class="memdesc:ad6f4b9b3e0bffbe6e9282e0e51d0b64f inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:ad6f4b9b3e0bffbe6e9282e0e51d0b64f inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f890b037ca1404b9477143cfeb279da inherit pub_methods_classpl_array_base" id="r_a5f890b037ca1404b9477143cfeb279da"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a5f890b037ca1404b9477143cfeb279da inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a5f890b037ca1404b9477143cfeb279da inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f63b29421610cc28932235ab4dae2a7 inherit pub_methods_classpl_array_base" id="r_a6f63b29421610cc28932235ab4dae2a7"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;range)</td></tr>
<tr class="memdesc:a6f63b29421610cc28932235ab4dae2a7 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes all elements in range at the end of the array. Increases the capacity if necessary. <br /></td></tr>
<tr class="separator:a6f63b29421610cc28932235ab4dae2a7 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81ca2278035f0f23908f2e489d23d00d inherit pub_methods_classpl_array_base" id="r_a81ca2278035f0f23908f2e489d23d00d"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PopBack</b> (plUInt32 uiCountToRemove=1)</td></tr>
<tr class="memdesc:a81ca2278035f0f23908f2e489d23d00d inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes count elements from the end of the array. <br /></td></tr>
<tr class="separator:a81ca2278035f0f23908f2e489d23d00d inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac491d69cbb1f33194cd1dedc3847fdb2 inherit pub_methods_classpl_array_base" id="r_ac491d69cbb1f33194cd1dedc3847fdb2"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> ()</td></tr>
<tr class="memdesc:ac491d69cbb1f33194cd1dedc3847fdb2 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:ac491d69cbb1f33194cd1dedc3847fdb2 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b241ab40dd5a85c28b722cf8635c76d inherit pub_methods_classpl_array_base" id="r_a1b241ab40dd5a85c28b722cf8635c76d"><td class="memItemLeft" align="right" valign="top">
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> () const</td></tr>
<tr class="memdesc:a1b241ab40dd5a85c28b722cf8635c76d inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a1b241ab40dd5a85c28b722cf8635c76d inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad85d5fcd53033a4e0431304a65bc1574 inherit pub_methods_classpl_array_base" id="r_ad85d5fcd53033a4e0431304a65bc1574"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Sort</b> (const Comparer &amp;comparer)</td></tr>
<tr class="memdesc:ad85d5fcd53033a4e0431304a65bc1574 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with explicit comparer. <br /></td></tr>
<tr class="separator:ad85d5fcd53033a4e0431304a65bc1574 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a558920329588cd028cb68d76c762dff7 inherit pub_methods_classpl_array_base" id="r_a558920329588cd028cb68d76c762dff7"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Sort</b> ()</td></tr>
<tr class="memdesc:a558920329588cd028cb68d76c762dff7 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with default comparer. <br /></td></tr>
<tr class="separator:a558920329588cd028cb68d76c762dff7 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4350a1a63cc30d8c0b7f567f7a71d228 inherit pub_methods_classpl_array_base" id="r_a4350a1a63cc30d8c0b7f567f7a71d228"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> ()</td></tr>
<tr class="memdesc:a4350a1a63cc30d8c0b7f567f7a71d228 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a4350a1a63cc30d8c0b7f567f7a71d228 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e5cfa4eb14bdc3234d176033ad4afe5 inherit pub_methods_classpl_array_base" id="r_a0e5cfa4eb14bdc3234d176033ad4afe5"><td class="memItemLeft" align="right" valign="top">
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:a0e5cfa4eb14bdc3234d176033ad4afe5 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a0e5cfa4eb14bdc3234d176033ad4afe5 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae653225ad54b625d215b7cce50d63d97 inherit pub_methods_classpl_array_base" id="r_ae653225ad54b625d215b7cce50d63d97"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> ()</td></tr>
<tr class="memdesc:ae653225ad54b625d215b7cce50d63d97 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ae653225ad54b625d215b7cce50d63d97 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2a9f3aac5069d828c921360458667b6 inherit pub_methods_classpl_array_base" id="r_ad2a9f3aac5069d828c921360458667b6"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> () const</td></tr>
<tr class="memdesc:ad2a9f3aac5069d828c921360458667b6 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ad2a9f3aac5069d828c921360458667b6 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac93cf2ca68d6009cde49c96fc4363448 inherit pub_methods_classpl_array_base" id="r_ac93cf2ca68d6009cde49c96fc4363448"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; typename <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> ()</td></tr>
<tr class="memdesc:ac93cf2ca68d6009cde49c96fc4363448 inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ac93cf2ca68d6009cde49c96fc4363448 inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa17e853faee55f4d714d0449e614a26d inherit pub_methods_classpl_array_base" id="r_aa17e853faee55f4d714d0449e614a26d"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; typename <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> () const</td></tr>
<tr class="memdesc:aa17e853faee55f4d714d0449e614a26d inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:aa17e853faee55f4d714d0449e614a26d inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acab4275c200ceac1c476ab5deedeb6db inherit pub_methods_classpl_array_base" id="r_acab4275c200ceac1c476ab5deedeb6db"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCapacity</b> () const</td></tr>
<tr class="memdesc:acab4275c200ceac1c476ab5deedeb6db inherit pub_methods_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reserved number of elements that the array can hold without reallocating. <br /></td></tr>
<tr class="separator:acab4275c200ceac1c476ab5deedeb6db inherit pub_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a715ae0d8c445ceb1faa696f487bc05ba" id="r_a715ae0d8c445ceb1faa696f487bc05ba"><td class="memItemLeft" align="right" valign="top"><a id="a715ae0d8c445ceb1faa696f487bc05ba" name="a715ae0d8c445ceb1faa696f487bc05ba"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plDynamicArrayBase</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a715ae0d8c445ceb1faa696f487bc05ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty array. Does not allocate any data yet. <br /></td></tr>
<tr class="separator:a715ae0d8c445ceb1faa696f487bc05ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c785afe2aed382b7524361318591a09" id="r_a4c785afe2aed382b7524361318591a09"><td class="memItemLeft" align="right" valign="top"><a id="a4c785afe2aed382b7524361318591a09" name="a4c785afe2aed382b7524361318591a09"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plDynamicArrayBase</b> (T *pInplaceStorage, plUInt32 uiCapacity, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a4c785afe2aed382b7524361318591a09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed311b8326915641c0082f5504236371" id="r_aed311b8326915641c0082f5504236371"><td class="memItemLeft" align="right" valign="top"><a id="aed311b8326915641c0082f5504236371" name="aed311b8326915641c0082f5504236371"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plDynamicArrayBase</b> (const <a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &amp;other, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:aed311b8326915641c0082f5504236371"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given array. <br /></td></tr>
<tr class="separator:aed311b8326915641c0082f5504236371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae56ee44a7a123a300fdd7b3366d89855" id="r_ae56ee44a7a123a300fdd7b3366d89855"><td class="memItemLeft" align="right" valign="top"><a id="ae56ee44a7a123a300fdd7b3366d89855" name="ae56ee44a7a123a300fdd7b3366d89855"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plDynamicArrayBase</b> (<a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &amp;&amp;other, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ae56ee44a7a123a300fdd7b3366d89855"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the given array into this one. <br /></td></tr>
<tr class="separator:ae56ee44a7a123a300fdd7b3366d89855"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba07c0caadd87b9e876d878517d67f52" id="r_aba07c0caadd87b9e876d878517d67f52"><td class="memItemLeft" align="right" valign="top"><a id="aba07c0caadd87b9e876d878517d67f52" name="aba07c0caadd87b9e876d878517d67f52"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plDynamicArrayBase</b> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:aba07c0caadd87b9e876d878517d67f52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given array. <br /></td></tr>
<tr class="separator:aba07c0caadd87b9e876d878517d67f52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01efde6c29a150869980ea2cbe166a3b" id="r_a01efde6c29a150869980ea2cbe166a3b"><td class="memItemLeft" align="right" valign="top"><a id="a01efde6c29a150869980ea2cbe166a3b" name="a01efde6c29a150869980ea2cbe166a3b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>~plDynamicArrayBase</b> ()</td></tr>
<tr class="memdesc:a01efde6c29a150869980ea2cbe166a3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a01efde6c29a150869980ea2cbe166a3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab932242966b427ceeda823c9abbb79c4" id="r_ab932242966b427ceeda823c9abbb79c4"><td class="memItemLeft" align="right" valign="top"><a id="ab932242966b427ceeda823c9abbb79c4" name="ab932242966b427ceeda823c9abbb79c4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:ab932242966b427ceeda823c9abbb79c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:ab932242966b427ceeda823c9abbb79c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a682e2cdd3788de4b203d372baf81fd06" id="r_a682e2cdd3788de4b203d372baf81fd06"><td class="memItemLeft" align="right" valign="top"><a id="a682e2cdd3788de4b203d372baf81fd06" name="a682e2cdd3788de4b203d372baf81fd06"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="memdesc:a682e2cdd3788de4b203d372baf81fd06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:a682e2cdd3788de4b203d372baf81fd06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58cb94bf33f446cccb2a3ce5f362ffe1" id="r_a58cb94bf33f446cccb2a3ce5f362ffe1"><td class="memItemLeft" align="right" valign="top"><a id="a58cb94bf33f446cccb2a3ce5f362ffe1" name="a58cb94bf33f446cccb2a3ce5f362ffe1"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> ()</td></tr>
<tr class="separator:a58cb94bf33f446cccb2a3ce5f362ffe1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2b224a35fbbbb451520a40907d9563b" id="r_aa2b224a35fbbbb451520a40907d9563b"><td class="memItemLeft" align="right" valign="top"><a id="aa2b224a35fbbbb451520a40907d9563b" name="aa2b224a35fbbbb451520a40907d9563b"></a>
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> () const</td></tr>
<tr class="separator:aa2b224a35fbbbb451520a40907d9563b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d4/dc8/classpl_array_base.htm">plArrayBase&lt; T, plDynamicArrayBase&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:aeebd47438148c38413cea17a4c45cc34 inherit pro_methods_classpl_array_base" id="r_aeebd47438148c38413cea17a4c45cc34"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>DoSwap</b> (<a class="el" href="../../d4/dc8/classpl_array_base.htm">plArrayBase</a>&lt; T, <a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a>&lt; T &gt; &gt; &amp;other)</td></tr>
<tr class="separator:aeebd47438148c38413cea17a4c45cc34 inherit pro_methods_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a559efec7be70e36ae7b5e1fe5fcc09e3" id="r_a559efec7be70e36ae7b5e1fe5fcc09e3"><td class="memItemLeft" align="right" valign="top"><a id="a559efec7be70e36ae7b5e1fe5fcc09e3" name="a559efec7be70e36ae7b5e1fe5fcc09e3"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plArrayBase&lt; T, plDynamicArrayBase&lt; T &gt; &gt;</b></td></tr>
<tr class="separator:a559efec7be70e36ae7b5e1fe5fcc09e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classpl_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_classpl_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d4/dc8/classpl_array_base.htm">plArrayBase&lt; T, plDynamicArrayBase&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:ab109ce52662dd5708d0618717d8ea48e inherit pub_types_classpl_array_base" id="r_ab109ce52662dd5708d0618717d8ea48e"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b></td></tr>
<tr class="separator:ab109ce52662dd5708d0618717d8ea48e inherit pub_types_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43f6f4f6d3e6e7fbe68a708e60835da2 inherit pub_types_classpl_array_base" id="r_a43f6f4f6d3e6e7fbe68a708e60835da2"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b></td></tr>
<tr class="separator:a43f6f4f6d3e6e7fbe68a708e60835da2 inherit pub_types_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cf81fb6ac21f89aed3921be60b3257d inherit pub_types_classpl_array_base" id="r_a9cf81fb6ac21f89aed3921be60b3257d"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b></td></tr>
<tr class="separator:a9cf81fb6ac21f89aed3921be60b3257d inherit pub_types_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acda8c4fd2c6e58af2c07c32341ef0044 inherit pub_types_classpl_array_base" id="r_acda8c4fd2c6e58af2c07c32341ef0044"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b></td></tr>
<tr class="separator:acda8c4fd2c6e58af2c07c32341ef0044 inherit pub_types_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_array_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/dc8/classpl_array_base.htm">plArrayBase&lt; T, plDynamicArrayBase&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:ad80e5de60a5a45ed08899df4bc3c1872 inherit pro_attribs_classpl_array_base" id="r_ad80e5de60a5a45ed08899df4bc3c1872"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pElements</b></td></tr>
<tr class="memdesc:ad80e5de60a5a45ed08899df4bc3c1872 inherit pro_attribs_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Element-type access to m_Data. <br /></td></tr>
<tr class="separator:ad80e5de60a5a45ed08899df4bc3c1872 inherit pro_attribs_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b04d32e971708024a712b5f909626ee inherit pro_attribs_classpl_array_base" id="r_a6b04d32e971708024a712b5f909626ee"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCount</b></td></tr>
<tr class="memdesc:a6b04d32e971708024a712b5f909626ee inherit pro_attribs_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of elements used from the array. <br /></td></tr>
<tr class="separator:a6b04d32e971708024a712b5f909626ee inherit pro_attribs_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c39569f85b9a3cb21af6bfa355cf54f inherit pro_attribs_classpl_array_base" id="r_a7c39569f85b9a3cb21af6bfa355cf54f"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCapacity</b></td></tr>
<tr class="memdesc:a7c39569f85b9a3cb21af6bfa355cf54f inherit pro_attribs_classpl_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of elements which can be stored in the array without re-allocating. <br /></td></tr>
<tr class="separator:a7c39569f85b9a3cb21af6bfa355cf54f inherit pro_attribs_classpl_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename T&gt;<br />
class plDynamicArrayBase&lt; T &gt;</div><p>Implementation of a dynamically growing array. </p>
<p>Best-case performance for the PushBack operation is O(1) if the <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a> doesn't need to be expanded. In the worst case, PushBack is O(n). Look-up is guaranteed to always be O(1). </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../d2/da7/_dynamic_array_8h_source.htm">DynamicArray.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../d0/dd9/_dynamic_array__inl_8h_source.htm">DynamicArray_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d7/d89/classpl_dynamic_array_base.htm">plDynamicArrayBase</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
