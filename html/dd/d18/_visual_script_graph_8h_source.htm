<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/EditorPlugins/VisualScript/EditorPluginVisualScript/VisualScriptGraph/VisualScriptGraph.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dd/d18/_visual_script_graph_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">VisualScriptGraph.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;EditorPluginVisualScript/VisualScriptGraph/VisualScriptNodeRegistry.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;ToolsFoundation/NodeObject/DocumentNodeManager.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="foldopen" id="foldopen00006" data-start="{" data-end="};">
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno"><a class="line" href="../../db/df5/classpl_visual_script_pin.htm">    6</a></span><span class="keyword">class </span><a class="code hl_class" href="../../db/df5/classpl_visual_script_pin.htm">plVisualScriptPin</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d2/d4f/classpl_pin.htm">plPin</a></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  PL_ADD_DYNAMIC_REFLECTION(<a class="code hl_class" href="../../db/df5/classpl_visual_script_pin.htm">plVisualScriptPin</a>, <a class="code hl_class" href="../../d2/d4f/classpl_pin.htm">plPin</a>);</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  <a class="code hl_class" href="../../db/df5/classpl_visual_script_pin.htm">plVisualScriptPin</a>(Type type, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, <span class="keyword">const</span> <a class="code hl_struct" href="../../d1/daa/structpl_visual_script_node_registry_1_1_pin_desc.htm">plVisualScriptNodeRegistry::PinDesc</a>&amp; pinDesc, <span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, plUInt32 uiDataPinIndex, plUInt32 uiElementIndex);</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  <a class="code hl_class" href="../../db/df5/classpl_visual_script_pin.htm">~plVisualScriptPin</a>();</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  PL_ALWAYS_INLINE <span class="keywordtype">bool</span> IsExecutionPin()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;IsExecutionPin(); }</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  PL_ALWAYS_INLINE <span class="keywordtype">bool</span> IsDataPin()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;IsDataPin(); }</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  PL_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* GetDataType()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_pDataType; }</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  PL_ALWAYS_INLINE plVisualScriptDataType::Enum GetScriptDataType()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_ScriptDataType; }</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  plVisualScriptDataType::Enum GetResolvedScriptDataType() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> GetDataTypeName() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  PL_ALWAYS_INLINE plUInt32 GetDataPinIndex()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiDataPinIndex; }</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  PL_ALWAYS_INLINE plUInt32 GetElementIndex()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiElementIndex; }</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  PL_ALWAYS_INLINE <span class="keywordtype">bool</span> IsRequired()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_bRequired; }</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  PL_ALWAYS_INLINE <span class="keywordtype">bool</span> HasDynamicPinProperty()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_sDynamicPinProperty.<a class="code hl_function" href="../../d0/dc8/classpl_hashed_string.htm#aa449c49f5dc741a2814227dfc7f4981e">IsEmpty</a>() == <span class="keyword">false</span>; }</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  PL_ALWAYS_INLINE <span class="keywordtype">bool</span> SplitExecution()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_bSplitExecution; }</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  PL_ALWAYS_INLINE <span class="keywordtype">bool</span> ReplaceWithArray()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_bReplaceWithArray; }</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  PL_ALWAYS_INLINE <span class="keywordtype">bool</span> NeedsTypeDeduction()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_DeductTypeFunc != <span class="keyword">nullptr</span>; }</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  PL_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a>&amp; GetDynamicPinProperty()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_sDynamicPinProperty; }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  PL_ALWAYS_INLINE plVisualScriptNodeRegistry::PinDesc::DeductTypeFunc GetDeductTypeFunc()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pDesc-&gt;m_DeductTypeFunc; }</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keywordtype">bool</span> CanConvertTo(<span class="keyword">const</span> <a class="code hl_class" href="../../db/df5/classpl_visual_script_pin.htm">plVisualScriptPin</a>&amp; targetPin, <span class="keywordtype">bool</span> bUseResolvedDataTypes = <span class="keyword">true</span>) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keyword">const</span> <a class="code hl_struct" href="../../d1/daa/structpl_visual_script_node_registry_1_1_pin_desc.htm">plVisualScriptNodeRegistry::PinDesc</a>* m_pDesc = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  plUInt32 m_uiDataPinIndex = 0;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  plUInt32 m_uiElementIndex = 0;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>};</div>
</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="};">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../d5/db9/classpl_visual_script_node_manager.htm">   40</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d5/db9/classpl_visual_script_node_manager.htm">plVisualScriptNodeManager</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d1/d53/classpl_document_node_manager.htm">plDocumentNodeManager</a></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>{</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <a class="code hl_class" href="../../d5/db9/classpl_visual_script_node_manager.htm">plVisualScriptNodeManager</a>();</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <a class="code hl_class" href="../../d5/db9/classpl_visual_script_node_manager.htm">~plVisualScriptNodeManager</a>();</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <a class="code hl_class" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> GetScriptBaseClass() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keywordtype">bool</span> IsFilteredByBaseClass(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pNodeType, <span class="keyword">const</span> <a class="code hl_struct" href="../../d5/d46/structpl_visual_script_node_registry_1_1_node_desc.htm">plVisualScriptNodeRegistry::NodeDesc</a>&amp; nodeDesc, <span class="keyword">const</span> <a class="code hl_class" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a>&amp; sBaseClass, <span class="keywordtype">bool</span> bLogWarning = <span class="keyword">false</span>) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  plVisualScriptDataType::Enum GetVariableType(<a class="code hl_class" href="../../d3/d33/classpl_temp_hashed_string.htm">plTempHashedString</a> sName) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> GetVariableDefaultValue(<a class="code hl_class" href="../../d3/d33/classpl_temp_hashed_string.htm">plTempHashedString</a> sName, <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; out_value) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keywordtype">void</span> GetInputExecutionPins(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plVisualScriptPin*&gt;</a>&amp; out_pins) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keywordtype">void</span> GetOutputExecutionPins(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plVisualScriptPin*&gt;</a>&amp; out_pins) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keywordtype">void</span> GetInputDataPins(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plVisualScriptPin*&gt;</a>&amp; out_pins) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keywordtype">void</span> GetOutputDataPins(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plVisualScriptPin*&gt;</a>&amp; out_pins) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <span class="keywordtype">void</span> GetEntryNodes(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plDocumentObject*&gt;</a>&amp; out_entryNodes) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> GetNiceTypeName(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject);</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> GetNiceFunctionName(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  plVisualScriptDataType::Enum GetDeductedType(<span class="keyword">const</span> <a class="code hl_class" href="../../db/df5/classpl_visual_script_pin.htm">plVisualScriptPin</a>&amp; pin) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  plVisualScriptDataType::Enum GetDeductedType(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keywordtype">bool</span> IsCoroutine(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keywordtype">bool</span> IsLoop(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <a class="code hl_class" href="../../dd/d61/classpl_event.htm">plEvent&lt;const plDocumentObject*&gt;</a> m_NodeChangedEvent;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> InternalIsNode(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> InternalIsDynamicPinProperty(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, <span class="keyword">const</span> <a class="code hl_class" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a>* pProp) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../db/d23/structpl_status.htm">plStatus</a> InternalCanConnect(<span class="keyword">const</span> <a class="code hl_class" href="../../d2/d4f/classpl_pin.htm">plPin</a>&amp; source, <span class="keyword">const</span> <a class="code hl_class" href="../../d2/d4f/classpl_pin.htm">plPin</a>&amp; target, <a class="code hl_enumeration" href="../../d1/d53/classpl_document_node_manager.htm#a38c2d4b947e0f2d4efbe389c8ecfd2ec">CanConnectResult</a>&amp; out_Result) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> InternalCreatePins(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, <a class="code hl_struct" href="../../d1/d3c/structpl_document_node_manager_1_1_node_internal.htm">NodeInternal</a>&amp; node) <span class="keyword">override</span>;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/db9/classpl_visual_script_node_manager.htm#a0d357f6afc8b6c981b556dc46cbc612f">GetNodeCreationTemplates</a>(<a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;plNodeCreationTemplate&gt;</a>&amp; out_templates) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="keywordtype">void</span> NodeEventsHandler(<span class="keyword">const</span> <a class="code hl_struct" href="../../dd/d59/structpl_document_node_manager_event.htm">plDocumentNodeManagerEvent</a>&amp; e);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="keywordtype">void</span> PropertyEventsHandler(<span class="keyword">const</span> <a class="code hl_struct" href="../../d0/d0e/structpl_document_object_property_event.htm">plDocumentObjectPropertyEvent</a>&amp; e);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../db/df5/classpl_visual_script_pin.htm">plVisualScriptPin</a>;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  <span class="keywordtype">void</span> RemoveDeductedPinType(<span class="keyword">const</span> <a class="code hl_class" href="../../db/df5/classpl_visual_script_pin.htm">plVisualScriptPin</a>&amp; pin);</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keywordtype">void</span> DeductNodeTypeAndAllPinTypes(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pObject, <span class="keyword">const</span> <a class="code hl_class" href="../../d2/d4f/classpl_pin.htm">plPin</a>* pDisconnectedPin = <span class="keyword">nullptr</span>);</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keywordtype">void</span> UpdateCoroutine(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pTargetNode, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d56/classpl_connection.htm">plConnection</a>&amp; changedConnection, <span class="keywordtype">bool</span> bIsAboutToDisconnect = <span class="keyword">false</span>);</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keywordtype">bool</span> IsConnectedToCoroutine(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a>* pEntryNode, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d56/classpl_connection.htm">plConnection</a>&amp; changedConnection, <span class="keywordtype">bool</span> bIsAboutToDisconnect = <span class="keyword">false</span>) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <a class="code hl_class" href="../../dd/d55/classpl_hash_table.htm">plHashTable&lt;const plDocumentObject*, plEnum&lt;plVisualScriptDataType&gt;</a>&gt; m_ObjectToDeductedType;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <a class="code hl_class" href="../../dd/d55/classpl_hash_table.htm">plHashTable&lt;const plVisualScriptPin*, plEnum&lt;plVisualScriptDataType&gt;</a>&gt; m_PinToDeductedType;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet&lt;const plDocumentObject*&gt;</a> m_CoroutineObjects;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keyword">mutable</span> <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;plNodePropertyValue&gt;</a> m_PropertyValues;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="keyword">mutable</span> <a class="code hl_class" href="../../d7/de8/classpl_deque.htm">plDeque&lt;plString&gt;</a> m_VariableNodeTypeNames;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>};</div>
</div>
<div class="ttc" id="aclasspl_abstract_property_htm"><div class="ttname"><a href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></div><div class="ttdoc">This is the base interface for all properties in the reflection system. It provides enough informatio...</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:150</div></div>
<div class="ttc" id="aclasspl_connection_htm"><div class="ttname"><a href="../../d6/d56/classpl_connection.htm">plConnection</a></div><div class="ttdef"><b>Definition</b> DocumentNodeManager.h:37</div></div>
<div class="ttc" id="aclasspl_deque_htm"><div class="ttname"><a href="../../d7/de8/classpl_deque.htm">plDeque</a></div><div class="ttdef"><b>Definition</b> Deque.h:270</div></div>
<div class="ttc" id="aclasspl_document_node_manager_htm"><div class="ttname"><a href="../../d1/d53/classpl_document_node_manager.htm">plDocumentNodeManager</a></div><div class="ttdef"><b>Definition</b> DocumentNodeManager.h:141</div></div>
<div class="ttc" id="aclasspl_document_node_manager_htm_a38c2d4b947e0f2d4efbe389c8ecfd2ec"><div class="ttname"><a href="../../d1/d53/classpl_document_node_manager.htm#a38c2d4b947e0f2d4efbe389c8ecfd2ec">plDocumentNodeManager::CanConnectResult</a></div><div class="ttdeci">CanConnectResult</div><div class="ttdef"><b>Definition</b> DocumentNodeManager.h:165</div></div>
<div class="ttc" id="aclasspl_document_object_htm"><div class="ttname"><a href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a></div><div class="ttdef"><b>Definition</b> DocumentObjectBase.h:11</div></div>
<div class="ttc" id="aclasspl_dynamic_array_htm"><div class="ttname"><a href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="aclasspl_event_htm"><div class="ttname"><a href="../../dd/d61/classpl_event.htm">plEvent</a></div><div class="ttdef"><b>Definition</b> Event.h:177</div></div>
<div class="ttc" id="aclasspl_hash_set_htm"><div class="ttname"><a href="../../de/dad/classpl_hash_set.htm">plHashSet</a></div><div class="ttdef"><b>Definition</b> HashSet.h:191</div></div>
<div class="ttc" id="aclasspl_hash_table_htm"><div class="ttname"><a href="../../dd/d55/classpl_hash_table.htm">plHashTable</a></div><div class="ttdef"><b>Definition</b> HashTable.h:333</div></div>
<div class="ttc" id="aclasspl_hashed_string_htm"><div class="ttname"><a href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a></div><div class="ttdoc">This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...</div><div class="ttdef"><b>Definition</b> HashedString.h:25</div></div>
<div class="ttc" id="aclasspl_hashed_string_htm_aa449c49f5dc741a2814227dfc7f4981e"><div class="ttname"><a href="../../d0/dc8/classpl_hashed_string.htm#aa449c49f5dc741a2814227dfc7f4981e">plHashedString::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether the string is empty.</div><div class="ttdef"><b>Definition</b> HashedString.cpp:121</div></div>
<div class="ttc" id="aclasspl_pin_htm"><div class="ttname"><a href="../../d2/d4f/classpl_pin.htm">plPin</a></div><div class="ttdef"><b>Definition</b> DocumentNodeManager.h:59</div></div>
<div class="ttc" id="aclasspl_r_t_t_i_htm"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_temp_hashed_string_htm"><div class="ttname"><a href="../../d3/d33/classpl_temp_hashed_string.htm">plTempHashedString</a></div><div class="ttdoc">A class to use together with plHashedString for quick comparisons with temporary strings that need no...</div><div class="ttdef"><b>Definition</b> HashedString.h:151</div></div>
<div class="ttc" id="aclasspl_variant_htm"><div class="ttname"><a href="../../da/d4c/classpl_variant.htm">plVariant</a></div><div class="ttdoc">plVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="aclasspl_visual_script_node_manager_htm"><div class="ttname"><a href="../../d5/db9/classpl_visual_script_node_manager.htm">plVisualScriptNodeManager</a></div><div class="ttdef"><b>Definition</b> VisualScriptGraph.h:41</div></div>
<div class="ttc" id="aclasspl_visual_script_node_manager_htm_a0d357f6afc8b6c981b556dc46cbc612f"><div class="ttname"><a href="../../d5/db9/classpl_visual_script_node_manager.htm#a0d357f6afc8b6c981b556dc46cbc612f">plVisualScriptNodeManager::GetNodeCreationTemplates</a></div><div class="ttdeci">virtual void GetNodeCreationTemplates(plDynamicArray&lt; plNodeCreationTemplate &gt; &amp;out_templates) const override</div><div class="ttdoc">For node documents this function is called instead of GetCreateableTypes to get a list for the node c...</div><div class="ttdef"><b>Definition</b> VisualScriptGraph.cpp:455</div></div>
<div class="ttc" id="aclasspl_visual_script_pin_htm"><div class="ttname"><a href="../../db/df5/classpl_visual_script_pin.htm">plVisualScriptPin</a></div><div class="ttdef"><b>Definition</b> VisualScriptGraph.h:7</div></div>
<div class="ttc" id="astructpl_document_node_manager_1_1_node_internal_htm"><div class="ttname"><a href="../../d1/d3c/structpl_document_node_manager_1_1_node_internal.htm">plDocumentNodeManager::NodeInternal</a></div><div class="ttdef"><b>Definition</b> DocumentNodeManager.h:210</div></div>
<div class="ttc" id="astructpl_document_node_manager_event_htm"><div class="ttname"><a href="../../dd/d59/structpl_document_node_manager_event.htm">plDocumentNodeManagerEvent</a></div><div class="ttdef"><b>Definition</b> DocumentNodeManager.h:12</div></div>
<div class="ttc" id="astructpl_document_object_property_event_htm"><div class="ttname"><a href="../../d0/d0e/structpl_document_object_property_event.htm">plDocumentObjectPropertyEvent</a></div><div class="ttdoc">Used by plDocumentObjectManager::m_PropertyEvents.</div><div class="ttdef"><b>Definition</b> DocumentObjectManager.h:77</div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructpl_status_htm"><div class="ttname"><a href="../../db/d23/structpl_status.htm">plStatus</a></div><div class="ttdoc">An plResult with an additional message for the reason of failure.</div><div class="ttdef"><b>Definition</b> Status.h:12</div></div>
<div class="ttc" id="astructpl_visual_script_node_registry_1_1_node_desc_htm"><div class="ttname"><a href="../../d5/d46/structpl_visual_script_node_registry_1_1_node_desc.htm">plVisualScriptNodeRegistry::NodeDesc</a></div><div class="ttdef"><b>Definition</b> VisualScriptNodeRegistry.h:36</div></div>
<div class="ttc" id="astructpl_visual_script_node_registry_1_1_pin_desc_htm"><div class="ttname"><a href="../../d1/daa/structpl_visual_script_node_registry_1_1_pin_desc.htm">plVisualScriptNodeRegistry::PinDesc</a></div><div class="ttdef"><b>Definition</b> VisualScriptNodeRegistry.h:15</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_7df176c9af4b8cab796c57a2cfa920f3.htm">EditorPlugins</a></li><li class="navelem"><a class="el" href="../../dir_169be9dd32019325539c9f18d4540f3d.htm">VisualScript</a></li><li class="navelem"><a class="el" href="../../dir_3304dc2a8692e6a9f2228c51e4f410a7.htm">EditorPluginVisualScript</a></li><li class="navelem"><a class="el" href="../../dir_4d1faebde65e7e64658afebb37873272.htm">VisualScriptGraph</a></li><li class="navelem"><b>VisualScriptGraph.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
