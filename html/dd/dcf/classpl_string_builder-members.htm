<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Member List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d3/d2d/classpl_string_builder.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">plStringBuilder Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a1e8c97d8bcb6e24fbe61f79cfe2d90db">Append</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a16e5d8f18f95040deabb96572cd34025">Append</a>(const wchar_t *pData1, const wchar_t *pData2=nullptr, const wchar_t *pData3=nullptr, const wchar_t *pData4=nullptr, const wchar_t *pData5=nullptr, const wchar_t *pData6=nullptr)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a6d3d1e5991296203650b5bdfa571df17">Append</a>(plStringView sData1)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a89bb652f391e36da4591a0781d8ea96d">Append</a>(plStringView sData1, plStringView sData2)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#adfdb536f27121e9186c13da5c211d513">Append</a>(plStringView sData1, plStringView sData2, plStringView sData3)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a5471f1250567bab2112c86cf3664eeae">Append</a>(plStringView sData1, plStringView sData2, plStringView sData3, plStringView sData4)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a50341536d8bb6d78e0524d714d90d73a">Append</a>(plStringView sData1, plStringView sData2, plStringView sData3, plStringView sData4, plStringView sData5, plStringView sData6={})</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a9d0f16df771c07f6578bf96e9a295b53">AppendFormat</a>(const plFormatString &amp;string)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ae554ecb996fda0112664ff7bfbede389">AppendFormat</a>(const char *szFormat, ARGS &amp;&amp;... args)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ad6bc29192dc95e2f45a5b310ea3b9e5f">AppendPath</a>(plStringView sPath1, plStringView sPath2={}, plStringView sPath3={}, plStringView sPath4={})</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ab021498c6c8447b67603b1b4982fb9a9">AppendWithSeparator</a>(plStringView sSeparator, plStringView sText1, plStringView sText2=plStringView(), plStringView sText3=plStringView(), plStringView sText4=plStringView(), plStringView sText5=plStringView(), plStringView sText6=plStringView())</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ad27e890445b6f6a5c0bcbb88026d19dd">ChangeCharacter</a>(iterator &amp;ref_it, plUInt32 uiCharacter)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ac96aba315d522ce55aa1d909e3288699">ChangeFileExtension</a>(plStringView sNewExtension, bool bFullExtension=false)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a799f2c2df1580587ba2a0da8c57913d2">ChangeFileName</a>(plStringView sNewFileName)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ae1478d7053c848aa2ccce92cc60d7e9b">ChangeFileNameAndExtension</a>(plStringView sNewFileNameWithExtension)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a0bf2e1b97d7c871a7cba08615bc82357">Clear</a>()</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a71ac29b18708a376ce3e9f03bb756a82">Compare</a>(plStringView sOther) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a91a71d7390204850be0e8fc9193e0f31">Compare_NoCase</a>(plStringView sOther) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a946009c071c70e5b2ad616a16213d113">CompareN</a>(plStringView sOther, plUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a4af63c140fc4fe56e1a290df992cec7e">CompareN_NoCase</a>(plStringView sOther, plUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#aa5dc9b2300f37b7bb4a42999870e6092">ComputeCharacterPosition</a>(plUInt32 uiCharacterIndex) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ab6961a7b6896b3b482b20df06de7c689">EndsWith</a>(plStringView sEndsWith) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8986dab73aa8d7095b79ddf761cf6b0d">EndsWith_NoCase</a>(plStringView sEndsWith) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a2d116e5f43c0ae774c2346b5f94a992c">FindLastSubString</a>(plStringView sStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a54c2b870afa5c0a2fb437e32219eb7d1">FindLastSubString_NoCase</a>(plStringView sStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#afb80af12ae97555d0870359e86bd1a68">FindSubString</a>(plStringView sStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8972e55722d17be6604b1df08082cf83">FindSubString_NoCase</a>(plStringView sStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#af40ca95f7c2b77e18266ffe6ff7483a8">FindWholeWord</a>(const char *szSearchFor, plStringUtils::PL_CHARACTER_FILTER isDelimiterCB, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8b6659ee0b76480c3ba534f74a4089fa">FindWholeWord_NoCase</a>(const char *szSearchFor, plStringUtils::PL_CHARACTER_FILTER isDelimiterCB, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a0f3754f7b55c07f871886605f64292e1">GetAllocator</a>() const</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a50431616657824d4039932e5b5923882">GetCharacterCount</a>() const</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a11fe75866ee3add6ceaac9690549f908">GetData</a>() const</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a1db6c0e59e3929a325acbc6deaa85ce9">GetElementCount</a>() const</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ad8352abf502483f0e4e10c6733bde642">GetFileDirectory</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ad0543d52d510868337e70f18ab4467a6">GetFileExtension</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8b26dfed7384bb3264d3f134648396f9">GetFileName</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a5be3ebeaf3a8e57322061b6424ca25a8">GetFileNameAndExtension</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#aa5dd0d0d0031bb7bfe144c28a45db449">GetHeapMemoryUsage</a>() const</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a97bd0de57b678794224901f970b864b7">GetIteratorBack</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ac5f533a25843450da719ad9c78827c29">GetIteratorFront</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a97a42649db4dba41449786ad43a237cf">GetRootedPathRootName</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ae137b75721c90c6ca1b8aec2b9fa7653">GetView</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a99dd48e46918eea24a01ee4893f8301a">HasAnyExtension</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#abdbf19533811ec120710ad7caffe7ad0">HasExtension</a>(plStringView sExtension) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a35cccd046dac504634c2c4c96e509ff0">Insert</a>(const char *szInsertAtPos, plStringView sTextToInsert)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a275c7069b3e5ddd9daf7ea75352128a3">IsAbsolutePath</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a7ac3a243ee9ea1f99f7d82dd8e1d60b5">IsEmpty</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a928260385c9a80109751fbdb1849b321">IsEqual</a>(plStringView sOther) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#ad0801b3fafc90b1beba38313c205e704">IsEqual_NoCase</a>(plStringView sOther) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a1854b21f65a086f15e164f739d53950d">IsEqualN</a>(plStringView sOther, plUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a632d41fe7d33c9e42391ee905a361b06">IsEqualN_NoCase</a>(plStringView sOther, plUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a5e80384a0747cd10110804b721f337c2">IsPathBelowFolder</a>(const char *szPathToFolder)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a4a340cb26613564b37461946d685215f">IsRelativePath</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#aef9d9918c2d608eb5451b735057a272f">IsRootedPath</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a659a9fa17fb4388442d9ae9f6be54dab">MakeCleanPath</a>()</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#adbcba066878f513d27d33ea981010a5b">MakePathSeparatorsNative</a>()</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a5f117c2d0ac61531b43cbddc3309226d">MakeRelativeTo</a>(plStringView sAbsolutePathToMakeThisRelativeTo)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a7ac5057709ce4884266502eb53a12a2b">operator const char *</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a8edc0eeb6a433a7397215106abd0f39f">operator plStringView</a>() const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a40eb7c51f4583a00a3c15f812d3c0df7">operator=</a>(const plStringBuilder &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ae647e439b4cfc0fec9255aa5b42945e9">operator=</a>(plStringBuilder &amp;&amp;rhs) noexcept</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#aa066fdeaae380f774ce5cd81dbcece97">operator=</a>(const char *szUTF8)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a401f72f9fa0a5f359354deace282edab">operator=</a>(const wchar_t *pWChar)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a2f731043026cad906bd045532936d711">operator=</a>(plStringView rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ae0e4310def5b31ca716026574e221ea8">operator=</a>(const plHybridStringBase&lt; Size &gt; &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ac7c9fee23418a6dab9c554ff5aea4c47">operator=</a>(const plHybridString&lt; Size, A &gt; &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a527367494d124b3d8d51fec271ce4351">operator=</a>(plHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#acdbc74b5f4c4354590787563c7464281">operator=</a>(plHybridString&lt; Size, A &gt; &amp;&amp;rhs) noexcept</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a2a73a871560047c41fa46accc9866a93">PathParentDirectory</a>(plUInt32 uiLevelsUp=1)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>plHybridStringBase</b> (defined in <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a107a88ba85547554b2b2e1ceccbec431">plStringBuilder</a>(plAllocator *pAllocator=plFoundation::GetDefaultAllocator())</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a5f4030d97079e15e4fdaa1ccc27355ec">plStringBuilder</a>(const plStringBuilder &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a885d1316c14692949ee50cf6598a8a5d">plStringBuilder</a>(plStringBuilder &amp;&amp;rhs) noexcept</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a6c5d036483b34cd56f305e003f5d0a51">plStringBuilder</a>(const plHybridStringBase&lt; Size &gt; &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ae08dbba46899662cba06fbc2b40dc599">plStringBuilder</a>(const plHybridString&lt; Size, A &gt; &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ade94bb5f0337259bd95d973a65d631e3">plStringBuilder</a>(plHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a58152c1c5728d387f5b81883c7fab678">plStringBuilder</a>(plHybridString&lt; Size, A &gt; &amp;&amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a81aff0eaae363dc2e8dd18a02dbb6e9b">plStringBuilder</a>(plStringView sData1, plStringView sData2, plStringView sData3={}, plStringView sData4={}, plStringView sData5={}, plStringView sData6={})</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ae543378265bd7df0a30554d85bc0144b">plStringBuilder</a>(const char *szUTF8, plAllocator *pAllocator=plFoundation::GetDefaultAllocator())</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#adca8ee552025274a266b7dbcc4624f43">plStringBuilder</a>(const wchar_t *pWChar, plAllocator *pAllocator=plFoundation::GetDefaultAllocator())</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a2d91cf295edf9eaef57d01a27bfc36b2">plStringBuilder</a>(plStringView rhs, plAllocator *pAllocator=plFoundation::GetDefaultAllocator())</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a3f8180f9332f6e267dee6be0ccceff75">Prepend</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#acafaa82e8b5b9f851fe20f18189d87e4">Prepend</a>(const wchar_t *pData1, const wchar_t *pData2=nullptr, const wchar_t *pData3=nullptr, const wchar_t *pData4=nullptr, const wchar_t *pData5=nullptr, const wchar_t *pData6=nullptr)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#afec82bb0cb5fc33c440df3879f45d74a">Prepend</a>(plStringView sData1, plStringView sData2={}, plStringView sData3={}, plStringView sData4={}, plStringView sData5={}, plStringView sData6={})</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a1df0d19ea812c491cbadf0e29da8e306">PrependFormat</a>(const plFormatString &amp;string)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a6ab837704e6392c4e48250d9ed864f1f">PrependFormat</a>(const char *szFormat, ARGS &amp;&amp;... args)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a093ec8453732d50213fe4b43536e8f44">ReadAll</a>(plStreamReader &amp;inout_stream)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#aaa3ea6e5ace739bf2ac26ac6c3a67251">Remove</a>(const char *szRemoveFromPos, const char *szRemoveToPos)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a72f52c384b8d47e3bda6d717c11015a7">RemoveFileExtension</a>(bool bFullExtension=false)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a9cee1528da1a0da4195752ddb77aff56">ReplaceAll</a>(plStringView sSearchFor, plStringView sReplacement)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a2736338fbd84578af6c514aa1cec9a3e">ReplaceAll_NoCase</a>(plStringView sSearchFor, plStringView sReplacement)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a3147f08a93e2f4086551604f7c8539ea">ReplaceFirst</a>(plStringView sSearchFor, plStringView sReplacement, const char *szStartSearchAt=nullptr)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ab93e6cfd61ebb0f7a0008d71c1d8a3ae">ReplaceFirst_NoCase</a>(plStringView sSearchFor, plStringView sReplacement, const char *szStartSearchAt=nullptr)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#adc79c2a2dd2ae2f6e0d56943bcd18c12">ReplaceLast</a>(plStringView sSearchFor, plStringView sReplacement, const char *szStartSearchAt=nullptr)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a44de85d6cc4bc4caa1df575a80d708e1">ReplaceLast_NoCase</a>(plStringView sSearchFor, plStringView sReplacement, const char *szStartSearchAt=nullptr)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a71ba6bfb35650f02bc06938b8a7d2572">ReplaceSubString</a>(const char *szStartPos, const char *szEndPos, plStringView sReplaceWith)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#aaab02db9ff5e2825f4bacf6afb0317aa">ReplaceWholeWord</a>(const char *szSearchFor, plStringView sReplaceWith, plStringUtils::PL_CHARACTER_FILTER isDelimiterCB)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#aefd68cb6b42abe44bddd70fb7c5588b4">ReplaceWholeWord_NoCase</a>(const char *szSearchFor, plStringView sReplaceWith, plStringUtils::PL_CHARACTER_FILTER isDelimiterCB)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a2b9fb7e16520dd0516f4ecfbef1e7d94">ReplaceWholeWordAll</a>(const char *szSearchFor, plStringView sReplaceWith, plStringUtils::PL_CHARACTER_FILTER isDelimiterCB)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a7b1480e584a619d41c077b1526631208">ReplaceWholeWordAll_NoCase</a>(const char *szSearchFor, plStringView sReplaceWith, plStringUtils::PL_CHARACTER_FILTER isDelimiterCB)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a9b1c07522ac75c77af1198eb6644ffd5">Reserve</a>(plUInt32 uiNumElements)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a4c6ccfde7c01b833dc54892236eec2c9">Set</a>(plStringView sData1)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a9d51d99d2b166d1f1e1e7a7fb7892083">Set</a>(plStringView sData1, plStringView sData2)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#aa0d82b47e395243eb6d0b2b0a67aa8ce">Set</a>(plStringView sData1, plStringView sData2, plStringView sData3)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ab9dc4746c1ce35f289609339c37a4737">Set</a>(plStringView sData1, plStringView sData2, plStringView sData3, plStringView sData4)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ac32db9a8591c5fc794ed6e21bd58ed88">Set</a>(plStringView sData1, plStringView sData2, plStringView sData3, plStringView sData4, plStringView sData5, plStringView sData6={})</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ac3ef7eac1cbf7ccad0d79ab027e74924">SetFormat</a>(const plFormatString &amp;string)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a93dbafe891d836256a1599be35a1c223">SetFormat</a>(const char *szFormat, ARGS &amp;&amp;... args)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#afc1f50da2e91f9f1285b8815f7573f9a">SetPath</a>(plStringView sData1, plStringView sData2, plStringView sData3={}, plStringView sData4={})</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a423869aeb4cfe798a57a734df49ba305">SetPrintf</a>(const char *szUtf8Format,...)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ad8c9cd72533c566c7b19189fca9a7787">SetPrintfArgs</a>(const char *szUtf8Format, va_list szArgs)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#acfe72065b5944de7c013182a168ccf72">SetSubString_CharacterCount</a>(const char *pStart, plUInt32 uiCharacterCount)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a235f8c41bd7c32149080db4102551000">SetSubString_ElementCount</a>(const char *pStart, plUInt32 uiElementCount)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a091d7cfea8183264ae837d423a0a8bd9">SetSubString_FromTo</a>(const char *pStart, const char *pEnd)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a398a0068a14d2405481c53194fc50d78">Shrink</a>(plUInt32 uiShrinkCharsFront, plUInt32 uiShrinkCharsBack)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a9a9997394d0cbb4121601246cfd910c6">Split</a>(bool bReturnEmptyStrings, Container &amp;ref_output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a6ae403b4b3e534b94edd50edd888b4f0">StartsWith</a>(plStringView sStartsWith) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm#a4af994336831ee8ce7ea1aa392388ed6">StartsWith_NoCase</a>(plStringView sStartsWith) const</td><td class="entry"><a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#af67042b86e2f2977581fa6f41f738059">ToLower</a>()</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a3d35e2061079fb363565cd0a3ac59661">ToUpper</a>()</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a8fde895a0b1d77c44fc852ec44f1fee1">Trim</a>(const char *szTrimChars=&quot; \f\n\r\t\v&quot;)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a6abd9ed95752cccfb57c14e0ac84f343">Trim</a>(const char *szTrimCharsStart, const char *szTrimCharsEnd)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a05551cc692087cf7a626b826aab8864b">TrimLeft</a>(const char *szTrimChars=&quot; \f\n\r\t\v&quot;)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a76eba648c34057b63bc7e032c3ec31f7">TrimRight</a>(const char *szTrimChars=&quot; \f\n\r\t\v&quot;)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#ae7f7221e891ffee03bbb41e5743d9d6b">TrimWordEnd</a>(plStringView sWord)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm#a0604d89ea5198ce65eb54ab86f353882">TrimWordStart</a>(plStringView sWord)</td><td class="entry"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
