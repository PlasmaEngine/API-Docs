<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Foundation/Containers/Implementation/StaticRingBuffer_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dd/dcb/_static_ring_buffer__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">StaticRingBuffer_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00004" data-start="{" data-end="}">
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#aef4429eccf2cce81b78377c51b7d4621">    4</a></span><a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#aef4429eccf2cce81b78377c51b7d4621">plStaticRingBuffer&lt;T, C&gt;::plStaticRingBuffer</a>()</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>{</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>  m_pElements = GetStaticArray();</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  m_uiFirstElement = 0;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  m_uiCount = 0;</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>}</div>
</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#aef4429eccf2cce81b78377c51b7d4621">plStaticRingBuffer&lt;T, C&gt;::plStaticRingBuffer</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df2/classpl_static_ring_buffer.htm">plStaticRingBuffer&lt;T, C&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  m_pElements = GetStaticArray();</div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="}">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#aef4429eccf2cce81b78377c51b7d4621">   15</a></span>  m_uiFirstElement = 0;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  m_uiCount = 0;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>}</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="foldopen" id="foldopen00021" data-start="{" data-end="}">
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#afb51be41f2577e62dfa75f75ca9e3135">   21</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00022" data-start="{" data-end="}">
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#afb51be41f2577e62dfa75f75ca9e3135">   22</a></span><a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#afb51be41f2577e62dfa75f75ca9e3135">plStaticRingBuffer&lt;T, C&gt;::~plStaticRingBuffer</a>()</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>{</div>
<div class="foldopen" id="foldopen00024" data-start="{" data-end="}">
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a8e718069ad93899130502cacf1d0617b">   24</a></span>  Clear();</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>}</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="foldopen" id="foldopen00027" data-start="{" data-end="}">
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#adf08e279738c803a6e7dbe920a3b154b">   27</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00028" data-start="{" data-end="}">
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a8e718069ad93899130502cacf1d0617b">   28</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a8e718069ad93899130502cacf1d0617b">plStaticRingBuffer&lt;T, C&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df2/classpl_static_ring_buffer.htm">plStaticRingBuffer&lt;T, C&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>{</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  Clear();</div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a1f1f022d59f3e23089a1247aa941b274">   31</a></span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keywordflow">for</span> (plUInt32 i = 0; i &lt; rhs.<a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a12d120872e94919a5b5ebc024a2bc494">GetCount</a>(); ++i)</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    PushBack(rhs[i]);</div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="}">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#ae3d13d6281d47bf80bd2fa7293bae944">   34</a></span>}</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00037" data-start="{" data-end="}">
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#adf08e279738c803a6e7dbe920a3b154b">   37</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#adf08e279738c803a6e7dbe920a3b154b">plStaticRingBuffer&lt;T, C&gt;::operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df2/classpl_static_ring_buffer.htm">plStaticRingBuffer&lt;T, C&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  <span class="keywordflow">if</span> (GetCount() != rhs.<a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a12d120872e94919a5b5ebc024a2bc494">GetCount</a>())</div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="}">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a273f13ee106df6bf162ddc490cf007e7">   40</a></span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keywordflow">for</span> (plUInt32 i = 0; i &lt; m_uiCount; ++i)</div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="}">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a25c390ed97f430b0057000fcb9cb3d8e">   43</a></span>  {</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keywordflow">if</span> ((*<span class="keyword">this</span>)[i] != rhs[i])</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a1f51303741a5d40a518d3056e11d806b">   46</a></span>  }</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="foldopen" id="foldopen00049" data-start="{" data-end="}">
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#aed6a605192b9a68ca451276e7bbd0dc1">   49</a></span>}</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00052" data-start="{" data-end="}">
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#aac0b6ef30a0f6fa1c8be413ee9b10925">   52</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a1f1f022d59f3e23089a1247aa941b274">plStaticRingBuffer&lt;T, C&gt;::PushBack</a>(<span class="keyword">const</span> T&amp; element)</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>{</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  PL_ASSERT_DEV(CanAppend(), <span class="stringliteral">&quot;The ring-buffer is full, no elements can be appended before removing one.&quot;</span>);</div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a88953f3c1eff23c0c18d6116a460aa1b">   55</a></span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keyword">const</span> plUInt32 uiLastElement = (m_uiFirstElement + m_uiCount) % C;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="foldopen" id="foldopen00058" data-start="{" data-end="}">
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a12d120872e94919a5b5ebc024a2bc494">   58</a></span>  <a class="code hl_function" href="../../df/d4d/classpl_memory_utils.htm#a07b6ac85720d94f8568760ac12f786e5">plMemoryUtils::CopyConstruct</a>(&amp;m_pElements[uiLastElement], element, 1);</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  ++m_uiCount;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>}</div>
<div class="foldopen" id="foldopen00061" data-start="{" data-end="}">
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#abb4d9366fd805ab3916bef186854452a">   61</a></span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00063" data-start="{" data-end="}">
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#ae3d13d6281d47bf80bd2fa7293bae944">   63</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a1f1f022d59f3e23089a1247aa941b274">plStaticRingBuffer&lt;T, C&gt;::PushBack</a>(T&amp;&amp; element)</div>
<div class="foldopen" id="foldopen00064" data-start="{" data-end="}">
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a25785d064549e9fbe7bc69f9abc4a32d">   64</a></span>{</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  PL_ASSERT_DEV(CanAppend(), <span class="stringliteral">&quot;The ring-buffer is full, no elements can be appended before removing one.&quot;</span>);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="}">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a0c8bbe1669b832a83d38bce0c0fb285a">   67</a></span>  <span class="keyword">const</span> plUInt32 uiLastElement = (m_uiFirstElement + m_uiCount) % C;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <a class="code hl_function" href="../../df/d4d/classpl_memory_utils.htm#abec7a10f06a461b6d32c183b6347cc80">plMemoryUtils::MoveConstruct</a>(&amp;m_pElements[uiLastElement], std::move(element));</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  ++m_uiCount;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>}</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00074" data-start="{" data-end="}">
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a94fbab38091f7cdc1b607c92e74d142c">   74</a></span>T&amp; <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a94fbab38091f7cdc1b607c92e74d142c">plStaticRingBuffer&lt;T, C&gt;::PeekBack</a>()</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>{</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  PL_ASSERT_DEV(!IsEmpty(), <span class="stringliteral">&quot;The ring-buffer is empty, cannot peek at the last element.&quot;</span>);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keyword">const</span> plUInt32 uiLastElement = (m_uiFirstElement + m_uiCount - 1) % C;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="keywordflow">return</span> m_pElements[uiLastElement];</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>}</div>
</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00083" data-start="{" data-end="}">
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a273f13ee106df6bf162ddc490cf007e7">   83</a></span><span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a94fbab38091f7cdc1b607c92e74d142c">plStaticRingBuffer&lt;T, C&gt;::PeekBack</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  PL_ASSERT_DEV(!IsEmpty(), <span class="stringliteral">&quot;The ring-buffer is empty, cannot peek at the last element.&quot;</span>);</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keyword">const</span> plUInt32 uiLastElement = (m_uiFirstElement + m_uiCount - 1) % C;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keywordflow">return</span> m_pElements[uiLastElement];</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>}</div>
</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00092" data-start="{" data-end="}">
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a25c390ed97f430b0057000fcb9cb3d8e">   92</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a25c390ed97f430b0057000fcb9cb3d8e">plStaticRingBuffer&lt;T, C&gt;::PopFront</a>(plUInt32 uiElements)</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>{</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  PL_ASSERT_DEV(m_uiCount &gt;= uiElements, <span class="stringliteral">&quot;The ring-buffer contains {0} elements, cannot remove {1} elements from it.&quot;</span>, m_uiCount, uiElements);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keywordflow">while</span> (uiElements &gt; 0)</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  {</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    <a class="code hl_function" href="../../df/d4d/classpl_memory_utils.htm#afe524b6781f69e2fd4eceb18f2a27640">plMemoryUtils::Destruct</a>(&amp;m_pElements[m_uiFirstElement], 1);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    ++m_uiFirstElement;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    m_uiFirstElement %= C;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    --m_uiCount;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    --uiElements;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>}</div>
</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00108" data-start="{" data-end="}">
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a1f51303741a5d40a518d3056e11d806b">  108</a></span>PL_FORCE_INLINE <span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a1f51303741a5d40a518d3056e11d806b">plStaticRingBuffer&lt;T, C&gt;::PeekFront</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  PL_ASSERT_DEV(!IsEmpty(), <span class="stringliteral">&quot;The ring-buffer is empty, cannot peek at the first element.&quot;</span>);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="keywordflow">return</span> m_pElements[m_uiFirstElement];</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>}</div>
</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00116" data-start="{" data-end="}">
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#aed6a605192b9a68ca451276e7bbd0dc1">  116</a></span>PL_FORCE_INLINE T&amp; <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a1f51303741a5d40a518d3056e11d806b">plStaticRingBuffer&lt;T, C&gt;::PeekFront</a>()</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>{</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  PL_ASSERT_DEV(!IsEmpty(), <span class="stringliteral">&quot;The ring-buffer is empty, cannot peek at the first element.&quot;</span>);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  <span class="keywordflow">return</span> m_pElements[m_uiFirstElement];</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>}</div>
</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00124" data-start="{" data-end="}">
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#aac0b6ef30a0f6fa1c8be413ee9b10925">  124</a></span>PL_FORCE_INLINE <span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#aac0b6ef30a0f6fa1c8be413ee9b10925">plStaticRingBuffer&lt;T, C&gt;::operator[]</a>(plUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  PL_ASSERT_DEBUG(uiIndex &lt; m_uiCount, <span class="stringliteral">&quot;The ring-buffer only has {0} elements, cannot access element {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="keywordflow">return</span> m_pElements[(m_uiFirstElement + uiIndex) % C];</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>}</div>
</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00132" data-start="{" data-end="}">
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a88953f3c1eff23c0c18d6116a460aa1b">  132</a></span>PL_FORCE_INLINE T&amp; <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#aac0b6ef30a0f6fa1c8be413ee9b10925">plStaticRingBuffer&lt;T, C&gt;::operator[]</a>(plUInt32 uiIndex)</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>{</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  PL_ASSERT_DEBUG(uiIndex &lt; m_uiCount, <span class="stringliteral">&quot;The ring-buffer only has {0} elements, cannot access element {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keywordflow">return</span> m_pElements[(m_uiFirstElement + uiIndex) % C];</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>}</div>
</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00140" data-start="{" data-end="}">
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a12d120872e94919a5b5ebc024a2bc494">  140</a></span>PL_ALWAYS_INLINE plUInt32 <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a12d120872e94919a5b5ebc024a2bc494">plStaticRingBuffer&lt;T, C&gt;::GetCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keywordflow">return</span> m_uiCount;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>}</div>
</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00146" data-start="{" data-end="}">
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#abb4d9366fd805ab3916bef186854452a">  146</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#abb4d9366fd805ab3916bef186854452a">plStaticRingBuffer&lt;T, C&gt;::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keywordflow">return</span> m_uiCount == 0;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>}</div>
</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00152" data-start="{" data-end="}">
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a25785d064549e9fbe7bc69f9abc4a32d">  152</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a25785d064549e9fbe7bc69f9abc4a32d">plStaticRingBuffer&lt;T, C&gt;::CanAppend</a>(plUInt32 uiElements)</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>{</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keywordflow">return</span> (m_uiCount + uiElements) &lt;= C;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>}</div>
</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="foldopen" id="foldopen00158" data-start="{" data-end="}">
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="../../da/df2/classpl_static_ring_buffer.htm#a0c8bbe1669b832a83d38bce0c0fb285a">  158</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df2/classpl_static_ring_buffer.htm#a0c8bbe1669b832a83d38bce0c0fb285a">plStaticRingBuffer&lt;T, C&gt;::Clear</a>()</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>{</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keywordflow">while</span> (!IsEmpty())</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    PopFront();</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>}</div>
</div>
</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, plUInt32 C&gt;</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>PL_ALWAYS_INLINE T* <a class="code hl_class" href="../../da/df2/classpl_static_ring_buffer.htm">plStaticRingBuffer&lt;T, C&gt;::GetStaticArray</a>()</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>{</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_Data);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>}</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="ttc" id="aclasspl_memory_utils_htm_a07b6ac85720d94f8568760ac12f786e5"><div class="ttname"><a href="../../df/d4d/classpl_memory_utils.htm#a07b6ac85720d94f8568760ac12f786e5">plMemoryUtils::CopyConstruct</a></div><div class="ttdeci">static void CopyConstruct(Destination *pDestination, const Source &amp;copy, size_t uiCount=1)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination, by creating uiCount copies of c...</div></div>
<div class="ttc" id="aclasspl_memory_utils_htm_abec7a10f06a461b6d32c183b6347cc80"><div class="ttname"><a href="../../df/d4d/classpl_memory_utils.htm#abec7a10f06a461b6d32c183b6347cc80">plMemoryUtils::MoveConstruct</a></div><div class="ttdeci">static void MoveConstruct(T *pDestination, T &amp;&amp;source)</div><div class="ttdoc">Constructs an object of type T in a raw buffer at pDestination, by using move construction from sourc...</div></div>
<div class="ttc" id="aclasspl_memory_utils_htm_afe524b6781f69e2fd4eceb18f2a27640"><div class="ttname"><a href="../../df/d4d/classpl_memory_utils.htm#afe524b6781f69e2fd4eceb18f2a27640">plMemoryUtils::Destruct</a></div><div class="ttdeci">static void Destruct(T *pDestination, size_t uiCount=1)</div><div class="ttdoc">Destructs uiCount objects of type T at pDestination.</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm">plStaticRingBuffer</a></div><div class="ttdoc">A ring-buffer container that will use a static array of a given capacity to cycle through elements.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer.h:10</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_a0c8bbe1669b832a83d38bce0c0fb285a"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#a0c8bbe1669b832a83d38bce0c0fb285a">plStaticRingBuffer::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destructs all elements in the ring-buffer.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:158</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_a12d120872e94919a5b5ebc024a2bc494"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#a12d120872e94919a5b5ebc024a2bc494">plStaticRingBuffer::GetCount</a></div><div class="ttdeci">plUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements that are currently in the ring-buffer.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:140</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_a1f1f022d59f3e23089a1247aa941b274"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#a1f1f022d59f3e23089a1247aa941b274">plStaticRingBuffer::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;element)</div><div class="ttdoc">Appends an element at the end of the ring-buffer. Asserts that CanAppend() is true.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:52</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_a1f51303741a5d40a518d3056e11d806b"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#a1f51303741a5d40a518d3056e11d806b">plStaticRingBuffer::PeekFront</a></div><div class="ttdeci">const T &amp; PeekFront() const</div><div class="ttdoc">Accesses the oldest element in the ring-buffer.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:108</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_a25785d064549e9fbe7bc69f9abc4a32d"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#a25785d064549e9fbe7bc69f9abc4a32d">plStaticRingBuffer::CanAppend</a></div><div class="ttdeci">bool CanAppend(plUInt32 uiElements=1)</div><div class="ttdoc">Returns true, if the ring-buffer can store at least uiElements additional elements.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:152</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_a25c390ed97f430b0057000fcb9cb3d8e"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#a25c390ed97f430b0057000fcb9cb3d8e">plStaticRingBuffer::PopFront</a></div><div class="ttdeci">void PopFront(plUInt32 uiElements=1)</div><div class="ttdoc">Removes the oldest element from the ring-buffer.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:92</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_a8e718069ad93899130502cacf1d0617b"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#a8e718069ad93899130502cacf1d0617b">plStaticRingBuffer::operator=</a></div><div class="ttdeci">void operator=(const plStaticRingBuffer&lt; T, Capacity &gt; &amp;rhs)</div><div class="ttdoc">Copies the content from rhs into this ring-buffer.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:28</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_a94fbab38091f7cdc1b607c92e74d142c"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#a94fbab38091f7cdc1b607c92e74d142c">plStaticRingBuffer::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Accesses the latest element in the ring-buffer.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:74</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_aac0b6ef30a0f6fa1c8be413ee9b10925"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#aac0b6ef30a0f6fa1c8be413ee9b10925">plStaticRingBuffer::operator[]</a></div><div class="ttdeci">const T &amp; operator[](plUInt32 uiIndex) const</div><div class="ttdoc">Accesses the n-th element in the ring-buffer.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:124</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_abb4d9366fd805ab3916bef186854452a"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#abb4d9366fd805ab3916bef186854452a">plStaticRingBuffer::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true if the ring-buffer currently contains no elements.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:146</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_adf08e279738c803a6e7dbe920a3b154b"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#adf08e279738c803a6e7dbe920a3b154b">plStaticRingBuffer::operator==</a></div><div class="ttdeci">bool operator==(const plStaticRingBuffer&lt; T, Capacity &gt; &amp;rhs) const</div><div class="ttdoc">Compares two ring-buffers for equality.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:37</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_aef4429eccf2cce81b78377c51b7d4621"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#aef4429eccf2cce81b78377c51b7d4621">plStaticRingBuffer::plStaticRingBuffer</a></div><div class="ttdeci">plStaticRingBuffer()</div><div class="ttdoc">Constructs an empty ring-buffer.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:4</div></div>
<div class="ttc" id="aclasspl_static_ring_buffer_htm_afb51be41f2577e62dfa75f75ca9e3135"><div class="ttname"><a href="../../da/df2/classpl_static_ring_buffer.htm#afb51be41f2577e62dfa75f75ca9e3135">plStaticRingBuffer::~plStaticRingBuffer</a></div><div class="ttdeci">~plStaticRingBuffer()</div><div class="ttdoc">Destructs all remaining elements.</div><div class="ttdef"><b>Definition</b> StaticRingBuffer_inl.h:22</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_3416883c1320ec68c4d0694befd114fc.htm">Containers</a></li><li class="navelem"><a class="el" href="../../dir_f032078016c44376fe34ead7fd8ff37e.htm">Implementation</a></li><li class="navelem"><b>StaticRingBuffer_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
