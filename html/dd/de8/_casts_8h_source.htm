<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/Reflection/Implementation/Casts.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dd/de8/_casts_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Casts.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/DynamicRTTI.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>PL_WARNING_PUSH()</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>PL_WARNING_DISABLE_CLANG(&quot;-Wunused-local-typedef&quot;)</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>PL_WARNING_DISABLE_GCC(&quot;-Wunused-local-typedefs&quot;)</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>template &lt;typename T&gt;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>PL_ALWAYS_INLINE T plStaticCast(<a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a>* pObject)</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keyword">using </span>NonPointerT = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../da/d5d/structpl_type_traits.htm#adcd5f9acc6b32886b67ee7975cd69738">plTypeTraits&lt;T&gt;::NonPointerType</a>;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  PL_ASSERT_DEV(pObject == <span class="keyword">nullptr</span> || pObject-&gt;IsInstanceOf&lt;NonPointerT&gt;(), <span class="stringliteral">&quot;Invalid static cast: Object of type &#39;{0}&#39; is not an instance of &#39;{1}&#39;&quot;</span>,</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    pObject-&gt;GetDynamicRTTI()-&gt;GetTypeName(), plGetStaticRTTI&lt;NonPointerT&gt;()-&gt;GetTypeName());</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(pObject);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>}</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>PL_ALWAYS_INLINE T plStaticCast(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a>* pObject)</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>{</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keyword">using </span>NonPointerT = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../da/d5d/structpl_type_traits.htm#a990fbc19997314968357b37c20fb8ef2">plTypeTraits&lt;T&gt;::NonConstReferencePointerType</a>;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  PL_ASSERT_DEV(pObject == <span class="keyword">nullptr</span> || pObject-&gt;<a class="code hl_function" href="../../d4/d91/classpl_reflected_class.htm#aa092c6d843ea7030165419c3c19dfe46">IsInstanceOf</a>&lt;NonPointerT&gt;(), <span class="stringliteral">&quot;Invalid static cast: Object of type &#39;{0}&#39; is not an instance of &#39;{1}&#39;&quot;</span>,</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    pObject-&gt;GetDynamicRTTI()-&gt;<a class="code hl_function" href="../../d8/dec/classpl_r_t_t_i.htm#a7a906257607936b6ebbb0849fb1caa5c">GetTypeName</a>(), plGetStaticRTTI&lt;NonPointerT&gt;()-&gt;GetTypeName());</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(pObject);</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>}</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>PL_ALWAYS_INLINE T plStaticCast(<a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a>&amp; in_object)</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>{</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keyword">using </span>NonReferenceT = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../da/d5d/structpl_type_traits.htm#ae6112aec8a2322dcbd1833d833ac8aef">plTypeTraits&lt;T&gt;::NonReferenceType</a>;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  PL_ASSERT_DEV(in_object.<a class="code hl_function" href="../../d4/d91/classpl_reflected_class.htm#aa092c6d843ea7030165419c3c19dfe46">IsInstanceOf</a>&lt;NonReferenceT&gt;(), <span class="stringliteral">&quot;Invalid static cast: Object of type &#39;{0}&#39; is not an instance of &#39;{1}&#39;&quot;</span>,</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    in_object.GetDynamicRTTI()-&gt;<a class="code hl_function" href="../../d8/dec/classpl_r_t_t_i.htm#a7a906257607936b6ebbb0849fb1caa5c">GetTypeName</a>(), plGetStaticRTTI&lt;NonReferenceT&gt;()-&gt;GetTypeName());</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(in_object);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>}</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>PL_ALWAYS_INLINE T plStaticCast(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a>&amp; <span class="keywordtype">object</span>)</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>{</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keyword">using </span>NonReferenceT = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../da/d5d/structpl_type_traits.htm#a5d21aa226bb680dfddc12bfcd6caaa84">plTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  PL_ASSERT_DEV(<span class="keywordtype">object</span>.IsInstanceOf&lt;NonReferenceT&gt;(), <span class="stringliteral">&quot;Invalid static cast: Object of type &#39;{0}&#39; is not an instance of &#39;{1}&#39;&quot;</span>,</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    <span class="keywordtype">object</span>.GetDynamicRTTI()-&gt;GetTypeName(), plGetStaticRTTI&lt;NonReferenceT&gt;()-&gt;GetTypeName());</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(object);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>}</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>PL_ALWAYS_INLINE T plDynamicCast(<a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a>* pObject)</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>{</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keywordflow">if</span> (pObject)</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <span class="keyword">using </span>NonPointerT = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../da/d5d/structpl_type_traits.htm#adcd5f9acc6b32886b67ee7975cd69738">plTypeTraits&lt;T&gt;::NonPointerType</a>;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <span class="keywordflow">if</span> (pObject-&gt;<a class="code hl_function" href="../../d4/d91/classpl_reflected_class.htm#aa092c6d843ea7030165419c3c19dfe46">IsInstanceOf</a>&lt;NonPointerT&gt;())</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(pObject);</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    }</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  }</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>}</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>PL_ALWAYS_INLINE T plDynamicCast(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a>* pObject)</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>{</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keywordflow">if</span> (pObject)</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  {</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <span class="keyword">using </span>NonPointerT = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../da/d5d/structpl_type_traits.htm#a990fbc19997314968357b37c20fb8ef2">plTypeTraits&lt;T&gt;::NonConstReferencePointerType</a>;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    <span class="keywordflow">if</span> (pObject-&gt;<a class="code hl_function" href="../../d4/d91/classpl_reflected_class.htm#aa092c6d843ea7030165419c3c19dfe46">IsInstanceOf</a>&lt;NonPointerT&gt;())</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    {</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>T<span class="keyword">&gt;</span>(pObject);</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    }</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  }</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>}</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>PL_WARNING_POP()</div>
<div class="ttc" id="aclasspl_r_t_t_i_htm_a7a906257607936b6ebbb0849fb1caa5c"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm#a7a906257607936b6ebbb0849fb1caa5c">plRTTI::GetTypeName</a></div><div class="ttdeci">PL_ALWAYS_INLINE plStringView GetTypeName() const</div><div class="ttdoc">Returns the name of this type.</div><div class="ttdef"><b>Definition</b> RTTI.h:48</div></div>
<div class="ttc" id="aclasspl_reflected_class_htm"><div class="ttname"><a href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></div><div class="ttdoc">All classes that should be dynamically reflectable, need to be derived from this base class.</div><div class="ttdef"><b>Definition</b> DynamicRTTI.h:86</div></div>
<div class="ttc" id="aclasspl_reflected_class_htm_aa092c6d843ea7030165419c3c19dfe46"><div class="ttname"><a href="../../d4/d91/classpl_reflected_class.htm#aa092c6d843ea7030165419c3c19dfe46">plReflectedClass::IsInstanceOf</a></div><div class="ttdeci">bool IsInstanceOf(const plRTTI *pType) const</div><div class="ttdoc">Returns whether the type of this instance is of the given type or derived from it.</div><div class="ttdef"><b>Definition</b> DynamicRTTI.cpp:6</div></div>
<div class="ttc" id="astructpl_type_traits_htm_a5d21aa226bb680dfddc12bfcd6caaa84"><div class="ttname"><a href="../../da/d5d/structpl_type_traits.htm#a5d21aa226bb680dfddc12bfcd6caaa84">plTypeTraits::NonConstReferenceType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonConstReferenceType</div><div class="ttdoc">removes reference and const qualifier</div><div class="ttdef"><b>Definition</b> TypeTraits.h:218</div></div>
<div class="ttc" id="astructpl_type_traits_htm_a990fbc19997314968357b37c20fb8ef2"><div class="ttname"><a href="../../da/d5d/structpl_type_traits.htm#a990fbc19997314968357b37c20fb8ef2">plTypeTraits::NonConstReferencePointerType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; typename std::remove_pointer&lt; T &gt;::type &gt;::type &gt;::type NonConstReferencePointerType</div><div class="ttdoc">removes reference, const and pointer qualifier Note that this removes the const and reference of the ...</div><div class="ttdef"><b>Definition</b> TypeTraits.h:225</div></div>
<div class="ttc" id="astructpl_type_traits_htm_adcd5f9acc6b32886b67ee7975cd69738"><div class="ttname"><a href="../../da/d5d/structpl_type_traits.htm#adcd5f9acc6b32886b67ee7975cd69738">plTypeTraits::NonPointerType</a></div><div class="ttdeci">typename std::remove_pointer&lt; T &gt;::type NonPointerType</div><div class="ttdoc">removes pointer</div><div class="ttdef"><b>Definition</b> TypeTraits.h:215</div></div>
<div class="ttc" id="astructpl_type_traits_htm_ae6112aec8a2322dcbd1833d833ac8aef"><div class="ttname"><a href="../../da/d5d/structpl_type_traits.htm#ae6112aec8a2322dcbd1833d833ac8aef">plTypeTraits::NonReferenceType</a></div><div class="ttdeci">typename std::remove_reference&lt; T &gt;::type NonReferenceType</div><div class="ttdoc">removes reference</div><div class="ttdef"><b>Definition</b> TypeTraits.h:212</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_03dd0ffe19aabd3d1cd0d82a91256ab1.htm">Reflection</a></li><li class="navelem"><a class="el" href="../../dir_e37e67d8810cb9249b77d55deb37c5cb.htm">Implementation</a></li><li class="navelem"><b>Casts.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
