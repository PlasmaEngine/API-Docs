<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plRenderPipelinePass Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d8/da4/classpl_render_pipeline_pass.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d9/d5f/classpl_render_pipeline_pass-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plRenderPipelinePass Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for plRenderPipelinePass:</div>
<div class="dyncontent">
<div class="center"><img src="../../d3/d20/classpl_render_pipeline_pass__inherit__graph.png" border="0" usemap="#apl_render_pipeline_pass_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_render_pipeline_pass_inherit__map" id="apl_render_pipeline_pass_inherit__map">
<area shape="rect" title=" " alt="" coords="493,588,642,615"/>
<area shape="rect" href="../../d4/d27/classpl_a_o_pass.htm" title=" " alt="" coords="745,5,825,32"/>
<area shape="poly" title=" " alt="" coords="568,573,580,458,603,299,619,218,638,144,661,84,688,42,714,25,743,18,745,23,716,30,692,46,666,86,644,146,624,219,608,300,586,459,574,573"/>
<area shape="rect" href="../../da/dab/classpl_antialiasing_pass.htm" title=" " alt="" coords="721,56,849,83"/>
<area shape="poly" title=" " alt="" coords="569,572,583,467,607,323,623,250,642,184,663,130,688,93,703,81,719,74,721,79,705,86,692,96,668,133,647,186,628,252,612,324,588,467,574,573"/>
<area shape="rect" href="../../df/dfc/classpl_bloom_pass.htm" title=" " alt="" coords="736,107,834,133"/>
<area shape="poly" title=" " alt="" coords="570,572,585,476,610,348,626,283,645,225,665,176,688,143,710,129,734,121,736,126,712,133,692,147,670,179,650,226,631,285,615,349,590,477,575,573"/>
<area shape="rect" href="../../d3/dcb/classpl_blur_pass.htm" title="Blurs input and writes it to an output buffer of the same format." alt="" coords="743,157,827,184"/>
<area shape="poly" title=" " alt="" coords="566,572,570,497,586,396,601,341,623,288,651,238,688,194,713,178,741,170,743,176,715,183,691,198,656,241,628,290,607,343,591,397,575,498,571,573"/>
<area shape="rect" href="../../d1/d7b/classpl_copy_texture_pass.htm" title=" " alt="" coords="718,208,852,235"/>
<area shape="poly" title=" " alt="" coords="567,572,574,505,593,417,608,370,629,325,655,282,688,245,716,228,718,233,691,249,659,285,634,327,613,372,598,418,580,506,573,572"/>
<area shape="rect" href="../../d6/d29/classpl_d_o_f_pass.htm" title=" " alt="" coords="741,259,829,285"/>
<area shape="poly" title=" " alt="" coords="569,572,579,514,600,439,615,400,635,362,659,326,688,295,713,280,740,273,741,278,715,285,691,299,663,330,639,365,620,402,605,441,584,515,574,573"/>
<area shape="rect" href="../../d8/d5c/classpl_depth_only_pass.htm" title="A render pass that renders into a depth target only." alt="" coords="724,309,846,336"/>
<area shape="poly" title=" " alt="" coords="572,572,584,523,607,462,641,400,663,371,688,346,704,335,722,328,724,333,707,340,691,350,667,374,645,403,612,464,590,525,577,574"/>
<area shape="rect" href="../../d5/ddc/classpl_forward_render_pass.htm" title="A standard forward render pass that renders into the color target." alt="" coords="711,360,859,387"/>
<area shape="poly" title=" " alt="" coords="575,572,591,533,615,485,647,437,688,397,709,385,711,389,691,401,651,441,619,488,596,535,580,574"/>
<area shape="rect" href="../../d9/dc7/classpl_history_source_pass.htm" title="Allows to access data from a previous frame. Always comes in a pair with a plHistoryTargetPass...." alt="" coords="713,411,856,437"/>
<area shape="poly" title=" " alt="" coords="581,573,623,510,653,476,688,447,712,435,714,440,691,452,657,480,627,513,585,576"/>
<area shape="rect" href="../../d9/df9/classpl_history_target_pass.htm" title="Allows to write data to be accessible in the next frame. See plHistorySourcePass for usage." alt="" coords="716,461,854,488"/>
<area shape="poly" title=" " alt="" coords="590,575,633,535,688,498,716,486,719,491,691,502,637,539,594,579"/>
<area shape="rect" href="../../d1/df2/classpl_l_s_a_o_pass.htm" title=" " alt="" coords="737,512,833,539"/>
<area shape="poly" title=" " alt="" coords="612,579,689,548,736,534,737,539,691,553,614,584"/>
<area shape="rect" href="../../d7/d76/classpl_msaa_resolve_pass.htm" title=" " alt="" coords="716,563,854,589"/>
<area shape="poly" title=" " alt="" coords="656,588,715,581,716,587,657,594"/>
<area shape="rect" href="../../d1/d31/classpl_msaa_upscale_pass.htm" title=" " alt="" coords="715,613,855,640"/>
<area shape="poly" title=" " alt="" coords="657,609,714,616,714,621,657,614"/>
<area shape="rect" href="../../d4/d4f/classpl_picking_render_pass.htm" title=" " alt="" coords="712,664,858,691"/>
<area shape="poly" title=" " alt="" coords="614,619,691,649,728,661,726,666,689,655,612,624"/>
<area shape="rect" href="../../d1/d0b/classpl_reflection_filter_pass.htm" title=" " alt="" coords="711,715,858,741"/>
<area shape="poly" title=" " alt="" coords="594,624,637,663,691,700,719,712,716,717,688,705,633,668,590,628"/>
<area shape="rect" href="../../d7/ddc/classpl_s_s_r_advanced_pass.htm" title=" " alt="" coords="713,765,857,792"/>
<area shape="poly" title=" " alt="" coords="585,627,627,690,657,723,691,751,713,762,711,767,688,756,653,727,623,693,581,630"/>
<area shape="rect" href="../../d7/dd8/classpl_s_s_r_pass.htm" title=" " alt="" coords="741,816,829,843"/>
<area shape="poly" title=" " alt="" coords="580,628,596,668,619,715,651,762,691,802,715,815,741,822,740,827,713,820,688,806,647,765,615,717,591,670,575,630"/>
<area shape="rect" href="../../df/dd1/classpl_selection_highlight_pass.htm" title=" " alt="" coords="702,867,868,893"/>
<area shape="poly" title=" " alt="" coords="577,629,590,678,612,738,645,800,667,828,691,853,710,864,707,868,688,857,663,832,641,803,607,740,584,679,572,630"/>
<area shape="rect" href="../../d7/d63/classpl_separated_bilateral_blur_pass.htm" title="Depth aware blur on input and writes it to an output buffer of the same format." alt="" coords="690,917,880,944"/>
<area shape="poly" title=" " alt="" coords="574,630,584,688,605,762,620,800,639,838,663,873,691,903,709,915,706,919,688,907,659,876,635,841,615,803,600,764,579,689,569,631"/>
<area shape="rect" href="../../d4/dff/classpl_simple_render_pass.htm" title="A very basic render pass that renders into the color target." alt="" coords="714,968,856,995"/>
<area shape="poly" title=" " alt="" coords="573,630,580,697,598,784,613,831,634,876,659,917,691,954,715,968,712,973,688,958,655,921,629,878,608,832,593,786,574,698,567,631"/>
<area shape="rect" href="../../dd/d38/classpl_source_pass.htm" title=" " alt="" coords="734,1019,836,1045"/>
<area shape="poly" title=" " alt="" coords="571,630,575,705,591,806,607,860,628,913,656,962,691,1005,711,1018,734,1026,733,1031,709,1023,688,1009,651,965,623,915,601,862,586,807,570,706,566,630"/>
<area shape="rect" href="../../de/d1d/classpl_stereo_test_pass.htm" title=" " alt="" coords="723,1069,847,1096"/>
<area shape="poly" title=" " alt="" coords="575,630,590,726,615,854,631,918,650,976,670,1024,692,1055,706,1066,723,1073,721,1078,703,1071,688,1059,665,1026,645,978,626,919,610,855,585,727,570,630"/>
<area shape="rect" href="../../dc/d28/classpl_target_pass.htm" title=" " alt="" coords="736,1120,834,1147"/>
<area shape="poly" title=" " alt="" coords="574,630,588,735,612,879,628,951,647,1017,668,1070,692,1106,712,1120,736,1128,735,1133,710,1125,688,1110,663,1073,642,1018,623,952,607,880,583,736,569,630"/>
<area shape="rect" href="../../d0/d78/classpl_tonemap_pass.htm" title=" " alt="" coords="728,1171,842,1197"/>
<area shape="poly" title=" " alt="" coords="574,629,586,744,608,903,624,983,644,1057,666,1116,692,1157,708,1169,728,1177,726,1182,706,1174,688,1160,661,1119,638,1058,619,984,603,904,580,745,568,630"/>
<area shape="rect" href="../../df/db6/classpl_render_pipeline_node.htm" title=" " alt="" coords="297,588,445,615"/>
<area shape="poly" title=" " alt="" coords="461,599,493,599,493,604,461,604"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="131,588,249,615"/>
<area shape="poly" title=" " alt="" coords="264,599,296,599,296,604,264,604"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="5,588,83,615"/>
<area shape="poly" title=" " alt="" coords="99,599,130,599,130,604,99,604"/>
<area shape="rect" href="../../d0/d1f/classpl_opaque_forward_render_pass.htm" title="A forward render pass that renders all opaque objects into the color target." alt="" coords="940,309,1133,336"/>
<area shape="poly" title=" " alt="" coords="869,354,966,334,967,339,870,359"/>
<area shape="rect" href="../../d7/dbc/classpl_sky_render_pass.htm" title="A forward render pass that renders all sky objects into the color target." alt="" coords="974,360,1099,387"/>
<area shape="poly" title=" " alt="" coords="875,371,973,371,973,376,875,376"/>
<area shape="rect" href="../../df/dd9/classpl_transparent_forward_render_pass.htm" title="A forward render pass that renders all transparent objects into the color target." alt="" coords="928,411,1144,437"/>
<area shape="poly" title=" " alt="" coords="870,388,967,407,966,413,869,393"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab2ea6a9ffdd7fbc5491adcf4fa5e8f89" id="r_ab2ea6a9ffdd7fbc5491adcf4fa5e8f89"><td class="memItemLeft" align="right" valign="top"><a id="ab2ea6a9ffdd7fbc5491adcf4fa5e8f89" name="ab2ea6a9ffdd7fbc5491adcf4fa5e8f89"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plRenderPipelinePass</b> (const char *szName, bool bIsStereoAware=false)</td></tr>
<tr class="separator:ab2ea6a9ffdd7fbc5491adcf4fa5e8f89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcaba0f06de6de84e30e5d3f6696adf9" id="r_adcaba0f06de6de84e30e5d3f6696adf9"><td class="memItemLeft" align="right" valign="top"><a id="adcaba0f06de6de84e30e5d3f6696adf9" name="adcaba0f06de6de84e30e5d3f6696adf9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetName</b> (const char *szName)</td></tr>
<tr class="memdesc:adcaba0f06de6de84e30e5d3f6696adf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the pass. <br /></td></tr>
<tr class="separator:adcaba0f06de6de84e30e5d3f6696adf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eb1431a92264d223132de89f1bc7247" id="r_a2eb1431a92264d223132de89f1bc7247"><td class="memItemLeft" align="right" valign="top"><a id="a2eb1431a92264d223132de89f1bc7247" name="a2eb1431a92264d223132de89f1bc7247"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="memdesc:a2eb1431a92264d223132de89f1bc7247"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the name of the pass. <br /></td></tr>
<tr class="separator:a2eb1431a92264d223132de89f1bc7247"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf57bfc210229eb46fb1b2e478e933e" id="r_a3bf57bfc210229eb46fb1b2e478e933e"><td class="memItemLeft" align="right" valign="top"><a id="a3bf57bfc210229eb46fb1b2e478e933e" name="a3bf57bfc210229eb46fb1b2e478e933e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsStereoAware</b> () const</td></tr>
<tr class="memdesc:a3bf57bfc210229eb46fb1b2e478e933e"><td class="mdescLeft">&#160;</td><td class="mdescRight">True if the render pipeline pass can handle stereo cameras correctly. <br /></td></tr>
<tr class="separator:a3bf57bfc210229eb46fb1b2e478e933e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef04db804311bd7ad00cb5b42230cef2" id="r_aef04db804311bd7ad00cb5b42230cef2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aef04db804311bd7ad00cb5b42230cef2">GetRenderTargetDescriptions</a> (const <a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> &amp;view, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> *const &gt; inputs, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &gt; outputs)=0</td></tr>
<tr class="memdesc:aef04db804311bd7ad00cb5b42230cef2"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins.  <br /></td></tr>
<tr class="separator:aef04db804311bd7ad00cb5b42230cef2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad327da9e098bd64f650d827e8f255e77" id="r_ad327da9e098bd64f650d827e8f255e77"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/de5/classpl_g_a_l_texture_handle.htm">plGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad327da9e098bd64f650d827e8f255e77">QueryTextureProvider</a> (const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *pPin, const <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &amp;desc)</td></tr>
<tr class="separator:ad327da9e098bd64f650d827e8f255e77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72e182c70f3b83e9ba377ff9bb5178b3" id="r_a72e182c70f3b83e9ba377ff9bb5178b3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a72e182c70f3b83e9ba377ff9bb5178b3">InitRenderPipelinePass</a> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs)</td></tr>
<tr class="memdesc:a72e182c70f3b83e9ba377ff9bb5178b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer.  <br /></td></tr>
<tr class="separator:a72e182c70f3b83e9ba377ff9bb5178b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f066867e0b0ce045317520d7083d8d" id="r_a77f066867e0b0ce045317520d7083d8d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a77f066867e0b0ce045317520d7083d8d">Execute</a> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs)=0</td></tr>
<tr class="memdesc:a77f066867e0b0ce045317520d7083d8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data.  <br /></td></tr>
<tr class="separator:a77f066867e0b0ce045317520d7083d8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a282a6754cefa086cac427fcbba561abb" id="r_a282a6754cefa086cac427fcbba561abb"><td class="memItemLeft" align="right" valign="top"><a id="a282a6754cefa086cac427fcbba561abb" name="a282a6754cefa086cac427fcbba561abb"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ExecuteInactive</b> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs)</td></tr>
<tr class="separator:a282a6754cefa086cac427fcbba561abb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae149ec39db8045806742a934e5adf72b" id="r_ae149ec39db8045806742a934e5adf72b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae149ec39db8045806742a934e5adf72b">ReadBackProperties</a> (<a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *pView)</td></tr>
<tr class="memdesc:ae149ec39db8045806742a934e5adf72b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows for the pass to write data back using plView::SetRenderPassReadBackProperty. E.g. picking results etc.  <br /></td></tr>
<tr class="separator:ae149ec39db8045806742a934e5adf72b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e3ee80a7e02e514cf4eb5cb41fe4311" id="r_a2e3ee80a7e02e514cf4eb5cb41fe4311"><td class="memItemLeft" align="right" valign="top"><a id="a2e3ee80a7e02e514cf4eb5cb41fe4311" name="a2e3ee80a7e02e514cf4eb5cb41fe4311"></a>
virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Serialize</b> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_stream) const</td></tr>
<tr class="separator:a2e3ee80a7e02e514cf4eb5cb41fe4311"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a783ffa6b47bee73e96df22c620ffe6b9" id="r_a783ffa6b47bee73e96df22c620ffe6b9"><td class="memItemLeft" align="right" valign="top"><a id="a783ffa6b47bee73e96df22c620ffe6b9" name="a783ffa6b47bee73e96df22c620ffe6b9"></a>
virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Deserialize</b> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &amp;inout_stream)</td></tr>
<tr class="separator:a783ffa6b47bee73e96df22c620ffe6b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adafff9984ae9b103ebea9e09ad0150fa" id="r_adafff9984ae9b103ebea9e09ad0150fa"><td class="memItemLeft" align="right" valign="top"><a id="adafff9984ae9b103ebea9e09ad0150fa" name="adafff9984ae9b103ebea9e09ad0150fa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RenderDataWithCategory</b> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, <a class="el" href="../../d7/d4c/structpl_render_data_1_1_category.htm">plRenderData::Category</a> category, <a class="el" href="../../dd/d63/classpl_render_data_batch.htm#a6f40beec8fc9f38ae41fdee67974aaec">plRenderDataBatch::Filter</a> filter=<a class="el" href="../../dd/d63/classpl_render_data_batch.htm#a6f40beec8fc9f38ae41fdee67974aaec">plRenderDataBatch::Filter</a>())</td></tr>
<tr class="separator:adafff9984ae9b103ebea9e09ad0150fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09fed82adf3a76148e63b05d63782b19" id="r_a09fed82adf3a76148e63b05d63782b19"><td class="memItemLeft" align="right" valign="top"><a id="a09fed82adf3a76148e63b05d63782b19" name="a09fed82adf3a76148e63b05d63782b19"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d5/d68/classpl_render_pipeline.htm">plRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> ()</td></tr>
<tr class="separator:a09fed82adf3a76148e63b05d63782b19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b8bac1b9fcd90e56174acfb4ab399b0" id="r_a0b8bac1b9fcd90e56174acfb4ab399b0"><td class="memItemLeft" align="right" valign="top"><a id="a0b8bac1b9fcd90e56174acfb4ab399b0" name="a0b8bac1b9fcd90e56174acfb4ab399b0"></a>
PL_ALWAYS_INLINE const <a class="el" href="../../d5/d68/classpl_render_pipeline.htm">plRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> () const</td></tr>
<tr class="separator:a0b8bac1b9fcd90e56174acfb4ab399b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_render_pipeline_node"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_render_pipeline_node')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a></td></tr>
<tr class="memitem:af4e0ff1f11b514ad62a39778cd841202 inherit pub_methods_classpl_render_pipeline_node" id="r_af4e0ff1f11b514ad62a39778cd841202"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InitializePins</b> ()</td></tr>
<tr class="separator:af4e0ff1f11b514ad62a39778cd841202 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4e37109bde78bda2e197351c301979 inherit pub_methods_classpl_render_pipeline_node" id="r_aed4e37109bde78bda2e197351c301979"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinName</b> (const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *pPin) const</td></tr>
<tr class="separator:aed4e37109bde78bda2e197351c301979 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07cc899d36529c5602bb5f37c47b01ff inherit pub_methods_classpl_render_pipeline_node" id="r_a07cc899d36529c5602bb5f37c47b01ff"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (const char *szName) const</td></tr>
<tr class="separator:a07cc899d36529c5602bb5f37c47b01ff inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631d4aae4d9689d4da14bcbece9d7969 inherit pub_methods_classpl_render_pipeline_node" id="r_a631d4aae4d9689d4da14bcbece9d7969"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (<a class="el" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> sName) const</td></tr>
<tr class="separator:a631d4aae4d9689d4da14bcbece9d7969 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c53266f359cf29e7ab5a367517eda73 inherit pub_methods_classpl_render_pipeline_node" id="r_a5c53266f359cf29e7ab5a367517eda73"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputPins</b> () const</td></tr>
<tr class="separator:a5c53266f359cf29e7ab5a367517eda73 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae681612860ed7b6b3babfa5f71ecdc33 inherit pub_methods_classpl_render_pipeline_node" id="r_ae681612860ed7b6b3babfa5f71ecdc33"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetOutputPins</b> () const</td></tr>
<tr class="separator:ae681612860ed7b6b3babfa5f71ecdc33 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ad27a8780e5aa1da74f83ab8100205be5" id="r_ad27a8780e5aa1da74f83ab8100205be5"><td class="memItemLeft" align="right" valign="top"><a id="ad27a8780e5aa1da74f83ab8100205be5" name="ad27a8780e5aa1da74f83ab8100205be5"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plRenderPipeline</b></td></tr>
<tr class="separator:ad27a8780e5aa1da74f83ab8100205be5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a77f066867e0b0ce045317520d7083d8d" name="a77f066867e0b0ce045317520d7083d8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a77f066867e0b0ce045317520d7083d8d">&#9670;&#160;</a></span>Execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plRenderPipelinePass::Execute </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>renderViewContext</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data. </p>

<p>Implemented in <a class="el" href="../../da/dab/classpl_antialiasing_pass.htm#afeb47c80a1af3dead8a58536ad6f0913">plAntialiasingPass</a>, <a class="el" href="../../d4/d27/classpl_a_o_pass.htm#a44243e5e56c128fd65b13aea296f4844">plAOPass</a>, <a class="el" href="../../df/dfc/classpl_bloom_pass.htm#aa042befa7e580d2a9d4fe2d0b69e951e">plBloomPass</a>, <a class="el" href="../../d3/dcb/classpl_blur_pass.htm#a5df904d56c50cc396dceeeaa037d9ae1">plBlurPass</a>, <a class="el" href="../../d1/d7b/classpl_copy_texture_pass.htm#ad44a4fd7fb285eaa016e28da3ce84811">plCopyTexturePass</a>, <a class="el" href="../../d8/d5c/classpl_depth_only_pass.htm#a04f8fff3a792cbebd10471cf296316e4">plDepthOnlyPass</a>, <a class="el" href="../../d6/d29/classpl_d_o_f_pass.htm#a2c8bf645aa490ffdba031d5b2dd4e00e">plDOFPass</a>, <a class="el" href="../../d5/ddc/classpl_forward_render_pass.htm#a2c9da040489761015f768289db317c17">plForwardRenderPass</a>, <a class="el" href="../../d9/dc7/classpl_history_source_pass.htm#afef75a208a36a65bb3fdf862336df510">plHistorySourcePass</a>, <a class="el" href="../../d9/df9/classpl_history_target_pass.htm#a10bcde0738a3e9963716ffd405da798e">plHistoryTargetPass</a>, <a class="el" href="../../d1/df2/classpl_l_s_a_o_pass.htm#aff2ac225c02af6e40d1c724cb2cc925a">plLSAOPass</a>, <a class="el" href="../../d7/d76/classpl_msaa_resolve_pass.htm#ac41e17d714e7a4eb9d9f2f63a030df73">plMsaaResolvePass</a>, <a class="el" href="../../d1/d31/classpl_msaa_upscale_pass.htm#ac19f4a7b292044487e280c600f23ee36">plMsaaUpscalePass</a>, <a class="el" href="../../d4/d4f/classpl_picking_render_pass.htm#ad2fd8ace12bd0dbafd34aa3c30fceef6">plPickingRenderPass</a>, <a class="el" href="../../d1/d0b/classpl_reflection_filter_pass.htm#a3760d3a9503d95b53bf81062c1f718ed">plReflectionFilterPass</a>, <a class="el" href="../../df/dd1/classpl_selection_highlight_pass.htm#a9894858e4c849677010c5481468289bf">plSelectionHighlightPass</a>, <a class="el" href="../../d7/d63/classpl_separated_bilateral_blur_pass.htm#ae7d51537d8fac7a3b0ebce3c906eb6f4">plSeparatedBilateralBlurPass</a>, <a class="el" href="../../d4/dff/classpl_simple_render_pass.htm#ab0e437f51a198f1dc597fd6bdb5fcbdf">plSimpleRenderPass</a>, <a class="el" href="../../dd/d38/classpl_source_pass.htm#a4170b7c5e197ec6cf73954a9283a0e4e">plSourcePass</a>, <a class="el" href="../../d7/ddc/classpl_s_s_r_advanced_pass.htm#a41eb89cbf603156991d16c45a69e76d0">plSSRAdvancedPass</a>, <a class="el" href="../../d7/dd8/classpl_s_s_r_pass.htm#a7206a9c55f6dc78f9223c68ca4f6ad6d">plSSRPass</a>, <a class="el" href="../../de/d1d/classpl_stereo_test_pass.htm#a7423c614fa03752786d1681ddf0d66e9">plStereoTestPass</a>, <a class="el" href="../../dc/d28/classpl_target_pass.htm#a861e4d475c9973322e7437932ae5d0c8">plTargetPass</a>, <a class="el" href="../../d0/d78/classpl_tonemap_pass.htm#a20eebb4d3a95e38873abd5db04ba007e">plTonemapPass</a>, and <a class="el" href="../../df/dd9/classpl_transparent_forward_render_pass.htm#a46eb8b792135ef6a6a281d0fc04c40db">plTransparentForwardRenderPass</a>.</p>

</div>
</div>
<a id="aef04db804311bd7ad00cb5b42230cef2" name="aef04db804311bd7ad00cb5b42230cef2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aef04db804311bd7ad00cb5b42230cef2">&#9670;&#160;</a></span>GetRenderTargetDescriptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plRenderPipelinePass::GetRenderTargetDescriptions </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>view</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins. </p>

<p>Implemented in <a class="el" href="../../da/dab/classpl_antialiasing_pass.htm#a4fbe13faf34a3bb315b8fee055e80bc3">plAntialiasingPass</a>, <a class="el" href="../../d4/d27/classpl_a_o_pass.htm#a523a46ce718f55d5892588ebe0f2a37b">plAOPass</a>, <a class="el" href="../../df/dfc/classpl_bloom_pass.htm#a61748853ed62bc60b244578b5c0808e0">plBloomPass</a>, <a class="el" href="../../d3/dcb/classpl_blur_pass.htm#acb1b6ba91daa4e3797ec4de5c0efaab6">plBlurPass</a>, <a class="el" href="../../d1/d7b/classpl_copy_texture_pass.htm#ac03c6da1f4fbf97c823c89b3b98b87fe">plCopyTexturePass</a>, <a class="el" href="../../d8/d5c/classpl_depth_only_pass.htm#aa31450d78eb88f07a9c20a2c4279eef3">plDepthOnlyPass</a>, <a class="el" href="../../d6/d29/classpl_d_o_f_pass.htm#a4f2c27eaed81d8acd308807da07f27c6">plDOFPass</a>, <a class="el" href="../../d5/ddc/classpl_forward_render_pass.htm#ad8aad41a07d16ae4d23c7055e4ce9f2a">plForwardRenderPass</a>, <a class="el" href="../../d9/dc7/classpl_history_source_pass.htm#a00b3a82f576d06b9d737f881923798a9">plHistorySourcePass</a>, <a class="el" href="../../d9/df9/classpl_history_target_pass.htm#ad4ad7c244dcc734b372bb8207267e8af">plHistoryTargetPass</a>, <a class="el" href="../../d1/df2/classpl_l_s_a_o_pass.htm#ab28e9a8d2ff8089d596b32a909917c53">plLSAOPass</a>, <a class="el" href="../../d7/d76/classpl_msaa_resolve_pass.htm#a86894fe68f385a479f5fdf4eb71dc463">plMsaaResolvePass</a>, <a class="el" href="../../d1/d31/classpl_msaa_upscale_pass.htm#a58bd0ba421916b02e5cb62a599ce268e">plMsaaUpscalePass</a>, <a class="el" href="../../d0/d1f/classpl_opaque_forward_render_pass.htm#a17fe6efd637d354cd97fb87ba487d6dd">plOpaqueForwardRenderPass</a>, <a class="el" href="../../d4/d4f/classpl_picking_render_pass.htm#ad7a3ee235d1c9dda32bd26324f79eb8a">plPickingRenderPass</a>, <a class="el" href="../../d1/d0b/classpl_reflection_filter_pass.htm#a0b85621933d97508988ed2de27c351f7">plReflectionFilterPass</a>, <a class="el" href="../../df/dd1/classpl_selection_highlight_pass.htm#a692ccea4ea81fd9467969316ecb96fcc">plSelectionHighlightPass</a>, <a class="el" href="../../d7/d63/classpl_separated_bilateral_blur_pass.htm#a902cdf4b3987de55c2cde77f4fe58d42">plSeparatedBilateralBlurPass</a>, <a class="el" href="../../d4/dff/classpl_simple_render_pass.htm#a031d9cd36c9409800712c862107634d7">plSimpleRenderPass</a>, <a class="el" href="../../dd/d38/classpl_source_pass.htm#a6e6dd13777e2e289846b892c9aa32c4b">plSourcePass</a>, <a class="el" href="../../d7/ddc/classpl_s_s_r_advanced_pass.htm#a4b0257a724a32d14a33889a0f8cc81b2">plSSRAdvancedPass</a>, <a class="el" href="../../d7/dd8/classpl_s_s_r_pass.htm#a867083632aee2a33ff8c7469f6c07221">plSSRPass</a>, <a class="el" href="../../de/d1d/classpl_stereo_test_pass.htm#abb49422f2b0194bc8ac38e1839a1e814">plStereoTestPass</a>, <a class="el" href="../../dc/d28/classpl_target_pass.htm#a9ede81db0ce2350c5751d7f73573c218">plTargetPass</a>, and <a class="el" href="../../d0/d78/classpl_tonemap_pass.htm#a101d1b12684dbd7cd7a297714f359ff3">plTonemapPass</a>.</p>

</div>
</div>
<a id="a72e182c70f3b83e9ba377ff9bb5178b3" name="a72e182c70f3b83e9ba377ff9bb5178b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a72e182c70f3b83e9ba377ff9bb5178b3">&#9670;&#160;</a></span>InitRenderPipelinePass()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plRenderPipelinePass::InitRenderPipelinePass </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer. </p>

<p>Reimplemented in <a class="el" href="../../d1/df2/classpl_l_s_a_o_pass.htm#a5fbd1a0d1b9028229b292c40c381a6cd">plLSAOPass</a>, and <a class="el" href="../../d4/d4f/classpl_picking_render_pass.htm#a42948785fe85686e41f62a0e901e93b5">plPickingRenderPass</a>.</p>

</div>
</div>
<a id="ad327da9e098bd64f650d827e8f255e77" name="ad327da9e098bd64f650d827e8f255e77"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad327da9e098bd64f650d827e8f255e77">&#9670;&#160;</a></span>QueryTextureProvider()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dc/de5/classpl_g_a_l_texture_handle.htm">plGALTextureHandle</a> plRenderPipelinePass::QueryTextureProvider </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *</td>          <td class="paramname"><span class="paramname"><em>pPin</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>desc</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the current texture this node provides at the given *ProviderPin. This function is called every frame if this node holds a <a class="el" href="../../d6/d87/structpl_render_pipeline_node_input_provider_pin.htm">plRenderPipelineNodeInputProviderPin</a> or <a class="el" href="../../d2/d50/structpl_render_pipeline_node_output_provider_pin.htm">plRenderPipelineNodeOutputProviderPin</a> pin. The node can return a valid texture handle, or an invalid handle, in which case the missing texture will be created from the texture pool. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pPin</td><td>The member pin for which the texture is requested. </td></tr>
    <tr><td class="paramname">desc</td><td>The format of the texture that should be provided. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The texture to use for this pin's connections. Or invalid, in which case it reverts to a regular input / output pin. </dd></dl>

<p>Reimplemented in <a class="el" href="../../d9/dc7/classpl_history_source_pass.htm#ad6f85acc0d5d14d92d7b82f0d16211ed">plHistorySourcePass</a>, <a class="el" href="../../d9/df9/classpl_history_target_pass.htm#aaaa347979b69f5ceaeb2e91347152d83">plHistoryTargetPass</a>, and <a class="el" href="../../dc/d28/classpl_target_pass.htm#a62bc0c68b7868de48927346790ebc411">plTargetPass</a>.</p>

</div>
</div>
<a id="ae149ec39db8045806742a934e5adf72b" name="ae149ec39db8045806742a934e5adf72b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae149ec39db8045806742a934e5adf72b">&#9670;&#160;</a></span>ReadBackProperties()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plRenderPipelinePass::ReadBackProperties </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *</td>          <td class="paramname"><span class="paramname"><em>pView</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allows for the pass to write data back using plView::SetRenderPassReadBackProperty. E.g. picking results etc. </p>

<p>Reimplemented in <a class="el" href="../../d4/d4f/classpl_picking_render_pass.htm#aec3ee8e938f3733a2af4f52c1f064346">plPickingRenderPass</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/RendererCore/Pipeline/<a class="el" href="../../da/d0b/_render_pipeline_pass_8h_source.htm">RenderPipelinePass.h</a></li>
<li>Code/Engine/RendererCore/Pipeline/Implementation/<b>RenderPipelinePass.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm">plRenderPipelinePass</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
