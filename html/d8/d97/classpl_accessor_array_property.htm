<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plAccessorArrayProperty&lt; Class, Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d8/d97/classpl_accessor_array_property.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d0/d77/classpl_accessor_array_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAccessorArrayProperty&lt; Class, Type &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for plAccessorArrayProperty&lt; Class, Type &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../de/d91/classpl_accessor_array_property__inherit__graph.png" border="0" usemap="#apl_accessor_array_property_3_01_class_00_01_type_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_accessor_array_property_3_01_class_00_01_type_01_4_inherit__map" id="apl_accessor_array_property_3_01_class_00_01_type_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="5,245,172,288"/>
<area shape="rect" href="../../db/d53/classpl_typed_array_property.htm" title="Do not cast into this class or any of its derived classes, use plTypedArrayProperty instead." alt="" coords="15,155,162,197"/>
<area shape="poly" title=" " alt="" coords="91,213,91,245,86,245,86,213"/>
<area shape="rect" href="../../dc/d4a/classpl_abstract_array_property.htm" title="The base class for a property that represents an array of values." alt="" coords="8,80,169,107"/>
<area shape="poly" title=" " alt="" coords="91,122,91,154,86,154,86,122"/>
<area shape="rect" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="24,5,153,32"/>
<area shape="poly" title=" " alt="" coords="91,48,91,80,86,80,86,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a97fe248d2ef93725539bc13c79bbcf2e" id="r_a97fe248d2ef93725539bc13c79bbcf2e"><td class="memItemLeft" align="right" valign="top"><a id="a97fe248d2ef93725539bc13c79bbcf2e" name="a97fe248d2ef93725539bc13c79bbcf2e"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>RealType</b> = typename <a class="el" href="../../da/d5d/structpl_type_traits.htm">plTypeTraits</a>&lt;Type&gt;::NonConstReferenceType</td></tr>
<tr class="separator:a97fe248d2ef93725539bc13c79bbcf2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae01ce438d738a7cc94c0bf13ecf5d55c" id="r_ae01ce438d738a7cc94c0bf13ecf5d55c"><td class="memItemLeft" align="right" valign="top"><a id="ae01ce438d738a7cc94c0bf13ecf5d55c" name="ae01ce438d738a7cc94c0bf13ecf5d55c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>GetCountFunc</b> = plUInt32 (Class::*)() const</td></tr>
<tr class="separator:ae01ce438d738a7cc94c0bf13ecf5d55c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59e488f8578e20ac5cad90d0efb31f0d" id="r_a59e488f8578e20ac5cad90d0efb31f0d"><td class="memItemLeft" align="right" valign="top"><a id="a59e488f8578e20ac5cad90d0efb31f0d" name="a59e488f8578e20ac5cad90d0efb31f0d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>GetValueFunc</b> = Type (Class::*)(plUInt32 uiIndex) const</td></tr>
<tr class="separator:a59e488f8578e20ac5cad90d0efb31f0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af988065f70ee377670edf8cec108b6e7" id="r_af988065f70ee377670edf8cec108b6e7"><td class="memItemLeft" align="right" valign="top"><a id="af988065f70ee377670edf8cec108b6e7" name="af988065f70ee377670edf8cec108b6e7"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>SetValueFunc</b> = void (Class::*)(plUInt32 uiIndex, Type value)</td></tr>
<tr class="separator:af988065f70ee377670edf8cec108b6e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1c17e8b70f9e6d74edd45978de89ee1" id="r_ac1c17e8b70f9e6d74edd45978de89ee1"><td class="memItemLeft" align="right" valign="top"><a id="ac1c17e8b70f9e6d74edd45978de89ee1" name="ac1c17e8b70f9e6d74edd45978de89ee1"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>InsertFunc</b> = void (Class::*)(plUInt32 uiIndex, Type value)</td></tr>
<tr class="separator:ac1c17e8b70f9e6d74edd45978de89ee1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a859bfc1ca2f35784c3bfeb86c4224c21" id="r_a859bfc1ca2f35784c3bfeb86c4224c21"><td class="memItemLeft" align="right" valign="top"><a id="a859bfc1ca2f35784c3bfeb86c4224c21" name="a859bfc1ca2f35784c3bfeb86c4224c21"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveFunc</b> = void (Class::*)(plUInt32 uiIndex)</td></tr>
<tr class="separator:a859bfc1ca2f35784c3bfeb86c4224c21"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6b2b7bdfedc64e3e75e5d3475a20ce23" id="r_a6b2b7bdfedc64e3e75e5d3475a20ce23"><td class="memItemLeft" align="right" valign="top"><a id="a6b2b7bdfedc64e3e75e5d3475a20ce23" name="a6b2b7bdfedc64e3e75e5d3475a20ce23"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plAccessorArrayProperty</b> (const char *szPropertyName, GetCountFunc getCount, GetValueFunc getter, SetValueFunc setter, InsertFunc insert, RemoveFunc remove)</td></tr>
<tr class="separator:a6b2b7bdfedc64e3e75e5d3475a20ce23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a855a9050a702a25846368e4a286ee964" id="r_a855a9050a702a25846368e4a286ee964"><td class="memItemLeft" align="right" valign="top">virtual plUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a855a9050a702a25846368e4a286ee964">GetCount</a> (const void *pInstance) const override</td></tr>
<tr class="memdesc:a855a9050a702a25846368e4a286ee964"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of elements.  <br /></td></tr>
<tr class="separator:a855a9050a702a25846368e4a286ee964"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb5fb686fc370df48ef0595dd546a38d" id="r_afb5fb686fc370df48ef0595dd546a38d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afb5fb686fc370df48ef0595dd546a38d">GetValue</a> (const void *pInstance, plUInt32 uiIndex, void *pObject) const override</td></tr>
<tr class="memdesc:afb5fb686fc370df48ef0595dd546a38d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes element at index uiIndex to the target of pObject.  <br /></td></tr>
<tr class="separator:afb5fb686fc370df48ef0595dd546a38d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1276b213719366deecf0a80eaf6fbc8" id="r_ad1276b213719366deecf0a80eaf6fbc8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad1276b213719366deecf0a80eaf6fbc8">SetValue</a> (void *pInstance, plUInt32 uiIndex, const void *pObject) const override</td></tr>
<tr class="memdesc:ad1276b213719366deecf0a80eaf6fbc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the target of pObject to the element at index uiIndex.  <br /></td></tr>
<tr class="separator:ad1276b213719366deecf0a80eaf6fbc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a036838f93e26604765b20305da3bdc3b" id="r_a036838f93e26604765b20305da3bdc3b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a036838f93e26604765b20305da3bdc3b">Insert</a> (void *pInstance, plUInt32 uiIndex, const void *pObject) const override</td></tr>
<tr class="memdesc:a036838f93e26604765b20305da3bdc3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the target of pObject into the array at index uiIndex.  <br /></td></tr>
<tr class="separator:a036838f93e26604765b20305da3bdc3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abac6899fd1dcc70b7713f406a8f9c104" id="r_abac6899fd1dcc70b7713f406a8f9c104"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abac6899fd1dcc70b7713f406a8f9c104">Remove</a> (void *pInstance, plUInt32 uiIndex) const override</td></tr>
<tr class="memdesc:abac6899fd1dcc70b7713f406a8f9c104"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element in the array at index uiIndex.  <br /></td></tr>
<tr class="separator:abac6899fd1dcc70b7713f406a8f9c104"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54279f021651d0062e9badc35507c7f5" id="r_a54279f021651d0062e9badc35507c7f5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a54279f021651d0062e9badc35507c7f5">Clear</a> (void *pInstance) const override</td></tr>
<tr class="memdesc:a54279f021651d0062e9badc35507c7f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array.  <br /></td></tr>
<tr class="separator:a54279f021651d0062e9badc35507c7f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a813a3bd0fb5e3287eddf268ffffca595" id="r_a813a3bd0fb5e3287eddf268ffffca595"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a813a3bd0fb5e3287eddf268ffffca595">SetCount</a> (void *pInstance, plUInt32 uiCount) const override</td></tr>
<tr class="memdesc:a813a3bd0fb5e3287eddf268ffffca595"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to uiCount.  <br /></td></tr>
<tr class="separator:a813a3bd0fb5e3287eddf268ffffca595"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_typed_array_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_typed_array_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d53/classpl_typed_array_property.htm">plTypedArrayProperty&lt; Type &gt;</a></td></tr>
<tr class="memitem:ace305c416daab424f37212795df9ed57 inherit pub_methods_classpl_typed_array_property" id="r_ace305c416daab424f37212795df9ed57"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plTypedArrayProperty</b> (const char *szPropertyName)</td></tr>
<tr class="separator:ace305c416daab424f37212795df9ed57 inherit pub_methods_classpl_typed_array_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fdb275b1b0122f6f86244c1fe3bdc9a inherit pub_methods_classpl_typed_array_property" id="r_a2fdb275b1b0122f6f86244c1fe3bdc9a"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d53/classpl_typed_array_property.htm#a2fdb275b1b0122f6f86244c1fe3bdc9a">GetSpecificType</a> () const override</td></tr>
<tr class="memdesc:a2fdb275b1b0122f6f86244c1fe3bdc9a inherit pub_methods_classpl_typed_array_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dd/d62/classpl_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">plTypedConstantProperty</a>.  <br /></td></tr>
<tr class="separator:a2fdb275b1b0122f6f86244c1fe3bdc9a inherit pub_methods_classpl_typed_array_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_array_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_array_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm">plAbstractArrayProperty</a></td></tr>
<tr class="memitem:a7b804f8a31b89c411364d9da7127be7a inherit pub_methods_classpl_abstract_array_property" id="r_a7b804f8a31b89c411364d9da7127be7a"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractArrayProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a7b804f8a31b89c411364d9da7127be7a inherit pub_methods_classpl_abstract_array_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">plAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a7b804f8a31b89c411364d9da7127be7a inherit pub_methods_classpl_abstract_array_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb193f4ecfb1029758808cf92d1e0ff7 inherit pub_methods_classpl_abstract_array_property" id="r_acb193f4ecfb1029758808cf92d1e0ff7"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm#acb193f4ecfb1029758808cf92d1e0ff7">GetCategory</a> () const override</td></tr>
<tr class="memdesc:acb193f4ecfb1029758808cf92d1e0ff7 inherit pub_methods_classpl_abstract_array_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7ad30322f0dbf9e374f0b92d565a300071" title="The property is actually an array of values. The array dimensions might be changeable....">plPropertyCategory::Array</a>.  <br /></td></tr>
<tr class="separator:acb193f4ecfb1029758808cf92d1e0ff7 inherit pub_methods_classpl_abstract_array_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9107ee79be1b217428702db31882f88 inherit pub_methods_classpl_abstract_array_property" id="r_af9107ee79be1b217428702db31882f88"><td class="memItemLeft" align="right" valign="top">
virtual void *&#160;</td><td class="memItemRight" valign="bottom"><b>GetValuePointer</b> (void *pInstance, plUInt32 uiIndex) const</td></tr>
<tr class="separator:af9107ee79be1b217428702db31882f88 inherit pub_methods_classpl_abstract_array_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property" id="r_a8ae8dcf20f01b0926e321d68fd38d243"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property" id="r_ab192fac6724fcbd56a160013230bad0b"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property" id="r_a988149e0184a527d89a6fc7b529aa6fc"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property" id="r_a1a7c0de0ecff4c5ab4a37987f9780a64"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property" id="r_a249245c8d8a5bd14d12b7b72920b4d5e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property" id="r_aa28f7ffab1bd6667a67f94a351e618ba"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property" id="r_a74666a9b6312d9e8a0208ff67ec56a7d"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property" id="r_a5226bc2ced2436f3aeaf96fadea40f70"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property" id="r_a135a819e72ea2827916acdefd2fb6848"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property" id="r_aaf46ae0b97785db5048abb483c603cea"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *, 2, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a54279f021651d0062e9badc35507c7f5" name="a54279f021651d0062e9badc35507c7f5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a54279f021651d0062e9badc35507c7f5">&#9670;&#160;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d8/d97/classpl_accessor_array_property.htm">plAccessorArrayProperty</a>&lt; Class, Type &gt;::Clear </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clears the array. </p>

<p>Implements <a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm#a5bb42dc10cfd0e9d95b633ce156c1028">plAbstractArrayProperty</a>.</p>

</div>
</div>
<a id="a855a9050a702a25846368e4a286ee964" name="a855a9050a702a25846368e4a286ee964"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a855a9050a702a25846368e4a286ee964">&#9670;&#160;</a></span>GetCount()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual plUInt32 <a class="el" href="../../d8/d97/classpl_accessor_array_property.htm">plAccessorArrayProperty</a>&lt; Class, Type &gt;::GetCount </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns number of elements. </p>

<p>Implements <a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm#a857df8f47226296a3d0b2a1ed8236859">plAbstractArrayProperty</a>.</p>

</div>
</div>
<a id="afb5fb686fc370df48ef0595dd546a38d" name="afb5fb686fc370df48ef0595dd546a38d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb5fb686fc370df48ef0595dd546a38d">&#9670;&#160;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d8/d97/classpl_accessor_array_property.htm">plAccessorArrayProperty</a>&lt; Class, Type &gt;::GetValue </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes element at index uiIndex to the target of pObject. </p>

<p>Implements <a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm#abd16b374f78da2d9a8ce15c37de18522">plAbstractArrayProperty</a>.</p>

</div>
</div>
<a id="a036838f93e26604765b20305da3bdc3b" name="a036838f93e26604765b20305da3bdc3b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a036838f93e26604765b20305da3bdc3b">&#9670;&#160;</a></span>Insert()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d8/d97/classpl_accessor_array_property.htm">plAccessorArrayProperty</a>&lt; Class, Type &gt;::Insert </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Inserts the target of pObject into the array at index uiIndex. </p>

<p>Implements <a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm#a154610c9b1b6b92ea778bdaff5132833">plAbstractArrayProperty</a>.</p>

</div>
</div>
<a id="abac6899fd1dcc70b7713f406a8f9c104" name="abac6899fd1dcc70b7713f406a8f9c104"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abac6899fd1dcc70b7713f406a8f9c104">&#9670;&#160;</a></span>Remove()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d8/d97/classpl_accessor_array_property.htm">plAccessorArrayProperty</a>&lt; Class, Type &gt;::Remove </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiIndex</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes the element in the array at index uiIndex. </p>

<p>Implements <a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm#aa96c3ed73985c24ce6015e876ee48dde">plAbstractArrayProperty</a>.</p>

</div>
</div>
<a id="a813a3bd0fb5e3287eddf268ffffca595" name="a813a3bd0fb5e3287eddf268ffffca595"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a813a3bd0fb5e3287eddf268ffffca595">&#9670;&#160;</a></span>SetCount()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d8/d97/classpl_accessor_array_property.htm">plAccessorArrayProperty</a>&lt; Class, Type &gt;::SetCount </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiCount</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resizes the array to uiCount. </p>

<p>Implements <a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm#ae7842e43a0f138001ec014bb1edce565">plAbstractArrayProperty</a>.</p>

</div>
</div>
<a id="ad1276b213719366deecf0a80eaf6fbc8" name="ad1276b213719366deecf0a80eaf6fbc8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad1276b213719366deecf0a80eaf6fbc8">&#9670;&#160;</a></span>SetValue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d8/d97/classpl_accessor_array_property.htm">plAccessorArrayProperty</a>&lt; Class, Type &gt;::SetValue </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes the target of pObject to the element at index uiIndex. </p>

<p>Implements <a class="el" href="../../dc/d4a/classpl_abstract_array_property.htm#a80de20f1635ca1e9add5aa5f63a2d5bb">plAbstractArrayProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../db/dd9/_array_property_8h_source.htm">ArrayProperty.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/d97/classpl_accessor_array_property.htm">plAccessorArrayProperty</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
