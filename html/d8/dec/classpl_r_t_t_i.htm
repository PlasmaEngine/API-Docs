<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plRTTI Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d8/dec/classpl_r_t_t_i.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../dc/de4/classpl_r_t_t_i-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plRTTI Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>This class holds information about reflected types. Each instance represents one type that is known to the reflection system.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/dd7/_r_t_t_i_8h_source.htm">RTTI.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plRTTI:</div>
<div class="dyncontent">
<div class="center"><img src="../../d7/dc0/classpl_r_t_t_i__inherit__graph.png" border="0" usemap="#apl_r_t_t_i_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_r_t_t_i_inherit__map" id="apl_r_t_t_i_inherit__map">
<area shape="rect" title="This class holds information about reflected types. Each instance represents one type that is known t..." alt="" coords="183,5,241,32"/>
<area shape="rect" href="../../d6/d3d/classpl_phantom_r_t_t_i.htm" title=" " alt="" coords="5,80,115,107"/>
<area shape="poly" title=" " alt="" coords="173,41,88,82,86,77,171,37"/>
<area shape="rect" href="../../d7/d07/classpl_script_coroutine_r_t_t_i.htm" title="A coroutine type that stores a custom allocator." alt="" coords="139,80,285,107"/>
<area shape="poly" title=" " alt="" coords="215,48,215,80,209,80,209,48"/>
<area shape="rect" href="../../d0/d96/classpl_script_r_t_t_i.htm" title=" " alt="" coords="309,80,400,107"/>
<area shape="poly" title=" " alt="" coords="252,37,331,77,328,82,249,42"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/dce/structpl_r_t_t_i_1_1_for_each_options.htm">ForEachOptions</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a2ee6232f55e0ab51ec59dc3dd740d09d" id="r_a2ee6232f55e0ab51ec59dc3dd740d09d"><td class="memItemLeft" align="right" valign="top"><a id="a2ee6232f55e0ab51ec59dc3dd740d09d" name="a2ee6232f55e0ab51ec59dc3dd740d09d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>PredicateFunc</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt;bool(const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>*), 48&gt;</td></tr>
<tr class="separator:a2ee6232f55e0ab51ec59dc3dd740d09d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afabd46954b11d5a8b7091f22704b09c2" id="r_afabd46954b11d5a8b7091f22704b09c2"><td class="memItemLeft" align="right" valign="top"><a id="afabd46954b11d5a8b7091f22704b09c2" name="afabd46954b11d5a8b7091f22704b09c2"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>VisitorFunc</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt;void(const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>*), 48&gt;</td></tr>
<tr class="separator:afabd46954b11d5a8b7091f22704b09c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9627616e670a0984fe1e3bef8ff9b969" id="r_a9627616e670a0984fe1e3bef8ff9b969"><td class="memItemLeft" align="right" valign="top"><a id="a9627616e670a0984fe1e3bef8ff9b969" name="a9627616e670a0984fe1e3bef8ff9b969"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plRTTI</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pParentType, plUInt32 uiTypeSize, plUInt32 uiTypeVersion, plUInt8 uiVariantType, <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../dc/d91/structpl_type_flags.htm">plTypeFlags</a> &gt; flags, <a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm">plRTTIAllocator</a> *pAllocator, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> * &gt; properties, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a> * &gt; functions, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> * &gt; attributes, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../d1/d8e/classpl_abstract_message_handler.htm">plAbstractMessageHandler</a> * &gt; messageHandlers, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../dc/d6f/structpl_message_sender_info.htm">plMessageSenderInfo</a> &gt; messageSenders, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *(*fnVerifyParent)())</td></tr>
<tr class="memdesc:a9627616e670a0984fe1e3bef8ff9b969"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor requires all the information about the type that this object represents. <br /></td></tr>
<tr class="separator:a9627616e670a0984fe1e3bef8ff9b969"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afab379c9086667792fbcd24da09cf93d" id="r_afab379c9086667792fbcd24da09cf93d"><td class="memItemLeft" align="right" valign="top"><a id="afab379c9086667792fbcd24da09cf93d" name="afab379c9086667792fbcd24da09cf93d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>VerifyCorrectness</b> () const</td></tr>
<tr class="memdesc:afab379c9086667792fbcd24da09cf93d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be called in debug builds to check that all reflected objects are correctly set up. <br /></td></tr>
<tr class="separator:afab379c9086667792fbcd24da09cf93d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a906257607936b6ebbb0849fb1caa5c" id="r_a7a906257607936b6ebbb0849fb1caa5c"><td class="memItemLeft" align="right" valign="top"><a id="a7a906257607936b6ebbb0849fb1caa5c" name="a7a906257607936b6ebbb0849fb1caa5c"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetTypeName</b> () const</td></tr>
<tr class="memdesc:a7a906257607936b6ebbb0849fb1caa5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of this type. <br /></td></tr>
<tr class="separator:a7a906257607936b6ebbb0849fb1caa5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ad78d4368a6a627a9cff4c27f43c95d" id="r_a9ad78d4368a6a627a9cff4c27f43c95d"><td class="memItemLeft" align="right" valign="top"><a id="a9ad78d4368a6a627a9cff4c27f43c95d" name="a9ad78d4368a6a627a9cff4c27f43c95d"></a>
PL_ALWAYS_INLINE plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetTypeNameHash</b> () const</td></tr>
<tr class="memdesc:a9ad78d4368a6a627a9cff4c27f43c95d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the hash of the name of this type. <br /></td></tr>
<tr class="separator:a9ad78d4368a6a627a9cff4c27f43c95d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1062521031d49a355447ef0973f545b0" id="r_a1062521031d49a355447ef0973f545b0"><td class="memItemLeft" align="right" valign="top"><a id="a1062521031d49a355447ef0973f545b0" name="a1062521031d49a355447ef0973f545b0"></a>
PL_ALWAYS_INLINE const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetParentType</b> () const</td></tr>
<tr class="memdesc:a1062521031d49a355447ef0973f545b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type that is the base class of this type. May be nullptr if this type has no base class. <br /></td></tr>
<tr class="separator:a1062521031d49a355447ef0973f545b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad51fe5f43dc33629176b21b3fdebd17" id="r_aad51fe5f43dc33629176b21b3fdebd17"><td class="memItemLeft" align="right" valign="top"><a id="aad51fe5f43dc33629176b21b3fdebd17" name="aad51fe5f43dc33629176b21b3fdebd17"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d6/d1e/structpl_variant_type.htm#a4d10a99c083abdf7283ab1f48565de12">plVariantType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetVariantType</b> () const</td></tr>
<tr class="memdesc:aad51fe5f43dc33629176b21b3fdebd17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding variant type for this type or Invalid if there is none. <br /></td></tr>
<tr class="separator:aad51fe5f43dc33629176b21b3fdebd17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af421e6a16baa5f5864c4eca9408831ef" id="r_af421e6a16baa5f5864c4eca9408831ef"><td class="memItemLeft" align="right" valign="top"><a id="af421e6a16baa5f5864c4eca9408831ef" name="af421e6a16baa5f5864c4eca9408831ef"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsDerivedFrom</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pBaseType) const</td></tr>
<tr class="memdesc:af421e6a16baa5f5864c4eca9408831ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if this type is derived from the given type (or of the same type). <br /></td></tr>
<tr class="separator:af421e6a16baa5f5864c4eca9408831ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a165e505d6c1ec9914bec8a71812a86cb" id="r_a165e505d6c1ec9914bec8a71812a86cb"><td class="memTemplParams" colspan="2"><a id="a165e505d6c1ec9914bec8a71812a86cb" name="a165e505d6c1ec9914bec8a71812a86cb"></a>
template&lt;typename BASE &gt; </td></tr>
<tr class="memitem:a165e505d6c1ec9914bec8a71812a86cb"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsDerivedFrom</b> () const</td></tr>
<tr class="memdesc:a165e505d6c1ec9914bec8a71812a86cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if this type is derived from or identical to the given type. <br /></td></tr>
<tr class="separator:a165e505d6c1ec9914bec8a71812a86cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a662762e594a3db472de268ee304d9415" id="r_a662762e594a3db472de268ee304d9415"><td class="memItemLeft" align="right" valign="top"><a id="a662762e594a3db472de268ee304d9415" name="a662762e594a3db472de268ee304d9415"></a>
PL_ALWAYS_INLINE <a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm">plRTTIAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:a662762e594a3db472de268ee304d9415"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the object through which instances of this type can be allocated. <br /></td></tr>
<tr class="separator:a662762e594a3db472de268ee304d9415"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81f24fef6d86a7e004153eae372f8619" id="r_a81f24fef6d86a7e004153eae372f8619"><td class="memItemLeft" align="right" valign="top"><a id="a81f24fef6d86a7e004153eae372f8619" name="a81f24fef6d86a7e004153eae372f8619"></a>
PL_ALWAYS_INLINE <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetProperties</b> () const</td></tr>
<tr class="memdesc:a81f24fef6d86a7e004153eae372f8619"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of properties that this type has. Does NOT include properties from base classes. <br /></td></tr>
<tr class="separator:a81f24fef6d86a7e004153eae372f8619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f20cfc9ef69626b1c0c8ec642b24ccf" id="r_a2f20cfc9ef69626b1c0c8ec642b24ccf"><td class="memItemLeft" align="right" valign="top"><a id="a2f20cfc9ef69626b1c0c8ec642b24ccf" name="a2f20cfc9ef69626b1c0c8ec642b24ccf"></a>
PL_ALWAYS_INLINE <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFunctions</b> () const</td></tr>
<tr class="separator:a2f20cfc9ef69626b1c0c8ec642b24ccf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a301140d73dadfb8b17cd92d0c39b2580" id="r_a301140d73dadfb8b17cd92d0c39b2580"><td class="memItemLeft" align="right" valign="top"><a id="a301140d73dadfb8b17cd92d0c39b2580" name="a301140d73dadfb8b17cd92d0c39b2580"></a>
PL_ALWAYS_INLINE <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="separator:a301140d73dadfb8b17cd92d0c39b2580"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2941559889c3cb75ba67ada06f107e8" id="r_af2941559889c3cb75ba67ada06f107e8"><td class="memTemplParams" colspan="2"><a id="af2941559889c3cb75ba67ada06f107e8" name="af2941559889c3cb75ba67ada06f107e8"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:af2941559889c3cb75ba67ada06f107e8"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:af2941559889c3cb75ba67ada06f107e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:af2941559889c3cb75ba67ada06f107e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48297770a3586bb915cb1253e6bbf263" id="r_a48297770a3586bb915cb1253e6bbf263"><td class="memItemLeft" align="right" valign="top"><a id="a48297770a3586bb915cb1253e6bbf263" name="a48297770a3586bb915cb1253e6bbf263"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllProperties</b> (<a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> * &gt; &amp;out_properties) const</td></tr>
<tr class="memdesc:a48297770a3586bb915cb1253e6bbf263"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the list of properties that this type has, including derived properties from all base classes. <br /></td></tr>
<tr class="separator:a48297770a3586bb915cb1253e6bbf263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5732a8c077f2c9b0896477bb12ec701d" id="r_a5732a8c077f2c9b0896477bb12ec701d"><td class="memItemLeft" align="right" valign="top"><a id="a5732a8c077f2c9b0896477bb12ec701d" name="a5732a8c077f2c9b0896477bb12ec701d"></a>
PL_ALWAYS_INLINE plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetTypeSize</b> () const</td></tr>
<tr class="memdesc:a5732a8c077f2c9b0896477bb12ec701d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size (in bytes) of an instance of this type. <br /></td></tr>
<tr class="separator:a5732a8c077f2c9b0896477bb12ec701d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37c5908b1c868c0cae2310d0520ae8c5" id="r_a37c5908b1c868c0cae2310d0520ae8c5"><td class="memItemLeft" align="right" valign="top"><a id="a37c5908b1c868c0cae2310d0520ae8c5" name="a37c5908b1c868c0cae2310d0520ae8c5"></a>
PL_ALWAYS_INLINE plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetTypeVersion</b> () const</td></tr>
<tr class="memdesc:a37c5908b1c868c0cae2310d0520ae8c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the version number of this type. <br /></td></tr>
<tr class="separator:a37c5908b1c868c0cae2310d0520ae8c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2de39d8af71de51528b2fb40ae7569d8" id="r_a2de39d8af71de51528b2fb40ae7569d8"><td class="memItemLeft" align="right" valign="top"><a id="a2de39d8af71de51528b2fb40ae7569d8" name="a2de39d8af71de51528b2fb40ae7569d8"></a>
PL_ALWAYS_INLINE const <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../dc/d91/structpl_type_flags.htm">plTypeFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetTypeFlags</b> () const</td></tr>
<tr class="memdesc:a2de39d8af71de51528b2fb40ae7569d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type flags. <br /></td></tr>
<tr class="separator:a2de39d8af71de51528b2fb40ae7569d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefc053265706c725e6e8985a4877a297" id="r_aefc053265706c725e6e8985a4877a297"><td class="memItemLeft" align="right" valign="top"><a id="aefc053265706c725e6e8985a4877a297" name="aefc053265706c725e6e8985a4877a297"></a>
const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>FindPropertyByName</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, bool bSearchBaseTypes=true) const</td></tr>
<tr class="memdesc:aefc053265706c725e6e8985a4877a297"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will iterate over all properties of this type and (optionally) the base types to search for a property with the given name. <br /></td></tr>
<tr class="separator:aefc053265706c725e6e8985a4877a297"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fd532c13aab99286bfafff27fa70de4" id="r_a2fd532c13aab99286bfafff27fa70de4"><td class="memItemLeft" align="right" valign="top"><a id="a2fd532c13aab99286bfafff27fa70de4" name="a2fd532c13aab99286bfafff27fa70de4"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPluginName</b> () const</td></tr>
<tr class="memdesc:a2fd532c13aab99286bfafff27fa70de4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the plugin which this type is declared in. <br /></td></tr>
<tr class="separator:a2fd532c13aab99286bfafff27fa70de4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec5372c35213a617791b0961d899cb2a" id="r_aec5372c35213a617791b0961d899cb2a"><td class="memItemLeft" align="right" valign="top"><a id="aec5372c35213a617791b0961d899cb2a" name="aec5372c35213a617791b0961d899cb2a"></a>
PL_ALWAYS_INLINE const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../d1/d8e/classpl_abstract_message_handler.htm">plAbstractMessageHandler</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetMessageHandlers</b> () const</td></tr>
<tr class="memdesc:aec5372c35213a617791b0961d899cb2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of message handlers that this type has. <br /></td></tr>
<tr class="separator:aec5372c35213a617791b0961d899cb2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02d2515cee15ba92494fb306f0bfa761" id="r_a02d2515cee15ba92494fb306f0bfa761"><td class="memItemLeft" align="right" valign="top"><a id="a02d2515cee15ba92494fb306f0bfa761" name="a02d2515cee15ba92494fb306f0bfa761"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>DispatchMessage</b> (void *pInstance, <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;ref_msg) const</td></tr>
<tr class="memdesc:a02d2515cee15ba92494fb306f0bfa761"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dispatches the given message to the proper message handler, if there is one available. Returns true if so, false if no message handler for this type exists. <br /></td></tr>
<tr class="separator:a02d2515cee15ba92494fb306f0bfa761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3648efc379fce033fc5cf18ff2f0ecdf" id="r_a3648efc379fce033fc5cf18ff2f0ecdf"><td class="memItemLeft" align="right" valign="top"><a id="a3648efc379fce033fc5cf18ff2f0ecdf" name="a3648efc379fce033fc5cf18ff2f0ecdf"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>DispatchMessage</b> (const void *pInstance, <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;ref_msg) const</td></tr>
<tr class="memdesc:a3648efc379fce033fc5cf18ff2f0ecdf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dispatches the given message to the proper message handler, if there is one available. Returns true if so, false if no message handler for this type exists. <br /></td></tr>
<tr class="separator:a3648efc379fce033fc5cf18ff2f0ecdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ef07f1ba5eb1fbf2968949758b66c5b" id="r_a2ef07f1ba5eb1fbf2968949758b66c5b"><td class="memTemplParams" colspan="2"><a id="a2ef07f1ba5eb1fbf2968949758b66c5b" name="a2ef07f1ba5eb1fbf2968949758b66c5b"></a>
template&lt;typename MessageType &gt; </td></tr>
<tr class="memitem:a2ef07f1ba5eb1fbf2968949758b66c5b"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>CanHandleMessage</b> () const</td></tr>
<tr class="memdesc:a2ef07f1ba5eb1fbf2968949758b66c5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this type can handle the given message type. <br /></td></tr>
<tr class="separator:a2ef07f1ba5eb1fbf2968949758b66c5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e466fe5d1934f4dda0f49591d8a3cf9" id="r_a9e466fe5d1934f4dda0f49591d8a3cf9"><td class="memItemLeft" align="right" valign="top"><a id="a9e466fe5d1934f4dda0f49591d8a3cf9" name="a9e466fe5d1934f4dda0f49591d8a3cf9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>CanHandleMessage</b> (plMessageId id) const</td></tr>
<tr class="memdesc:a9e466fe5d1934f4dda0f49591d8a3cf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this type can handle the message type with the given id. <br /></td></tr>
<tr class="separator:a9e466fe5d1934f4dda0f49591d8a3cf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4573802b28eff742fc536d853f31c069" id="r_a4573802b28eff742fc536d853f31c069"><td class="memItemLeft" align="right" valign="top"><a id="a4573802b28eff742fc536d853f31c069" name="a4573802b28eff742fc536d853f31c069"></a>
PL_ALWAYS_INLINE const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../dc/d6f/structpl_message_sender_info.htm">plMessageSenderInfo</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetMessageSender</b> () const</td></tr>
<tr class="separator:a4573802b28eff742fc536d853f31c069"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1a80e228b0ef983b66bc1a07e53802c5" id="r_a1a80e228b0ef983b66bc1a07e53802c5"><td class="memItemLeft" align="right" valign="top"><a id="a1a80e228b0ef983b66bc1a07e53802c5" name="a1a80e228b0ef983b66bc1a07e53802c5"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>VerifyCorrectnessForAllTypes</b> ()</td></tr>
<tr class="memdesc:a1a80e228b0ef983b66bc1a07e53802c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls <a class="el" href="#afab379c9086667792fbcd24da09cf93d" title="Can be called in debug builds to check that all reflected objects are correctly set up.">VerifyCorrectness()</a> on all <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm" title="This class holds information about reflected types. Each instance represents one type that is known t...">plRTTI</a> objects. <br /></td></tr>
<tr class="separator:a1a80e228b0ef983b66bc1a07e53802c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accf1544111556c2c6c0513f8fcec224a" id="r_accf1544111556c2c6c0513f8fcec224a"><td class="memItemLeft" align="right" valign="top"><a id="accf1544111556c2c6c0513f8fcec224a" name="accf1544111556c2c6c0513f8fcec224a"></a>
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>FindTypeByName</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName)</td></tr>
<tr class="memdesc:accf1544111556c2c6c0513f8fcec224a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches all <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm" title="This class holds information about reflected types. Each instance represents one type that is known t...">plRTTI</a> instances for the one with the given name, or nullptr if no such type exists. <br /></td></tr>
<tr class="separator:accf1544111556c2c6c0513f8fcec224a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cc41851f2be25d1baf36d37657ecc03" id="r_a2cc41851f2be25d1baf36d37657ecc03"><td class="memItemLeft" align="right" valign="top"><a id="a2cc41851f2be25d1baf36d37657ecc03" name="a2cc41851f2be25d1baf36d37657ecc03"></a>
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>FindTypeByNameHash</b> (plUInt64 uiNameHash)</td></tr>
<tr class="memdesc:a2cc41851f2be25d1baf36d37657ecc03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches all <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm" title="This class holds information about reflected types. Each instance represents one type that is known t...">plRTTI</a> instances for the one with the given hashed name, or nullptr if no such type exists. <br /></td></tr>
<tr class="separator:a2cc41851f2be25d1baf36d37657ecc03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a739e7927ea8765eff3c8af163232e6b9" id="r_a739e7927ea8765eff3c8af163232e6b9"><td class="memItemLeft" align="right" valign="top"><a id="a739e7927ea8765eff3c8af163232e6b9" name="a739e7927ea8765eff3c8af163232e6b9"></a>
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>FindTypeByNameHash32</b> (plUInt32 uiNameHash)</td></tr>
<tr class="separator:a739e7927ea8765eff3c8af163232e6b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eb8e7cb411c4b4357a7a01b6029d81f" id="r_a8eb8e7cb411c4b4357a7a01b6029d81f"><td class="memItemLeft" align="right" valign="top"><a id="a8eb8e7cb411c4b4357a7a01b6029d81f" name="a8eb8e7cb411c4b4357a7a01b6029d81f"></a>
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>FindTypeIf</b> (<a class="el" href="../../df/df1/structpl_delegate.htm">PredicateFunc</a> func)</td></tr>
<tr class="memdesc:a8eb8e7cb411c4b4357a7a01b6029d81f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches all <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm" title="This class holds information about reflected types. Each instance represents one type that is known t...">plRTTI</a> instances for one where the given predicate function returns true. <br /></td></tr>
<tr class="separator:a8eb8e7cb411c4b4357a7a01b6029d81f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7099d1b63540077aa21013e49e31e32c" id="r_a7099d1b63540077aa21013e49e31e32c"><td class="memItemLeft" align="right" valign="top"><a id="a7099d1b63540077aa21013e49e31e32c" name="a7099d1b63540077aa21013e49e31e32c"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>ForEachType</b> (<a class="el" href="../../df/df1/structpl_delegate.htm">VisitorFunc</a> func, <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../df/dce/structpl_r_t_t_i_1_1_for_each_options.htm">ForEachOptions</a> &gt; options=ForEachOptions::Default)</td></tr>
<tr class="separator:a7099d1b63540077aa21013e49e31e32c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a979d49b464bf61fa3aa4e8dc205d14" id="r_a0a979d49b464bf61fa3aa4e8dc205d14"><td class="memItemLeft" align="right" valign="top"><a id="a0a979d49b464bf61fa3aa4e8dc205d14" name="a0a979d49b464bf61fa3aa4e8dc205d14"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>ForEachDerivedType</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pBaseType, <a class="el" href="../../df/df1/structpl_delegate.htm">VisitorFunc</a> func, <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../df/dce/structpl_r_t_t_i_1_1_for_each_options.htm">ForEachOptions</a> &gt; options=ForEachOptions::Default)</td></tr>
<tr class="separator:a0a979d49b464bf61fa3aa4e8dc205d14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5670ebcf409aec05954671c032165991" id="r_a5670ebcf409aec05954671c032165991"><td class="memTemplParams" colspan="2"><a id="a5670ebcf409aec05954671c032165991" name="a5670ebcf409aec05954671c032165991"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a5670ebcf409aec05954671c032165991"><td class="memTemplItemLeft" align="right" valign="top">static PL_ALWAYS_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ForEachDerivedType</b> (<a class="el" href="../../df/df1/structpl_delegate.htm">VisitorFunc</a> func, <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../df/dce/structpl_r_t_t_i_1_1_for_each_options.htm">ForEachOptions</a> &gt; options=ForEachOptions::Default)</td></tr>
<tr class="separator:a5670ebcf409aec05954671c032165991"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a259ddb1f0c8631cfa3dd71da6f747399" id="r_a259ddb1f0c8631cfa3dd71da6f747399"><td class="memItemLeft" align="right" valign="top"><a id="a259ddb1f0c8631cfa3dd71da6f747399" name="a259ddb1f0c8631cfa3dd71da6f747399"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateType</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pParentType, plUInt32 uiTypeSize, plUInt32 uiTypeVersion, plUInt8 uiVariantType, <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../dc/d91/structpl_type_flags.htm">plTypeFlags</a> &gt; flags)</td></tr>
<tr class="separator:a259ddb1f0c8631cfa3dd71da6f747399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98c66a8ec726f360bf02cb99c13f5f0f" id="r_a98c66a8ec726f360bf02cb99c13f5f0f"><td class="memItemLeft" align="right" valign="top"><a id="a98c66a8ec726f360bf02cb99c13f5f0f" name="a98c66a8ec726f360bf02cb99c13f5f0f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterType</b> ()</td></tr>
<tr class="separator:a98c66a8ec726f360bf02cb99c13f5f0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3252196e13fa1dd554f584c1574f80e1" id="r_a3252196e13fa1dd554f584c1574f80e1"><td class="memItemLeft" align="right" valign="top"><a id="a3252196e13fa1dd554f584c1574f80e1" name="a3252196e13fa1dd554f584c1574f80e1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UnregisterType</b> ()</td></tr>
<tr class="separator:a3252196e13fa1dd554f584c1574f80e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aa3b9cd62fefa237ba1dc4eb26ead61" id="r_a6aa3b9cd62fefa237ba1dc4eb26ead61"><td class="memItemLeft" align="right" valign="top"><a id="a6aa3b9cd62fefa237ba1dc4eb26ead61" name="a6aa3b9cd62fefa237ba1dc4eb26ead61"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GatherDynamicMessageHandlers</b> ()</td></tr>
<tr class="separator:a6aa3b9cd62fefa237ba1dc4eb26ead61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac21e7266ae35a1b5e835852d5538a94d" id="r_ac21e7266ae35a1b5e835852d5538a94d"><td class="memItemLeft" align="right" valign="top"><a id="ac21e7266ae35a1b5e835852d5538a94d" name="ac21e7266ae35a1b5e835852d5538a94d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetupParentHierarchy</b> ()</td></tr>
<tr class="separator:ac21e7266ae35a1b5e835852d5538a94d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a1a10bcfc9297165d658ea4f67d19c8a4" id="r_a1a10bcfc9297165d658ea4f67d19c8a4"><td class="memItemLeft" align="right" valign="top"><a id="a1a10bcfc9297165d658ea4f67d19c8a4" name="a1a10bcfc9297165d658ea4f67d19c8a4"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sPluginName</b></td></tr>
<tr class="separator:a1a10bcfc9297165d658ea4f67d19c8a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae98a74b12fb094e69acea47f0607f62" id="r_aae98a74b12fb094e69acea47f0607f62"><td class="memItemLeft" align="right" valign="top"><a id="aae98a74b12fb094e69acea47f0607f62" name="aae98a74b12fb094e69acea47f0607f62"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sTypeName</b></td></tr>
<tr class="separator:aae98a74b12fb094e69acea47f0607f62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8e2a5d60c87a9d4b5c8411c76a89127" id="r_ab8e2a5d60c87a9d4b5c8411c76a89127"><td class="memItemLeft" align="right" valign="top"><a id="ab8e2a5d60c87a9d4b5c8411c76a89127" name="ab8e2a5d60c87a9d4b5c8411c76a89127"></a>
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *const  &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Properties</b></td></tr>
<tr class="separator:ab8e2a5d60c87a9d4b5c8411c76a89127"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad938a5191fca15ed6cba08ae2c2d732c" id="r_ad938a5191fca15ed6cba08ae2c2d732c"><td class="memItemLeft" align="right" valign="top"><a id="ad938a5191fca15ed6cba08ae2c2d732c" name="ad938a5191fca15ed6cba08ae2c2d732c"></a>
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a> *const  &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Functions</b></td></tr>
<tr class="separator:ad938a5191fca15ed6cba08ae2c2d732c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab53625e5b26f4cbe5c824aee833b25b0" id="r_ab53625e5b26f4cbe5c824aee833b25b0"><td class="memItemLeft" align="right" valign="top"><a id="ab53625e5b26f4cbe5c824aee833b25b0" name="ab53625e5b26f4cbe5c824aee833b25b0"></a>
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const  &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:ab53625e5b26f4cbe5c824aee833b25b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b1e1670aa831aead2ec7fabbdf5e622" id="r_a9b1e1670aa831aead2ec7fabbdf5e622"><td class="memItemLeft" align="right" valign="top"><a id="a9b1e1670aa831aead2ec7fabbdf5e622" name="a9b1e1670aa831aead2ec7fabbdf5e622"></a>
const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pParentType</b> = nullptr</td></tr>
<tr class="separator:a9b1e1670aa831aead2ec7fabbdf5e622"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb5207f227428779db393528e3ca38ba" id="r_acb5207f227428779db393528e3ca38ba"><td class="memItemLeft" align="right" valign="top"><a id="acb5207f227428779db393528e3ca38ba" name="acb5207f227428779db393528e3ca38ba"></a>
<a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm">plRTTIAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pAllocator</b> = nullptr</td></tr>
<tr class="separator:acb5207f227428779db393528e3ca38ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3974901e469015fc93e9ff7821ecd38" id="r_ab3974901e469015fc93e9ff7821ecd38"><td class="memItemLeft" align="right" valign="top"><a id="ab3974901e469015fc93e9ff7821ecd38" name="ab3974901e469015fc93e9ff7821ecd38"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiTypeSize</b> = 0</td></tr>
<tr class="separator:ab3974901e469015fc93e9ff7821ecd38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36436cba2d467046d9b22712c82a4123" id="r_a36436cba2d467046d9b22712c82a4123"><td class="memItemLeft" align="right" valign="top"><a id="a36436cba2d467046d9b22712c82a4123" name="a36436cba2d467046d9b22712c82a4123"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiTypeVersion</b> = 0</td></tr>
<tr class="separator:a36436cba2d467046d9b22712c82a4123"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12d8c96723bc199d507510ea54b0e1c3" id="r_a12d8c96723bc199d507510ea54b0e1c3"><td class="memItemLeft" align="right" valign="top"><a id="a12d8c96723bc199d507510ea54b0e1c3" name="a12d8c96723bc199d507510ea54b0e1c3"></a>
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiTypeNameHash</b> = 0</td></tr>
<tr class="separator:a12d8c96723bc199d507510ea54b0e1c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86426fcefcad323af285f562295a8769" id="r_a86426fcefcad323af285f562295a8769"><td class="memItemLeft" align="right" valign="top"><a id="a86426fcefcad323af285f562295a8769" name="a86426fcefcad323af285f562295a8769"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiTypeIndex</b> = 0</td></tr>
<tr class="separator:a86426fcefcad323af285f562295a8769"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a522d6dd734c46bb00bbe015f1edf0381" id="r_a522d6dd734c46bb00bbe015f1edf0381"><td class="memItemLeft" align="right" valign="top"><a id="a522d6dd734c46bb00bbe015f1edf0381" name="a522d6dd734c46bb00bbe015f1edf0381"></a>
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../dc/d91/structpl_type_flags.htm">plTypeFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_TypeFlags</b></td></tr>
<tr class="separator:a522d6dd734c46bb00bbe015f1edf0381"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8074ff9365e06eb9dea0becb2d7537f6" id="r_a8074ff9365e06eb9dea0becb2d7537f6"><td class="memItemLeft" align="right" valign="top"><a id="a8074ff9365e06eb9dea0becb2d7537f6" name="a8074ff9365e06eb9dea0becb2d7537f6"></a>
plUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiVariantType</b> = 0</td></tr>
<tr class="separator:a8074ff9365e06eb9dea0becb2d7537f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa105121c16fd2ba97464d7dd44f91bf6" id="r_aa105121c16fd2ba97464d7dd44f91bf6"><td class="memItemLeft" align="right" valign="top"><a id="aa105121c16fd2ba97464d7dd44f91bf6" name="aa105121c16fd2ba97464d7dd44f91bf6"></a>
plUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiMsgIdOffset</b> = plSmallInvalidIndex</td></tr>
<tr class="separator:aa105121c16fd2ba97464d7dd44f91bf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeb002708b194c4caeec2f5e65829735" id="r_afeb002708b194c4caeec2f5e65829735"><td class="memItemLeft" align="right" valign="top"><a id="afeb002708b194c4caeec2f5e65829735" name="afeb002708b194c4caeec2f5e65829735"></a>
const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><b>m_VerifyParent</b> )()</td></tr>
<tr class="separator:afeb002708b194c4caeec2f5e65829735"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3f5d0df7ec66ab0230cd38c1c70f347" id="r_af3f5d0df7ec66ab0230cd38c1c70f347"><td class="memItemLeft" align="right" valign="top"><a id="af3f5d0df7ec66ab0230cd38c1c70f347" name="af3f5d0df7ec66ab0230cd38c1c70f347"></a>
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../d1/d8e/classpl_abstract_message_handler.htm">plAbstractMessageHandler</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_MessageHandlers</b></td></tr>
<tr class="separator:af3f5d0df7ec66ab0230cd38c1c70f347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a632de29f0b97abe12b67c1f8cf31f510" id="r_a632de29f0b97abe12b67c1f8cf31f510"><td class="memItemLeft" align="right" valign="top"><a id="a632de29f0b97abe12b67c1f8cf31f510" name="a632de29f0b97abe12b67c1f8cf31f510"></a>
<a class="el" href="../../df/dd9/classpl_small_array.htm">plSmallArray</a>&lt; <a class="el" href="../../d1/d8e/classpl_abstract_message_handler.htm">plAbstractMessageHandler</a> *, 1, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_DynamicMessageHandlers</b></td></tr>
<tr class="separator:a632de29f0b97abe12b67c1f8cf31f510"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82db9158b3c870c45fac5b1b1280c6d4" id="r_a82db9158b3c870c45fac5b1b1280c6d4"><td class="memItemLeft" align="right" valign="top"><a id="a82db9158b3c870c45fac5b1b1280c6d4" name="a82db9158b3c870c45fac5b1b1280c6d4"></a>
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../dc/d6f/structpl_message_sender_info.htm">plMessageSenderInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_MessageSenders</b></td></tr>
<tr class="separator:a82db9158b3c870c45fac5b1b1280c6d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a961ec87765634f820b7241248a65a944" id="r_a961ec87765634f820b7241248a65a944"><td class="memItemLeft" align="right" valign="top"><a id="a961ec87765634f820b7241248a65a944" name="a961ec87765634f820b7241248a65a944"></a>
<a class="el" href="../../df/dd9/classpl_small_array.htm">plSmallArray</a>&lt; const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *, 7, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_ParentHierarchy</b></td></tr>
<tr class="separator:a961ec87765634f820b7241248a65a944"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class holds information about reflected types. Each instance represents one type that is known to the reflection system. </p>
<p>Instances of this class are typically created through the macros from the <a class="el" href="../../d2/d39/_static_r_t_t_i_8h_source.htm">StaticRTTI.h</a> header. Each instance represents one type. This class holds information about derivation hierarchies and exposed properties. You can thus find out whether a type is derived from some base class and what properties of which types are available. Properties can then be read and modified on instances of this type. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../de/dd7/_r_t_t_i_8h_source.htm">RTTI.h</a></li>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../db/db5/_property_attributes_8h_source.htm">PropertyAttributes.h</a></li>
<li>Code/Engine/Foundation/Reflection/Implementation/<b>RTTI.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
