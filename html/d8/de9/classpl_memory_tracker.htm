<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plMemoryTracker Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d8/de9/classpl_memory_tracker.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d1/db7/classpl_memory_tracker-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plMemoryTracker Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Memory tracker which keeps track of all allocations and constructions.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/d00/_memory_tracker_8h_source.htm">MemoryTracker.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d75/structpl_memory_tracker_1_1_allocation_info.htm">AllocationInfo</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d4f/classpl_memory_tracker_1_1_iterator.htm">Iterator</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a0d702d9cc5e9a11fd47d451e468d59fd" id="r_a0d702d9cc5e9a11fd47d451e468d59fd"><td class="memItemLeft" align="right" valign="top"><a id="a0d702d9cc5e9a11fd47d451e468d59fd" name="a0d702d9cc5e9a11fd47d451e468d59fd"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>PrintFunc</b> = void (*)(const char* szLine)</td></tr>
<tr class="memdesc:a0d702d9cc5e9a11fd47d451e468d59fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Callback for printing strings. <br /></td></tr>
<tr class="separator:a0d702d9cc5e9a11fd47d451e468d59fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a70e27243e302f80b2e6f48778b090061" id="r_a70e27243e302f80b2e6f48778b090061"><td class="memItemLeft" align="right" valign="top"><a id="a70e27243e302f80b2e6f48778b090061" name="a70e27243e302f80b2e6f48778b090061"></a>
static <a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a>&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterAllocator</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, plAllocatorTrackingMode mode, <a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> parentId)</td></tr>
<tr class="separator:a70e27243e302f80b2e6f48778b090061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3fff80dee53e7f7a3ba084ab8600afc" id="r_af3fff80dee53e7f7a3ba084ab8600afc"><td class="memItemLeft" align="right" valign="top"><a id="af3fff80dee53e7f7a3ba084ab8600afc" name="af3fff80dee53e7f7a3ba084ab8600afc"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>DeregisterAllocator</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId)</td></tr>
<tr class="separator:af3fff80dee53e7f7a3ba084ab8600afc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a120894f2212680d90ce83065284b7c5c" id="r_a120894f2212680d90ce83065284b7c5c"><td class="memItemLeft" align="right" valign="top"><a id="a120894f2212680d90ce83065284b7c5c" name="a120894f2212680d90ce83065284b7c5c"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>AddAllocation</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId, plAllocatorTrackingMode mode, const void *pPtr, size_t uiSize, size_t uiAlign, <a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> allocationTime)</td></tr>
<tr class="separator:a120894f2212680d90ce83065284b7c5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa59ac11128dae33f572cf8e12d1ef36e" id="r_aa59ac11128dae33f572cf8e12d1ef36e"><td class="memItemLeft" align="right" valign="top"><a id="aa59ac11128dae33f572cf8e12d1ef36e" name="aa59ac11128dae33f572cf8e12d1ef36e"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAllocation</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId, const void *pPtr)</td></tr>
<tr class="separator:aa59ac11128dae33f572cf8e12d1ef36e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c6150190ae2483f95ebb38859d0d37b" id="r_a5c6150190ae2483f95ebb38859d0d37b"><td class="memItemLeft" align="right" valign="top"><a id="a5c6150190ae2483f95ebb38859d0d37b" name="a5c6150190ae2483f95ebb38859d0d37b"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAllAllocations</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId)</td></tr>
<tr class="separator:a5c6150190ae2483f95ebb38859d0d37b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a595a647f3ceff3adbb5c95d4a3ed4857" id="r_a595a647f3ceff3adbb5c95d4a3ed4857"><td class="memItemLeft" align="right" valign="top"><a id="a595a647f3ceff3adbb5c95d4a3ed4857" name="a595a647f3ceff3adbb5c95d4a3ed4857"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAllocatorStats</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId, const <a class="el" href="../../d5/df8/structpl_allocator_1_1_stats.htm">plAllocator::Stats</a> &amp;stats)</td></tr>
<tr class="separator:a595a647f3ceff3adbb5c95d4a3ed4857"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc26589cfca4fdc7ecebce295c8079e1" id="r_adc26589cfca4fdc7ecebce295c8079e1"><td class="memItemLeft" align="right" valign="top"><a id="adc26589cfca4fdc7ecebce295c8079e1" name="adc26589cfca4fdc7ecebce295c8079e1"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>ResetPerFrameAllocatorStats</b> ()</td></tr>
<tr class="separator:adc26589cfca4fdc7ecebce295c8079e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8369dc245753924647ba54345a7e4966" id="r_a8369dc245753924647ba54345a7e4966"><td class="memItemLeft" align="right" valign="top"><a id="a8369dc245753924647ba54345a7e4966" name="a8369dc245753924647ba54345a7e4966"></a>
static <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocatorName</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId)</td></tr>
<tr class="separator:a8369dc245753924647ba54345a7e4966"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad826b5426c4b0633a749523bc1d5de61" id="r_ad826b5426c4b0633a749523bc1d5de61"><td class="memItemLeft" align="right" valign="top"><a id="ad826b5426c4b0633a749523bc1d5de61" name="ad826b5426c4b0633a749523bc1d5de61"></a>
static const <a class="el" href="../../d5/df8/structpl_allocator_1_1_stats.htm">plAllocator::Stats</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocatorStats</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId)</td></tr>
<tr class="separator:ad826b5426c4b0633a749523bc1d5de61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0be00ac37534adc4711d635ac9c8876" id="r_ae0be00ac37534adc4711d635ac9c8876"><td class="memItemLeft" align="right" valign="top"><a id="ae0be00ac37534adc4711d635ac9c8876" name="ae0be00ac37534adc4711d635ac9c8876"></a>
static <a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocatorParentId</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId)</td></tr>
<tr class="separator:ae0be00ac37534adc4711d635ac9c8876"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac2160fa6386abb619f0a3fc69f60782" id="r_aac2160fa6386abb619f0a3fc69f60782"><td class="memItemLeft" align="right" valign="top"><a id="aac2160fa6386abb619f0a3fc69f60782" name="aac2160fa6386abb619f0a3fc69f60782"></a>
static const <a class="el" href="../../de/d75/structpl_memory_tracker_1_1_allocation_info.htm">AllocationInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocationInfo</b> (<a class="el" href="../../dd/d49/structpl_generic_id.htm">plAllocatorId</a> allocatorId, const void *pPtr)</td></tr>
<tr class="separator:aac2160fa6386abb619f0a3fc69f60782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a797fe202891a5ff3813821e3598cbe6d" id="r_a797fe202891a5ff3813821e3598cbe6d"><td class="memItemLeft" align="right" valign="top"><a id="a797fe202891a5ff3813821e3598cbe6d" name="a797fe202891a5ff3813821e3598cbe6d"></a>
static <a class="el" href="../../d5/d4f/classpl_memory_tracker_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> ()</td></tr>
<tr class="separator:a797fe202891a5ff3813821e3598cbe6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5693191926a409bbcfe568c9410c03c8" id="r_a5693191926a409bbcfe568c9410c03c8"><td class="memItemLeft" align="right" valign="top">static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5693191926a409bbcfe568c9410c03c8">PrintMemoryLeaks</a> (<a class="el" href="#a0d702d9cc5e9a11fd47d451e468d59fd">PrintFunc</a> printfunc)</td></tr>
<tr class="memdesc:a5693191926a409bbcfe568c9410c03c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reports back information about all currently known root memory leaks.  <br /></td></tr>
<tr class="separator:a5693191926a409bbcfe568c9410c03c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8d3a1f4521bf1eed2fa163c0f261f55" id="r_af8d3a1f4521bf1eed2fa163c0f261f55"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af8d3a1f4521bf1eed2fa163c0f261f55">DumpMemoryLeaks</a> ()</td></tr>
<tr class="memdesc:af8d3a1f4521bf1eed2fa163c0f261f55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Prints the known memory leaks to <a class="el" href="../../dc/d24/classpl_log.htm" title="Static class that allows to write out logging information.">plLog</a> and triggers an assert if there are any.  <br /></td></tr>
<tr class="separator:af8d3a1f4521bf1eed2fa163c0f261f55"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Memory tracker which keeps track of all allocations and constructions. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af8d3a1f4521bf1eed2fa163c0f261f55" name="af8d3a1f4521bf1eed2fa163c0f261f55"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af8d3a1f4521bf1eed2fa163c0f261f55">&#9670;&#160;</a></span>DumpMemoryLeaks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plMemoryTracker::DumpMemoryLeaks </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Prints the known memory leaks to <a class="el" href="../../dc/d24/classpl_log.htm" title="Static class that allows to write out logging information.">plLog</a> and triggers an assert if there are any. </p>
<p>This is useful to call at the end of an application, to get a debug breakpoint in case of memory leaks. </p>

</div>
</div>
<a id="a5693191926a409bbcfe568c9410c03c8" name="a5693191926a409bbcfe568c9410c03c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5693191926a409bbcfe568c9410c03c8">&#9670;&#160;</a></span>PrintMemoryLeaks()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">plUInt32 plMemoryTracker::PrintMemoryLeaks </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="#a0d702d9cc5e9a11fd47d451e468d59fd">PrintFunc</a></td>          <td class="paramname"><span class="paramname"><em>printfunc</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reports back information about all currently known root memory leaks. </p>
<p>Returns the number of found memory leaks. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Memory/<a class="el" href="../../dd/d00/_memory_tracker_8h_source.htm">MemoryTracker.h</a></li>
<li>Code/Engine/Foundation/Memory/Implementation/<b>MemoryTracker.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/de9/classpl_memory_tracker.htm">plMemoryTracker</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
