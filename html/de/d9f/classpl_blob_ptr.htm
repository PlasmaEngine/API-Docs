<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plBlobPtr&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('de/d9f/classpl_blob_ptr.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d5/de3/classpl_blob_ptr-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plBlobPtr&lt; T &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>This class encapsulates a blob's storage and it's size. It is recommended to use this class instead of directly working on the void* of the blob.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/da9/_blob_8h_source.htm">Blob.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a8724ce578b85c6de714ba85e182c4fdd" id="r_a8724ce578b85c6de714ba85e182c4fdd"><td class="memItemLeft" align="right" valign="top"><a id="a8724ce578b85c6de714ba85e182c4fdd" name="a8724ce578b85c6de714ba85e182c4fdd"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ByteType</b> = typename <a class="el" href="../../de/d25/structpl_array_ptr_detail_1_1_byte_type_helper.htm">plArrayPtrDetail::ByteTypeHelper</a>&lt;T&gt;::type</td></tr>
<tr class="separator:a8724ce578b85c6de714ba85e182c4fdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd9f8a75fad9b7f020b1bcdfc391e5ba" id="r_afd9f8a75fad9b7f020b1bcdfc391e5ba"><td class="memItemLeft" align="right" valign="top"><a id="afd9f8a75fad9b7f020b1bcdfc391e5ba" name="afd9f8a75fad9b7f020b1bcdfc391e5ba"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ValueType</b> = T</td></tr>
<tr class="separator:afd9f8a75fad9b7f020b1bcdfc391e5ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af92a7013868d7dbb34c58f6001c42442" id="r_af92a7013868d7dbb34c58f6001c42442"><td class="memItemLeft" align="right" valign="top"><a id="af92a7013868d7dbb34c58f6001c42442" name="af92a7013868d7dbb34c58f6001c42442"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>PointerType</b> = T*</td></tr>
<tr class="separator:af92a7013868d7dbb34c58f6001c42442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45c7c752653f7295889fc5dcf323627a" id="r_a45c7c752653f7295889fc5dcf323627a"><td class="memItemLeft" align="right" valign="top"><a id="a45c7c752653f7295889fc5dcf323627a" name="a45c7c752653f7295889fc5dcf323627a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T*</td></tr>
<tr class="separator:a45c7c752653f7295889fc5dcf323627a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac985477cb9222044f54b475b3b8c6b26" id="r_ac985477cb9222044f54b475b3b8c6b26"><td class="memItemLeft" align="right" valign="top"><a id="ac985477cb9222044f54b475b3b8c6b26" name="ac985477cb9222044f54b475b3b8c6b26"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt;T&gt;</td></tr>
<tr class="separator:ac985477cb9222044f54b475b3b8c6b26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e39b3630deea4c91153c5367563a5f6" id="r_a1e39b3630deea4c91153c5367563a5f6"><td class="memItemLeft" align="right" valign="top"><a id="a1e39b3630deea4c91153c5367563a5f6" name="a1e39b3630deea4c91153c5367563a5f6"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T*</td></tr>
<tr class="separator:a1e39b3630deea4c91153c5367563a5f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41e0d91e1f581fd24b52f5778552db85" id="r_a41e0d91e1f581fd24b52f5778552db85"><td class="memItemLeft" align="right" valign="top"><a id="a41e0d91e1f581fd24b52f5778552db85" name="a41e0d91e1f581fd24b52f5778552db85"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt;T&gt;</td></tr>
<tr class="separator:a41e0d91e1f581fd24b52f5778552db85"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad0028714e310006e33ff4e5b8444f12a" id="r_ad0028714e310006e33ff4e5b8444f12a"><td class="memItemLeft" align="right" valign="top"><a id="ad0028714e310006e33ff4e5b8444f12a" name="ad0028714e310006e33ff4e5b8444f12a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:ad0028714e310006e33ff4e5b8444f12a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe46fe80e88646a92fa5cac2067e018d" id="r_afe46fe80e88646a92fa5cac2067e018d"><td class="memItemLeft" align="right" valign="top"><a id="afe46fe80e88646a92fa5cac2067e018d" name="afe46fe80e88646a92fa5cac2067e018d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plBlobPtr</b> ()=default</td></tr>
<tr class="memdesc:afe46fe80e88646a92fa5cac2067e018d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../de/d9f/classpl_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">plBlobPtr</a> to be empty. <br /></td></tr>
<tr class="separator:afe46fe80e88646a92fa5cac2067e018d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed465fa2b13a791836eb1f31378e4fc3" id="r_aed465fa2b13a791836eb1f31378e4fc3"><td class="memTemplParams" colspan="2"><a id="aed465fa2b13a791836eb1f31378e4fc3" name="aed465fa2b13a791836eb1f31378e4fc3"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aed465fa2b13a791836eb1f31378e4fc3"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><b>plBlobPtr</b> (U *pPtr, plUInt64 uiCount)</td></tr>
<tr class="memdesc:aed465fa2b13a791836eb1f31378e4fc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../de/d9f/classpl_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">plBlobPtr</a> with the given pointer and number of elements. No memory is allocated or copied. <br /></td></tr>
<tr class="separator:aed465fa2b13a791836eb1f31378e4fc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a206c83c6aad1faa9339b97ea9c0fc6aa" id="r_a206c83c6aad1faa9339b97ea9c0fc6aa"><td class="memTemplParams" colspan="2"><a id="a206c83c6aad1faa9339b97ea9c0fc6aa" name="a206c83c6aad1faa9339b97ea9c0fc6aa"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a206c83c6aad1faa9339b97ea9c0fc6aa"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>plBlobPtr</b> (ValueType(&amp;staticArray)[N])</td></tr>
<tr class="memdesc:a206c83c6aad1faa9339b97ea9c0fc6aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../de/d9f/classpl_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">plBlobPtr</a> to encapsulate the given array. <br /></td></tr>
<tr class="separator:a206c83c6aad1faa9339b97ea9c0fc6aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6f6ac0bc68d05851ff67eb0fa803b33" id="r_aa6f6ac0bc68d05851ff67eb0fa803b33"><td class="memItemLeft" align="right" valign="top"><a id="aa6f6ac0bc68d05851ff67eb0fa803b33" name="aa6f6ac0bc68d05851ff67eb0fa803b33"></a>
PL_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>plBlobPtr</b> (const <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:aa6f6ac0bc68d05851ff67eb0fa803b33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../de/d9f/classpl_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">plBlobPtr</a> to be a copy of <em>other</em>. No memory is allocated or copied. <br /></td></tr>
<tr class="separator:aa6f6ac0bc68d05851ff67eb0fa803b33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c6b9a0be65270417c4558b96d46022f" id="r_a1c6b9a0be65270417c4558b96d46022f"><td class="memItemLeft" align="right" valign="top"><a id="a1c6b9a0be65270417c4558b96d46022f" name="a1c6b9a0be65270417c4558b96d46022f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator plBlobPtr&lt; const T &gt;</b> () const</td></tr>
<tr class="memdesc:a1c6b9a0be65270417c4558b96d46022f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to const version. <br /></td></tr>
<tr class="separator:a1c6b9a0be65270417c4558b96d46022f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52c7c2be025f7d51bb42d5299df9f5f0" id="r_a52c7c2be025f7d51bb42d5299df9f5f0"><td class="memItemLeft" align="right" valign="top"><a id="a52c7c2be025f7d51bb42d5299df9f5f0" name="a52c7c2be025f7d51bb42d5299df9f5f0"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a52c7c2be025f7d51bb42d5299df9f5f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the pointer and size of /a other. Does not allocate any data. <br /></td></tr>
<tr class="separator:a52c7c2be025f7d51bb42d5299df9f5f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f0dd6cb4e640bf2337639da55c2e089" id="r_a3f0dd6cb4e640bf2337639da55c2e089"><td class="memItemLeft" align="right" valign="top"><a id="a3f0dd6cb4e640bf2337639da55c2e089" name="a3f0dd6cb4e640bf2337639da55c2e089"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a3f0dd6cb4e640bf2337639da55c2e089"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a3f0dd6cb4e640bf2337639da55c2e089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7559b745dec1f6d6eb8a2ac6a8448024" id="r_a7559b745dec1f6d6eb8a2ac6a8448024"><td class="memItemLeft" align="right" valign="top"><a id="a7559b745dec1f6d6eb8a2ac6a8448024" name="a7559b745dec1f6d6eb8a2ac6a8448024"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (std::nullptr_t)</td></tr>
<tr class="separator:a7559b745dec1f6d6eb8a2ac6a8448024"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae00d7e381c57855d878e0c92d896e8f3" id="r_ae00d7e381c57855d878e0c92d896e8f3"><td class="memItemLeft" align="right" valign="top"><a id="ae00d7e381c57855d878e0c92d896e8f3" name="ae00d7e381c57855d878e0c92d896e8f3"></a>
PL_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><b>GetPtr</b> () const</td></tr>
<tr class="memdesc:ae00d7e381c57855d878e0c92d896e8f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the array. <br /></td></tr>
<tr class="separator:ae00d7e381c57855d878e0c92d896e8f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae069d876fd8a643d5923c0ad824e6c65" id="r_ae069d876fd8a643d5923c0ad824e6c65"><td class="memItemLeft" align="right" valign="top"><a id="ae069d876fd8a643d5923c0ad824e6c65" name="ae069d876fd8a643d5923c0ad824e6c65"></a>
PL_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><b>GetPtr</b> ()</td></tr>
<tr class="memdesc:ae069d876fd8a643d5923c0ad824e6c65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the array. <br /></td></tr>
<tr class="separator:ae069d876fd8a643d5923c0ad824e6c65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fd9d28329b47e424d4632472f714397" id="r_a9fd9d28329b47e424d4632472f714397"><td class="memItemLeft" align="right" valign="top"><a id="a9fd9d28329b47e424d4632472f714397" name="a9fd9d28329b47e424d4632472f714397"></a>
PL_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><b>GetEndPtr</b> ()</td></tr>
<tr class="memdesc:a9fd9d28329b47e424d4632472f714397"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer behind the last element of the array. <br /></td></tr>
<tr class="separator:a9fd9d28329b47e424d4632472f714397"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaac51c404d02b0d8dcb39c88c37778c5" id="r_aaac51c404d02b0d8dcb39c88c37778c5"><td class="memItemLeft" align="right" valign="top"><a id="aaac51c404d02b0d8dcb39c88c37778c5" name="aaac51c404d02b0d8dcb39c88c37778c5"></a>
PL_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><b>GetEndPtr</b> () const</td></tr>
<tr class="memdesc:aaac51c404d02b0d8dcb39c88c37778c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer behind the last element of the array. <br /></td></tr>
<tr class="separator:aaac51c404d02b0d8dcb39c88c37778c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2e731f81087babac8c919d22f7ba210" id="r_af2e731f81087babac8c919d22f7ba210"><td class="memItemLeft" align="right" valign="top"><a id="af2e731f81087babac8c919d22f7ba210" name="af2e731f81087babac8c919d22f7ba210"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:af2e731f81087babac8c919d22f7ba210"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the array is empty. <br /></td></tr>
<tr class="separator:af2e731f81087babac8c919d22f7ba210"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbf81f461ce2476173f1b68f8a7ac423" id="r_afbf81f461ce2476173f1b68f8a7ac423"><td class="memItemLeft" align="right" valign="top"><a id="afbf81f461ce2476173f1b68f8a7ac423" name="afbf81f461ce2476173f1b68f8a7ac423"></a>
PL_ALWAYS_INLINE plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:afbf81f461ce2476173f1b68f8a7ac423"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements in the array. <br /></td></tr>
<tr class="separator:afbf81f461ce2476173f1b68f8a7ac423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8b1fc0bef042c1cdd857ddc7ba5f0ad" id="r_ad8b1fc0bef042c1cdd857ddc7ba5f0ad"><td class="memItemLeft" align="right" valign="top"><a id="ad8b1fc0bef042c1cdd857ddc7ba5f0ad" name="ad8b1fc0bef042c1cdd857ddc7ba5f0ad"></a>
PL_FORCE_INLINE <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetSubArray</b> (plUInt64 uiStart, plUInt64 uiCount) const</td></tr>
<tr class="memdesc:ad8b1fc0bef042c1cdd857ddc7ba5f0ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sub-array from this array. <br /></td></tr>
<tr class="separator:ad8b1fc0bef042c1cdd857ddc7ba5f0ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8caeb6e10f64409a01261489edad13c0" id="r_a8caeb6e10f64409a01261489edad13c0"><td class="memItemLeft" align="right" valign="top">PL_FORCE_INLINE <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8caeb6e10f64409a01261489edad13c0">GetSubArray</a> (plUInt64 uiStart) const</td></tr>
<tr class="memdesc:a8caeb6e10f64409a01261489edad13c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sub-array from this array.  <br /></td></tr>
<tr class="separator:a8caeb6e10f64409a01261489edad13c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa60c0bdc885357e8f9aa2fd2a1e1fb49" id="r_aa60c0bdc885357e8f9aa2fd2a1e1fb49"><td class="memItemLeft" align="right" valign="top"><a id="aa60c0bdc885357e8f9aa2fd2a1e1fb49" name="aa60c0bdc885357e8f9aa2fd2a1e1fb49"></a>
PL_ALWAYS_INLINE <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; const ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>ToByteBlob</b> () const</td></tr>
<tr class="memdesc:aa60c0bdc885357e8f9aa2fd2a1e1fb49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reinterprets this array as a byte array. <br /></td></tr>
<tr class="separator:aa60c0bdc885357e8f9aa2fd2a1e1fb49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c0c3e72f6a8c631d9e8fc6bde68df60" id="r_a9c0c3e72f6a8c631d9e8fc6bde68df60"><td class="memItemLeft" align="right" valign="top"><a id="a9c0c3e72f6a8c631d9e8fc6bde68df60" name="a9c0c3e72f6a8c631d9e8fc6bde68df60"></a>
PL_ALWAYS_INLINE <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>ToByteBlob</b> ()</td></tr>
<tr class="memdesc:a9c0c3e72f6a8c631d9e8fc6bde68df60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reinterprets this array as a byte array. <br /></td></tr>
<tr class="separator:a9c0c3e72f6a8c631d9e8fc6bde68df60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8e3c7e4f60c80eb427c53d299764ad5" id="r_af8e3c7e4f60c80eb427c53d299764ad5"><td class="memTemplParams" colspan="2"><a id="af8e3c7e4f60c80eb427c53d299764ad5" name="af8e3c7e4f60c80eb427c53d299764ad5"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:af8e3c7e4f60c80eb427c53d299764ad5"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Cast</b> ()</td></tr>
<tr class="memdesc:af8e3c7e4f60c80eb427c53d299764ad5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cast an BlobPtr to an BlobPtr to a different, but same size, type. <br /></td></tr>
<tr class="separator:af8e3c7e4f60c80eb427c53d299764ad5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7211baec49e09cc4124594505c1752c" id="r_ab7211baec49e09cc4124594505c1752c"><td class="memTemplParams" colspan="2"><a id="ab7211baec49e09cc4124594505c1752c" name="ab7211baec49e09cc4124594505c1752c"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ab7211baec49e09cc4124594505c1752c"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; const U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Cast</b> () const</td></tr>
<tr class="memdesc:ab7211baec49e09cc4124594505c1752c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cast an BlobPtr to an BlobPtr to a different, but same size, type. <br /></td></tr>
<tr class="separator:ab7211baec49e09cc4124594505c1752c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44ff00984d8dc02dcc3d896c854be72c" id="r_a44ff00984d8dc02dcc3d896c854be72c"><td class="memItemLeft" align="right" valign="top"><a id="a44ff00984d8dc02dcc3d896c854be72c" name="a44ff00984d8dc02dcc3d896c854be72c"></a>
PL_FORCE_INLINE const ValueType &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (plUInt64 uiIndex) const</td></tr>
<tr class="memdesc:a44ff00984d8dc02dcc3d896c854be72c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index access. <br /></td></tr>
<tr class="separator:a44ff00984d8dc02dcc3d896c854be72c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d60a95452ad7619c9573bbf90391f8f" id="r_a1d60a95452ad7619c9573bbf90391f8f"><td class="memItemLeft" align="right" valign="top"><a id="a1d60a95452ad7619c9573bbf90391f8f" name="a1d60a95452ad7619c9573bbf90391f8f"></a>
PL_FORCE_INLINE ValueType &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (plUInt64 uiIndex)</td></tr>
<tr class="memdesc:a1d60a95452ad7619c9573bbf90391f8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index access. <br /></td></tr>
<tr class="separator:a1d60a95452ad7619c9573bbf90391f8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05e1b0f4cc1891c560f280e29ba48f9d" id="r_a05e1b0f4cc1891c560f280e29ba48f9d"><td class="memItemLeft" align="right" valign="top"><a id="a05e1b0f4cc1891c560f280e29ba48f9d" name="a05e1b0f4cc1891c560f280e29ba48f9d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; const T &gt; &amp;other) const</td></tr>
<tr class="memdesc:a05e1b0f4cc1891c560f280e29ba48f9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the two arrays for equality. <br /></td></tr>
<tr class="separator:a05e1b0f4cc1891c560f280e29ba48f9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9f0bd7f8cb25d3e5f7c68ef5b7cb357" id="r_aa9f0bd7f8cb25d3e5f7c68ef5b7cb357"><td class="memItemLeft" align="right" valign="top"><a id="aa9f0bd7f8cb25d3e5f7c68ef5b7cb357" name="aa9f0bd7f8cb25d3e5f7c68ef5b7cb357"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; const T &gt; &amp;other) const</td></tr>
<tr class="memdesc:aa9f0bd7f8cb25d3e5f7c68ef5b7cb357"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the two arrays for inequality. <br /></td></tr>
<tr class="separator:aa9f0bd7f8cb25d3e5f7c68ef5b7cb357"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e3b9c9635095a88432a9f81134559cc" id="r_a9e3b9c9635095a88432a9f81134559cc"><td class="memItemLeft" align="right" valign="top"><a id="a9e3b9c9635095a88432a9f81134559cc" name="a9e3b9c9635095a88432a9f81134559cc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CopyFrom</b> (const <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="memdesc:a9e3b9c9635095a88432a9f81134559cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>other</em> into this array. The arrays must have the exact same size. <br /></td></tr>
<tr class="separator:a9e3b9c9635095a88432a9f81134559cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac180fe681be0b95999ca66eff290b62e" id="r_ac180fe681be0b95999ca66eff290b62e"><td class="memItemLeft" align="right" valign="top"><a id="ac180fe681be0b95999ca66eff290b62e" name="ac180fe681be0b95999ca66eff290b62e"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="separator:ac180fe681be0b95999ca66eff290b62e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename T&gt;<br />
class plBlobPtr&lt; T &gt;</div><p>This class encapsulates a blob's storage and it's size. It is recommended to use this class instead of directly working on the void* of the blob. </p>
<p>No data is deallocated at destruction, the <a class="el" href="../../de/d9f/classpl_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">plBlobPtr</a> only allows for easier access. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a8caeb6e10f64409a01261489edad13c0" name="a8caeb6e10f64409a01261489edad13c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8caeb6e10f64409a01261489edad13c0">&#9670;&#160;</a></span>GetSubArray()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PL_FORCE_INLINE <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; T &gt; <a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a>&lt; T &gt;::GetSubArray </td>
          <td>(</td>
          <td class="paramtype">plUInt64</td>          <td class="paramname"><span class="paramname"><em>uiStart</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a sub-array from this array. </p>
<dl class="section note"><dt>Note</dt><dd><div class="fragment"><div class="line">ap.GetSubArray(i) </div>
</div><!-- fragment --> is equivalent to <div class="fragment"><div class="line">ap.GetSubArray(i, ap.GetCount() - i) </div>
</div><!-- fragment -->. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../d3/da9/_blob_8h_source.htm">Blob.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../de/d9f/classpl_blob_ptr.htm">plBlobPtr</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
