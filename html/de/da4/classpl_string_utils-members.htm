<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Member List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('de/d4d/classpl_string_utils.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">plStringUtils Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ab65ce3d2b47bd8abd02025c340a029e9">CalculateLineNumber</a>(const char *szString, const char *szOffset, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a7b21ecc35f92bff6ff21d0822077eaa6">Compare</a>(const char *pString1, const char *pString2, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a07ab9e86704a1d319a455456d2d8ab94">Compare_NoCase</a>(const char *pString1, const char *pString2, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a4ccac70b4088fb22a1672c0b218b521c">CompareChars</a>(plUInt32 uiCharacter1, plUInt32 uiCharacter2)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ae6e3115137a813c8e4600c6110fac599">CompareChars</a>(const char *szUtf8Char1, const char *szUtf8Char2)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a22210caae00b66f1f02b4affe722fd6d">CompareChars_NoCase</a>(plUInt32 uiCharacter1, plUInt32 uiCharacter2)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ac4ebe92d8c561fb3921350a35cbaf9dc">CompareChars_NoCase</a>(const char *szUtf8Char1, const char *szUtf8Char2)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a22aeb4d20b7672aea4e05fa163244cca">CompareN</a>(const char *pString1, const char *pString2, plUInt32 uiCharsToCompare, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a267c56a514681d441d714a70e12f3d0a">CompareN_NoCase</a>(const char *pString1, const char *pString2, plUInt32 uiCharsToCompare, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ae3171be9af59ccd6faa74055858e3a60">Copy</a>(char *szDest, plUInt32 uiDstSize, const char *szSource, const char *pSourceEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a13b297cba40ffa5019cc0233ba797ccc">CopyN</a>(char *szDest, plUInt32 uiDstSize, const char *szSource, plUInt32 uiCharsToCopy, const char *pSourceEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a838eada49316bf517333d30ec38d3b4c">EndsWith</a>(const char *szString, const char *szEndsWith, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szEndsWithEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a4d30321cef0e930af1a5f510d85eb82e">EndsWith_NoCase</a>(const char *szString, const char *szEndsWith, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szEndsWithEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ae91a8556266df1ec41400e10c7430914">FindLastSubString</a>(const char *szSource, const char *szStringToFind, const char *szStartSearchAt=nullptr, const char *pSourceEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ac00851da0fe9a6a1a1f9383befb50820">FindLastSubString_NoCase</a>(const char *szSource, const char *szStringToFind, const char *szStartSearchAt=nullptr, const char *pSourceEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a57b8e9f8cd1a2821d8dad1e050ed6f77">FindSubString</a>(const char *szSource, const char *szStringToFind, const char *pSourceEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a377e785747082b885661b4be55481134">FindSubString_NoCase</a>(const char *szSource, const char *szStringToFind, const char *pSourceEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ad43c29b31db4088c95fb62e599295c6e">FindUIntAtTheEnd</a>(const char *szString, plUInt32 &amp;out_uiValue, plUInt32 *pStringLengthBeforeUInt=nullptr)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aeb36ed6f5d73d409049c30c993f999a2">FindWholeWord</a>(const char *szString, const char *szSearchFor, PL_CHARACTER_FILTER isDelimiterCB, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a7534b7f3c1b300505e8d7fe356520d2f">FindWholeWord_NoCase</a>(const char *szString, const char *szSearchFor, PL_CHARACTER_FILTER isDelimiterCB, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a6c8c4b1d4927263dfaf7fb8eaf491168">FindWordEnd</a>(const char *szString, PL_CHARACTER_FILTER isDelimiterCB, bool bAlwaysSkipFirst=true)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ae7b21398e9e2ebf75f9f501accb2c7e3">GetCharacterAndElementCount</a>(const char *szUtf8, plUInt32 &amp;ref_uiCharacterCount, plUInt32 &amp;ref_uiElementCount, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ad62540cef4e31838952f7cfc846ef9f2">GetCharacterCount</a>(const char *szUtf8, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ab5a530c871d242106cf46b9bd5b676a2">GetStringElementCount</a>(const T *pString)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a18a0908335cf5e1664be2957309e0f41">GetStringElementCount</a>(const T *pString, const T *pStringEnd)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a71a5213e2eaffcc132054da990814753">IsDecimalDigit</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a078ffb499352fde674181a35aebd1f2d">IsEqual</a>(const char *pString1, const char *pString2, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a27a5be3ff9db439a31a48affe41ddc52">IsEqual_NoCase</a>(const char *pString1, const char *pString2, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aba00c3c3256411a9f615f03aaa6caca7">IsEqualN</a>(const char *pString1, const char *pString2, plUInt32 uiCharsToCompare, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ab090c9d993e98ea7a05e581932146ad1">IsEqualN_NoCase</a>(const char *pString1, const char *pString2, plUInt32 uiCharsToCompare, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a7f929e7c423259efcfae8fca1b9c4ba0">IsHexDigit</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a39784f6574ecbaf2062a29ecb79193a8">IsIdentifierDelimiter_C_Code</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#af3e32769f27383ebd20d9cb1d581be91">IsNullOrEmpty</a>(const T *pString)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a58ba220b6de21a2bb1570d56732181ca">IsNullOrEmpty</a>(const T *pString, const T *pStringEnd)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsNullOrEmpty</b>(const T *pString) (defined in <a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a>)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>IsNullOrEmpty</b>(const T *pString, const T *pStringEnd) (defined in <a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a>)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aabdfebdd0899aed6b759afc40fa35ff3">IsValidIdentifierName</a>(const char *pString, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a8659e9d90e56e70ff6ae17d1b7a7e572">IsWhiteSpace</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aa164ac3b5b0ee167f3afb6ec9465547a">IsWordDelimiter_English</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a2de2e890b961ca94183ba98a660e0f85">OutputFormattedFloat</a>(char *szOutputBuffer, plUInt32 uiBufferSize, plUInt32 &amp;ref_uiWritePos, double value, plUInt8 uiWidth, bool bPadZeros, plInt8 iPrecision, bool bScientific, bool bRemoveTrailingZeroes=false)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a9c948aef01026a95390d129321863119">OutputFormattedInt</a>(char *szOutputBuffer, plUInt32 uiBufferSize, plUInt32 &amp;ref_uiWritePos, plInt64 value, plUInt8 uiWidth, bool bPadZeros, plUInt8 uiBase)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a782a845cbcb962c0b834a4c277c297f7">OutputFormattedUInt</a>(char *szOutputBuffer, plUInt32 uiBufferSize, plUInt32 &amp;ref_uiWritePos, plUInt64 value, plUInt8 uiWidth, bool bPadZeros, plUInt8 uiBase, bool bUpperCase)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a8bc7e3a526fc09382eaa1276895f3266">PL_CHARACTER_FILTER</a> typedef</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a1987f56fa64976ca716d3ff565db1b58">SkipCharacters</a>(const char *szString, PL_CHARACTER_FILTER skipCharacterCB, bool bAlwaysSkipFirst=false)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a20c47ebe8153b5c2a5178e6354e3404c">snprintf</a>(char *szDst, plUInt32 uiDstSize, const char *szFormat,...)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aa1b49002e90a4951b887735c06800981">StartsWith</a>(const char *szString, const char *szStartsWith, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStartsWithEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aecfa42149d0d8b134bd0821c31c35b5e">StartsWith_NoCase</a>(const char *szString, const char *szStartsWith, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStartsWithEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a2d67b2d9cd576d2e23668015dc0ce88c">ToLowerChar</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ad63b1621cbd8468cd17c7e662e0187b3">ToLowerString</a>(char *szString, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#ad738a4f07b1860528fe3bea806dc4ed1">ToUpperChar</a>(plUInt32 uiChar)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aef4298ad9140576729bb32b7f70c9e71">ToUpperString</a>(char *szString, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aeb2e813f25f2a54a79d2084df96726c7">Trim</a>(const char *&amp;ref_pString, const char *&amp;ref_pStringEnd, const char *szTrimCharsStart, const char *szTrimCharsEnd)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#a4a534d013b4c7d0572c8315dbf22d25b">UpdateStringEnd</a>(const T *pStringStart, const T *&amp;ref_pStringEnd)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>UpdateStringEnd</b>(const T *pStringStart, const T *&amp;ref_pStringEnd) (defined in <a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a>)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm#aa49b80a2014c61abb77c4404fbd64166">vsnprintf</a>(char *szDst, plUInt32 uiDstSize, const char *szFormat, va_list szAp)</td><td class="entry"><a class="el" href="../../de/d4d/classpl_string_utils.htm">plStringUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
