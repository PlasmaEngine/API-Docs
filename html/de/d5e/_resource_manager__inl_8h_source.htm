<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Core/ResourceManager/Implementation/ResourceManager_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('de/d5e/_resource_manager__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ResourceManager_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Logging/Log.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>ResourceType* plResourceManager::GetResource(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID, <span class="keywordtype">bool</span> bIsReloadable)</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ResourceType*<span class="keyword">&gt;</span>(GetResource(plGetStaticRTTI&lt;ResourceType&gt;(), sResourceID, bIsReloadable));</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>}</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="}">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#ad7f0848a40f57cfad43502b62125b16a">   12</a></span><a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ad7f0848a40f57cfad43502b62125b16a">plResourceManager::LoadResource</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID)</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="comment">// the mutex here is necessary to prevent a race between resource unloading and storing the pointer in the handle</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  PL_LOCK(s_ResourceMutex);</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a>(GetResource&lt;ResourceType&gt;(sResourceID, <span class="keyword">true</span>));</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>}</div>
</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00020" data-start="{" data-end="}">
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#a6e4f4b19a3e6f47b2fba01577772e373">   20</a></span><a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ad7f0848a40f57cfad43502b62125b16a">plResourceManager::LoadResource</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID, <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> hLoadingFallback)</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>{</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> hResource;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  {</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    <span class="comment">// the mutex here is necessary to prevent a race between resource unloading and storing the pointer in the handle</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    PL_LOCK(s_ResourceMutex);</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    hResource = <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a>(GetResource&lt;ResourceType&gt;(sResourceID, <span class="keyword">true</span>));</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  }</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keywordflow">if</span> (hLoadingFallback.<a class="code hl_function" href="../../d4/db4/classpl_typed_resource_handle.htm#a98bfb1d63f4b3a3520098ec0bd70df0d">IsValid</a>())</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  {</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    hResource.m_pResource-&gt;SetLoadingFallbackResource(hLoadingFallback);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  }</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  <span class="keywordflow">return</span> hResource;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>}</div>
</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00038" data-start="{" data-end="}">
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#ae72cc812be3f4a42f70e0131f8a94663">   38</a></span><a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ae72cc812be3f4a42f70e0131f8a94663">plResourceManager::GetExistingResource</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID)</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* pResource = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d33/classpl_temp_hashed_string.htm">plTempHashedString</a> sResourceHash(sResourceID);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  PL_LOCK(s_ResourceMutex);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti = FindResourceTypeOverride(plGetStaticRTTI&lt;ResourceType&gt;(), sResourceID);</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keywordflow">if</span> (GetLoadedResources()[pRtti].m_Resources.TryGetValue(sResourceHash, pResource))</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a>((ResourceType*)pResource);</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a>();</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>}</div>
</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType, <span class="keyword">typename</span> DescriptorType&gt;</div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#afd34b6e5e86353469f07e6447cae1a97">   55</a></span><a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#afd34b6e5e86353469f07e6447cae1a97">plResourceManager::CreateResource</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID, DescriptorType&amp;&amp; descriptor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceDescription)</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>{</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="keyword">static_assert</span>(std::is_rvalue_reference&lt;DescriptorType&amp;&amp;&gt;::value, <span class="stringliteral">&quot;Please std::move the descriptor into this function&quot;</span>);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  PL_LOG_BLOCK(<span class="stringliteral">&quot;plResourceManager::CreateResource&quot;</span>, sResourceID);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  PL_LOCK(s_ResourceMutex);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> hResource(GetResource&lt;ResourceType&gt;(sResourceID, <span class="keyword">false</span>));</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  ResourceType* pResource = <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">BeginAcquireResource</a>(hResource, plResourceAcquireMode::PointerOnly);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  pResource-&gt;SetResourceDescription(sResourceDescription);</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  pResource-&gt;m_Flags.Add(<a class="code hl_enumvalue" href="../../dc/d68/structpl_resource_flags.htm#a73f5d4b7743a6abb2ea309d45628025aa0814ffac1c7818ff583ec6ea6084aa72">plResourceFlags::IsCreatedResource</a>);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  PL_ASSERT_DEV(pResource-&gt;GetLoadingState() == plResourceState::Unloaded, <span class="stringliteral">&quot;CreateResource was called on a resource that is already created&quot;</span>);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="comment">// If this does not compile, you either passed in the wrong descriptor type for the given resource type</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="comment">// or you forgot to std::move the descriptor when calling CreateResource</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    <span class="keyword">auto</span> localDescriptor = std::move(descriptor);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    <a class="code hl_struct" href="../../db/d1a/structpl_resource_load_desc.htm">plResourceLoadDesc</a> ld = pResource-&gt;CreateResource(std::move(localDescriptor));</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    pResource-&gt;VerifyAfterCreateResource(ld);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  }</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  PL_ASSERT_DEV(pResource-&gt;GetLoadingState() != plResourceState::Unloaded, <span class="stringliteral">&quot;CreateResource did not set the loading state properly.&quot;</span>);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a06575aa6f350b36bf272782cf312d70f">EndAcquireResource</a>(pResource);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keywordflow">return</span> hResource;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>}</div>
</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType, <span class="keyword">typename</span> DescriptorType&gt;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span><a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a></div>
<div class="foldopen" id="foldopen00088" data-start="{" data-end="}">
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#ad0f9ce85e60555347a5dc17213a0d14b">   88</a></span><a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ad0f9ce85e60555347a5dc17213a0d14b">plResourceManager::GetOrCreateResource</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID, DescriptorType&amp;&amp; descriptor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceDescription)</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>{</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  PL_LOCK(s_ResourceMutex);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> hResource = <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ae72cc812be3f4a42f70e0131f8a94663">GetExistingResource&lt;ResourceType&gt;</a>(sResourceID);</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keywordflow">if</span> (!hResource.IsValid())</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  {</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    hResource = <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#afd34b6e5e86353469f07e6447cae1a97">CreateResource&lt;ResourceType, DescriptorType&gt;</a>(sResourceID, std::move(descriptor), sResourceDescription);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keywordflow">return</span> hResource;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>}</div>
</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="foldopen" id="foldopen00100" data-start="{" data-end="}">
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#abedf3a24d493a2888b2eb132c3c232c6">  100</a></span>PL_FORCE_INLINE <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#abedf3a24d493a2888b2eb132c3c232c6">plResourceManager::BeginAcquireResourcePointer</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pType, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/d91/classpl_typeless_resource_handle.htm">plTypelessResourceHandle</a>&amp; hResource)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>{</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  PL_ASSERT_DEV(hResource.IsValid(), <span class="stringliteral">&quot;Cannot acquire a resource through an invalid handle!&quot;</span>);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* pResource = (<a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>*)hResource.m_pResource;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  PL_ASSERT_DEBUG(pResource-&gt;GetDynamicRTTI()-&gt;<a class="code hl_function" href="../../d8/dec/classpl_r_t_t_i.htm#af421e6a16baa5f5864c4eca9408831ef">IsDerivedFrom</a>(pType),</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="stringliteral">&quot;The requested resource does not have the same type (&#39;{0}&#39;) as the resource handle (&#39;{1}&#39;).&quot;</span>, pResource-&gt;GetDynamicRTTI()-&gt;<a class="code hl_function" href="../../d8/dec/classpl_r_t_t_i.htm#a7a906257607936b6ebbb0849fb1caa5c">GetTypeName</a>(),</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    pType-&gt;<a class="code hl_function" href="../../d8/dec/classpl_r_t_t_i.htm#a7a906257607936b6ebbb0849fb1caa5c">GetTypeName</a>());</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="comment">// pResource-&gt;m_iLockCount.Increment();</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keywordflow">return</span> pResource;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>}</div>
</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00115" data-start="{" data-end="}">
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">  115</a></span>ResourceType* <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">plResourceManager::BeginAcquireResource</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a>&amp; hResource, plResourceAcquireMode mode,</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a>&amp; hFallbackResource, plResourceAcquireResult* out_pAcquireResult <span class="comment">/*= nullptr*/</span>)</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>{</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  PL_ASSERT_DEV(hResource.IsValid(), <span class="stringliteral">&quot;Cannot acquire a resource through an invalid handle!&quot;</span>);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILE_FOR_DEVELOPMENT)</span></div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* pCurrentlyUpdatingContent = plResource::GetCurrentlyUpdatingContent();</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keywordflow">if</span> (pCurrentlyUpdatingContent != <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  {</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    PL_LOCK(s_ResourceMutex);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    PL_ASSERT_DEV(mode == plResourceAcquireMode::PointerOnly || IsResourceTypeAcquireDuringUpdateContentAllowed(pCurrentlyUpdatingContent-&gt;GetDynamicRTTI(), plGetStaticRTTI&lt;ResourceType&gt;()),</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>      <span class="stringliteral">&quot;Trying to acquire a resource of type &#39;{0}&#39; during &#39;{1}::UpdateContent()&#39;. This has to be enabled by calling &quot;</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>      <span class="stringliteral">&quot;plResourceManager::AllowResourceTypeAcquireDuringUpdateContent&lt;{1}, {0}&gt;(); at engine startup, for example in &quot;</span></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>      <span class="stringliteral">&quot;plGameApplication::Init_SetupDefaultResources().&quot;</span>,</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>      plGetStaticRTTI&lt;ResourceType&gt;()-&gt;GetTypeName(), pCurrentlyUpdatingContent-&gt;GetDynamicRTTI()-&gt;<a class="code hl_function" href="../../d8/dec/classpl_r_t_t_i.htm#a7a906257607936b6ebbb0849fb1caa5c">GetTypeName</a>());</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  }</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  ResourceType* pResource = (ResourceType*)hResource.m_hTypeless.m_pResource;</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="comment">// PL_ASSERT_DEV(pResource-&gt;m_iLockCount &lt; 20, &quot;You probably forgot somewhere to call &#39;EndAcquireResource&#39; in sync with &#39;BeginAcquireResource&#39;.&quot;);</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  PL_ASSERT_DEBUG(pResource-&gt;GetDynamicRTTI()-&gt;template IsDerivedFrom&lt;ResourceType&gt;(),</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    <span class="stringliteral">&quot;The requested resource does not have the same type (&#39;{0}&#39;) as the resource handle (&#39;{1}&#39;).&quot;</span>, pResource-&gt;GetDynamicRTTI()-&gt;GetTypeName(),</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    plGetStaticRTTI&lt;ResourceType&gt;()-&gt;GetTypeName());</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="keywordflow">if</span> (mode == plResourceAcquireMode::AllowLoadingFallback &amp;&amp; <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#aa5eba256e5513543a9ea06ddef2f688c">GetForceNoFallbackAcquisition</a>() &gt; 0)</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  {</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    mode = plResourceAcquireMode::BlockTillLoaded;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  }</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  <span class="keywordflow">if</span> (mode == plResourceAcquireMode::PointerOnly)</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    <span class="keywordflow">if</span> (out_pAcquireResult)</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>      *out_pAcquireResult = plResourceAcquireResult::Final;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>    <span class="comment">// pResource-&gt;m_iLockCount.Increment();</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>    <span class="keywordflow">return</span> pResource;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  }</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="comment">// only set the last accessed time stamp, if it is actually needed, pointer-only access might not mean that the resource is used</span></div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="comment">// productively</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  pResource-&gt;m_LastAcquire = GetLastFrameUpdate();</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="keywordflow">if</span> (pResource-&gt;GetLoadingState() != plResourceState::LoadedResourceMissing)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  {</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    <span class="keywordflow">if</span> (pResource-&gt;GetLoadingState() != plResourceState::Loaded)</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    {</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>      <span class="comment">// if BlockTillLoaded is specified, it will prepended to the preload array, thus will be loaded immediately</span></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>      InternalPreloadResource(pResource, mode &gt;= plResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>      <span class="keywordflow">if</span> (mode == plResourceAcquireMode::AllowLoadingFallback &amp;&amp;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>          (pResource-&gt;m_hLoadingFallback.IsValid() || hFallbackResource.<a class="code hl_function" href="../../d4/db4/classpl_typed_resource_handle.htm#a98bfb1d63f4b3a3520098ec0bd70df0d">IsValid</a>() || <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#aeba6bd8ea88096b07d80e5597cb2f42e">GetResourceTypeLoadingFallback&lt;ResourceType&gt;</a>().IsValid()))</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>      {</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>        <span class="comment">// return the fallback resource for now, if there is one</span></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>        <span class="keywordflow">if</span> (out_pAcquireResult)</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>          *out_pAcquireResult = plResourceAcquireResult::LoadingFallback;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>        <span class="comment">// Fallback order is as follows:</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>        <span class="comment">//  1) Prefer any resource specific fallback resource</span></div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>        <span class="comment">//  2) If not available, use the fallback that is given to BeginAcquireResource, as that is at least specific to the situation</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>        <span class="comment">//  3) If nothing else is available, take the fallback for the whole resource type</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>        <span class="keywordflow">if</span> (pResource-&gt;m_hLoadingFallback.IsValid())</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>          <span class="keywordflow">return</span> (ResourceType*)<a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">BeginAcquireResource</a>(pResource-&gt;m_hLoadingFallback, plResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (hFallbackResource.<a class="code hl_function" href="../../d4/db4/classpl_typed_resource_handle.htm#a98bfb1d63f4b3a3520098ec0bd70df0d">IsValid</a>())</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>          <span class="keywordflow">return</span> (ResourceType*)<a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">BeginAcquireResource</a>(hFallbackResource, plResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>        <span class="keywordflow">else</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>          <span class="keywordflow">return</span> (ResourceType*)<a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">BeginAcquireResource</a>(<a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#aeba6bd8ea88096b07d80e5597cb2f42e">GetResourceTypeLoadingFallback&lt;ResourceType&gt;</a>(), plResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>      }</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>      EnsureResourceLoadingState(pResource, plResourceState::Loaded);</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>    }</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>    {</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>      <span class="comment">// as long as there are more quality levels available, schedule the resource for more loading</span></div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>      <span class="comment">// accessing IsQueuedForLoading without a lock here is save because InternalPreloadResource() will lock and early out if necessary</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>      <span class="comment">// and accidentally skipping InternalPreloadResource() is no problem</span></div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>      <span class="keywordflow">if</span> (IsQueuedForLoading(pResource) == <span class="keyword">false</span> &amp;&amp; pResource-&gt;GetNumQualityLevelsLoadable() &gt; 0)</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>        InternalPreloadResource(pResource, <span class="keyword">false</span>);</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    }</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  }</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  <span class="keywordflow">if</span> (pResource-&gt;GetLoadingState() == plResourceState::LoadedResourceMissing)</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  {</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    <span class="comment">// When you get a crash with a stack overflow in this code path, then the resource to be used as the</span></div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>    <span class="comment">// &#39;missing resource&#39; replacement might be missing itself.</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a323819d22182ca9450f4abb02ec8b61e">plResourceManager::GetResourceTypeMissingFallback&lt;ResourceType&gt;</a>().IsValid())</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>    {</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>      <span class="keywordflow">if</span> (out_pAcquireResult)</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>        *out_pAcquireResult = plResourceAcquireResult::MissingFallback;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>      <span class="keywordflow">return</span> (ResourceType*)<a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">BeginAcquireResource</a>(</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>        <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a323819d22182ca9450f4abb02ec8b61e">plResourceManager::GetResourceTypeMissingFallback&lt;ResourceType&gt;</a>(), plResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>    }</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    <span class="keywordflow">if</span> (mode != plResourceAcquireMode::AllowLoadingFallback_NeverFail &amp;&amp; mode != plResourceAcquireMode::BlockTillLoaded_NeverFail)</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    {</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>      PL_REPORT_FAILURE(<span class="stringliteral">&quot;The resource &#39;{0}&#39; of type &#39;{1}&#39; is missing and no fallback is available&quot;</span>, pResource-&gt;GetResourceID(),</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>        plGetStaticRTTI&lt;ResourceType&gt;()-&gt;GetTypeName());</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    }</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    <span class="keywordflow">if</span> (out_pAcquireResult)</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>      *out_pAcquireResult = plResourceAcquireResult::None;</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  }</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  <span class="keywordflow">if</span> (out_pAcquireResult)</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>    *out_pAcquireResult = plResourceAcquireResult::Final;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <span class="comment">// pResource-&gt;m_iLockCount.Increment();</span></div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  <span class="keywordflow">return</span> pResource;</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>}</div>
</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00231" data-start="{" data-end="}">
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#a06575aa6f350b36bf272782cf312d70f">  231</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a06575aa6f350b36bf272782cf312d70f">plResourceManager::EndAcquireResource</a>(ResourceType* pResource)</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>{</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  <span class="comment">// PL_ASSERT_DEV(pResource-&gt;m_iLockCount &gt; 0, &quot;The resource lock counter is incorrect: {0}&quot;, (plInt32)pResource-&gt;m_iLockCount);</span></div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>  <span class="comment">// pResource-&gt;m_iLockCount.Decrement();</span></div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>}</div>
</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="foldopen" id="foldopen00237" data-start="{" data-end="}">
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#af31bd59960a55a8b64375b28051dc874">  237</a></span>PL_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#af31bd59960a55a8b64375b28051dc874">plResourceManager::EndAcquireResourcePointer</a>(<a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* pResource)</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>{</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>  <span class="comment">// PL_ASSERT_DEV(pResource-&gt;m_iLockCount &gt; 0, &quot;The resource lock counter is incorrect: {0}&quot;, (plInt32)pResource-&gt;m_iLockCount);</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  <span class="comment">// pResource-&gt;m_iLockCount.Decrement();</span></div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>}</div>
</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00244" data-start="{" data-end="}">
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#a5165538c12b0ccc46ed00610e17c6456">  244</a></span><a class="code hl_class" href="../../d3/d21/classpl_locked_object.htm">plLockedObject&lt;plMutex, plDynamicArray&lt;plResource*&gt;</a>&gt; <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a5165538c12b0ccc46ed00610e17c6456">plResourceManager::GetAllResourcesOfType</a>()</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>{</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pBaseType = plGetStaticRTTI&lt;ResourceType&gt;();</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span> </div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  <span class="keyword">auto</span>&amp; container = GetLoadedResourceOfTypeTempContainer();</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>  <span class="comment">// We use a static container here to ensure its life-time is extended beyond</span></div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  <span class="comment">// calls to this function as the locked object does not own the passed-in object</span></div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  <span class="comment">// and thus does not extend the data life-time. It is safe to do this, as the</span></div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  <span class="comment">// locked object holding the container ensures the container will not be</span></div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  <span class="comment">// accessed concurrently.</span></div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  <a class="code hl_class" href="../../d3/d21/classpl_locked_object.htm">plLockedObject&lt;plMutex, plDynamicArray&lt;plResource*&gt;</a>&gt; loadedResourcesLock(s_ResourceMutex, &amp;container);</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>  container.Clear();</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>  <span class="keywordflow">for</span> (<span class="keyword">auto</span> itType = GetLoadedResources().GetIterator(); itType.IsValid(); itType.Next())</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  {</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pDerivedType = itType.Key();</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>    <span class="keywordflow">if</span> (pDerivedType-&gt;<a class="code hl_function" href="../../d8/dec/classpl_r_t_t_i.htm#af421e6a16baa5f5864c4eca9408831ef">IsDerivedFrom</a>(pBaseType))</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    {</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>      <span class="keyword">const</span> LoadedResources&amp; lr = GetLoadedResources()[pDerivedType];</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>      container.Reserve(container.GetCount() + lr.m_Resources.<a class="code hl_function" href="../../d1/d77/classpl_hash_table_base.htm#a3c2a07024da01255c3c0503e6d82ffcd">GetCount</a>());</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span> itResource : lr.m_Resources)</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>      {</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>        container.PushBack(itResource.Value());</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>      }</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>    }</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>  }</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span> </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>  <span class="keywordflow">return</span> loadedResourcesLock;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>}</div>
</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00280" data-start="{" data-end="}">
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#ab9b3c82edeaf37b7697744416a11845e">  280</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ab9b3c82edeaf37b7697744416a11845e">plResourceManager::ReloadResource</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a>&amp; hResource, <span class="keywordtype">bool</span> bForce)</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>{</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>  ResourceType* pResource = <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">BeginAcquireResource</a>(hResource, plResourceAcquireMode::PointerOnly);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span> </div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <span class="keywordtype">bool</span> res = <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ab9b3c82edeaf37b7697744416a11845e">ReloadResource</a>(pResource, bForce);</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span> </div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>  <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a06575aa6f350b36bf272782cf312d70f">EndAcquireResource</a>(pResource);</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span> </div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>}</div>
</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="foldopen" id="foldopen00291" data-start="{" data-end="}">
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#a1b46ed4a20d9a309daab08557c7f37a9">  291</a></span>PL_FORCE_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ab9b3c82edeaf37b7697744416a11845e">plResourceManager::ReloadResource</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pType, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/d91/classpl_typeless_resource_handle.htm">plTypelessResourceHandle</a>&amp; hResource, <span class="keywordtype">bool</span> bForce)</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>{</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  <a class="code hl_class" href="../../d8/d1c/classpl_resource.htm">plResource</a>* pResource = <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#abedf3a24d493a2888b2eb132c3c232c6">BeginAcquireResourcePointer</a>(pType, hResource);</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>  <span class="keywordtype">bool</span> res = <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ab9b3c82edeaf37b7697744416a11845e">ReloadResource</a>(pResource, bForce);</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#af31bd59960a55a8b64375b28051dc874">EndAcquireResourcePointer</a>(pResource);</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span> </div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>}</div>
</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00303" data-start="{" data-end="}">
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#ae081235c767f525ebdc94d68807d2bcd">  303</a></span>plUInt32 <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ae081235c767f525ebdc94d68807d2bcd">plResourceManager::ReloadResourcesOfType</a>(<span class="keywordtype">bool</span> bForce)</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>{</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ae081235c767f525ebdc94d68807d2bcd">ReloadResourcesOfType</a>(plGetStaticRTTI&lt;ResourceType&gt;(), bForce);</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>}</div>
</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00309" data-start="{" data-end="}">
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#a39fed8a3d2edf3c70b0d7372be47611a">  309</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a39fed8a3d2edf3c70b0d7372be47611a">plResourceManager::SetResourceTypeLoader</a>(<a class="code hl_class" href="../../da/d6b/classpl_resource_type_loader.htm">plResourceTypeLoader</a>* pCreator)</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>{</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>  PL_LOCK(s_ResourceMutex);</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>  GetResourceTypeLoaders()[plGetStaticRTTI&lt;ResourceType&gt;()] = pCreator;</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>}</div>
</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span> </div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00317" data-start="{" data-end="}">
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#a7200b4072e32e89e540f7f4183294e66">  317</a></span><a class="code hl_class" href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a7200b4072e32e89e540f7f4183294e66">plResourceManager::GetResourceHandleForExport</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID)</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>{</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>  PL_ASSERT_DEV(<a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#a1e7e438c198ef0ec97a2bc1069193117">IsExportModeEnabled</a>(), <span class="stringliteral">&quot;Export mode needs to be enabled&quot;</span>);</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span> </div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ad7f0848a40f57cfad43502b62125b16a">LoadResource&lt;ResourceType&gt;</a>(sResourceID);</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>}</div>
</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span> </div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="foldopen" id="foldopen00325" data-start="{" data-end="}">
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno"><a class="line" href="../../d1/d2a/classpl_resource_manager.htm#ac7dfcd8082f95123093068000c240069">  325</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d2a/classpl_resource_manager.htm#ac7dfcd8082f95123093068000c240069">plResourceManager::SetIncrementalUnloadForResourceType</a>(<span class="keywordtype">bool</span> bActive)</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>{</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>  GetResourceTypeInfo(plGetStaticRTTI&lt;ResourceType&gt;()).m_bIncrementalUnload = bActive;</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>}</div>
</div>
<div class="ttc" id="aclasspl_hash_table_base_htm_a3c2a07024da01255c3c0503e6d82ffcd"><div class="ttname"><a href="../../d1/d77/classpl_hash_table_base.htm#a3c2a07024da01255c3c0503e6d82ffcd">plHashTableBase::GetCount</a></div><div class="ttdeci">plUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active entries in the table.</div><div class="ttdef"><b>Definition</b> HashTable_inl.h:343</div></div>
<div class="ttc" id="aclasspl_locked_object_htm"><div class="ttname"><a href="../../d3/d21/classpl_locked_object.htm">plLockedObject</a></div><div class="ttdoc">Provides access to an object while managing a lock (e.g. a mutex) that ensures that during its lifeti...</div><div class="ttdef"><b>Definition</b> LockedObject.h:7</div></div>
<div class="ttc" id="aclasspl_r_t_t_i_htm"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclasspl_r_t_t_i_htm_a7a906257607936b6ebbb0849fb1caa5c"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm#a7a906257607936b6ebbb0849fb1caa5c">plRTTI::GetTypeName</a></div><div class="ttdeci">PL_ALWAYS_INLINE plStringView GetTypeName() const</div><div class="ttdoc">Returns the name of this type.</div><div class="ttdef"><b>Definition</b> RTTI.h:48</div></div>
<div class="ttc" id="aclasspl_r_t_t_i_htm_af421e6a16baa5f5864c4eca9408831ef"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm#af421e6a16baa5f5864c4eca9408831ef">plRTTI::IsDerivedFrom</a></div><div class="ttdeci">PL_ALWAYS_INLINE bool IsDerivedFrom(const plRTTI *pBaseType) const</div><div class="ttdoc">Returns true if this type is derived from the given type (or of the same type).</div><div class="ttdef"><b>Definition</b> RTTI.h:60</div></div>
<div class="ttc" id="aclasspl_resource_htm"><div class="ttname"><a href="../../d8/d1c/classpl_resource.htm">plResource</a></div><div class="ttdoc">The base class for all resources.</div><div class="ttdef"><b>Definition</b> Resource.h:10</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_a06575aa6f350b36bf272782cf312d70f"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#a06575aa6f350b36bf272782cf312d70f">plResourceManager::EndAcquireResource</a></div><div class="ttdeci">static void EndAcquireResource(ResourceType *pResource)</div><div class="ttdoc">Needs to be called in concert with BeginAcquireResource() after accessing a resource has been finishe...</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:231</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_a1e7e438c198ef0ec97a2bc1069193117"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#a1e7e438c198ef0ec97a2bc1069193117">plResourceManager::IsExportModeEnabled</a></div><div class="ttdeci">static bool IsExportModeEnabled()</div><div class="ttdoc">Returns whether export mode is active.</div><div class="ttdef"><b>Definition</b> ResourceManager.cpp:902</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_a323819d22182ca9450f4abb02ec8b61e"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#a323819d22182ca9450f4abb02ec8b61e">plResourceManager::GetResourceTypeMissingFallback</a></div><div class="ttdeci">static const plTypedResourceHandle&lt; RESOURCE_TYPE &gt; &amp; GetResourceTypeMissingFallback()</div><div class="ttdef"><b>Definition</b> ResourceManager.h:391</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_a39fed8a3d2edf3c70b0d7372be47611a"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#a39fed8a3d2edf3c70b0d7372be47611a">plResourceManager::SetResourceTypeLoader</a></div><div class="ttdeci">static void SetResourceTypeLoader(plResourceTypeLoader *pCreator)</div><div class="ttdoc">Sets the resource loader to use for the given resource type.</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:309</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_a5165538c12b0ccc46ed00610e17c6456"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#a5165538c12b0ccc46ed00610e17c6456">plResourceManager::GetAllResourcesOfType</a></div><div class="ttdeci">static plLockedObject&lt; plMutex, plDynamicArray&lt; plResource * &gt; &gt; GetAllResourcesOfType()</div><div class="ttdoc">Retrieves an array of pointers to resources of the indicated type which are loaded at the moment....</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:244</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_a7200b4072e32e89e540f7f4183294e66"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#a7200b4072e32e89e540f7f4183294e66">plResourceManager::GetResourceHandleForExport</a></div><div class="ttdeci">static plTypedResourceHandle&lt; ResourceType &gt; GetResourceHandleForExport(plStringView sResourceID)</div><div class="ttdoc">Creates a resource handle for the given resource ID. This method can only be used if export mode is e...</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:317</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_a9433d49ea893e1446b19daea5df73871"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#a9433d49ea893e1446b19daea5df73871">plResourceManager::BeginAcquireResource</a></div><div class="ttdeci">static ResourceType * BeginAcquireResource(const plTypedResourceHandle&lt; ResourceType &gt; &amp;hResource, plResourceAcquireMode mode, const plTypedResourceHandle&lt; ResourceType &gt; &amp;hLoadingFallback=plTypedResourceHandle&lt; ResourceType &gt;(), plResourceAcquireResult *out_pAcquireResult=nullptr)</div><div class="ttdoc">Acquires a resource pointer from a handle. Prefer to use plResourceLock, which wraps BeginAcquireReso...</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:115</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_aa5eba256e5513543a9ea06ddef2f688c"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#aa5eba256e5513543a9ea06ddef2f688c">plResourceManager::GetForceNoFallbackAcquisition</a></div><div class="ttdeci">static plUInt32 GetForceNoFallbackAcquisition()</div><div class="ttdoc">If the returned number is greater 0 the resource manager treats plResourceAcquireMode::AllowLoadingFa...</div><div class="ttdef"><b>Definition</b> ResourceManager.cpp:919</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_ab9b3c82edeaf37b7697744416a11845e"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#ab9b3c82edeaf37b7697744416a11845e">plResourceManager::ReloadResource</a></div><div class="ttdeci">static bool ReloadResource(const plTypedResourceHandle&lt; ResourceType &gt; &amp;hResource, bool bForce)</div><div class="ttdoc">Reloads only the one specific resource. If bForce is true, it is updated, even if there is no indicat...</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:280</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_abedf3a24d493a2888b2eb132c3c232c6"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#abedf3a24d493a2888b2eb132c3c232c6">plResourceManager::BeginAcquireResourcePointer</a></div><div class="ttdeci">static plResource * BeginAcquireResourcePointer(const plRTTI *pType, const plTypelessResourceHandle &amp;hResource)</div><div class="ttdoc">Same as BeginAcquireResource but only for the base resource pointer.</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:100</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_ac7dfcd8082f95123093068000c240069"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#ac7dfcd8082f95123093068000c240069">plResourceManager::SetIncrementalUnloadForResourceType</a></div><div class="ttdeci">static void SetIncrementalUnloadForResourceType(bool bActive)</div><div class="ttdoc">If set to 'false' resources of the given type will not be incrementally unloaded in the background,...</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:325</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_ad0f9ce85e60555347a5dc17213a0d14b"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#ad0f9ce85e60555347a5dc17213a0d14b">plResourceManager::GetOrCreateResource</a></div><div class="ttdeci">static plTypedResourceHandle&lt; ResourceType &gt; GetOrCreateResource(plStringView sResourceID, DescriptorType &amp;&amp;descriptor, plStringView sResourceDescription=nullptr)</div><div class="ttdoc">Returns a handle to the resource with the given ID if it exists or creates it from a descriptor.</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:88</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_ad7f0848a40f57cfad43502b62125b16a"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#ad7f0848a40f57cfad43502b62125b16a">plResourceManager::LoadResource</a></div><div class="ttdeci">static plTypedResourceHandle&lt; ResourceType &gt; LoadResource(plStringView sResourceID)</div><div class="ttdoc">Returns a handle to the requested resource. szResourceID must uniquely identify the resource,...</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:12</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_ae081235c767f525ebdc94d68807d2bcd"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#ae081235c767f525ebdc94d68807d2bcd">plResourceManager::ReloadResourcesOfType</a></div><div class="ttdeci">static plUInt32 ReloadResourcesOfType(bool bForce)</div><div class="ttdoc">Goes through all resources of the given type and makes sure they are reloaded, if they have changed....</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:303</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_ae72cc812be3f4a42f70e0131f8a94663"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#ae72cc812be3f4a42f70e0131f8a94663">plResourceManager::GetExistingResource</a></div><div class="ttdeci">static plTypedResourceHandle&lt; ResourceType &gt; GetExistingResource(plStringView sResourceID)</div><div class="ttdoc">Returns a handle to the resource with the given ID. If the resource does not exist,...</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:38</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_aeba6bd8ea88096b07d80e5597cb2f42e"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#aeba6bd8ea88096b07d80e5597cb2f42e">plResourceManager::GetResourceTypeLoadingFallback</a></div><div class="ttdeci">static const plTypedResourceHandle&lt; RESOURCE_TYPE &gt; &amp; GetResourceTypeLoadingFallback()</div><div class="ttdef"><b>Definition</b> ResourceManager.h:375</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_af31bd59960a55a8b64375b28051dc874"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#af31bd59960a55a8b64375b28051dc874">plResourceManager::EndAcquireResourcePointer</a></div><div class="ttdeci">static void EndAcquireResourcePointer(plResource *pResource)</div><div class="ttdoc">Same as EndAcquireResource but without the template parameter. See also BeginAcquireResourcePointer.</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:237</div></div>
<div class="ttc" id="aclasspl_resource_manager_htm_afd34b6e5e86353469f07e6447cae1a97"><div class="ttname"><a href="../../d1/d2a/classpl_resource_manager.htm#afd34b6e5e86353469f07e6447cae1a97">plResourceManager::CreateResource</a></div><div class="ttdeci">static plTypedResourceHandle&lt; ResourceType &gt; CreateResource(plStringView sResourceID, DescriptorType &amp;&amp;descriptor, plStringView sResourceDescription=nullptr)</div><div class="ttdoc">Creates a resource from a descriptor.</div><div class="ttdef"><b>Definition</b> ResourceManager_inl.h:55</div></div>
<div class="ttc" id="aclasspl_resource_type_loader_htm"><div class="ttname"><a href="../../da/d6b/classpl_resource_type_loader.htm">plResourceTypeLoader</a></div><div class="ttdoc">Base class for all resource loaders.</div><div class="ttdef"><b>Definition</b> ResourceTypeLoader.h:29</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_temp_hashed_string_htm"><div class="ttname"><a href="../../d3/d33/classpl_temp_hashed_string.htm">plTempHashedString</a></div><div class="ttdoc">A class to use together with plHashedString for quick comparisons with temporary strings that need no...</div><div class="ttdef"><b>Definition</b> HashedString.h:151</div></div>
<div class="ttc" id="aclasspl_typed_resource_handle_htm"><div class="ttname"><a href="../../d4/db4/classpl_typed_resource_handle.htm">plTypedResourceHandle</a></div><div class="ttdoc">The plTypedResourceHandle controls access to an plResource.</div><div class="ttdef"><b>Definition</b> ResourceHandle.h:136</div></div>
<div class="ttc" id="aclasspl_typed_resource_handle_htm_a98bfb1d63f4b3a3520098ec0bd70df0d"><div class="ttname"><a href="../../d4/db4/classpl_typed_resource_handle.htm#a98bfb1d63f4b3a3520098ec0bd70df0d">plTypedResourceHandle::IsValid</a></div><div class="ttdeci">PL_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Returns whether the handle stores a valid pointer to a resource.</div><div class="ttdef"><b>Definition</b> ResourceHandle.h:206</div></div>
<div class="ttc" id="aclasspl_typeless_resource_handle_htm"><div class="ttname"><a href="../../d1/d91/classpl_typeless_resource_handle.htm">plTypelessResourceHandle</a></div><div class="ttdoc">The typeless implementation of resource handles. A typed interface is provided by plTypedResourceHand...</div><div class="ttdef"><b>Definition</b> ResourceHandle.h:32</div></div>
<div class="ttc" id="astructpl_resource_flags_htm_a73f5d4b7743a6abb2ea309d45628025aa0814ffac1c7818ff583ec6ea6084aa72"><div class="ttname"><a href="../../dc/d68/structpl_resource_flags.htm#a73f5d4b7743a6abb2ea309d45628025aa0814ffac1c7818ff583ec6ea6084aa72">plResourceFlags::IsCreatedResource</a></div><div class="ttdeci">@ IsCreatedResource</div><div class="ttdoc">When this is set, the resource was created and not loaded from file.</div><div class="ttdef"><b>Definition</b> Declarations.h:70</div></div>
<div class="ttc" id="astructpl_resource_load_desc_htm"><div class="ttname"><a href="../../db/d1a/structpl_resource_load_desc.htm">plResourceLoadDesc</a></div><div class="ttdoc">Describes in which loading state a resource currently is, and how many different quality levels there...</div><div class="ttdef"><b>Definition</b> Declarations.h:102</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_e62ae2b329024d6cec02491cff116055.htm">Core</a></li><li class="navelem"><a class="el" href="../../dir_654337d58af9e022826c42081782191c.htm">ResourceManager</a></li><li class="navelem"><a class="el" href="../../dir_473d05503ffe3b01c5660418aaa4769a.htm">Implementation</a></li><li class="navelem"><b>ResourceManager_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
