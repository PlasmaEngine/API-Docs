<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plTypedFunctionProperty&lt; R, Args &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('de/db7/classpl_typed_function_property.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d1/d1d/classpl_typed_function_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plTypedFunctionProperty&lt; R, Args &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for plTypedFunctionProperty&lt; R, Args &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../de/dee/classpl_typed_function_property__inherit__graph.png" border="0" usemap="#apl_typed_function_property_3_01_r_00_01_args_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_typed_function_property_3_01_r_00_01_args_01_4_inherit__map" id="apl_typed_function_property_3_01_r_00_01_args_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="12,155,178,197"/>
<area shape="rect" href="../../d7/de1/classpl_abstract_function_property.htm" title="The base class for a property that represents a function." alt="" coords="5,80,185,107"/>
<area shape="poly" title=" " alt="" coords="98,122,98,154,92,154,92,122"/>
<area shape="rect" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="30,5,160,32"/>
<area shape="poly" title=" " alt="" coords="98,48,98,80,92,80,92,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abf08505331ff34c1c0cb5ab91ddf1753" id="r_abf08505331ff34c1c0cb5ab91ddf1753"><td class="memItemLeft" align="right" valign="top"><a id="abf08505331ff34c1c0cb5ab91ddf1753" name="abf08505331ff34c1c0cb5ab91ddf1753"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plTypedFunctionProperty</b> (const char *szPropertyName)</td></tr>
<tr class="separator:abf08505331ff34c1c0cb5ab91ddf1753"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa63f9137a8687d4bb5f0e0e1f79eed23" id="r_aa63f9137a8687d4bb5f0e0e1f79eed23"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa63f9137a8687d4bb5f0e0e1f79eed23">GetReturnType</a> () const override</td></tr>
<tr class="memdesc:aa63f9137a8687d4bb5f0e0e1f79eed23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the return value.  <br /></td></tr>
<tr class="separator:aa63f9137a8687d4bb5f0e0e1f79eed23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2caac76c0e0cbec99499ddf804e569ce" id="r_a2caac76c0e0cbec99499ddf804e569ce"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2caac76c0e0cbec99499ddf804e569ce">GetReturnFlags</a> () const override</td></tr>
<tr class="memdesc:a2caac76c0e0cbec99499ddf804e569ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns property flags of the return value.  <br /></td></tr>
<tr class="separator:a2caac76c0e0cbec99499ddf804e569ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e48bf9171b4f55a61d543bd053fd83b" id="r_a5e48bf9171b4f55a61d543bd053fd83b"><td class="memItemLeft" align="right" valign="top">virtual plUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5e48bf9171b4f55a61d543bd053fd83b">GetArgumentCount</a> () const override</td></tr>
<tr class="memdesc:a5e48bf9171b4f55a61d543bd053fd83b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments.  <br /></td></tr>
<tr class="separator:a5e48bf9171b4f55a61d543bd053fd83b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a304ff7dee7bf9ad5e5e205aa21f53399" id="r_a304ff7dee7bf9ad5e5e205aa21f53399"><td class="memTemplParams" colspan="2"><a id="a304ff7dee7bf9ad5e5e205aa21f53399" name="a304ff7dee7bf9ad5e5e205aa21f53399"></a>
template&lt;std::size_t... I&gt; </td></tr>
<tr class="memitem:a304ff7dee7bf9ad5e5e205aa21f53399"><td class="memTemplItemLeft" align="right" valign="top">const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetParameterTypeImpl</b> (plUInt32 uiParamIndex, std::index_sequence&lt; I... &gt;) const</td></tr>
<tr class="separator:a304ff7dee7bf9ad5e5e205aa21f53399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a074758c998cce76634f3b1867a320d7e" id="r_a074758c998cce76634f3b1867a320d7e"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a074758c998cce76634f3b1867a320d7e">GetArgumentType</a> (plUInt32 uiParamIndex) const override</td></tr>
<tr class="memdesc:a074758c998cce76634f3b1867a320d7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the given argument.  <br /></td></tr>
<tr class="separator:a074758c998cce76634f3b1867a320d7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d25625113dd29ee519554efac036dd9" id="r_a9d25625113dd29ee519554efac036dd9"><td class="memTemplParams" colspan="2"><a id="a9d25625113dd29ee519554efac036dd9" name="a9d25625113dd29ee519554efac036dd9"></a>
template&lt;std::size_t... I&gt; </td></tr>
<tr class="memitem:a9d25625113dd29ee519554efac036dd9"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetParameterFlagsImpl</b> (plUInt32 uiParamIndex, std::index_sequence&lt; I... &gt;) const</td></tr>
<tr class="separator:a9d25625113dd29ee519554efac036dd9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9366bea84812251468c151b623183819" id="r_a9366bea84812251468c151b623183819"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9366bea84812251468c151b623183819">GetArgumentFlags</a> (plUInt32 uiParamIndex) const override</td></tr>
<tr class="memdesc:a9366bea84812251468c151b623183819"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the property flags of the given argument.  <br /></td></tr>
<tr class="separator:a9366bea84812251468c151b623183819"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_function_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_function_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a></td></tr>
<tr class="memitem:a4711b9faea797214e046d6e13d13dc2a inherit pub_methods_classpl_abstract_function_property" id="r_a4711b9faea797214e046d6e13d13dc2a"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractFunctionProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a4711b9faea797214e046d6e13d13dc2a inherit pub_methods_classpl_abstract_function_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">plAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a4711b9faea797214e046d6e13d13dc2a inherit pub_methods_classpl_abstract_function_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5db335daa710a1dbaa908a31b61b972f inherit pub_methods_classpl_abstract_function_property" id="r_a5db335daa710a1dbaa908a31b61b972f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#a5db335daa710a1dbaa908a31b61b972f">GetCategory</a> () const override</td></tr>
<tr class="memdesc:a5db335daa710a1dbaa908a31b61b972f inherit pub_methods_classpl_abstract_function_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the category of this property. Cast this property to the next higher type for more information.  <br /></td></tr>
<tr class="separator:a5db335daa710a1dbaa908a31b61b972f inherit pub_methods_classpl_abstract_function_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09a5f9760df4bed68936338a5d362062 inherit pub_methods_classpl_abstract_function_property" id="r_a09a5f9760df4bed68936338a5d362062"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d9/dc8/structpl_function_type.htm#af271404fdafe238815ecd4cf373026b8">plFunctionType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#a09a5f9760df4bed68936338a5d362062">GetFunctionType</a> () const =0</td></tr>
<tr class="memdesc:a09a5f9760df4bed68936338a5d362062 inherit pub_methods_classpl_abstract_function_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of function, see plFunctionPropertyType::Enum.  <br /></td></tr>
<tr class="separator:a09a5f9760df4bed68936338a5d362062 inherit pub_methods_classpl_abstract_function_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3d4088cb5e959e5c181db038bf2529e inherit pub_methods_classpl_abstract_function_property" id="r_af3d4088cb5e959e5c181db038bf2529e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#af3d4088cb5e959e5c181db038bf2529e">Execute</a> (void *pInstance, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &gt; arguments, <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;out_returnValue) const =0</td></tr>
<tr class="memdesc:af3d4088cb5e959e5c181db038bf2529e inherit pub_methods_classpl_abstract_function_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls the function. Provide the instance on which the function is supposed to be called.  <br /></td></tr>
<tr class="separator:af3d4088cb5e959e5c181db038bf2529e inherit pub_methods_classpl_abstract_function_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe6e3ed4313e5ad444a598c82d2e716e inherit pub_methods_classpl_abstract_function_property" id="r_abe6e3ed4313e5ad444a598c82d2e716e"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#abe6e3ed4313e5ad444a598c82d2e716e">GetSpecificType</a> () const override</td></tr>
<tr class="memdesc:abe6e3ed4313e5ad444a598c82d2e716e inherit pub_methods_classpl_abstract_function_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dd/d62/classpl_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">plTypedConstantProperty</a>.  <br /></td></tr>
<tr class="separator:abe6e3ed4313e5ad444a598c82d2e716e inherit pub_methods_classpl_abstract_function_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21ad0f6260a2f6e7c3c70e202f54f895 inherit pub_methods_classpl_abstract_function_property" id="r_a21ad0f6260a2f6e7c3c70e202f54f895"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a21ad0f6260a2f6e7c3c70e202f54f895 inherit pub_methods_classpl_abstract_function_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a21ad0f6260a2f6e7c3c70e202f54f895 inherit pub_methods_classpl_abstract_function_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a436a0dabc0e3c9322c35a26c225ed960 inherit pub_methods_classpl_abstract_function_property" id="r_a436a0dabc0e3c9322c35a26c225ed960"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a436a0dabc0e3c9322c35a26c225ed960 inherit pub_methods_classpl_abstract_function_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a436a0dabc0e3c9322c35a26c225ed960 inherit pub_methods_classpl_abstract_function_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property" id="r_a8ae8dcf20f01b0926e321d68fd38d243"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property" id="r_ab192fac6724fcbd56a160013230bad0b"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property" id="r_a988149e0184a527d89a6fc7b529aa6fc"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property" id="r_a1a7c0de0ecff4c5ab4a37987f9780a64"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property" id="r_a249245c8d8a5bd14d12b7b72920b4d5e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property" id="r_aa28f7ffab1bd6667a67f94a351e618ba"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property" id="r_a74666a9b6312d9e8a0208ff67ec56a7d"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property" id="r_a5226bc2ced2436f3aeaf96fadea40f70"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property" id="r_a135a819e72ea2827916acdefd2fb6848"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property" id="r_aaf46ae0b97785db5048abb483c603cea"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *, 2, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a5e48bf9171b4f55a61d543bd053fd83b" name="a5e48bf9171b4f55a61d543bd053fd83b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e48bf9171b4f55a61d543bd053fd83b">&#9670;&#160;</a></span>GetArgumentCount()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual plUInt32 <a class="el" href="../../de/db7/classpl_typed_function_property.htm">plTypedFunctionProperty</a>&lt; R, Args &gt;::GetArgumentCount </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of arguments. </p>

<p>Implements <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#a8c9557e6bfffe92ee5e6fe166be704e1">plAbstractFunctionProperty</a>.</p>

</div>
</div>
<a id="a9366bea84812251468c151b623183819" name="a9366bea84812251468c151b623183819"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9366bea84812251468c151b623183819">&#9670;&#160;</a></span>GetArgumentFlags()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; <a class="el" href="../../de/db7/classpl_typed_function_property.htm">plTypedFunctionProperty</a>&lt; R, Args &gt;::GetArgumentFlags </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiParamIndex</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the property flags of the given argument. </p>

<p>Implements <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#a4e6c40a8d3d023ef9cc5031bbb776b9e">plAbstractFunctionProperty</a>.</p>

</div>
</div>
<a id="a074758c998cce76634f3b1867a320d7e" name="a074758c998cce76634f3b1867a320d7e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a074758c998cce76634f3b1867a320d7e">&#9670;&#160;</a></span>GetArgumentType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> * <a class="el" href="../../de/db7/classpl_typed_function_property.htm">plTypedFunctionProperty</a>&lt; R, Args &gt;::GetArgumentType </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiParamIndex</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of the given argument. </p>

<p>Implements <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#a613fab41ed31217a83cee0faf08be5d4">plAbstractFunctionProperty</a>.</p>

</div>
</div>
<a id="a2caac76c0e0cbec99499ddf804e569ce" name="a2caac76c0e0cbec99499ddf804e569ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2caac76c0e0cbec99499ddf804e569ce">&#9670;&#160;</a></span>GetReturnFlags()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; <a class="el" href="../../de/db7/classpl_typed_function_property.htm">plTypedFunctionProperty</a>&lt; R, Args &gt;::GetReturnFlags </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns property flags of the return value. </p>

<p>Implements <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#aa762a03b8899ee55f319c9b1a5d47e91">plAbstractFunctionProperty</a>.</p>

</div>
</div>
<a id="aa63f9137a8687d4bb5f0e0e1f79eed23" name="aa63f9137a8687d4bb5f0e0e1f79eed23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa63f9137a8687d4bb5f0e0e1f79eed23">&#9670;&#160;</a></span>GetReturnType()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class R , class... Args&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> * <a class="el" href="../../de/db7/classpl_typed_function_property.htm">plTypedFunctionProperty</a>&lt; R, Args &gt;::GetReturnType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of the return value. </p>

<p>Implements <a class="el" href="../../d7/de1/classpl_abstract_function_property.htm#ab92f74cf69aa367442a1abc51b0a7184">plAbstractFunctionProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../df/db4/_function_property_8h_source.htm">FunctionProperty.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../de/db7/classpl_typed_function_property.htm">plTypedFunctionProperty</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
