<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/Threading/AtomicInteger.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('de/dcd/_atomic_integer_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">AtomicInteger.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Types/TypeTraits.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Threading/AtomicUtils.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">template</span> &lt;<span class="keywordtype">int</span> T&gt;</div>
<div class="foldopen" id="foldopen00008" data-start="{" data-end="};">
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="../../db/dc0/structpl_atomic_storage_type.htm">    8</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../db/dc0/structpl_atomic_storage_type.htm">plAtomicStorageType</a></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>};</div>
</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="};">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../df/d28/structpl_atomic_storage_type_3_011_01_4.htm">   13</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../db/dc0/structpl_atomic_storage_type.htm">plAtomicStorageType</a>&lt;1&gt;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keyword">using </span>Type = plInt32;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>};</div>
</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00019" data-start="{" data-end="};">
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="../../de/d45/structpl_atomic_storage_type_3_012_01_4.htm">   19</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../db/dc0/structpl_atomic_storage_type.htm">plAtomicStorageType</a>&lt;2&gt;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>{</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="keyword">using </span>Type = plInt32;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>};</div>
</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00025" data-start="{" data-end="};">
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="../../d1/d85/structpl_atomic_storage_type_3_014_01_4.htm">   25</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../db/dc0/structpl_atomic_storage_type.htm">plAtomicStorageType</a>&lt;4&gt;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>{</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <span class="keyword">using </span>Type = plInt32;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>};</div>
</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="};">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../dc/d70/structpl_atomic_storage_type_3_018_01_4.htm">   31</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../db/dc0/structpl_atomic_storage_type.htm">plAtomicStorageType</a>&lt;8&gt;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>{</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="keyword">using </span>Type = plInt64;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>};</div>
</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00038" data-start="{" data-end="};">
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../da/ddf/classpl_atomic_integer.htm">   38</a></span><span class="keyword">class </span><a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger</a></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keyword">using </span>UnderlyingType = <span class="keyword">typename</span> <a class="code hl_struct" href="../../db/dc0/structpl_atomic_storage_type.htm">plAtomicStorageType</a>&lt;<span class="keyword">sizeof</span>(T)&gt;::Type;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#ae235a05a7366c40c3b1c685101fa7fda">plAtomicInteger</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#ae235a05a7366c40c3b1c685101fa7fda">plAtomicInteger</a>(<span class="keyword">const</span> T value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#ae235a05a7366c40c3b1c685101fa7fda">plAtomicInteger</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger&lt;T&gt;</a>&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger</a>&amp; <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#a552fa63c77115c7af0499ac430e9109b">operator=</a>(T value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger</a>&amp; <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#a552fa63c77115c7af0499ac430e9109b">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger</a>&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  T <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#a3fd4f713f68655a2507905d9d59fb790">Increment</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  T <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#a742a052f3d8362ac116a17483905035f">Decrement</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  T <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#aa9759151bbb1a8577ff1c31aaff6eb4a">PostIncrement</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  T <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#a6f7abe01ac4c24769ade685d984a0dcc">PostDecrement</a>();  <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keywordtype">void</span> Add(T x);      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="keywordtype">void</span> Subtract(T x); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <span class="keywordtype">void</span> And(T x);      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keywordtype">void</span> Or(T x);       <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keywordtype">void</span> Xor(T x);      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="keywordtype">void</span> Min(T x);      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="keywordtype">void</span> Max(T x);      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  T <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#a90d2ab86094d86ebc9622a21f842629d">Set</a>(T x); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#a1f65affa768a31a4bc3219a29ba295fe">TestAndSet</a>(T expected, T x); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  T <a class="code hl_function" href="../../da/ddf/classpl_atomic_integer.htm#ac64fcdab04e7d7d3aebd3f4e36215e38">CompareAndSwap</a>(T expected, T x); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keyword">operator</span> T() <span class="keyword">const</span>;                <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  UnderlyingType m_Value;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>};</div>
</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="foldopen" id="foldopen00099" data-start="{" data-end="};">
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="../../d1/dc8/classpl_atomic_bool.htm">   99</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d1/dc8/classpl_atomic_bool.htm">plAtomicBool</a></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>{</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno"><a class="line" href="../../d1/dc8/classpl_atomic_bool.htm#a55eacae022e2f11c1eaeacb2c41d3baf">  103</a></span>  <a class="code hl_function" href="../../d1/dc8/classpl_atomic_bool.htm#a55eacae022e2f11c1eaeacb2c41d3baf">plAtomicBool</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <a class="code hl_class" href="../../d1/dc8/classpl_atomic_bool.htm">~plAtomicBool</a>();</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <a class="code hl_function" href="../../d1/dc8/classpl_atomic_bool.htm#a55eacae022e2f11c1eaeacb2c41d3baf">plAtomicBool</a>(<span class="keywordtype">bool</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <a class="code hl_function" href="../../d1/dc8/classpl_atomic_bool.htm#a55eacae022e2f11c1eaeacb2c41d3baf">plAtomicBool</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/dc8/classpl_atomic_bool.htm">plAtomicBool</a>&amp; rhs);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dc8/classpl_atomic_bool.htm#a06d8e3ea3555e5ef031b8c2e4dc94918">Set</a>(<span class="keywordtype">bool</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/dc8/classpl_atomic_bool.htm#a6ec8c3412d139f380a195cb6a265b037">operator=</a>(<span class="keywordtype">bool</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/dc8/classpl_atomic_bool.htm#a6ec8c3412d139f380a195cb6a265b037">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/dc8/classpl_atomic_bool.htm">plAtomicBool</a>&amp; rhs);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keyword">operator</span> bool() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dc8/classpl_atomic_bool.htm#a793b8cbd5f70062b0f1a26a160f15bd2">TestAndSet</a>(<span class="keywordtype">bool</span> bExpected, <span class="keywordtype">bool</span> bNewValue);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger&lt;plInt32&gt;</a> m_iAtomicInt;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>};</div>
</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span><span class="comment">// Include inline file</span></div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span><span class="preprocessor">#include &lt;Foundation/Threading/Implementation/AtomicInteger_inl.h&gt;</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span><span class="keyword">using </span><a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger32</a> = <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger&lt;plInt32&gt;</a>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span><span class="keyword">using </span><a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger64</a> = <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger&lt;plInt64&gt;</a>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(<a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger32</a>) == <span class="keyword">sizeof</span>(plInt32));</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(<a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger64</a>) == <span class="keyword">sizeof</span>(plInt64));</div>
<div class="ttc" id="aclasspl_atomic_bool_htm"><div class="ttname"><a href="../../d1/dc8/classpl_atomic_bool.htm">plAtomicBool</a></div><div class="ttdoc">An atomic boolean variable. This is just a wrapper around an atomic int32 for convenience.</div><div class="ttdef"><b>Definition</b> AtomicInteger.h:100</div></div>
<div class="ttc" id="aclasspl_atomic_bool_htm_a06d8e3ea3555e5ef031b8c2e4dc94918"><div class="ttname"><a href="../../d1/dc8/classpl_atomic_bool.htm#a06d8e3ea3555e5ef031b8c2e4dc94918">plAtomicBool::Set</a></div><div class="ttdeci">bool Set(bool value)</div><div class="ttdoc">Sets the bool to the given value and returns its previous value.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:139</div></div>
<div class="ttc" id="aclasspl_atomic_bool_htm_a55eacae022e2f11c1eaeacb2c41d3baf"><div class="ttname"><a href="../../d1/dc8/classpl_atomic_bool.htm#a55eacae022e2f11c1eaeacb2c41d3baf">plAtomicBool::plAtomicBool</a></div><div class="ttdeci">plAtomicBool()</div><div class="ttdoc">Initializes the bool to 'false'.</div></div>
<div class="ttc" id="aclasspl_atomic_bool_htm_a6ec8c3412d139f380a195cb6a265b037"><div class="ttname"><a href="../../d1/dc8/classpl_atomic_bool.htm#a6ec8c3412d139f380a195cb6a265b037">plAtomicBool::operator=</a></div><div class="ttdeci">void operator=(bool value)</div><div class="ttdoc">Sets the bool to the given value.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:144</div></div>
<div class="ttc" id="aclasspl_atomic_bool_htm_a793b8cbd5f70062b0f1a26a160f15bd2"><div class="ttname"><a href="../../d1/dc8/classpl_atomic_bool.htm#a793b8cbd5f70062b0f1a26a160f15bd2">plAtomicBool::TestAndSet</a></div><div class="ttdeci">bool TestAndSet(bool bExpected, bool bNewValue)</div><div class="ttdoc">Sets the internal value to newValue if the internal value is equal to expected and returns true,...</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:159</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger</a></div><div class="ttdoc">Integer class that can be manipulated in an atomic (i.e. thread-safe) fashion.</div><div class="ttdef"><b>Definition</b> AtomicInteger.h:39</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_a1f65affa768a31a4bc3219a29ba295fe"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#a1f65affa768a31a4bc3219a29ba295fe">plAtomicInteger::TestAndSet</a></div><div class="ttdeci">bool TestAndSet(T expected, T x)</div><div class="ttdoc">Sets the internal value to x if the internal value is equal to expected and returns true,...</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:107</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_a3fd4f713f68655a2507905d9d59fb790"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#a3fd4f713f68655a2507905d9d59fb790">plAtomicInteger::Increment</a></div><div class="ttdeci">T Increment()</div><div class="ttdoc">Increments the internal value and returns the incremented value.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:35</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_a552fa63c77115c7af0499ac430e9109b"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#a552fa63c77115c7af0499ac430e9109b">plAtomicInteger::operator=</a></div><div class="ttdeci">plAtomicInteger &amp; operator=(T value)</div><div class="ttdoc">Assigns a new integer value to this object.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:21</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_a6f7abe01ac4c24769ade685d984a0dcc"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#a6f7abe01ac4c24769ade685d984a0dcc">plAtomicInteger::PostDecrement</a></div><div class="ttdeci">T PostDecrement()</div><div class="ttdoc">Decrements the internal value and returns the value immediately before the decrement.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:53</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_a742a052f3d8362ac116a17483905035f"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#a742a052f3d8362ac116a17483905035f">plAtomicInteger::Decrement</a></div><div class="ttdeci">T Decrement()</div><div class="ttdoc">Decrements the internal value and returns the decremented value.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:41</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_a90d2ab86094d86ebc9622a21f842629d"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#a90d2ab86094d86ebc9622a21f842629d">plAtomicInteger::Set</a></div><div class="ttdeci">T Set(T x)</div><div class="ttdoc">Sets the internal value to x and returns the original internal value.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:101</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_aa9759151bbb1a8577ff1c31aaff6eb4a"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#aa9759151bbb1a8577ff1c31aaff6eb4a">plAtomicInteger::PostIncrement</a></div><div class="ttdeci">T PostIncrement()</div><div class="ttdoc">Increments the internal value and returns the value immediately before the increment.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:47</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_ac64fcdab04e7d7d3aebd3f4e36215e38"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#ac64fcdab04e7d7d3aebd3f4e36215e38">plAtomicInteger::CompareAndSwap</a></div><div class="ttdeci">T CompareAndSwap(T expected, T x)</div><div class="ttdoc">If this is equal to expected, it is set to value. Otherwise it won't be modified. Always returns the ...</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:113</div></div>
<div class="ttc" id="aclasspl_atomic_integer_htm_ae235a05a7366c40c3b1c685101fa7fda"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm#ae235a05a7366c40c3b1c685101fa7fda">plAtomicInteger::plAtomicInteger</a></div><div class="ttdeci">plAtomicInteger()</div><div class="ttdoc">Initializes the value to zero.</div><div class="ttdef"><b>Definition</b> AtomicInteger_inl.h:3</div></div>
<div class="ttc" id="astructpl_atomic_storage_type_htm"><div class="ttname"><a href="../../db/dc0/structpl_atomic_storage_type.htm">plAtomicStorageType</a></div><div class="ttdef"><b>Definition</b> AtomicInteger.h:9</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_fa1ade104661ad34fb0eac087515bd03.htm">Threading</a></li><li class="navelem"><b>AtomicInteger.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
