<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plGameState Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/d9b/classpl_game_state.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../db/d9d/classpl_game_state-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plGameState Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> is the base class to build custom game logic upon. It works closely together with <a class="el" href="../../db/d17/classpl_game_application.htm" title="The base class for all typical game applications made with plEngine.">plGameApplication</a>.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/d14/_game_state_8h_source.htm">GameState.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plGameState:</div>
<div class="dyncontent">
<div class="center"><img src="../../d1/d6c/classpl_game_state__inherit__graph.png" border="0" usemap="#apl_game_state_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_game_state_inherit__map" id="apl_game_state_inherit__map">
<area shape="rect" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA..." alt="" coords="30,229,127,256"/>
<area shape="rect" href="../../d6/da5/classpl_fallback_game_state.htm" title="plFallbackGameState is an plGameState that can handle existing worlds when no other game state is ava..." alt="" coords="5,304,152,331"/>
<area shape="poly" title=" " alt="" coords="81,272,81,304,76,304,76,272"/>
<area shape="rect" href="../../d7/dbf/classpl_game_state_base.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA..." alt="" coords="15,155,142,181"/>
<area shape="poly" title=" " alt="" coords="81,197,81,229,76,229,76,197"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="19,80,138,107"/>
<area shape="poly" title=" " alt="" coords="81,122,81,154,76,154,76,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="40,5,117,32"/>
<area shape="poly" title=" " alt="" coords="81,48,81,80,76,80,76,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0a8eea1595495fd55a2adc678ccc5f89" id="r_a0a8eea1595495fd55a2adc678ccc5f89"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0a8eea1595495fd55a2adc678ccc5f89">OnActivation</a> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld, const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> *pStartPosition) override</td></tr>
<tr class="memdesc:a0a8eea1595495fd55a2adc678ccc5f89"><td class="mdescLeft">&#160;</td><td class="mdescRight">When a game state was chosen, it gets activated through this function.  <br /></td></tr>
<tr class="separator:a0a8eea1595495fd55a2adc678ccc5f89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6127fffcdc7d6dc3d3c76b61c9abe264" id="r_a6127fffcdc7d6dc3d3c76b61c9abe264"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6127fffcdc7d6dc3d3c76b61c9abe264">OnDeactivation</a> () override</td></tr>
<tr class="memdesc:a6127fffcdc7d6dc3d3c76b61c9abe264"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the game state is being shut down.  <br /></td></tr>
<tr class="separator:a6127fffcdc7d6dc3d3c76b61c9abe264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb0701438cd8e974f42e3fa9f9a37efc" id="r_afb0701438cd8e974f42e3fa9f9a37efc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afb0701438cd8e974f42e3fa9f9a37efc">ScheduleRendering</a> () override</td></tr>
<tr class="memdesc:afb0701438cd8e974f42e3fa9f9a37efc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has to call plRenderLoop::AddMainView for all views that need to be rendered.  <br /></td></tr>
<tr class="separator:afb0701438cd8e974f42e3fa9f9a37efc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a45ce9a8444eba55e937724b6d075d4" id="r_a2a45ce9a8444eba55e937724b6d075d4"><td class="memItemLeft" align="right" valign="top"><a id="a2a45ce9a8444eba55e937724b6d075d4" name="a2a45ce9a8444eba55e937724b6d075d4"></a>
<a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetMainCamera</b> ()</td></tr>
<tr class="memdesc:a2a45ce9a8444eba55e937724b6d075d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives access to the game state's main camera object. <br /></td></tr>
<tr class="separator:a2a45ce9a8444eba55e937724b6d075d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_game_state_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_game_state_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d7/dbf/classpl_game_state_base.htm">plGameStateBase</a></td></tr>
<tr class="memitem:a9e376ed2af5b56b422f2942559b9cacb inherit pub_methods_classpl_game_state_base" id="r_a9e376ed2af5b56b422f2942559b9cacb"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dbf/classpl_game_state_base.htm#a9e376ed2af5b56b422f2942559b9cacb">ProcessInput</a> ()</td></tr>
<tr class="memdesc:a9e376ed2af5b56b422f2942559b9cacb inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once per game update. Should handle input updates here.  <br /></td></tr>
<tr class="separator:a9e376ed2af5b56b422f2942559b9cacb inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff93e3af215cd4b8c250211b6f2600c1 inherit pub_methods_classpl_game_state_base" id="r_aff93e3af215cd4b8c250211b6f2600c1"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>BeforeWorldUpdate</b> ()</td></tr>
<tr class="memdesc:aff93e3af215cd4b8c250211b6f2600c1 inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once each frame before the worlds are updated. <br /></td></tr>
<tr class="separator:aff93e3af215cd4b8c250211b6f2600c1 inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7953f824240bfbcc9b198154c8981fa5 inherit pub_methods_classpl_game_state_base" id="r_a7953f824240bfbcc9b198154c8981fa5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dbf/classpl_game_state_base.htm#a7953f824240bfbcc9b198154c8981fa5">AfterWorldUpdate</a> ()</td></tr>
<tr class="memdesc:a7953f824240bfbcc9b198154c8981fa5 inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called once each frame after the worlds have been updated.  <br /></td></tr>
<tr class="separator:a7953f824240bfbcc9b198154c8981fa5 inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe9ed8e3c621e75aca2b3d92b6ece064 inherit pub_methods_classpl_game_state_base" id="r_abe9ed8e3c621e75aca2b3d92b6ece064"><td class="memItemLeft" align="right" valign="top">virtual plGameStatePriority&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dbf/classpl_game_state_base.htm#abe9ed8e3c621e75aca2b3d92b6ece064">DeterminePriority</a> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld) const =0</td></tr>
<tr class="memdesc:abe9ed8e3c621e75aca2b3d92b6ece064 inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by <a class="el" href="../../db/d17/classpl_game_application.htm" title="The base class for all typical game applications made with plEngine.">plGameApplication</a> to determine which game state is best suited to handle a situation.  <br /></td></tr>
<tr class="separator:abe9ed8e3c621e75aca2b3d92b6ece064 inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d73e81a96712306f628260e7c9937f2 inherit pub_methods_classpl_game_state_base" id="r_a6d73e81a96712306f628260e7c9937f2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/dbf/classpl_game_state_base.htm#a6d73e81a96712306f628260e7c9937f2">RequestQuit</a> ()</td></tr>
<tr class="memdesc:a6d73e81a96712306f628260e7c9937f2 inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Call this to signal that a game state requested the application to quit.  <br /></td></tr>
<tr class="separator:a6d73e81a96712306f628260e7c9937f2 inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a578c06dde871240f3a87a0206c1ec60f inherit pub_methods_classpl_game_state_base" id="r_a578c06dde871240f3a87a0206c1ec60f"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>WasQuitRequested</b> () const</td></tr>
<tr class="memdesc:a578c06dde871240f3a87a0206c1ec60f inherit pub_methods_classpl_game_state_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the game state wants to quit the application. <br /></td></tr>
<tr class="separator:a578c06dde871240f3a87a0206c1ec60f inherit pub_methods_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:af277f92971183761c4361513e0fa1f27" id="r_af277f92971183761c4361513e0fa1f27"><td class="memItemLeft" align="right" valign="top"><a id="af277f92971183761c4361513e0fa1f27" name="af277f92971183761c4361513e0fa1f27"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plGameState</b> ()</td></tr>
<tr class="memdesc:af277f92971183761c4361513e0fa1f27"><td class="mdescLeft">&#160;</td><td class="mdescRight">This class cannot be instantiated directly. <br /></td></tr>
<tr class="separator:af277f92971183761c4361513e0fa1f27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fca83680b629c9010544a6a7d46be05" id="r_a7fca83680b629c9010544a6a7d46be05"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7fca83680b629c9010544a6a7d46be05">CreateActors</a> ()</td></tr>
<tr class="memdesc:a7fca83680b629c9010544a6a7d46be05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an actor with a default window (<a class="el" href="../../d7/d23/classpl_game_state_window.htm" title="A window class that expands a little on plWindow. Default type used by plGameState to create a window...">plGameStateWindow</a>) adds it to the application.  <br /></td></tr>
<tr class="separator:a7fca83680b629c9010544a6a7d46be05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69497fb9665fb7f421f290e04ed65dc7" id="r_a69497fb9665fb7f421f290e04ed65dc7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a69497fb9665fb7f421f290e04ed65dc7">ConfigureInputActions</a> ()</td></tr>
<tr class="memdesc:a69497fb9665fb7f421f290e04ed65dc7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds custom input actions, if necessary. Unless overridden <a class="el" href="#a0a8eea1595495fd55a2adc678ccc5f89" title="When a game state was chosen, it gets activated through this function.">OnActivation()</a> will call this.  <br /></td></tr>
<tr class="separator:a69497fb9665fb7f421f290e04ed65dc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade992af6c462ad739afc22b54023d461" id="r_ade992af6c462ad739afc22b54023d461"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ade992af6c462ad739afc22b54023d461">SpawnPlayer</a> (const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> *pStartPosition)</td></tr>
<tr class="memdesc:ade992af6c462ad739afc22b54023d461"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overridable function that may create a player object.  <br /></td></tr>
<tr class="separator:ade992af6c462ad739afc22b54023d461"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a972edf0d7a9aacd90363c45f34d44f87" id="r_a972edf0d7a9aacd90363c45f34d44f87"><td class="memItemLeft" align="right" valign="top"><a id="a972edf0d7a9aacd90363c45f34d44f87" name="a972edf0d7a9aacd90363c45f34d44f87"></a>
<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d6/d5c/classpl_actor.htm">plActor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateXRActor</b> ()</td></tr>
<tr class="memdesc:a972edf0d7a9aacd90363c45f34d44f87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an XR Actor if XR is configured and available for the project. <br /></td></tr>
<tr class="separator:a972edf0d7a9aacd90363c45f34d44f87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac107f338f56c6718e256d469babfbae4" id="r_ac107f338f56c6718e256d469babfbae4"><td class="memItemLeft" align="right" valign="top"><a id="ac107f338f56c6718e256d469babfbae4" name="ac107f338f56c6718e256d469babfbae4"></a>
<a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>CreateMainView</b> ()</td></tr>
<tr class="memdesc:ac107f338f56c6718e256d469babfbae4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a default main view. <br /></td></tr>
<tr class="separator:ac107f338f56c6718e256d469babfbae4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0888317eebcfa2f76a652cc987957f9" id="r_aa0888317eebcfa2f76a652cc987957f9"><td class="memItemLeft" align="right" valign="top"><a id="aa0888317eebcfa2f76a652cc987957f9" name="aa0888317eebcfa2f76a652cc987957f9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ChangeMainWorld</b> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pNewMainWorld)</td></tr>
<tr class="memdesc:aa0888317eebcfa2f76a652cc987957f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets m_pMainWorld and updates m_pMainView to use that new world for rendering. <br /></td></tr>
<tr class="separator:aa0888317eebcfa2f76a652cc987957f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91dcf621f5fe1e2fdbd3b1548475a12b" id="r_a91dcf621f5fe1e2fdbd3b1548475a12b"><td class="memItemLeft" align="right" valign="top"><a id="a91dcf621f5fe1e2fdbd3b1548475a12b" name="a91dcf621f5fe1e2fdbd3b1548475a12b"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ConfigureMainCamera</b> ()</td></tr>
<tr class="memdesc:a91dcf621f5fe1e2fdbd3b1548475a12b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets up m_MainCamera for first use. <br /></td></tr>
<tr class="separator:a91dcf621f5fe1e2fdbd3b1548475a12b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1a17873ca5cd9a0dd13e77359f40e60" id="r_aa1a17873ca5cd9a0dd13e77359f40e60"><td class="memItemLeft" align="right" valign="top"><a id="aa1a17873ca5cd9a0dd13e77359f40e60" name="aa1a17873ca5cd9a0dd13e77359f40e60"></a>
virtual <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../df/d28/classpl_window.htm">plWindow</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateMainWindow</b> ()</td></tr>
<tr class="memdesc:aa1a17873ca5cd9a0dd13e77359f40e60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to modify the default window creation behavior. Called by <a class="el" href="#a7fca83680b629c9010544a6a7d46be05" title="Creates an actor with a default window (plGameStateWindow) adds it to the application.">CreateActors()</a>. <br /></td></tr>
<tr class="separator:aa1a17873ca5cd9a0dd13e77359f40e60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae32a3b57a92efc7d86943f8b50c5490a" id="r_ae32a3b57a92efc7d86943f8b50c5490a"><td class="memItemLeft" align="right" valign="top"><a id="ae32a3b57a92efc7d86943f8b50c5490a" name="ae32a3b57a92efc7d86943f8b50c5490a"></a>
virtual <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d5/d9d/classpl_window_output_target_g_a_l.htm">plWindowOutputTargetGAL</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateMainOutputTarget</b> (<a class="el" href="../../df/d28/classpl_window.htm">plWindow</a> *pMainWindow)</td></tr>
<tr class="memdesc:ae32a3b57a92efc7d86943f8b50c5490a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to modify the default output target creation behavior. Called by <a class="el" href="#a7fca83680b629c9010544a6a7d46be05" title="Creates an actor with a default window (plGameStateWindow) adds it to the application.">CreateActors()</a>. <br /></td></tr>
<tr class="separator:ae32a3b57a92efc7d86943f8b50c5490a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75071a4b6823bac38cfc891a00a8a2eb" id="r_a75071a4b6823bac38cfc891a00a8a2eb"><td class="memItemLeft" align="right" valign="top"><a id="a75071a4b6823bac38cfc891a00a8a2eb" name="a75071a4b6823bac38cfc891a00a8a2eb"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>SetupMainView</b> (<a class="el" href="../../d6/d88/classpl_g_a_l_swap_chain_handle.htm">plGALSwapChainHandle</a> hSwapChain, <a class="el" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a> viewportSize)</td></tr>
<tr class="memdesc:a75071a4b6823bac38cfc891a00a8a2eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a default render view. Unless overridden, <a class="el" href="#a0a8eea1595495fd55a2adc678ccc5f89" title="When a game state was chosen, it gets activated through this function.">OnActivation()</a> will do this for the main window. <br /></td></tr>
<tr class="separator:a75071a4b6823bac38cfc891a00a8a2eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb469968dadc03ef3df27b9ab715fc8a" id="r_afb469968dadc03ef3df27b9ab715fc8a"><td class="memItemLeft" align="right" valign="top"><a id="afb469968dadc03ef3df27b9ab715fc8a" name="afb469968dadc03ef3df27b9ab715fc8a"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ConfigureMainWindowInputDevices</b> (<a class="el" href="../../df/d28/classpl_window.htm">plWindow</a> *pWindow)</td></tr>
<tr class="memdesc:afb469968dadc03ef3df27b9ab715fc8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures available input devices, e.g. sets mouse speed, cursor clipping, etc. Called by <a class="el" href="#a7fca83680b629c9010544a6a7d46be05" title="Creates an actor with a default window (plGameStateWindow) adds it to the application.">CreateActors()</a> with the result of <a class="el" href="#aa1a17873ca5cd9a0dd13e77359f40e60" title="Override this to modify the default window creation behavior. Called by CreateActors().">CreateMainWindow()</a>. <br /></td></tr>
<tr class="separator:afb469968dadc03ef3df27b9ab715fc8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a22eb7dfb247e8fd3445a3db4d0af9cd6" id="r_a22eb7dfb247e8fd3445a3db4d0af9cd6"><td class="memItemLeft" align="right" valign="top"><a id="a22eb7dfb247e8fd3445a3db4d0af9cd6" name="a22eb7dfb247e8fd3445a3db4d0af9cd6"></a>
<a class="el" href="../../d7/d9c/classpl_view_handle.htm">plViewHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hMainView</b></td></tr>
<tr class="separator:a22eb7dfb247e8fd3445a3db4d0af9cd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8944467e5fdadbe7cda04491775353d" id="r_ac8944467e5fdadbe7cda04491775353d"><td class="memItemLeft" align="right" valign="top"><a id="ac8944467e5fdadbe7cda04491775353d" name="ac8944467e5fdadbe7cda04491775353d"></a>
<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pMainWorld</b> = nullptr</td></tr>
<tr class="separator:ac8944467e5fdadbe7cda04491775353d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a5f810766b26228a929ad4eeeda143b" id="r_a7a5f810766b26228a929ad4eeeda143b"><td class="memItemLeft" align="right" valign="top"><a id="a7a5f810766b26228a929ad4eeeda143b" name="a7a5f810766b26228a929ad4eeeda143b"></a>
<a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_MainCamera</b></td></tr>
<tr class="separator:a7a5f810766b26228a929ad4eeeda143b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8086118831452fa48cdea9493086e1d" id="r_ae8086118831452fa48cdea9493086e1d"><td class="memItemLeft" align="right" valign="top"><a id="ae8086118831452fa48cdea9493086e1d" name="ae8086118831452fa48cdea9493086e1d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bStateWantsToQuit</b> = false</td></tr>
<tr class="separator:ae8086118831452fa48cdea9493086e1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d8a5edff534633078b48f17f1fb4018" id="r_a2d8a5edff534633078b48f17f1fb4018"><td class="memItemLeft" align="right" valign="top"><a id="a2d8a5edff534633078b48f17f1fb4018" name="a2d8a5edff534633078b48f17f1fb4018"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bXREnabled</b> = false</td></tr>
<tr class="separator:a2d8a5edff534633078b48f17f1fb4018"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0684a0055b1c82f5a777010a7d0f934" id="r_aa0684a0055b1c82f5a777010a7d0f934"><td class="memItemLeft" align="right" valign="top"><a id="aa0684a0055b1c82f5a777010a7d0f934" name="aa0684a0055b1c82f5a777010a7d0f934"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bXRRemotingEnabled</b> = false</td></tr>
<tr class="separator:aa0684a0055b1c82f5a777010a7d0f934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d4561998037fe6532e67e2177a9020f" id="r_a9d4561998037fe6532e67e2177a9020f"><td class="memItemLeft" align="right" valign="top"><a id="a9d4561998037fe6532e67e2177a9020f" name="a9d4561998037fe6532e67e2177a9020f"></a>
<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm">plDummyXR</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_pDummyXR</b></td></tr>
<tr class="separator:a9d4561998037fe6532e67e2177a9020f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_game_state_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_game_state_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d7/dbf/classpl_game_state_base.htm">plGameStateBase</a></td></tr>
<tr class="memitem:af8790ecc86f218e2b41ac95890fbdde4 inherit pro_attribs_classpl_game_state_base" id="r_af8790ecc86f218e2b41ac95890fbdde4"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bStateWantsToQuit</b> = false</td></tr>
<tr class="separator:af8790ecc86f218e2b41ac95890fbdde4 inherit pro_attribs_classpl_game_state_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> is the base class to build custom game logic upon. It works closely together with <a class="el" href="../../db/d17/classpl_game_application.htm" title="The base class for all typical game applications made with plEngine.">plGameApplication</a>. </p>
<p>In a typical game there is always exactly one instance of an <a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> derived class active. The game state handles custom game logic, which must be handled outside <a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a>, custom components and scripts.</p>
<p>For example a custom implementation of <a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> may handle how to show a menu, when to switch to another level, how multi-player works, or which player information is transitioned from one level to the next. It's main purpose is to implement high-level game logic.</p>
<p><a class="el" href="../../db/d17/classpl_game_application.htm" title="The base class for all typical game applications made with plEngine.">plGameApplication</a> will loop through all available <a class="el" href="../../db/d9b/classpl_game_state.htm" title="plGameState is the base class to build custom game logic upon. It works closely together with plGameA...">plGameState</a> implementations and ask each available one whether it can handle a certain level. Each game state returns a 'score' how well it can handle the game.</p>
<p>In a typical game you only have one game state linked into the binary, so in that case there is no reason for such a system. However, in an editor you might have multiple game states available through plugins, but only one can take control. In such a case, each game state may inspect the given world and check whether it is e.g. a single-player or multi-player level, or whether it uses it's own game specific components, and then decide whether it is the best fit for that level.</p>
<dl class="section note"><dt>Note</dt><dd>Do not forget to reflect your derived class, otherwise <a class="el" href="../../db/d17/classpl_game_application.htm" title="The base class for all typical game applications made with plEngine.">plGameApplication</a> may not find it. </dd></dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a69497fb9665fb7f421f290e04ed65dc7" name="a69497fb9665fb7f421f290e04ed65dc7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a69497fb9665fb7f421f290e04ed65dc7">&#9670;&#160;</a></span>ConfigureInputActions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plGameState::ConfigureInputActions </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds custom input actions, if necessary. Unless overridden <a class="el" href="#a0a8eea1595495fd55a2adc678ccc5f89" title="When a game state was chosen, it gets activated through this function.">OnActivation()</a> will call this. </p>

<p>Reimplemented in <a class="el" href="../../d6/da5/classpl_fallback_game_state.htm#aaf583543d9987a1fc8c4697bad403767">plFallbackGameState</a>.</p>

</div>
</div>
<a id="a7fca83680b629c9010544a6a7d46be05" name="a7fca83680b629c9010544a6a7d46be05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7fca83680b629c9010544a6a7d46be05">&#9670;&#160;</a></span>CreateActors()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plGameState::CreateActors </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an actor with a default window (<a class="el" href="../../d7/d23/classpl_game_state_window.htm" title="A window class that expands a little on plWindow. Default type used by plGameState to create a window...">plGameStateWindow</a>) adds it to the application. </p>
<p>The base implementation calls <a class="el" href="#aa1a17873ca5cd9a0dd13e77359f40e60" title="Override this to modify the default window creation behavior. Called by CreateActors().">CreateMainWindow()</a>, <a class="el" href="#ae32a3b57a92efc7d86943f8b50c5490a" title="Override this to modify the default output target creation behavior. Called by CreateActors().">CreateMainOutputTarget()</a> and <a class="el" href="#a75071a4b6823bac38cfc891a00a8a2eb" title="Creates a default render view. Unless overridden, OnActivation() will do this for the main window.">SetupMainView()</a> to configure the main window. </p>

</div>
</div>
<a id="a0a8eea1595495fd55a2adc678ccc5f89" name="a0a8eea1595495fd55a2adc678ccc5f89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a8eea1595495fd55a2adc678ccc5f89">&#9670;&#160;</a></span>OnActivation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plGameState::OnActivation </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *</td>          <td class="paramname"><span class="paramname"><em>pWorld</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> *</td>          <td class="paramname"><span class="paramname"><em>pStartPosition</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>When a game state was chosen, it gets activated through this function. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pWorld</td><td>The game state is supposed to operate on the given world. In a stand-alone application pWorld will always be nullptr and the game state is expected to create worlds itself. When run inside the editor, pWorld will already exist and the game state is expected to work on it.</td></tr>
    <tr><td class="paramname">pStartPosition</td><td>An optional transform for the 'player object' to start at. Usually nullptr, but may be set by the editor to relocate or create the player object at the given destination. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../d7/dbf/classpl_game_state_base.htm#ad21420a72d14030e57cb7837889533c9">plGameStateBase</a>.</p>

<p>Reimplemented in <a class="el" href="../../d6/da5/classpl_fallback_game_state.htm#a23befbbb17e472325ff36136379d2d78">plFallbackGameState</a>.</p>

</div>
</div>
<a id="a6127fffcdc7d6dc3d3c76b61c9abe264" name="a6127fffcdc7d6dc3d3c76b61c9abe264"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6127fffcdc7d6dc3d3c76b61c9abe264">&#9670;&#160;</a></span>OnDeactivation()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plGameState::OnDeactivation </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the game state is being shut down. </p>

<p>Implements <a class="el" href="../../d7/dbf/classpl_game_state_base.htm#a4a56f9e31e21aa92861ded8dc75167bf">plGameStateBase</a>.</p>

<p>Reimplemented in <a class="el" href="../../d6/da5/classpl_fallback_game_state.htm#ad5085590e3bc800883eb8581aff7971d">plFallbackGameState</a>.</p>

</div>
</div>
<a id="afb0701438cd8e974f42e3fa9f9a37efc" name="afb0701438cd8e974f42e3fa9f9a37efc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afb0701438cd8e974f42e3fa9f9a37efc">&#9670;&#160;</a></span>ScheduleRendering()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plGameState::ScheduleRendering </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Has to call plRenderLoop::AddMainView for all views that need to be rendered. </p>

<p>Implements <a class="el" href="../../d7/dbf/classpl_game_state_base.htm#a9e110d9b3a25c6021608f5d54f036a47">plGameStateBase</a>.</p>

</div>
</div>
<a id="ade992af6c462ad739afc22b54023d461" name="ade992af6c462ad739afc22b54023d461"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade992af6c462ad739afc22b54023d461">&#9670;&#160;</a></span>SpawnPlayer()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plGameState::SpawnPlayer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> *</td>          <td class="paramname"><span class="paramname"><em>pStartPosition</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Overridable function that may create a player object. </p>
<p>By default called by <a class="el" href="#a0a8eea1595495fd55a2adc678ccc5f89" title="When a game state was chosen, it gets activated through this function.">OnActivation()</a>. The default implementation will search the world for plPlayerStartComponent's and instantiate the given player prefab at one of those locations. If pStartPosition is not nullptr, it will be used as the spawn position for the player prefab, otherwise the location of the plPlayerStartComponent will be used.</p>
<p>Returns PL_SUCCESS if a prefab was spawned, PL_FAILURE if nothing was done. </p>

<p>Reimplemented in <a class="el" href="../../d6/da5/classpl_fallback_game_state.htm#a45988eee9be177ccdcac1ba854adb1cd">plFallbackGameState</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/GameEngine/GameState/<a class="el" href="../../d1/d14/_game_state_8h_source.htm">GameState.h</a></li>
<li>Code/Engine/GameEngine/GameState/Implementation/<b>GameState.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/d9b/classpl_game_state.htm">plGameState</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
