<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plSimdBSphere Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/d6f/classpl_simd_b_sphere.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d0/d3c/classpl_simd_b_sphere-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plSimdBSphere Class Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a500cb26dcb7398c188d27a07c19b3502" id="r_a500cb26dcb7398c188d27a07c19b3502"><td class="memItemLeft" align="right" valign="top"><a id="a500cb26dcb7398c188d27a07c19b3502" name="a500cb26dcb7398c188d27a07c19b3502"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a500cb26dcb7398c188d27a07c19b3502"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d25fa2a2a2e6c5d501d9ea3b6616254" id="r_a5d25fa2a2a2e6c5d501d9ea3b6616254"><td class="memItemLeft" align="right" valign="top"><a id="a5d25fa2a2a2e6c5d501d9ea3b6616254" name="a5d25fa2a2a2e6c5d501d9ea3b6616254"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSimdBSphere</b> ()</td></tr>
<tr class="memdesc:a5d25fa2a2a2e6c5d501d9ea3b6616254"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor does not initialize any data. <br /></td></tr>
<tr class="separator:a5d25fa2a2a2e6c5d501d9ea3b6616254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89d9b98d91db07528a19eb6f0e208fd" id="r_aa89d9b98d91db07528a19eb6f0e208fd"><td class="memItemLeft" align="right" valign="top"><a id="aa89d9b98d91db07528a19eb6f0e208fd" name="aa89d9b98d91db07528a19eb6f0e208fd"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSimdBSphere</b> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> &amp;vCenter, const <a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> &amp;fRadius)</td></tr>
<tr class="memdesc:aa89d9b98d91db07528a19eb6f0e208fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sphere with the given radius around the given center. <br /></td></tr>
<tr class="separator:aa89d9b98d91db07528a19eb6f0e208fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a854e55beda1fd017fac1e1a31be36a48" id="r_a854e55beda1fd017fac1e1a31be36a48"><td class="memItemLeft" align="right" valign="top"><a id="a854e55beda1fd017fac1e1a31be36a48" name="a854e55beda1fd017fac1e1a31be36a48"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetInvalid</b> ()</td></tr>
<tr class="memdesc:a854e55beda1fd017fac1e1a31be36a48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the bounding sphere to invalid values. <br /></td></tr>
<tr class="separator:a854e55beda1fd017fac1e1a31be36a48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af07ccf4bb00ad2b30b779dc372f1a62b" id="r_af07ccf4bb00ad2b30b779dc372f1a62b"><td class="memItemLeft" align="right" valign="top"><a id="af07ccf4bb00ad2b30b779dc372f1a62b" name="af07ccf4bb00ad2b30b779dc372f1a62b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValid</b> () const</td></tr>
<tr class="memdesc:af07ccf4bb00ad2b30b779dc372f1a62b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the sphere has valid values. <br /></td></tr>
<tr class="separator:af07ccf4bb00ad2b30b779dc372f1a62b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd1b2888e5ce45e96ef2a12e17fbef0d" id="r_acd1b2888e5ce45e96ef2a12e17fbef0d"><td class="memItemLeft" align="right" valign="top"><a id="acd1b2888e5ce45e96ef2a12e17fbef0d" name="acd1b2888e5ce45e96ef2a12e17fbef0d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsNaN</b> () const</td></tr>
<tr class="memdesc:acd1b2888e5ce45e96ef2a12e17fbef0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether any value is NaN. <br /></td></tr>
<tr class="separator:acd1b2888e5ce45e96ef2a12e17fbef0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9210aff5071e43895a226ce8688ce53d" id="r_a9210aff5071e43895a226ce8688ce53d"><td class="memItemLeft" align="right" valign="top"><a id="a9210aff5071e43895a226ce8688ce53d" name="a9210aff5071e43895a226ce8688ce53d"></a>
<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetCenter</b> () const</td></tr>
<tr class="memdesc:a9210aff5071e43895a226ce8688ce53d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the center. <br /></td></tr>
<tr class="separator:a9210aff5071e43895a226ce8688ce53d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bf766d8ec156ba05d5716b51a4a24e2" id="r_a1bf766d8ec156ba05d5716b51a4a24e2"><td class="memItemLeft" align="right" valign="top"><a id="a1bf766d8ec156ba05d5716b51a4a24e2" name="a1bf766d8ec156ba05d5716b51a4a24e2"></a>
<a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetRadius</b> () const</td></tr>
<tr class="memdesc:a1bf766d8ec156ba05d5716b51a4a24e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the radius. <br /></td></tr>
<tr class="separator:a1bf766d8ec156ba05d5716b51a4a24e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb2406c79772c4fa3b64cea4ccd5b75c" id="r_acb2406c79772c4fa3b64cea4ccd5b75c"><td class="memItemLeft" align="right" valign="top"><a id="acb2406c79772c4fa3b64cea4ccd5b75c" name="acb2406c79772c4fa3b64cea4ccd5b75c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetFromPoints</b> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> *pPoints, plUInt32 uiNumPoints, plUInt32 uiStride=sizeof(<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>))</td></tr>
<tr class="memdesc:acb2406c79772c4fa3b64cea4ccd5b75c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the sphere to be the bounding sphere of all the given points. <br /></td></tr>
<tr class="separator:acb2406c79772c4fa3b64cea4ccd5b75c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a732dfc6a3f75673f776c35f84c063b2a" id="r_a732dfc6a3f75673f776c35f84c063b2a"><td class="memItemLeft" align="right" valign="top"><a id="a732dfc6a3f75673f776c35f84c063b2a" name="a732dfc6a3f75673f776c35f84c063b2a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandToInclude</b> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> &amp;vPoint)</td></tr>
<tr class="memdesc:a732dfc6a3f75673f776c35f84c063b2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the sphere's radius to include this point. <br /></td></tr>
<tr class="separator:a732dfc6a3f75673f776c35f84c063b2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d728de8f08b1e75fb9aa30bd6d67c1c" id="r_a1d728de8f08b1e75fb9aa30bd6d67c1c"><td class="memItemLeft" align="right" valign="top"><a id="a1d728de8f08b1e75fb9aa30bd6d67c1c" name="a1d728de8f08b1e75fb9aa30bd6d67c1c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandToInclude</b> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> *pPoints, plUInt32 uiNumPoints, plUInt32 uiStride=sizeof(<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>))</td></tr>
<tr class="memdesc:a1d728de8f08b1e75fb9aa30bd6d67c1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the sphere's radius to include all given points. Does NOT change its position, thus the resulting sphere might be not a very tight fit. More efficient than calling this for every point individually. <br /></td></tr>
<tr class="separator:a1d728de8f08b1e75fb9aa30bd6d67c1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59b8a0668763bcd5f841d49505288a29" id="r_a59b8a0668763bcd5f841d49505288a29"><td class="memItemLeft" align="right" valign="top"><a id="a59b8a0668763bcd5f841d49505288a29" name="a59b8a0668763bcd5f841d49505288a29"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandToInclude</b> (const <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> &amp;rhs)</td></tr>
<tr class="memdesc:a59b8a0668763bcd5f841d49505288a29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases this sphere's radius, such that it encloses the other sphere. <br /></td></tr>
<tr class="separator:a59b8a0668763bcd5f841d49505288a29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a4ebf2a41509ae30cf1304196af72d" id="r_a64a4ebf2a41509ae30cf1304196af72d"><td class="memItemLeft" align="right" valign="top"><a id="a64a4ebf2a41509ae30cf1304196af72d" name="a64a4ebf2a41509ae30cf1304196af72d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Transform</b> (const <a class="el" href="../../d2/d16/classpl_simd_transform.htm">plSimdTransform</a> &amp;t)</td></tr>
<tr class="memdesc:a64a4ebf2a41509ae30cf1304196af72d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms the sphere in its local space. <br /></td></tr>
<tr class="separator:a64a4ebf2a41509ae30cf1304196af72d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a339978c9aa17ddcad18ab277620fa7bb" id="r_a339978c9aa17ddcad18ab277620fa7bb"><td class="memItemLeft" align="right" valign="top"><a id="a339978c9aa17ddcad18ab277620fa7bb" name="a339978c9aa17ddcad18ab277620fa7bb"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Transform</b> (const <a class="el" href="../../d0/db0/classpl_simd_mat4f.htm">plSimdMat4f</a> &amp;mMat)</td></tr>
<tr class="memdesc:a339978c9aa17ddcad18ab277620fa7bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms the sphere in its local space. <br /></td></tr>
<tr class="separator:a339978c9aa17ddcad18ab277620fa7bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26b39af99c240b59237e136c9fdfb1fa" id="r_a26b39af99c240b59237e136c9fdfb1fa"><td class="memItemLeft" align="right" valign="top"><a id="a26b39af99c240b59237e136c9fdfb1fa" name="a26b39af99c240b59237e136c9fdfb1fa"></a>
<a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetDistanceTo</b> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> &amp;vPoint) const</td></tr>
<tr class="memdesc:a26b39af99c240b59237e136c9fdfb1fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the distance of the point to the sphere's surface. Returns negative values for points inside the sphere. <br /></td></tr>
<tr class="separator:a26b39af99c240b59237e136c9fdfb1fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ca142ab8886728635a0625824813359" id="r_a1ca142ab8886728635a0625824813359"><td class="memItemLeft" align="right" valign="top"><a id="a1ca142ab8886728635a0625824813359" name="a1ca142ab8886728635a0625824813359"></a>
<a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetDistanceTo</b> (const <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a1ca142ab8886728635a0625824813359"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the distance between the two spheres. Zero for spheres that are exactly touching each other, negative values for overlapping spheres. <br /></td></tr>
<tr class="separator:a1ca142ab8886728635a0625824813359"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a763c38d79ba725f8fcdcc52694b829a3" id="r_a763c38d79ba725f8fcdcc52694b829a3"><td class="memItemLeft" align="right" valign="top"><a id="a763c38d79ba725f8fcdcc52694b829a3" name="a763c38d79ba725f8fcdcc52694b829a3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> &amp;vPoint) const</td></tr>
<tr class="memdesc:a763c38d79ba725f8fcdcc52694b829a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the given point is inside the sphere. <br /></td></tr>
<tr class="separator:a763c38d79ba725f8fcdcc52694b829a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a00160691110609869e83ee763de596" id="r_a0a00160691110609869e83ee763de596"><td class="memItemLeft" align="right" valign="top"><a id="a0a00160691110609869e83ee763de596" name="a0a00160691110609869e83ee763de596"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a0a00160691110609869e83ee763de596"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the other sphere is completely inside this sphere. <br /></td></tr>
<tr class="separator:a0a00160691110609869e83ee763de596"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87659cbd299db04154e9ac03e1f79fc0" id="r_a87659cbd299db04154e9ac03e1f79fc0"><td class="memItemLeft" align="right" valign="top"><a id="a87659cbd299db04154e9ac03e1f79fc0" name="a87659cbd299db04154e9ac03e1f79fc0"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Overlaps</b> (const <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a87659cbd299db04154e9ac03e1f79fc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the two objects overlap. <br /></td></tr>
<tr class="separator:a87659cbd299db04154e9ac03e1f79fc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d1aefe1a6209d7d50555932f1845d78" id="r_a8d1aefe1a6209d7d50555932f1845d78"><td class="memItemLeft" align="right" valign="top"><a id="a8d1aefe1a6209d7d50555932f1845d78" name="a8d1aefe1a6209d7d50555932f1845d78"></a>
<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetClampedPoint</b> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> &amp;vPoint)</td></tr>
<tr class="memdesc:a8d1aefe1a6209d7d50555932f1845d78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamps the given position to the volume of the sphere. The resulting point will always be inside the sphere, but have the closest distance to the original point. <br /></td></tr>
<tr class="separator:a8d1aefe1a6209d7d50555932f1845d78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a748e6251d24e9a1a5eedab93c34891e6" id="r_a748e6251d24e9a1a5eedab93c34891e6"><td class="memItemLeft" align="right" valign="top"><a id="a748e6251d24e9a1a5eedab93c34891e6" name="a748e6251d24e9a1a5eedab93c34891e6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="separator:a748e6251d24e9a1a5eedab93c34891e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d51432626f9124cb8e6c91464be899d" id="r_a7d51432626f9124cb8e6c91464be899d"><td class="memItemLeft" align="right" valign="top"><a id="a7d51432626f9124cb8e6c91464be899d" name="a7d51432626f9124cb8e6c91464be899d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="separator:a7d51432626f9124cb8e6c91464be899d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:afe3a5e8176a5f8f88103ac4fd00b8d14" id="r_afe3a5e8176a5f8f88103ac4fd00b8d14"><td class="memItemLeft" align="right" valign="top"><a id="afe3a5e8176a5f8f88103ac4fd00b8d14" name="afe3a5e8176a5f8f88103ac4fd00b8d14"></a>
static <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MakeZero</b> ()</td></tr>
<tr class="memdesc:afe3a5e8176a5f8f88103ac4fd00b8d14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sphere at the origin with radius zero. <br /></td></tr>
<tr class="separator:afe3a5e8176a5f8f88103ac4fd00b8d14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7da2568c36dfeadea5eebf0a6013c888" id="r_a7da2568c36dfeadea5eebf0a6013c888"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7da2568c36dfeadea5eebf0a6013c888">MakeInvalid</a> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> &amp;vCenter=<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a>())</td></tr>
<tr class="memdesc:a7da2568c36dfeadea5eebf0a6013c888"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an 'invalid' sphere, with its center at the given position and a negative radius.  <br /></td></tr>
<tr class="separator:a7da2568c36dfeadea5eebf0a6013c888"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa34907540149419b7cab385df46b483c" id="r_aa34907540149419b7cab385df46b483c"><td class="memItemLeft" align="right" valign="top"><a id="aa34907540149419b7cab385df46b483c" name="aa34907540149419b7cab385df46b483c"></a>
static <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MakeFromCenterAndRadius</b> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> &amp;vCenter, const <a class="el" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> &amp;fRadius)</td></tr>
<tr class="memdesc:aa34907540149419b7cab385df46b483c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sphere with the provided center and radius. <br /></td></tr>
<tr class="separator:aa34907540149419b7cab385df46b483c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a359e6f2439ea8c079ca4e778b395d382" id="r_a359e6f2439ea8c079ca4e778b395d382"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a359e6f2439ea8c079ca4e778b395d382">MakeFromPoints</a> (const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> *pPoints, plUInt32 uiNumPoints, plUInt32 uiStride=sizeof(<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>))</td></tr>
<tr class="memdesc:a359e6f2439ea8c079ca4e778b395d382"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a bounding sphere around the provided points.  <br /></td></tr>
<tr class="separator:a359e6f2439ea8c079ca4e778b395d382"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ad2a9666cf8e04d08a53733e09b8dd75d" id="r_ad2a9666cf8e04d08a53733e09b8dd75d"><td class="memItemLeft" align="right" valign="top"><a id="ad2a9666cf8e04d08a53733e09b8dd75d" name="ad2a9666cf8e04d08a53733e09b8dd75d"></a>
<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_CenterAndRadius</b></td></tr>
<tr class="separator:ad2a9666cf8e04d08a53733e09b8dd75d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a359e6f2439ea8c079ca4e778b395d382" name="a359e6f2439ea8c079ca4e778b395d382"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a359e6f2439ea8c079ca4e778b395d382">&#9670;&#160;</a></span>MakeFromPoints()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> plSimdBSphere::MakeFromPoints </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> *</td>          <td class="paramname"><span class="paramname"><em>pPoints</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiNumPoints</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiStride</em></span><span class="paramdefsep"> = </span><span class="paramdefval">sizeof(<a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>)</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a bounding sphere around the provided points. </p>
<p>The center of the sphere will be at the 'center of mass' of all the points, and the radius will be the distance to the farthest point from there. </p>

</div>
</div>
<a id="a7da2568c36dfeadea5eebf0a6013c888" name="a7da2568c36dfeadea5eebf0a6013c888"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7da2568c36dfeadea5eebf0a6013c888">&#9670;&#160;</a></span>MakeInvalid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PL_ALWAYS_INLINE <a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a> plSimdBSphere::MakeInvalid </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vCenter</em></span><span class="paramdefsep"> = </span><span class="paramdefval"><a class="el" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a>()</span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an 'invalid' sphere, with its center at the given position and a negative radius. </p>
<p>Such a sphere can be made 'valid' through <a class="el" href="#a732dfc6a3f75673f776c35f84c063b2a" title="Increases the sphere&#39;s radius to include this point.">ExpandToInclude()</a>, but be aware that the originally provided center position will always be part of the sphere. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/SimdMath/<a class="el" href="../../d5/dd7/_simd_b_sphere_8h_source.htm">SimdBSphere.h</a></li>
<li>Code/Engine/Foundation/SimdMath/Implementation/<a class="el" href="../../da/d93/_simd_b_sphere__inl_8h_source.htm">SimdBSphere_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/d6f/classpl_simd_b_sphere.htm">plSimdBSphere</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
