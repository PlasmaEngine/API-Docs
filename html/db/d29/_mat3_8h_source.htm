<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Foundation/Math/Mat3.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/d29/_mat3_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Mat3.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Math/Angle.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Math/Vec3.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00008" data-start="{" data-end="};">
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="../../d5/d81/classpl_mat3_template.htm">    8</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template</a></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  <span class="keyword">using </span>ComponentType = Type;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="comment">// *** Data ***</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="comment">// The elements are stored in column-major order.</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="comment">// That means first is column 0 (with elements of row 0, row 1, row 2),</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="comment">// then column 1, then column 2</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="../../d5/d81/classpl_mat3_template.htm#ad0d03fb43bd456c5073d293b16faa0d4">   22</a></span>  Type <a class="code hl_variable" href="../../d5/d81/classpl_mat3_template.htm#ad0d03fb43bd456c5073d293b16faa0d4">m_fElementsCM</a>[9];</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  PL_ALWAYS_INLINE Type&amp; Element(plInt32 iColumn, plInt32 iRow) { <span class="keywordflow">return</span> <a class="code hl_variable" href="../../d5/d81/classpl_mat3_template.htm#ad0d03fb43bd456c5073d293b16faa0d4">m_fElementsCM</a>[iColumn * 3 + iRow]; }</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  PL_ALWAYS_INLINE Type Element(plInt32 iColumn, plInt32 iRow)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_variable" href="../../d5/d81/classpl_mat3_template.htm#ad0d03fb43bd456c5073d293b16faa0d4">m_fElementsCM</a>[iColumn * 3 + iRow]; }</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a8431bc4debb16860da02db0aa40b9269">plMat3Template</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a8e578b8138810a27bbbe5a17c962e953">MakeZero</a>();</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#ac0b8884081268565e4dbb179d09cf659">MakeIdentity</a>();</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a46d9b8b15504511544c67a99b8cd2836">MakeFromRowMajorArray</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#ae3cad0106a02ee887646fb6291665eff">MakeFromColumnMajorArray</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a8d3acabf7e06f30785b1498cb0be5640">MakeFromValues</a>(Type c1r1, Type c2r1, Type c3r1, Type c1r2, Type c2r2, Type c3r2, Type c1r3, Type c2r3, Type c3r3);</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a36aab0cc518b2aa742a09e9302887112">MakeScaling</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a>&amp; vScale);</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a3636b362116e78e1e88ac4a9ee021421">MakeRotationX</a>(<a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> angle);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a76b2d0922d14b9ee704030c262ba50a2">MakeRotationY</a>(<a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> angle);</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a52e9e5cc7756e7966fd0c255a7def767">MakeRotationZ</a>(<a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> angle);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a3b464e542db50f5631c0c0ae8067a284">MakeAxisRotation</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a>&amp; vAxis, <a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> angle);</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="preprocessor">#if PL_ENABLED(PL_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    PL_ASSERT_ALWAYS(!<a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#adc157a9a7993dc250b10922cc540a27a">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please check that &quot;</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>                               <span class="stringliteral">&quot;all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  }</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#ac67755b782c5c237f98603e192cdfe05">GetAsArray</a>(Type* out_pData, <a class="code hl_enumeration" href="../../d6/d4e/structpl_matrix_layout.htm#acf5e9c8a9bd264538ac43c0219829234">plMatrixLayout::Enum</a> layout) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <span class="comment">// *** Special matrix constructors ***</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a0f5aa359dcfd69097c6f0fe5b23de403">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a8d24c9e68cff5019b26a920f3806147b">SetIdentity</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="comment">// *** Common Matrix Operations ***</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a2f60f54319090a86bba7ff2d3ddc3cac">Transpose</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a7e285b331f175e2c662bebb4e61fc0c7">GetTranspose</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a47e9ec129207990c918ca5c9d07d31d5">Invert</a>(Type fEpsilon = plMath::SmallEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a7eaeae1228c5fe19ecc977f68be2a020">GetInverse</a>(Type fEpsilon = plMath::SmallEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="comment">// *** Checks ***</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a0e5fe8a8f108ef96cc111325e345031a">IsZero</a>(Type fEpsilon = plMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#ac1cf1ac435234d7788e5a298f170e8c8">IsIdentity</a>(Type fEpsilon = plMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#acc35225490a34919cbccc3f06574ead7">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#adc157a9a7993dc250b10922cc540a27a">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="comment">// *** Special Accessors ***</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a19c70b1a3157a0ee1c4021cf75c49e7c">GetRow</a>(plUInt32 uiRow) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#add3b2b6f1c8fa8d4a132854877133308">SetRow</a>(plUInt32 uiRow, <span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a>&amp; vRow); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#afe15052707e50cf0d0f8c2e1e4982bf8">GetColumn</a>(plUInt32 uiColumn) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a2e7c64aa7d03f99e57edc4b19721a7b0">SetColumn</a>(plUInt32 uiColumn, <span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a>&amp; vColumn); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a604de71e41feeb687a030bde8e42617b">GetDiagonal</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a074df74d7b85c7f8eaef08de6633ce4a">SetDiagonal</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a>&amp; vDiag); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#adf409250e0e3702336b41a82795e782c">GetScalingFactors</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a3d7f296b5bf2be7f1e499de06c4c5a72">SetScalingFactors</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a>&amp; vXYZ, Type fEpsilon = plMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  Type <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#ac51eb4fd688627baf8e605b7936342f1">GetDeterminant</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a911ea3b9bf5006de9360f9382385ca1e">TransformDirection</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a>&amp; v) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a72c6662610a24d248456cf43b3250421">operator*=</a>(Type f);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a831fb266add1abc99c590ce218f9b682">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a52a53621279810fc655a6fc13b481ce6">IsIdentical</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d5/d81/classpl_mat3_template.htm#a4bc9c4c1a7eb5ed1022c10fefdb2e41c">IsEqual</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>};</div>
</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="comment">// *** free functions ***</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span><span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span><span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m, <span class="keyword">const</span> <a class="code hl_class" href="../../df/d1f/classpl_vec3_template.htm">plVec3Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span><span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m1, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span><span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m1, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span><span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span><span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; m2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span><span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span><span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code hl_class" href="../../d5/d81/classpl_mat3_template.htm">plMat3Template&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/Mat3_inl.h&gt;</span></div>
<div class="ttc" id="aclasspl_angle_htm"><div class="ttname"><a href="../../d4/dfd/classpl_angle.htm">plAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition</b> Angle.h:10</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm">plMat3Template</a></div><div class="ttdoc">A 3x3 component matrix class.</div><div class="ttdef"><b>Definition</b> Mat3.h:9</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a074df74d7b85c7f8eaef08de6633ce4a"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a074df74d7b85c7f8eaef08de6633ce4a">plMat3Template::SetDiagonal</a></div><div class="ttdeci">void SetDiagonal(const plVec3Template&lt; Type &gt; &amp;vDiag)</div><div class="ttdoc">Sets all 3 components on the diagonal of the matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:236</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a0e5fe8a8f108ef96cc111325e345031a"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a0e5fe8a8f108ef96cc111325e345031a">plMat3Template::IsZero</a></div><div class="ttdeci">bool IsZero(Type fEpsilon=plMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether all elements are zero.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:393</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a0f5aa359dcfd69097c6f0fe5b23de403"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a0f5aa359dcfd69097c6f0fe5b23de403">plMat3Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets all elements to zero.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:144</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a19c70b1a3157a0ee1c4021cf75c49e7c"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a19c70b1a3157a0ee1c4021cf75c49e7c">plMat3Template::GetRow</a></div><div class="ttdeci">plVec3Template&lt; Type &gt; GetRow(plUInt32 uiRow) const</div><div class="ttdoc">Returns all 3 components of the i-th row.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:180</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a2e7c64aa7d03f99e57edc4b19721a7b0"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a2e7c64aa7d03f99e57edc4b19721a7b0">plMat3Template::SetColumn</a></div><div class="ttdeci">void SetColumn(plUInt32 uiColumn, const plVec3Template&lt; Type &gt; &amp;vColumn)</div><div class="ttdoc">Sets all 3 components of the i-th column.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:218</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a2f60f54319090a86bba7ff2d3ddc3cac"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a2f60f54319090a86bba7ff2d3ddc3cac">plMat3Template::Transpose</a></div><div class="ttdeci">void Transpose()</div><div class="ttdoc">Transposes this matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:156</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a3636b362116e78e1e88ac4a9ee021421"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a3636b362116e78e1e88ac4a9ee021421">plMat3Template::MakeRotationX</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeRotationX(plAngle angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the X-axis.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:117</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a36aab0cc518b2aa742a09e9302887112"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a36aab0cc518b2aa742a09e9302887112">plMat3Template::MakeScaling</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeScaling(const plVec3Template&lt; Type &gt; &amp;vScale)</div><div class="ttdoc">Creates a matrix with all zero values, except along the diagonal, which is set to x,...</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:101</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a3b464e542db50f5631c0c0ae8067a284"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a3b464e542db50f5631c0c0ae8067a284">plMat3Template::MakeAxisRotation</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeAxisRotation(const plVec3Template&lt; Type &gt; &amp;vAxis, plAngle angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the given axis.</div><div class="ttdef"><b>Definition</b> AllClasses_inl.h:189</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a3d7f296b5bf2be7f1e499de06c4c5a72"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a3d7f296b5bf2be7f1e499de06c4c5a72">plMat3Template::SetScalingFactors</a></div><div class="ttdeci">plResult SetScalingFactors(const plVec3Template&lt; Type &gt; &amp;vXYZ, Type fEpsilon=plMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to set the three scaling factors in the matrix. Returns PL_FAILURE if the matrix columns cannot...</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:473</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a46d9b8b15504511544c67a99b8cd2836"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a46d9b8b15504511544c67a99b8cd2836">plMat3Template::MakeFromRowMajorArray</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeFromRowMajorArray(const Type *const pData)</div><div class="ttdoc">Creates a matrix from 9 values that are in row-major layout.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:64</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a47e9ec129207990c918ca5c9d07d31d5"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a47e9ec129207990c918ca5c9d07d31d5">plMat3Template::Invert</a></div><div class="ttdeci">plResult Invert(Type fEpsilon=plMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Inverts this matrix. Return value indicates whether the matrix could be Inverted.</div><div class="ttdef"><b>Definition</b> AllClasses_inl.h:230</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a4bc9c4c1a7eb5ed1022c10fefdb2e41c"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a4bc9c4c1a7eb5ed1022c10fefdb2e41c">plMat3Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const plMat3Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:364</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a52a53621279810fc655a6fc13b481ce6"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a52a53621279810fc655a6fc13b481ce6">plMat3Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const plMat3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:349</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a52e9e5cc7756e7966fd0c255a7def767"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a52e9e5cc7756e7966fd0c255a7def767">plMat3Template::MakeRotationZ</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeRotationZ(plAngle angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the Z-axis.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:135</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a604de71e41feeb687a030bde8e42617b"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a604de71e41feeb687a030bde8e42617b">plMat3Template::GetDiagonal</a></div><div class="ttdeci">plVec3Template&lt; Type &gt; GetDiagonal() const</div><div class="ttdoc">Returns all 3 components on the diagonal of the matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:228</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a72c6662610a24d248456cf43b3250421"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a72c6662610a24d248456cf43b3250421">plMat3Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Component-wise multiplication (commutative)</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:256</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a76b2d0922d14b9ee704030c262ba50a2"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a76b2d0922d14b9ee704030c262ba50a2">plMat3Template::MakeRotationY</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeRotationY(plAngle angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the Y-axis.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:126</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a7e285b331f175e2c662bebb4e61fc0c7"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a7e285b331f175e2c662bebb4e61fc0c7">plMat3Template::GetTranspose</a></div><div class="ttdeci">const plMat3Template&lt; Type &gt; GetTranspose() const</div><div class="ttdoc">Returns the transpose of this matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:164</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a7eaeae1228c5fe19ecc977f68be2a020"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a7eaeae1228c5fe19ecc977f68be2a020">plMat3Template::GetInverse</a></div><div class="ttdeci">const plMat3Template&lt; Type &gt; GetInverse(Type fEpsilon=plMath::SmallEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns the inverse of this matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:170</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a831fb266add1abc99c590ce218f9b682"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a831fb266add1abc99c590ce218f9b682">plMat3Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Component-wise division.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:265</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a8431bc4debb16860da02db0aa40b9269"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a8431bc4debb16860da02db0aa40b9269">plMat3Template::plMat3Template</a></div><div class="ttdeci">plMat3Template()</div><div class="ttdoc">Default Constructor DOES NOT INITIALIZE the matrix, at all.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:6</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a8d24c9e68cff5019b26a920f3806147b"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a8d24c9e68cff5019b26a920f3806147b">plMat3Template::SetIdentity</a></div><div class="ttdeci">void SetIdentity()</div><div class="ttdoc">Sets all elements to zero, except the diagonal, which is set to one.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:150</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a8d3acabf7e06f30785b1498cb0be5640"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a8d3acabf7e06f30785b1498cb0be5640">plMat3Template::MakeFromValues</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeFromValues(Type c1r1, Type c2r1, Type c3r1, Type c1r2, Type c2r2, Type c3r2, Type c1r3, Type c2r3, Type c3r3)</div><div class="ttdoc">Creates a matrix from 9 values. Naming is &quot;column-n row-m&quot;.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:85</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a8e578b8138810a27bbbe5a17c962e953"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a8e578b8138810a27bbbe5a17c962e953">plMat3Template::MakeZero</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeZero()</div><div class="ttdoc">Returns a zero matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:37</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_a911ea3b9bf5006de9360f9382385ca1e"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#a911ea3b9bf5006de9360f9382385ca1e">plMat3Template::TransformDirection</a></div><div class="ttdeci">const plVec3Template&lt; Type &gt; TransformDirection(const plVec3Template&lt; Type &gt; &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is zero. So,...</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:244</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_ac0b8884081268565e4dbb179d09cf659"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#ac0b8884081268565e4dbb179d09cf659">plMat3Template::MakeIdentity</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeIdentity()</div><div class="ttdoc">Returns an identity matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:48</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_ac1cf1ac435234d7788e5a298f170e8c8"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#ac1cf1ac435234d7788e5a298f170e8c8">plMat3Template::IsIdentity</a></div><div class="ttdeci">bool IsIdentity(Type fEpsilon=plMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether this is an identity matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:407</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_ac51eb4fd688627baf8e605b7936342f1"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#ac51eb4fd688627baf8e605b7936342f1">plMat3Template::GetDeterminant</a></div><div class="ttdeci">Type GetDeterminant() const</div><div class="ttdoc">Computes the determinant of the matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:501</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_ac67755b782c5c237f98603e192cdfe05"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#ac67755b782c5c237f98603e192cdfe05">plMat3Template::GetAsArray</a></div><div class="ttdeci">void GetAsArray(Type *out_pData, plMatrixLayout::Enum layout) const</div><div class="ttdoc">Copies the 9 values of this matrix into the given array. 'layout' defines whether the data should end...</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:17</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_acc35225490a34919cbccc3f06574ead7"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#acc35225490a34919cbccc3f06574ead7">plMat3Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether all components are finite numbers.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:436</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_ad0d03fb43bd456c5073d293b16faa0d4"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#ad0d03fb43bd456c5073d293b16faa0d4">plMat3Template::m_fElementsCM</a></div><div class="ttdeci">Type m_fElementsCM[9]</div><div class="ttdoc">The matrix as a 9-element Type array (column-major)</div><div class="ttdef"><b>Definition</b> Mat3.h:22</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_adc157a9a7993dc250b10922cc540a27a"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#adc157a9a7993dc250b10922cc540a27a">plMat3Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:448</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_add3b2b6f1c8fa8d4a132854877133308"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#add3b2b6f1c8fa8d4a132854877133308">plMat3Template::SetRow</a></div><div class="ttdeci">void SetRow(plUInt32 uiRow, const plVec3Template&lt; Type &gt; &amp;vRow)</div><div class="ttdoc">Sets all 3 components of the i-th row.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:194</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_adf409250e0e3702336b41a82795e782c"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#adf409250e0e3702336b41a82795e782c">plMat3Template::GetScalingFactors</a></div><div class="ttdeci">const plVec3Template&lt; Type &gt; GetScalingFactors() const</div><div class="ttdoc">Returns the 3 scaling factors that are encoded in the matrix.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:460</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_ae3cad0106a02ee887646fb6291665eff"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#ae3cad0106a02ee887646fb6291665eff">plMat3Template::MakeFromColumnMajorArray</a></div><div class="ttdeci">static plMat3Template&lt; Type &gt; MakeFromColumnMajorArray(const Type *const pData)</div><div class="ttdoc">Creates a matrix from 9 values that are in column-major layout.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:77</div></div>
<div class="ttc" id="aclasspl_mat3_template_htm_afe15052707e50cf0d0f8c2e1e4982bf8"><div class="ttname"><a href="../../d5/d81/classpl_mat3_template.htm#afe15052707e50cf0d0f8c2e1e4982bf8">plMat3Template::GetColumn</a></div><div class="ttdeci">plVec3Template&lt; Type &gt; GetColumn(plUInt32 uiColumn) const</div><div class="ttdoc">Returns all 3 components of the i-th column.</div><div class="ttdef"><b>Definition</b> Mat3_inl.h:204</div></div>
<div class="ttc" id="aclasspl_vec3_template_htm"><div class="ttname"><a href="../../df/d1f/classpl_vec3_template.htm">plVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition</b> Vec3.h:9</div></div>
<div class="ttc" id="astructpl_matrix_layout_htm_acf5e9c8a9bd264538ac43c0219829234"><div class="ttname"><a href="../../d6/d4e/structpl_matrix_layout.htm#acf5e9c8a9bd264538ac43c0219829234">plMatrixLayout::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> Declarations.h:65</div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b421fc8dbee4bf114051d293564697bb.htm">Math</a></li><li class="navelem"><b>Mat3.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
