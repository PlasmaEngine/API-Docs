<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plAudioMiddleware Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('db/d7c/classpl_audio_middleware.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d1/d46/classpl_audio_middleware-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAudioMiddleware Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>The Audio Middleware Interface. This interface should be implemented by the ATL middleware to communicate with the audio system.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/da3/_audio_middleware_8h_source.htm">AudioMiddleware.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plAudioMiddleware:</div>
<div class="dyncontent">
<div class="center"><img src="../../d9/d52/classpl_audio_middleware__inherit__graph.png" border="0" usemap="#apl_audio_middleware_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_audio_middleware_inherit__map" id="apl_audio_middleware_inherit__map">
<area shape="rect" title="The Audio Middleware Interface. This interface should be implemented by the ATL middleware to communi..." alt="" coords="5,5,135,32"/>
<area shape="rect" href="../../da/da9/classpl_amplitude.htm" title="The Amplitude Audio Middleware." alt="" coords="25,80,115,107"/>
<area shape="poly" title=" " alt="" coords="73,48,73,80,67,80,67,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af5442701bfd93d59c22027a9474edeb6" id="r_af5442701bfd93d59c22027a9474edeb6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af5442701bfd93d59c22027a9474edeb6">LoadConfiguration</a> (const <a class="el" href="../../d2/d5d/classpl_open_ddl_reader_element.htm">plOpenDdlReaderElement</a> &amp;reader)=0</td></tr>
<tr class="memdesc:af5442701bfd93d59c22027a9474edeb6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads the middleware-specif configuration from the ATL config file.  <br /></td></tr>
<tr class="separator:af5442701bfd93d59c22027a9474edeb6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35e3a523a9d80e80b7f65fe11ced7af6" id="r_a35e3a523a9d80e80b7f65fe11ced7af6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a35e3a523a9d80e80b7f65fe11ced7af6">Startup</a> ()=0</td></tr>
<tr class="memdesc:a35e3a523a9d80e80b7f65fe11ced7af6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the audio middleware.  <br /></td></tr>
<tr class="separator:a35e3a523a9d80e80b7f65fe11ced7af6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afefc6bcc069285f97552ca65adb411f0" id="r_afefc6bcc069285f97552ca65adb411f0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afefc6bcc069285f97552ca65adb411f0">Update</a> (<a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> delta)=0</td></tr>
<tr class="memdesc:afefc6bcc069285f97552ca65adb411f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the audio middleware.  <br /></td></tr>
<tr class="separator:afefc6bcc069285f97552ca65adb411f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12639a3dcf49965f42e2335c5f1a4480" id="r_a12639a3dcf49965f42e2335c5f1a4480"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a12639a3dcf49965f42e2335c5f1a4480">Shutdown</a> ()=0</td></tr>
<tr class="memdesc:a12639a3dcf49965f42e2335c5f1a4480"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deinitializes and stop the audio middleware.  <br /></td></tr>
<tr class="separator:a12639a3dcf49965f42e2335c5f1a4480"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8c8b8ac298009a931634e6eb835af58" id="r_ad8c8b8ac298009a931634e6eb835af58"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad8c8b8ac298009a931634e6eb835af58">Release</a> ()=0</td></tr>
<tr class="memdesc:ad8c8b8ac298009a931634e6eb835af58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all the resources allocated by the audio middleware. This is usually called after Shutdown.  <br /></td></tr>
<tr class="separator:ad8c8b8ac298009a931634e6eb835af58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c017504e91280221adc8eb65babc794" id="r_a9c017504e91280221adc8eb65babc794"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9c017504e91280221adc8eb65babc794">StopAllSounds</a> ()=0</td></tr>
<tr class="memdesc:a9c017504e91280221adc8eb65babc794"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops all the sounds actually played by the audio middleware.  <br /></td></tr>
<tr class="separator:a9c017504e91280221adc8eb65babc794"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcccc60b9af2f55129b0f8707e7da50e" id="r_abcccc60b9af2f55129b0f8707e7da50e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abcccc60b9af2f55129b0f8707e7da50e">AddEntity</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const char *szEntityName)=0</td></tr>
<tr class="memdesc:abcccc60b9af2f55129b0f8707e7da50e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add/register an entity in the audio middleware. This is needed in order to provide transformation values (position and orientation), execute triggers (play sounds), and set real-time parameters or switches.  <br /></td></tr>
<tr class="separator:abcccc60b9af2f55129b0f8707e7da50e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48262d59bd2e529d6547954e3c893c40" id="r_a48262d59bd2e529d6547954e3c893c40"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a48262d59bd2e529d6547954e3c893c40">ResetEntity</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData)=0</td></tr>
<tr class="memdesc:a48262d59bd2e529d6547954e3c893c40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets an entity state.  <br /></td></tr>
<tr class="separator:a48262d59bd2e529d6547954e3c893c40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acee7f7fffa1019f5e9c672bdefff82e3" id="r_acee7f7fffa1019f5e9c672bdefff82e3"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acee7f7fffa1019f5e9c672bdefff82e3">UpdateEntity</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData)=0</td></tr>
<tr class="memdesc:acee7f7fffa1019f5e9c672bdefff82e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates an entity state.  <br /></td></tr>
<tr class="separator:acee7f7fffa1019f5e9c672bdefff82e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0e1ac91c05bc0a8dd5acbfc96160049" id="r_af0e1ac91c05bc0a8dd5acbfc96160049"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af0e1ac91c05bc0a8dd5acbfc96160049">RemoveEntity</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData)=0</td></tr>
<tr class="memdesc:af0e1ac91c05bc0a8dd5acbfc96160049"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove/unregister an entity from the audio middleware. This action disable the possibility to execute triggers, set real-time parameters or switches, and update the position of the entity.  <br /></td></tr>
<tr class="separator:af0e1ac91c05bc0a8dd5acbfc96160049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d187fae7e703bf3236838df701cddde" id="r_a1d187fae7e703bf3236838df701cddde"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1d187fae7e703bf3236838df701cddde">SetEntityTransform</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d1/da2/structpl_audio_system_transform.htm">plAudioSystemTransform</a> &amp;Transform)=0</td></tr>
<tr class="memdesc:a1d187fae7e703bf3236838df701cddde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the global position (world position) of an entity.  <br /></td></tr>
<tr class="separator:a1d187fae7e703bf3236838df701cddde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9778cf524045f178abf923c2c71a9b59" id="r_a9778cf524045f178abf923c2c71a9b59"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9778cf524045f178abf923c2c71a9b59">LoadTrigger</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *pTriggerData, <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData)=0</td></tr>
<tr class="memdesc:a9778cf524045f178abf923c2c71a9b59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a trigger for a further activation. All the data and media needed by the trigger will be loaded. Once done, the trigger status will change to Ready.  <br /></td></tr>
<tr class="separator:a9778cf524045f178abf923c2c71a9b59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa507654df5c071e628134767b67e138f" id="r_aa507654df5c071e628134767b67e138f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa507654df5c071e628134767b67e138f">ActivateTrigger</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *pTriggerData, <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData)=0</td></tr>
<tr class="memdesc:aa507654df5c071e628134767b67e138f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Triggers an event on an entity. A trigger is everything which can affect the state of an event.  <br /></td></tr>
<tr class="separator:aa507654df5c071e628134767b67e138f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabf4f719f583f319437373bb4344c583" id="r_aabf4f719f583f319437373bb4344c583"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aabf4f719f583f319437373bb4344c583">UnloadTrigger</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *pTriggerData)=0</td></tr>
<tr class="memdesc:aabf4f719f583f319437373bb4344c583"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unload the trigger. This is called when the trigger and all data loaded during LoadTrigger need to be disposed.  <br /></td></tr>
<tr class="separator:aabf4f719f583f319437373bb4344c583"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a886b68af0aa2c16181278b94b2e6a404" id="r_a886b68af0aa2c16181278b94b2e6a404"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a886b68af0aa2c16181278b94b2e6a404">StopEvent</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData)=0</td></tr>
<tr class="memdesc:a886b68af0aa2c16181278b94b2e6a404"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops an event on the given entity.  <br /></td></tr>
<tr class="separator:a886b68af0aa2c16181278b94b2e6a404"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dd17b60adf952e08065fae9e2b00c2a" id="r_a6dd17b60adf952e08065fae9e2b00c2a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6dd17b60adf952e08065fae9e2b00c2a">StopAllEvents</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData)=0</td></tr>
<tr class="memdesc:a6dd17b60adf952e08065fae9e2b00c2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops all events active on the given entity.  <br /></td></tr>
<tr class="separator:a6dd17b60adf952e08065fae9e2b00c2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ef3bce97bd11e77a9ced6436a80532b" id="r_a9ef3bce97bd11e77a9ced6436a80532b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ef3bce97bd11e77a9ced6436a80532b">SetRtpc</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *pRtpcData, float fValue)=0</td></tr>
<tr class="memdesc:a9ef3bce97bd11e77a9ced6436a80532b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an audio RTPC to the specified value on an entity.  <br /></td></tr>
<tr class="separator:a9ef3bce97bd11e77a9ced6436a80532b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d78a0c441e4d23f7b2b163e7209dfba" id="r_a5d78a0c441e4d23f7b2b163e7209dfba"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5d78a0c441e4d23f7b2b163e7209dfba">ResetRtpc</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *pRtpcData)=0</td></tr>
<tr class="memdesc:a5d78a0c441e4d23f7b2b163e7209dfba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets an audio RTPC to the default value on an entity.  <br /></td></tr>
<tr class="separator:a5d78a0c441e4d23f7b2b163e7209dfba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a446fd7aa2bf694118d647db441db96a0" id="r_a446fd7aa2bf694118d647db441db96a0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a446fd7aa2bf694118d647db441db96a0">SetSwitchState</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *pSwitchStateData)=0</td></tr>
<tr class="memdesc:a446fd7aa2bf694118d647db441db96a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an audio switch to the specified state on an entity.  <br /></td></tr>
<tr class="separator:a446fd7aa2bf694118d647db441db96a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e7cef636b70fb0c8f15fec63605b796" id="r_a0e7cef636b70fb0c8f15fec63605b796"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0e7cef636b70fb0c8f15fec63605b796">SetObstructionAndOcclusion</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, float fObstruction, float fOcclusion)=0</td></tr>
<tr class="memdesc:a0e7cef636b70fb0c8f15fec63605b796"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the obstruction and occlusion values on an entity.  <br /></td></tr>
<tr class="separator:a0e7cef636b70fb0c8f15fec63605b796"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1651c0dc0cead700fda81d9623d92540" id="r_a1651c0dc0cead700fda81d9623d92540"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1651c0dc0cead700fda81d9623d92540">SetEnvironmentAmount</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *pEnvironmentData, float fAmount)=0</td></tr>
<tr class="memdesc:a1651c0dc0cead700fda81d9623d92540"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the amount of an audio environment effect associated on an entity.  <br /></td></tr>
<tr class="separator:a1651c0dc0cead700fda81d9623d92540"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96fcf2caa535941a381d8b22f1b16090" id="r_a96fcf2caa535941a381d8b22f1b16090"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a96fcf2caa535941a381d8b22f1b16090">AddListener</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData, const char *szListenerName)=0</td></tr>
<tr class="memdesc:a96fcf2caa535941a381d8b22f1b16090"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add/register a listener in the audio middleware. This is needed to let the middleware know where to render audio, and to provide transformation values (position and orientation).  <br /></td></tr>
<tr class="separator:a96fcf2caa535941a381d8b22f1b16090"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c1305b79e60fbf45f9cbbf37f3abf93" id="r_a9c1305b79e60fbf45f9cbbf37f3abf93"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9c1305b79e60fbf45f9cbbf37f3abf93">ResetListener</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData)=0</td></tr>
<tr class="memdesc:a9c1305b79e60fbf45f9cbbf37f3abf93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets a listener state.  <br /></td></tr>
<tr class="separator:a9c1305b79e60fbf45f9cbbf37f3abf93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c8d5db394307cc692aebb80e21eea6e" id="r_a1c8d5db394307cc692aebb80e21eea6e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1c8d5db394307cc692aebb80e21eea6e">RemoveListener</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData)=0</td></tr>
<tr class="memdesc:a1c8d5db394307cc692aebb80e21eea6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove/unregister a listener from the audio middleware. This action disable the possibility to update the position of the listener.  <br /></td></tr>
<tr class="separator:a1c8d5db394307cc692aebb80e21eea6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3368f0eef9687b9045f4336a7d7738f0" id="r_a3368f0eef9687b9045f4336a7d7738f0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3368f0eef9687b9045f4336a7d7738f0">SetListenerTransform</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData, const <a class="el" href="../../d1/da2/structpl_audio_system_transform.htm">plAudioSystemTransform</a> &amp;Transform)=0</td></tr>
<tr class="memdesc:a3368f0eef9687b9045f4336a7d7738f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the global transform (wold position and orientation) of a listener.  <br /></td></tr>
<tr class="separator:a3368f0eef9687b9045f4336a7d7738f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec884f690053de2ea41e30e149c3d889" id="r_aec884f690053de2ea41e30e149c3d889"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec884f690053de2ea41e30e149c3d889">LoadBank</a> (<a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *pBankData)=0</td></tr>
<tr class="memdesc:aec884f690053de2ea41e30e149c3d889"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a bank file.  <br /></td></tr>
<tr class="separator:aec884f690053de2ea41e30e149c3d889"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d0b65757a731b1626a558f77d3f39fc" id="r_a8d0b65757a731b1626a558f77d3f39fc"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8d0b65757a731b1626a558f77d3f39fc">UnloadBank</a> (<a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *pBankData)=0</td></tr>
<tr class="memdesc:a8d0b65757a731b1626a558f77d3f39fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unloads a bank file.  <br /></td></tr>
<tr class="separator:a8d0b65757a731b1626a558f77d3f39fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a841b7c9f9ce9232bb0465c369fe70db8" id="r_a841b7c9f9ce9232bb0465c369fe70db8"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a841b7c9f9ce9232bb0465c369fe70db8">CreateWorldEntity</a> (plAudioSystemDataID uiEntityId)=0</td></tr>
<tr class="memdesc:a841b7c9f9ce9232bb0465c369fe70db8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a world entity. This is a special entity used by non-spatial sounds. The engine will take care to create a game object at position (0,0,0) and orientation (0,0,0,1), and pass the game object ID as parameter to this function. The game object is ensured to never move nor rotate.  <br /></td></tr>
<tr class="separator:a841b7c9f9ce9232bb0465c369fe70db8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4900a2a276deb4a5c56e77f08c52f4f4" id="r_a4900a2a276deb4a5c56e77f08c52f4f4"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4900a2a276deb4a5c56e77f08c52f4f4">CreateEntityData</a> (plAudioSystemDataID uiEntityId)=0</td></tr>
<tr class="memdesc:a4900a2a276deb4a5c56e77f08c52f4f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an audio entity that is attached to a game object.  <br /></td></tr>
<tr class="separator:a4900a2a276deb4a5c56e77f08c52f4f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e3abef1b99ec304fdd25e5db4c907e2" id="r_a3e3abef1b99ec304fdd25e5db4c907e2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3e3abef1b99ec304fdd25e5db4c907e2">DestroyEntityData</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData)=0</td></tr>
<tr class="memdesc:a3e3abef1b99ec304fdd25e5db4c907e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio entity and release memory.  <br /></td></tr>
<tr class="separator:a3e3abef1b99ec304fdd25e5db4c907e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2175fc29dfad62985aaabe8fadec6e5f" id="r_a2175fc29dfad62985aaabe8fadec6e5f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2175fc29dfad62985aaabe8fadec6e5f">CreateListenerData</a> (plAudioSystemDataID uiListenerId)=0</td></tr>
<tr class="memdesc:a2175fc29dfad62985aaabe8fadec6e5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an audio listener that is attached to a game object.  <br /></td></tr>
<tr class="separator:a2175fc29dfad62985aaabe8fadec6e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a760abb29cd7b4ca18dfc092ec1fa6137" id="r_a760abb29cd7b4ca18dfc092ec1fa6137"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a760abb29cd7b4ca18dfc092ec1fa6137">DestroyListenerData</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData)=0</td></tr>
<tr class="memdesc:a760abb29cd7b4ca18dfc092ec1fa6137"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio listener and release memory.  <br /></td></tr>
<tr class="separator:a760abb29cd7b4ca18dfc092ec1fa6137"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5acc9b8ba70ef65f9bc7eb936b1134d9" id="r_a5acc9b8ba70ef65f9bc7eb936b1134d9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5acc9b8ba70ef65f9bc7eb936b1134d9">CreateEventData</a> (plAudioSystemDataID uiEventId)=0</td></tr>
<tr class="memdesc:a5acc9b8ba70ef65f9bc7eb936b1134d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an audio event that is attached to a game object.  <br /></td></tr>
<tr class="separator:a5acc9b8ba70ef65f9bc7eb936b1134d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23007efa87b0fef1a1c05cf878038752" id="r_a23007efa87b0fef1a1c05cf878038752"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a23007efa87b0fef1a1c05cf878038752">ResetEventData</a> (<a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData)=0</td></tr>
<tr class="memdesc:a23007efa87b0fef1a1c05cf878038752"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets the audio event state, so it can safely recycled in the pool.  <br /></td></tr>
<tr class="separator:a23007efa87b0fef1a1c05cf878038752"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a25ebb8f3a23809de4b9d908db28762" id="r_a1a25ebb8f3a23809de4b9d908db28762"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1a25ebb8f3a23809de4b9d908db28762">DestroyEventData</a> (<a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData)=0</td></tr>
<tr class="memdesc:a1a25ebb8f3a23809de4b9d908db28762"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio event and release memory.  <br /></td></tr>
<tr class="separator:a1a25ebb8f3a23809de4b9d908db28762"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4493c93d4d4eae056b84e951b21a70a" id="r_ae4493c93d4d4eae056b84e951b21a70a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae4493c93d4d4eae056b84e951b21a70a">DestroyBank</a> (<a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *pBankData)=0</td></tr>
<tr class="memdesc:ae4493c93d4d4eae056b84e951b21a70a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio bank and release memory.  <br /></td></tr>
<tr class="separator:ae4493c93d4d4eae056b84e951b21a70a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae93f0941de83ad84215554603f6d7883" id="r_ae93f0941de83ad84215554603f6d7883"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae93f0941de83ad84215554603f6d7883">DestroyTriggerData</a> (<a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *pTriggerData)=0</td></tr>
<tr class="memdesc:ae93f0941de83ad84215554603f6d7883"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio trigger and release memory.  <br /></td></tr>
<tr class="separator:ae93f0941de83ad84215554603f6d7883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4de2a28872f7035a910e26ec468bf8c6" id="r_a4de2a28872f7035a910e26ec468bf8c6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4de2a28872f7035a910e26ec468bf8c6">DestroyRtpcData</a> (<a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *pRtpcData)=0</td></tr>
<tr class="memdesc:a4de2a28872f7035a910e26ec468bf8c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio rtpc and release memory.  <br /></td></tr>
<tr class="separator:a4de2a28872f7035a910e26ec468bf8c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03c95391ba15232ad9f4841295e18348" id="r_a03c95391ba15232ad9f4841295e18348"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a03c95391ba15232ad9f4841295e18348">DestroySwitchStateData</a> (<a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *pSwitchStateData)=0</td></tr>
<tr class="memdesc:a03c95391ba15232ad9f4841295e18348"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio switch state and release memory.  <br /></td></tr>
<tr class="separator:a03c95391ba15232ad9f4841295e18348"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8c469aa892ef6ccaeb9ff68e0c51f10" id="r_ad8c469aa892ef6ccaeb9ff68e0c51f10"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad8c469aa892ef6ccaeb9ff68e0c51f10">DestroyEnvironmentData</a> (<a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *pEnvironmentData)=0</td></tr>
<tr class="memdesc:ad8c469aa892ef6ccaeb9ff68e0c51f10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio environment effect and release memory.  <br /></td></tr>
<tr class="separator:ad8c469aa892ef6ccaeb9ff68e0c51f10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22194d840c9e6468748d33e7bbbc5c79" id="r_a22194d840c9e6468748d33e7bbbc5c79"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22194d840c9e6468748d33e7bbbc5c79">SetLanguage</a> (const char *szLanguage)=0</td></tr>
<tr class="memdesc:a22194d840c9e6468748d33e7bbbc5c79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the language used by the audio middleware.  <br /></td></tr>
<tr class="separator:a22194d840c9e6468748d33e7bbbc5c79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf09d7a496e00a69be69d4be40f9030f" id="r_acf09d7a496e00a69be69d4be40f9030f"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acf09d7a496e00a69be69d4be40f9030f">GetMiddlewareName</a> () const =0</td></tr>
<tr class="memdesc:acf09d7a496e00a69be69d4be40f9030f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the audio middleware implementation name. e.g. "FMOD", "Wwise", "Amplitude", etc.  <br /></td></tr>
<tr class="separator:acf09d7a496e00a69be69d4be40f9030f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf1bf309a723a17c5dd8a1ab13aed19f" id="r_acf1bf309a723a17c5dd8a1ab13aed19f"><td class="memItemLeft" align="right" valign="top">virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acf1bf309a723a17c5dd8a1ab13aed19f">GetMasterGain</a> () const =0</td></tr>
<tr class="memdesc:acf1bf309a723a17c5dd8a1ab13aed19f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the audio middleware's master gain.  <br /></td></tr>
<tr class="separator:acf1bf309a723a17c5dd8a1ab13aed19f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a425870198e62a874d5216706309ce1ab" id="r_a425870198e62a874d5216706309ce1ab"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a425870198e62a874d5216706309ce1ab">GetMute</a> () const =0</td></tr>
<tr class="memdesc:a425870198e62a874d5216706309ce1ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the audio middleware's muted state.  <br /></td></tr>
<tr class="separator:a425870198e62a874d5216706309ce1ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf3e1154f54207a02c1e085b743a96c0" id="r_abf3e1154f54207a02c1e085b743a96c0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abf3e1154f54207a02c1e085b743a96c0">OnMasterGainChange</a> (float fGain)=0</td></tr>
<tr class="memdesc:abf3e1154f54207a02c1e085b743a96c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called each time the master gain value change.  <br /></td></tr>
<tr class="separator:abf3e1154f54207a02c1e085b743a96c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7685c7df3227edbab85542a540af7e67" id="r_a7685c7df3227edbab85542a540af7e67"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7685c7df3227edbab85542a540af7e67">OnMuteChange</a> (bool bMute)=0</td></tr>
<tr class="memdesc:a7685c7df3227edbab85542a540af7e67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the audio middleware should toggle the muted state. \paarm bMute The muted state.  <br /></td></tr>
<tr class="separator:a7685c7df3227edbab85542a540af7e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b4a85b8e3a22199defd06cc916a64d5" id="r_a6b4a85b8e3a22199defd06cc916a64d5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6b4a85b8e3a22199defd06cc916a64d5">OnLoseFocus</a> ()=0</td></tr>
<tr class="memdesc:a6b4a85b8e3a22199defd06cc916a64d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called each time the game application window loses focus.  <br /></td></tr>
<tr class="separator:a6b4a85b8e3a22199defd06cc916a64d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba586ceb244af2b090e5509fd6d66fd0" id="r_aba586ceb244af2b090e5509fd6d66fd0"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aba586ceb244af2b090e5509fd6d66fd0">OnGainFocus</a> ()=0</td></tr>
<tr class="memdesc:aba586ceb244af2b090e5509fd6d66fd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called each time the game application window gains focus.  <br /></td></tr>
<tr class="separator:aba586ceb244af2b090e5509fd6d66fd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The Audio Middleware Interface. This interface should be implemented by the ATL middleware to communicate with the audio system. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aa507654df5c071e628134767b67e138f" name="aa507654df5c071e628134767b67e138f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa507654df5c071e628134767b67e138f">&#9670;&#160;</a></span>ActivateTrigger()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::ActivateTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Triggers an event on an entity. A trigger is everything which can affect the state of an event. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which trigger the event. </td></tr>
    <tr><td class="paramname">pTriggerData</td><td>The event trigger. Can't be modified here. </td></tr>
    <tr><td class="paramname">pEventData</td><td>The triggered event. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ac112a4d2f3d9a5e879cff4d39b6dac6b">plAmplitude</a>.</p>

</div>
</div>
<a id="abcccc60b9af2f55129b0f8707e7da50e" name="abcccc60b9af2f55129b0f8707e7da50e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcccc60b9af2f55129b0f8707e7da50e">&#9670;&#160;</a></span>AddEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::AddEntity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szEntityName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add/register an entity in the audio middleware. This is needed in order to provide transformation values (position and orientation), execute triggers (play sounds), and set real-time parameters or switches. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity that should be added in the audio middleware. </td></tr>
    <tr><td class="paramname">szEntityName</td><td>The name of the game object representing that entity. (Can be used for debug purposes) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#abbd2d0193d9b8749a8ae305ee331bdad">plAmplitude</a>.</p>

</div>
</div>
<a id="a96fcf2caa535941a381d8b22f1b16090" name="a96fcf2caa535941a381d8b22f1b16090"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a96fcf2caa535941a381d8b22f1b16090">&#9670;&#160;</a></span>AddListener()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::AddListener </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szListenerName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add/register a listener in the audio middleware. This is needed to let the middleware know where to render audio, and to provide transformation values (position and orientation). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener that should be added in the audio middleware. </td></tr>
    <tr><td class="paramname">szListenerName</td><td>The name of the game object representing that listener. (Can be used for debug purposes) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ae3c45202af1ed9653411ef0f0cebf29f">plAmplitude</a>.</p>

</div>
</div>
<a id="a4900a2a276deb4a5c56e77f08c52f4f4" name="a4900a2a276deb4a5c56e77f08c52f4f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4900a2a276deb4a5c56e77f08c52f4f4">&#9670;&#160;</a></span>CreateEntityData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> * plAudioMiddleware::CreateEntityData </td>
          <td>(</td>
          <td class="paramtype">plAudioSystemDataID</td>          <td class="paramname"><span class="paramname"><em>uiEntityId</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an audio entity that is attached to a game object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiEntityId</td><td>The game object ID referencing the new audio entity. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created entity data, or nullptr if it was not created. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#acb124811b1fc7f4257197f8a007237f1">plAmplitude</a>.</p>

</div>
</div>
<a id="a5acc9b8ba70ef65f9bc7eb936b1134d9" name="a5acc9b8ba70ef65f9bc7eb936b1134d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5acc9b8ba70ef65f9bc7eb936b1134d9">&#9670;&#160;</a></span>CreateEventData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> * plAudioMiddleware::CreateEventData </td>
          <td>(</td>
          <td class="paramtype">plAudioSystemDataID</td>          <td class="paramname"><span class="paramname"><em>uiEventId</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an audio event that is attached to a game object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiEventId</td><td>The game object ID referencing the new audio event. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created event data, or nullptr if it was not created. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a81e08f497339255e8ce647a0bbdd5365">plAmplitude</a>.</p>

</div>
</div>
<a id="a2175fc29dfad62985aaabe8fadec6e5f" name="a2175fc29dfad62985aaabe8fadec6e5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2175fc29dfad62985aaabe8fadec6e5f">&#9670;&#160;</a></span>CreateListenerData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> * plAudioMiddleware::CreateListenerData </td>
          <td>(</td>
          <td class="paramtype">plAudioSystemDataID</td>          <td class="paramname"><span class="paramname"><em>uiListenerId</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an audio listener that is attached to a game object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiListenerId</td><td>The game object ID referencing the new audio listener. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created listener data, or nullptr if it was not created. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#aefa98d6c5de6aa806ddcd84778325630">plAmplitude</a>.</p>

</div>
</div>
<a id="a841b7c9f9ce9232bb0465c369fe70db8" name="a841b7c9f9ce9232bb0465c369fe70db8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a841b7c9f9ce9232bb0465c369fe70db8">&#9670;&#160;</a></span>CreateWorldEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> * plAudioMiddleware::CreateWorldEntity </td>
          <td>(</td>
          <td class="paramtype">plAudioSystemDataID</td>          <td class="paramname"><span class="paramname"><em>uiEntityId</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a world entity. This is a special entity used by non-spatial sounds. The engine will take care to create a game object at position (0,0,0) and orientation (0,0,0,1), and pass the game object ID as parameter to this function. The game object is ensured to never move nor rotate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiEntityId</td><td>The game object ID referencing the new audio entity. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created entity data, or nullptr if it was not created. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a8be6887231a161507a07e8a5b3890adb">plAmplitude</a>.</p>

</div>
</div>
<a id="ae4493c93d4d4eae056b84e951b21a70a" name="ae4493c93d4d4eae056b84e951b21a70a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4493c93d4d4eae056b84e951b21a70a">&#9670;&#160;</a></span>DestroyBank()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::DestroyBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *</td>          <td class="paramname"><span class="paramname"><em>pBankData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio bank and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBankData</td><td>The bank data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a22153a99e31c5a31cc0e2072597312ab">plAmplitude</a>.</p>

</div>
</div>
<a id="a3e3abef1b99ec304fdd25e5db4c907e2" name="a3e3abef1b99ec304fdd25e5db4c907e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e3abef1b99ec304fdd25e5db4c907e2">&#9670;&#160;</a></span>DestroyEntityData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::DestroyEntityData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio entity and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#aa69a3830ac9cb1a304b7d43003c2a846">plAmplitude</a>.</p>

</div>
</div>
<a id="ad8c469aa892ef6ccaeb9ff68e0c51f10" name="ad8c469aa892ef6ccaeb9ff68e0c51f10"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8c469aa892ef6ccaeb9ff68e0c51f10">&#9670;&#160;</a></span>DestroyEnvironmentData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::DestroyEnvironmentData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEnvironmentData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio environment effect and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEnvironmentData</td><td>The environment effect data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a3c853d5424c4bdfd48f3328914036a25">plAmplitude</a>.</p>

</div>
</div>
<a id="a1a25ebb8f3a23809de4b9d908db28762" name="a1a25ebb8f3a23809de4b9d908db28762"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a25ebb8f3a23809de4b9d908db28762">&#9670;&#160;</a></span>DestroyEventData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::DestroyEventData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio event and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEventData</td><td>The event data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ab22720d53b0f153c091dad21a337db96">plAmplitude</a>.</p>

</div>
</div>
<a id="a760abb29cd7b4ca18dfc092ec1fa6137" name="a760abb29cd7b4ca18dfc092ec1fa6137"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a760abb29cd7b4ca18dfc092ec1fa6137">&#9670;&#160;</a></span>DestroyListenerData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::DestroyListenerData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio listener and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a1421b30b4115e7b87808556a083fd913">plAmplitude</a>.</p>

</div>
</div>
<a id="a4de2a28872f7035a910e26ec468bf8c6" name="a4de2a28872f7035a910e26ec468bf8c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4de2a28872f7035a910e26ec468bf8c6">&#9670;&#160;</a></span>DestroyRtpcData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::DestroyRtpcData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *</td>          <td class="paramname"><span class="paramname"><em>pRtpcData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio rtpc and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pRtpcData</td><td>The rtpc data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a605c319840c84b7532ae2b14cd91a9ca">plAmplitude</a>.</p>

</div>
</div>
<a id="a03c95391ba15232ad9f4841295e18348" name="a03c95391ba15232ad9f4841295e18348"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a03c95391ba15232ad9f4841295e18348">&#9670;&#160;</a></span>DestroySwitchStateData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::DestroySwitchStateData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *</td>          <td class="paramname"><span class="paramname"><em>pSwitchStateData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio switch state and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pSwitchStateData</td><td>The switch state data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a99b77241076a1fb43c1fe60fe478ef65">plAmplitude</a>.</p>

</div>
</div>
<a id="ae93f0941de83ad84215554603f6d7883" name="ae93f0941de83ad84215554603f6d7883"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae93f0941de83ad84215554603f6d7883">&#9670;&#160;</a></span>DestroyTriggerData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::DestroyTriggerData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio trigger and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTriggerData</td><td>The trigger data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a4296c6e0ded5f969767ecaa23fd41564">plAmplitude</a>.</p>

</div>
</div>
<a id="acf1bf309a723a17c5dd8a1ab13aed19f" name="acf1bf309a723a17c5dd8a1ab13aed19f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf1bf309a723a17c5dd8a1ab13aed19f">&#9670;&#160;</a></span>GetMasterGain()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual float plAudioMiddleware::GetMasterGain </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the audio middleware's master gain. </p>
<dl class="section return"><dt>Returns</dt><dd>The master gain. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a2a8cf2539599bb0d39997dcba37362c8">plAmplitude</a>.</p>

</div>
</div>
<a id="acf09d7a496e00a69be69d4be40f9030f" name="acf09d7a496e00a69be69d4be40f9030f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf09d7a496e00a69be69d4be40f9030f">&#9670;&#160;</a></span>GetMiddlewareName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char * plAudioMiddleware::GetMiddlewareName </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the audio middleware implementation name. e.g. "FMOD", "Wwise", "Amplitude", etc. </p>
<dl class="section return"><dt>Returns</dt><dd>The name of the audio middleware. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#aa1d771a3e8bbd64a71fbcd29d7dcc87c">plAmplitude</a>.</p>

</div>
</div>
<a id="a425870198e62a874d5216706309ce1ab" name="a425870198e62a874d5216706309ce1ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a425870198e62a874d5216706309ce1ab">&#9670;&#160;</a></span>GetMute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plAudioMiddleware::GetMute </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the audio middleware's muted state. </p>
<dl class="section return"><dt>Returns</dt><dd>The muted state. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#aa7febdfb63cbddfff8fd1b2a8c3a6764">plAmplitude</a>.</p>

</div>
</div>
<a id="aec884f690053de2ea41e30e149c3d889" name="aec884f690053de2ea41e30e149c3d889"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec884f690053de2ea41e30e149c3d889">&#9670;&#160;</a></span>LoadBank()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::LoadBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *</td>          <td class="paramname"><span class="paramname"><em>pBankData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads a bank file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBankData</td><td>The bank data used for loading. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a3f6b8dcb08c35bc819039831b5219cf2">plAmplitude</a>.</p>

</div>
</div>
<a id="af5442701bfd93d59c22027a9474edeb6" name="af5442701bfd93d59c22027a9474edeb6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5442701bfd93d59c22027a9474edeb6">&#9670;&#160;</a></span>LoadConfiguration()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::LoadConfiguration </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d5d/classpl_open_ddl_reader_element.htm">plOpenDdlReaderElement</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>reader</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads the middleware-specif configuration from the ATL config file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reader</td><td>The DDL file reader. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a4a97e4fbf5b445fe5bf450d9a8f08b0f">plAmplitude</a>.</p>

</div>
</div>
<a id="a9778cf524045f178abf923c2c71a9b59" name="a9778cf524045f178abf923c2c71a9b59"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9778cf524045f178abf923c2c71a9b59">&#9670;&#160;</a></span>LoadTrigger()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::LoadTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads a trigger for a further activation. All the data and media needed by the trigger will be loaded. Once done, the trigger status will change to Ready. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ae4ed845ae8a50acc1daf5a862beaa95f">plAmplitude</a>.</p>

</div>
</div>
<a id="aba586ceb244af2b090e5509fd6d66fd0" name="aba586ceb244af2b090e5509fd6d66fd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aba586ceb244af2b090e5509fd6d66fd0">&#9670;&#160;</a></span>OnGainFocus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAudioMiddleware::OnGainFocus </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called each time the game application window gains focus. </p>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a8eacde4cc5901ccf585671a3385f7a61">plAmplitude</a>.</p>

</div>
</div>
<a id="a6b4a85b8e3a22199defd06cc916a64d5" name="a6b4a85b8e3a22199defd06cc916a64d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6b4a85b8e3a22199defd06cc916a64d5">&#9670;&#160;</a></span>OnLoseFocus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAudioMiddleware::OnLoseFocus </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called each time the game application window loses focus. </p>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#af6cb573adf42c70d381ee810848ae4a7">plAmplitude</a>.</p>

</div>
</div>
<a id="abf3e1154f54207a02c1e085b743a96c0" name="abf3e1154f54207a02c1e085b743a96c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abf3e1154f54207a02c1e085b743a96c0">&#9670;&#160;</a></span>OnMasterGainChange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAudioMiddleware::OnMasterGainChange </td>
          <td>(</td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fGain</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called each time the master gain value change. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fGain</td><td>The master gain value. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#aa5259f763be0269dc2a2ae8c59c184ee">plAmplitude</a>.</p>

</div>
</div>
<a id="a7685c7df3227edbab85542a540af7e67" name="a7685c7df3227edbab85542a540af7e67"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7685c7df3227edbab85542a540af7e67">&#9670;&#160;</a></span>OnMuteChange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAudioMiddleware::OnMuteChange </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bMute</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the audio middleware should toggle the muted state. \paarm bMute The muted state. </p>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a582d207135ed64fc2a87c67599c1512b">plAmplitude</a>.</p>

</div>
</div>
<a id="ad8c8b8ac298009a931634e6eb835af58" name="ad8c8b8ac298009a931634e6eb835af58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8c8b8ac298009a931634e6eb835af58">&#9670;&#160;</a></span>Release()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::Release </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys all the resources allocated by the audio middleware. This is usually called after Shutdown. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when audio middleware resources was successfully released, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ade4dde613ea9e735da8d3dbe8da522fe">plAmplitude</a>.</p>

</div>
</div>
<a id="af0e1ac91c05bc0a8dd5acbfc96160049" name="af0e1ac91c05bc0a8dd5acbfc96160049"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0e1ac91c05bc0a8dd5acbfc96160049">&#9670;&#160;</a></span>RemoveEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::RemoveEntity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove/unregister an entity from the audio middleware. This action disable the possibility to execute triggers, set real-time parameters or switches, and update the position of the entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity that should be removed from the audio middleware. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#adc25e56875ca8ba71f9419e8d3119565">plAmplitude</a>.</p>

</div>
</div>
<a id="a1c8d5db394307cc692aebb80e21eea6e" name="a1c8d5db394307cc692aebb80e21eea6e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c8d5db394307cc692aebb80e21eea6e">&#9670;&#160;</a></span>RemoveListener()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::RemoveListener </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove/unregister a listener from the audio middleware. This action disable the possibility to update the position of the listener. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener that should be removed from the audio middleware. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a230a959bcf5f286105c8db7c9fb8a33a">plAmplitude</a>.</p>

</div>
</div>
<a id="a48262d59bd2e529d6547954e3c893c40" name="a48262d59bd2e529d6547954e3c893c40"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48262d59bd2e529d6547954e3c893c40">&#9670;&#160;</a></span>ResetEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::ResetEntity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets an entity state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity that should be reset. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a341ebd6e30ffcb1b487c1b66fb53323e">plAmplitude</a>.</p>

</div>
</div>
<a id="a23007efa87b0fef1a1c05cf878038752" name="a23007efa87b0fef1a1c05cf878038752"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a23007efa87b0fef1a1c05cf878038752">&#9670;&#160;</a></span>ResetEventData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::ResetEventData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets the audio event state, so it can safely recycled in the pool. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEventData</td><td>The event data to reset. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ab6ba9e6d5fd5860cb046b030135fbd7f">plAmplitude</a>.</p>

</div>
</div>
<a id="a9c1305b79e60fbf45f9cbbf37f3abf93" name="a9c1305b79e60fbf45f9cbbf37f3abf93"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c1305b79e60fbf45f9cbbf37f3abf93">&#9670;&#160;</a></span>ResetListener()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::ResetListener </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets a listener state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener that should be reset. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ad6f9ce9e69f71b65413b3b605023f7b0">plAmplitude</a>.</p>

</div>
</div>
<a id="a5d78a0c441e4d23f7b2b163e7209dfba" name="a5d78a0c441e4d23f7b2b163e7209dfba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d78a0c441e4d23f7b2b163e7209dfba">&#9670;&#160;</a></span>ResetRtpc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::ResetRtpc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *</td>          <td class="paramname"><span class="paramname"><em>pRtpcData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets an audio RTPC to the default value on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which reset the rtpc value. </td></tr>
    <tr><td class="paramname">pRtpcData</td><td>The rtpc data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a2b070f043a0463c90374cad762ed8698">plAmplitude</a>.</p>

</div>
</div>
<a id="a1d187fae7e703bf3236838df701cddde" name="a1d187fae7e703bf3236838df701cddde"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d187fae7e703bf3236838df701cddde">&#9670;&#160;</a></span>SetEntityTransform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::SetEntityTransform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d1/da2/structpl_audio_system_transform.htm">plAudioSystemTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>Transform</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the global position (world position) of an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the global position. </td></tr>
    <tr><td class="paramname">Transform</td><td>The global transform of the entity. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a75bfd92931ef2019d7b306167a554fc0">plAmplitude</a>.</p>

</div>
</div>
<a id="a1651c0dc0cead700fda81d9623d92540" name="a1651c0dc0cead700fda81d9623d92540"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1651c0dc0cead700fda81d9623d92540">&#9670;&#160;</a></span>SetEnvironmentAmount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::SetEnvironmentAmount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEnvironmentData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fAmount</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the amount of an audio environment effect associated on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the environment effect value. </td></tr>
    <tr><td class="paramname">pEnvironmentData</td><td>The environment effect data. </td></tr>
    <tr><td class="paramname">fAmount</td><td>The environment effect value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a52fd28b025bf49b360ca2513efa83141">plAmplitude</a>.</p>

</div>
</div>
<a id="a22194d840c9e6468748d33e7bbbc5c79" name="a22194d840c9e6468748d33e7bbbc5c79"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22194d840c9e6468748d33e7bbbc5c79">&#9670;&#160;</a></span>SetLanguage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::SetLanguage </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szLanguage</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the language used by the audio middleware. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szLanguage</td><td>The language to use. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#aad5aa8367dbd3a8d0796e1439c1b278a">plAmplitude</a>.</p>

</div>
</div>
<a id="a3368f0eef9687b9045f4336a7d7738f0" name="a3368f0eef9687b9045f4336a7d7738f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3368f0eef9687b9045f4336a7d7738f0">&#9670;&#160;</a></span>SetListenerTransform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::SetListenerTransform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d1/da2/structpl_audio_system_transform.htm">plAudioSystemTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>Transform</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the global transform (wold position and orientation) of a listener. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener data. </td></tr>
    <tr><td class="paramname">Transform</td><td>The global transformation of the listener. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a31e5ad70c3b9f2360c313feb779885de">plAmplitude</a>.</p>

</div>
</div>
<a id="a0e7cef636b70fb0c8f15fec63605b796" name="a0e7cef636b70fb0c8f15fec63605b796"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e7cef636b70fb0c8f15fec63605b796">&#9670;&#160;</a></span>SetObstructionAndOcclusion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::SetObstructionAndOcclusion </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fObstruction</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fOcclusion</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the obstruction and occlusion values on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the obstruction and occlusion values. </td></tr>
    <tr><td class="paramname">fObstruction</td><td>The obstruction value. </td></tr>
    <tr><td class="paramname">fOcclusion</td><td>The occlusion value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a718454e116e210426e4b4c3e4f53d1d5">plAmplitude</a>.</p>

</div>
</div>
<a id="a9ef3bce97bd11e77a9ced6436a80532b" name="a9ef3bce97bd11e77a9ced6436a80532b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ef3bce97bd11e77a9ced6436a80532b">&#9670;&#160;</a></span>SetRtpc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::SetRtpc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *</td>          <td class="paramname"><span class="paramname"><em>pRtpcData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fValue</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets an audio RTPC to the specified value on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the rtpc value. </td></tr>
    <tr><td class="paramname">pRtpcData</td><td>The rtpc data. </td></tr>
    <tr><td class="paramname">fValue</td><td>The rtpc value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a8069d7b301be0f9ce48eeab32306248d">plAmplitude</a>.</p>

</div>
</div>
<a id="a446fd7aa2bf694118d647db441db96a0" name="a446fd7aa2bf694118d647db441db96a0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a446fd7aa2bf694118d647db441db96a0">&#9670;&#160;</a></span>SetSwitchState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::SetSwitchState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *</td>          <td class="paramname"><span class="paramname"><em>pSwitchStateData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets an audio switch to the specified state on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the switch value. </td></tr>
    <tr><td class="paramname">pSwitchStateData</td><td>The switch state data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a126fa7d3260946dbbe4e501e5e292d0e">plAmplitude</a>.</p>

</div>
</div>
<a id="a12639a3dcf49965f42e2335c5f1a4480" name="a12639a3dcf49965f42e2335c5f1a4480"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a12639a3dcf49965f42e2335c5f1a4480">&#9670;&#160;</a></span>Shutdown()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::Shutdown </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deinitializes and stop the audio middleware. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the audio middleware was successfully stopped, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a2300bbf538da50c54e8f7d97988c53e9">plAmplitude</a>.</p>

</div>
</div>
<a id="a35e3a523a9d80e80b7f65fe11ced7af6" name="a35e3a523a9d80e80b7f65fe11ced7af6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a35e3a523a9d80e80b7f65fe11ced7af6">&#9670;&#160;</a></span>Startup()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::Startup </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the audio middleware. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the audio middleware was successfully initialized, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#aa1ba4d560ef1d84c1ed06752fffebe4e">plAmplitude</a>.</p>

</div>
</div>
<a id="a6dd17b60adf952e08065fae9e2b00c2a" name="a6dd17b60adf952e08065fae9e2b00c2a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6dd17b60adf952e08065fae9e2b00c2a">&#9670;&#160;</a></span>StopAllEvents()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::StopAllEvents </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stops all events active on the given entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which stop all events. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a5ac57d31ab0dd0009ad9c2d2a751a1ac">plAmplitude</a>.</p>

</div>
</div>
<a id="a9c017504e91280221adc8eb65babc794" name="a9c017504e91280221adc8eb65babc794"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9c017504e91280221adc8eb65babc794">&#9670;&#160;</a></span>StopAllSounds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::StopAllSounds </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stops all the sounds actually played by the audio middleware. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a2c04b7f39c323a359cbcc1ca376a1197">plAmplitude</a>.</p>

</div>
</div>
<a id="a886b68af0aa2c16181278b94b2e6a404" name="a886b68af0aa2c16181278b94b2e6a404"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a886b68af0aa2c16181278b94b2e6a404">&#9670;&#160;</a></span>StopEvent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::StopEvent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stops an event on the given entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which stop the event. </td></tr>
    <tr><td class="paramname">pEventData</td><td>The event to stop. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ab73ad881e9dec31159e837fe2c258b1e">plAmplitude</a>.</p>

</div>
</div>
<a id="a8d0b65757a731b1626a558f77d3f39fc" name="a8d0b65757a731b1626a558f77d3f39fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8d0b65757a731b1626a558f77d3f39fc">&#9670;&#160;</a></span>UnloadBank()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::UnloadBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *</td>          <td class="paramname"><span class="paramname"><em>pBankData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unloads a bank file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBankData</td><td>The bank data used for unloading. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#a779ef00676824eef1c5d90fa25661a03">plAmplitude</a>.</p>

</div>
</div>
<a id="aabf4f719f583f319437373bb4344c583" name="aabf4f719f583f319437373bb4344c583"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aabf4f719f583f319437373bb4344c583">&#9670;&#160;</a></span>UnloadTrigger()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::UnloadTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unload the trigger. This is called when the trigger and all data loaded during LoadTrigger need to be disposed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which trigger the event. </td></tr>
    <tr><td class="paramname">pTriggerData</td><td>The event trigger. Can't be modified here. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#ac28a54f2d41f0d3ac0f0d109f06db23d">plAmplitude</a>.</p>

</div>
</div>
<a id="afefc6bcc069285f97552ca65adb411f0" name="afefc6bcc069285f97552ca65adb411f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afefc6bcc069285f97552ca65adb411f0">&#9670;&#160;</a></span>Update()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAudioMiddleware::Update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d1/df6/structpl_time.htm">plTime</a></td>          <td class="paramname"><span class="paramname"><em>delta</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates the audio middleware. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">delta</td><td>The elapsed time since the last update. </td></tr>
  </table>
  </dd>
</dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#af69cec2aae939e8cfb9d701cac6a5a54">plAmplitude</a>.</p>

</div>
</div>
<a id="acee7f7fffa1019f5e9c672bdefff82e3" name="acee7f7fffa1019f5e9c672bdefff82e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acee7f7fffa1019f5e9c672bdefff82e3">&#9670;&#160;</a></span>UpdateEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAudioMiddleware::UpdateEntity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates an entity state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity that should be updated. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implemented in <a class="el" href="../../da/da9/classpl_amplitude.htm#aa2d743af616c38e0d6f1537fa6d30031">plAmplitude</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/EnginePlugins/AudioSystem/AudioSystemPlugin/Core/<a class="el" href="../../de/da3/_audio_middleware_8h_source.htm">AudioMiddleware.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/d7c/classpl_audio_middleware.htm">plAudioMiddleware</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
