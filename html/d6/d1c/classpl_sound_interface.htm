<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plSoundInterface Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d6/d1c/classpl_sound_interface.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d4/de1/classpl_sound_interface-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plSoundInterface Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for plSoundInterface:</div>
<div class="dyncontent">
<div class="center"><img src="../../d3/d03/classpl_sound_interface__inherit__graph.png" border="0" usemap="#apl_sound_interface_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_sound_interface_inherit__map" id="apl_sound_interface_inherit__map">
<area shape="rect" title=" " alt="" coords="56,5,173,32"/>
<area shape="rect" href="../../d5/d56/classpl_audio_system.htm" title="The AudioSystem." alt="" coords="5,80,115,107"/>
<area shape="poly" title=" " alt="" coords="98,46,72,81,67,78,94,43"/>
<area shape="rect" href="../../db/d56/classpl_fmod.htm" title=" " alt="" coords="138,80,203,107"/>
<area shape="poly" title=" " alt="" coords="136,43,163,78,159,81,132,46"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab6232b7ff6e6cb1502dae6dac0ff8b61" id="r_ab6232b7ff6e6cb1502dae6dac0ff8b61"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab6232b7ff6e6cb1502dae6dac0ff8b61">LoadConfiguration</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFile)=0</td></tr>
<tr class="memdesc:ab6232b7ff6e6cb1502dae6dac0ff8b61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be called before startup to load the configs from a different file. Otherwise will automatically be loaded by the sound system startup with the default path.  <br /></td></tr>
<tr class="separator:ab6232b7ff6e6cb1502dae6dac0ff8b61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b05b7aefdd1185bd0c00ee413ca8686" id="r_a5b05b7aefdd1185bd0c00ee413ca8686"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5b05b7aefdd1185bd0c00ee413ca8686">SetOverridePlatform</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPlatform)=0</td></tr>
<tr class="memdesc:a5b05b7aefdd1185bd0c00ee413ca8686"><td class="mdescLeft">&#160;</td><td class="mdescRight">By default the integration should auto-detect the platform (and thus the config) to use. Calling this before startup allows to override which configuration is used.  <br /></td></tr>
<tr class="separator:a5b05b7aefdd1185bd0c00ee413ca8686"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97637ad71a2222122e66e8c26470682b" id="r_a97637ad71a2222122e66e8c26470682b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a97637ad71a2222122e66e8c26470682b">UpdateSound</a> ()=0</td></tr>
<tr class="memdesc:a97637ad71a2222122e66e8c26470682b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Has to be called once per frame to update all sounds.  <br /></td></tr>
<tr class="separator:a97637ad71a2222122e66e8c26470682b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9674221a64230c24d194a2dfe281f768" id="r_a9674221a64230c24d194a2dfe281f768"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9674221a64230c24d194a2dfe281f768">SetMasterChannelVolume</a> (float fVolume)=0</td></tr>
<tr class="memdesc:a9674221a64230c24d194a2dfe281f768"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjusts the master volume. This affects all sounds, with no exception. Value must be between 0.0f and 1.0f.  <br /></td></tr>
<tr class="separator:a9674221a64230c24d194a2dfe281f768"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00e0ddea4376e3ef9977db5581401182" id="r_a00e0ddea4376e3ef9977db5581401182"><td class="memItemLeft" align="right" valign="top">virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a00e0ddea4376e3ef9977db5581401182">GetMasterChannelVolume</a> () const =0</td></tr>
<tr class="separator:a00e0ddea4376e3ef9977db5581401182"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05f96f045dbb4bce405e6066271e6753" id="r_a05f96f045dbb4bce405e6066271e6753"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a05f96f045dbb4bce405e6066271e6753">SetMasterChannelMute</a> (bool bMute)=0</td></tr>
<tr class="memdesc:a05f96f045dbb4bce405e6066271e6753"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to mute all sounds. Useful for when the application goes to a background state.  <br /></td></tr>
<tr class="separator:a05f96f045dbb4bce405e6066271e6753"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a612bd9d40708e075dfc570777fb7f010" id="r_a612bd9d40708e075dfc570777fb7f010"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a612bd9d40708e075dfc570777fb7f010">GetMasterChannelMute</a> () const =0</td></tr>
<tr class="separator:a612bd9d40708e075dfc570777fb7f010"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4a749224292046068eb1225fbc81584" id="r_ac4a749224292046068eb1225fbc81584"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac4a749224292046068eb1225fbc81584">SetMasterChannelPaused</a> (bool bPaused)=0</td></tr>
<tr class="memdesc:ac4a749224292046068eb1225fbc81584"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to pause all sounds. Useful for when the application goes to a background state and you want to pause all sounds, instead of mute them.  <br /></td></tr>
<tr class="separator:ac4a749224292046068eb1225fbc81584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa20c8c18b9f1473c2e86bc458944d39d" id="r_aa20c8c18b9f1473c2e86bc458944d39d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa20c8c18b9f1473c2e86bc458944d39d">GetMasterChannelPaused</a> () const =0</td></tr>
<tr class="separator:aa20c8c18b9f1473c2e86bc458944d39d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a305c73ceadfa3be9b7f95dd12ef68125" id="r_a305c73ceadfa3be9b7f95dd12ef68125"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a305c73ceadfa3be9b7f95dd12ef68125">SetSoundGroupVolume</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sVcaGroupGuid, float fVolume)=0</td></tr>
<tr class="memdesc:a305c73ceadfa3be9b7f95dd12ef68125"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies the volume for a VCA ('Voltage Control Amplifier').  <br /></td></tr>
<tr class="separator:a305c73ceadfa3be9b7f95dd12ef68125"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b95e1e95d92fe0b433b14bc5b5cf5b3" id="r_a7b95e1e95d92fe0b433b14bc5b5cf5b3"><td class="memItemLeft" align="right" valign="top">virtual float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7b95e1e95d92fe0b433b14bc5b5cf5b3">GetSoundGroupVolume</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sVcaGroupGuid) const =0</td></tr>
<tr class="separator:a7b95e1e95d92fe0b433b14bc5b5cf5b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf027668cc313313000113b7330996ae" id="r_acf027668cc313313000113b7330996ae"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acf027668cc313313000113b7330996ae">SetNumListeners</a> (plUInt8 uiNumListeners)=0</td></tr>
<tr class="memdesc:acf027668cc313313000113b7330996ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default is 1. Allows to set how many virtual listeners the sound is mixed for (split screen game play).  <br /></td></tr>
<tr class="separator:acf027668cc313313000113b7330996ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ed8beee7ad3914064a77349d893d3d5" id="r_a9ed8beee7ad3914064a77349d893d3d5"><td class="memItemLeft" align="right" valign="top">virtual plUInt8&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ed8beee7ad3914064a77349d893d3d5">GetNumListeners</a> ()=0</td></tr>
<tr class="separator:a9ed8beee7ad3914064a77349d893d3d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8640834836d1b514db2f1ef27b83773f" id="r_a8640834836d1b514db2f1ef27b83773f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8640834836d1b514db2f1ef27b83773f">SetListenerOverrideMode</a> (bool bEnabled)=0</td></tr>
<tr class="memdesc:a8640834836d1b514db2f1ef27b83773f"><td class="mdescLeft">&#160;</td><td class="mdescRight">The editor activates this to ignore the listener positions from the listener components, and instead use the editor camera as the listener position.  <br /></td></tr>
<tr class="separator:a8640834836d1b514db2f1ef27b83773f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9147254c151f2a499b54f7e44e403f8" id="r_ad9147254c151f2a499b54f7e44e403f8"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad9147254c151f2a499b54f7e44e403f8">SetListener</a> (plInt32 iIndex, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vPosition, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vForward, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vUp, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vVelocity)=0</td></tr>
<tr class="memdesc:ad9147254c151f2a499b54f7e44e403f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the position for listener N. Index -1 is used for the override mode listener.  <br /></td></tr>
<tr class="separator:ad9147254c151f2a499b54f7e44e403f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd03533e07b630a02e6a80f8807be50a" id="r_afd03533e07b630a02e6a80f8807be50a"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afd03533e07b630a02e6a80f8807be50a">OneShotSound</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID, const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;globalPosition, float fPitch=1.0f, float fVolume=1.0f, bool bBlockIfNotLoaded=true)=0</td></tr>
<tr class="memdesc:afd03533e07b630a02e6a80f8807be50a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plays a sound once. Callced by <a class="el" href="#a3d5dc496ea5933a2b0869a57042fed89" title="Plays a sound once.">plSoundInterface::PlaySound()</a>.  <br /></td></tr>
<tr class="separator:afd03533e07b630a02e6a80f8807be50a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a3d5dc496ea5933a2b0869a57042fed89" id="r_a3d5dc496ea5933a2b0869a57042fed89"><td class="memItemLeft" align="right" valign="top">static PL_CORE_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d5dc496ea5933a2b0869a57042fed89">PlaySound</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sResourceID, const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;globalPosition, float fPitch=1.0f, float fVolume=1.0f, bool bBlockIfNotLoaded=true)</td></tr>
<tr class="memdesc:a3d5dc496ea5933a2b0869a57042fed89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Plays a sound once.  <br /></td></tr>
<tr class="separator:a3d5dc496ea5933a2b0869a57042fed89"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a612bd9d40708e075dfc570777fb7f010" name="a612bd9d40708e075dfc570777fb7f010"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a612bd9d40708e075dfc570777fb7f010">&#9670;&#160;</a></span>GetMasterChannelMute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plSoundInterface::GetMasterChannelMute </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a412fe4d5f483bb80fca92bcaa23cee1a">plAudioSystem</a>.</p>

</div>
</div>
<a id="aa20c8c18b9f1473c2e86bc458944d39d" name="aa20c8c18b9f1473c2e86bc458944d39d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa20c8c18b9f1473c2e86bc458944d39d">&#9670;&#160;</a></span>GetMasterChannelPaused()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plSoundInterface::GetMasterChannelPaused </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a472376f69a2d4a22578c45de7d7be554">plAudioSystem</a>.</p>

</div>
</div>
<a id="a00e0ddea4376e3ef9977db5581401182" name="a00e0ddea4376e3ef9977db5581401182"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00e0ddea4376e3ef9977db5581401182">&#9670;&#160;</a></span>GetMasterChannelVolume()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual float plSoundInterface::GetMasterChannelVolume </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#aca69617196ee63eb4bfa6d6bd00c4e03">plAudioSystem</a>.</p>

</div>
</div>
<a id="a9ed8beee7ad3914064a77349d893d3d5" name="a9ed8beee7ad3914064a77349d893d3d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ed8beee7ad3914064a77349d893d3d5">&#9670;&#160;</a></span>GetNumListeners()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual plUInt8 plSoundInterface::GetNumListeners </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a221c9e31d3772469138d3a0b1d27da7e">plAudioSystem</a>.</p>

</div>
</div>
<a id="a7b95e1e95d92fe0b433b14bc5b5cf5b3" name="a7b95e1e95d92fe0b433b14bc5b5cf5b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7b95e1e95d92fe0b433b14bc5b5cf5b3">&#9670;&#160;</a></span>GetSoundGroupVolume()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual float plSoundInterface::GetSoundGroupVolume </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sVcaGroupGuid</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#abd4c2d76640d8be0277357606ff86f13">plAudioSystem</a>.</p>

</div>
</div>
<a id="ab6232b7ff6e6cb1502dae6dac0ff8b61" name="ab6232b7ff6e6cb1502dae6dac0ff8b61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6232b7ff6e6cb1502dae6dac0ff8b61">&#9670;&#160;</a></span>LoadConfiguration()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::LoadConfiguration </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFile</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Can be called before startup to load the configs from a different file. Otherwise will automatically be loaded by the sound system startup with the default path. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a5c050dd92c0c1691cdf25002f71c3e26">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#af146b27ff58cb3e6d7604d40d6e5ce08">plFmod</a>.</p>

</div>
</div>
<a id="afd03533e07b630a02e6a80f8807be50a" name="afd03533e07b630a02e6a80f8807be50a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd03533e07b630a02e6a80f8807be50a">&#9670;&#160;</a></span>OneShotSound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plSoundInterface::OneShotSound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sResourceID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>globalPosition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fPitch</em></span><span class="paramdefsep"> = </span><span class="paramdefval">1.0f</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fVolume</em></span><span class="paramdefsep"> = </span><span class="paramdefval">1.0f</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bBlockIfNotLoaded</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Plays a sound once. Callced by <a class="el" href="#a3d5dc496ea5933a2b0869a57042fed89" title="Plays a sound once.">plSoundInterface::PlaySound()</a>. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#ad6c68aab5f2b685433f5b39ac46b0cae">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#aede8c9626b40cb2a5fb3a2a5bbe0bf74">plFmod</a>.</p>

</div>
</div>
<a id="a3d5dc496ea5933a2b0869a57042fed89" name="a3d5dc496ea5933a2b0869a57042fed89"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d5dc496ea5933a2b0869a57042fed89">&#9670;&#160;</a></span>PlaySound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plSoundInterface::PlaySound </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sResourceID</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>globalPosition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fPitch</em></span><span class="paramdefsep"> = </span><span class="paramdefval">1.0f</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fVolume</em></span><span class="paramdefsep"> = </span><span class="paramdefval">1.0f</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bBlockIfNotLoaded</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Plays a sound once. </p>
<p>Convenience function to call <a class="el" href="#afd03533e07b630a02e6a80f8807be50a" title="Plays a sound once. Callced by plSoundInterface::PlaySound().">OneShotSound()</a> without having to retrieve the <a class="el" href="../../d6/d1c/classpl_sound_interface.htm">plSoundInterface</a> first.</p>
<p>Which sound to play is specified through a resource ID ('Asset GUID'). This is not the most efficient way to load a sound, as there is no way to preload the resource. If preloading is desired, you need to access the implementation-specific resource type directly (e.g. <a class="el" href="../../da/db3/classpl_fmod_sound_event_resource.htm">plFmodSoundEventResource</a>). Also see <a class="el" href="../../da/db3/classpl_fmod_sound_event_resource.htm#a00af320d336c3988f1cf830438feedd0" title="Creates an instance of this sound event and plays it.">plFmodSoundEventResource::PlayOnce()</a>. In practice, though, sounds are typically loaded in bulk from sound-banks, and preloading is not necessary.</p>
<p>Be aware that this does not allow to adjust volume, pitch or position after creation. Stopping is also not possible. Use a sound component, if that is necessary.</p>
<p>Also by default a pitch of 1 is always used. If the game speed is not 1 (<a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> clock), a custom pitch would need to be provided, if the sound should play at the same speed. </p>

</div>
</div>
<a id="ad9147254c151f2a499b54f7e44e403f8" name="ad9147254c151f2a499b54f7e44e403f8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad9147254c151f2a499b54f7e44e403f8">&#9670;&#160;</a></span>SetListener()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::SetListener </td>
          <td>(</td>
          <td class="paramtype">plInt32</td>          <td class="paramname"><span class="paramname"><em>iIndex</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vPosition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vForward</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vUp</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vVelocity</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the position for listener N. Index -1 is used for the override mode listener. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a6f903bd583d3642cf41dcc8271727623">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#a40a656c95d011b29d37dc623d2412bca">plFmod</a>.</p>

</div>
</div>
<a id="a8640834836d1b514db2f1ef27b83773f" name="a8640834836d1b514db2f1ef27b83773f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8640834836d1b514db2f1ef27b83773f">&#9670;&#160;</a></span>SetListenerOverrideMode()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::SetListenerOverrideMode </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bEnabled</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The editor activates this to ignore the listener positions from the listener components, and instead use the editor camera as the listener position. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#ac7ffb78973c395f6ac11fb8cb7df64f5">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#a1f82ca4ac41c02d571e2056dd2546ed7">plFmod</a>.</p>

</div>
</div>
<a id="a05f96f045dbb4bce405e6066271e6753" name="a05f96f045dbb4bce405e6066271e6753"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a05f96f045dbb4bce405e6066271e6753">&#9670;&#160;</a></span>SetMasterChannelMute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::SetMasterChannelMute </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bMute</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allows to mute all sounds. Useful for when the application goes to a background state. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a41e8b2b9b0f89757869559881075d22f">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#abd6f651ab9563bab9bf2e84c0f7df3c9">plFmod</a>.</p>

</div>
</div>
<a id="ac4a749224292046068eb1225fbc81584" name="ac4a749224292046068eb1225fbc81584"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac4a749224292046068eb1225fbc81584">&#9670;&#160;</a></span>SetMasterChannelPaused()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::SetMasterChannelPaused </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bPaused</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allows to pause all sounds. Useful for when the application goes to a background state and you want to pause all sounds, instead of mute them. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a3c25a7530887dc101a14e7a5b5a291b5">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#a20f4d1afe195db3f5f514912d0cf6173">plFmod</a>.</p>

</div>
</div>
<a id="a9674221a64230c24d194a2dfe281f768" name="a9674221a64230c24d194a2dfe281f768"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9674221a64230c24d194a2dfe281f768">&#9670;&#160;</a></span>SetMasterChannelVolume()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::SetMasterChannelVolume </td>
          <td>(</td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fVolume</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adjusts the master volume. This affects all sounds, with no exception. Value must be between 0.0f and 1.0f. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#ae05443d7b3e0ec486441ec3c17daf8d6">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#a7e9abb4925277955097a21f7890f1691">plFmod</a>.</p>

</div>
</div>
<a id="acf027668cc313313000113b7330996ae" name="acf027668cc313313000113b7330996ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf027668cc313313000113b7330996ae">&#9670;&#160;</a></span>SetNumListeners()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::SetNumListeners </td>
          <td>(</td>
          <td class="paramtype">plUInt8</td>          <td class="paramname"><span class="paramname"><em>uiNumListeners</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default is 1. Allows to set how many virtual listeners the sound is mixed for (split screen game play). </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#ac11ecb2650f21411e795393a0513f99f">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#a828b42a79d43d6cd95ecfc669c084b76">plFmod</a>.</p>

</div>
</div>
<a id="a5b05b7aefdd1185bd0c00ee413ca8686" name="a5b05b7aefdd1185bd0c00ee413ca8686"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5b05b7aefdd1185bd0c00ee413ca8686">&#9670;&#160;</a></span>SetOverridePlatform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::SetOverridePlatform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPlatform</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>By default the integration should auto-detect the platform (and thus the config) to use. Calling this before startup allows to override which configuration is used. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a3a3774f52e261521487a0507a1c3e933">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#a00bb335da455814a8816659228827cb0">plFmod</a>.</p>

</div>
</div>
<a id="a305c73ceadfa3be9b7f95dd12ef68125" name="a305c73ceadfa3be9b7f95dd12ef68125"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a305c73ceadfa3be9b7f95dd12ef68125">&#9670;&#160;</a></span>SetSoundGroupVolume()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::SetSoundGroupVolume </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sVcaGroupGuid</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fVolume</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Specifies the volume for a VCA ('Voltage Control Amplifier'). </p>
<p>This is used to control the volume of high level sound groups, such as 'Effects', 'Music', 'Ambiance' or 'Speech'. Note that the Fmod strings banks are never loaded, so the given string must be a GUID (Fmod Studio -&gt; Copy GUID). </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#a476aa083fcc193142ce540dae296fecb">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#aa0ed86f8770eb8be1de26c82be3c5138">plFmod</a>.</p>

</div>
</div>
<a id="a97637ad71a2222122e66e8c26470682b" name="a97637ad71a2222122e66e8c26470682b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a97637ad71a2222122e66e8c26470682b">&#9670;&#160;</a></span>UpdateSound()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plSoundInterface::UpdateSound </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Has to be called once per frame to update all sounds. </p>

<p>Implemented in <a class="el" href="../../d5/d56/classpl_audio_system.htm#ad35a4075b59511af75a65b4d50be6255">plAudioSystem</a>, and <a class="el" href="../../db/d56/classpl_fmod.htm#a88b4a7d0c8f0bb5425e63aef45d41ea3">plFmod</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Core/Interfaces/<a class="el" href="../../d7/d60/_sound_interface_8h_source.htm">SoundInterface.h</a></li>
<li>Code/Engine/Core/Interfaces/<b>SoundInterface.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/d1c/classpl_sound_interface.htm">plSoundInterface</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
