<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plFormatString Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d6/d9a/classpl_format_string.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d6/d35/classpl_format_string-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plFormatString Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Implements formating of strings with placeholders and formatting options.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../df/da3/_format_string_8h_source.htm">FormatString.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plFormatString:</div>
<div class="dyncontent">
<div class="center"><img src="../../dc/d48/classpl_format_string__inherit__graph.png" border="0" usemap="#apl_format_string_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_format_string_inherit__map" id="apl_format_string_inherit__map">
<area shape="rect" title="Implements formating of strings with placeholders and formatting options." alt="" coords="17,5,124,32"/>
<area shape="rect" href="../../d2/d7f/classpl_format_string_impl.htm" title=" " alt="" coords="5,80,136,123"/>
<area shape="poly" title=" " alt="" coords="73,48,73,80,68,80,68,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8366a161d173d8f2e56e674170146908" id="r_a8366a161d173d8f2e56e674170146908"><td class="memItemLeft" align="right" valign="top"><a id="a8366a161d173d8f2e56e674170146908" name="a8366a161d173d8f2e56e674170146908"></a>
PL_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>plFormatString</b> (const char *szString)</td></tr>
<tr class="separator:a8366a161d173d8f2e56e674170146908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8f4e62125360ba22a27dad6eec446c2" id="r_ae8f4e62125360ba22a27dad6eec446c2"><td class="memItemLeft" align="right" valign="top"><a id="ae8f4e62125360ba22a27dad6eec446c2" name="ae8f4e62125360ba22a27dad6eec446c2"></a>
PL_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>plFormatString</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sString)</td></tr>
<tr class="separator:ae8f4e62125360ba22a27dad6eec446c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc6ad49d537322eeeac1d780a005a40b" id="r_acc6ad49d537322eeeac1d780a005a40b"><td class="memItemLeft" align="right" valign="top"><a id="acc6ad49d537322eeeac1d780a005a40b" name="acc6ad49d537322eeeac1d780a005a40b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plFormatString</b> (const <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;s)</td></tr>
<tr class="separator:acc6ad49d537322eeeac1d780a005a40b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c302473696ba0ff5a0d713a0e54657b" id="r_a5c302473696ba0ff5a0d713a0e54657b"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5c302473696ba0ff5a0d713a0e54657b">GetText</a> (<a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;) const</td></tr>
<tr class="memdesc:a5c302473696ba0ff5a0d713a0e54657b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates the formatted text. Make sure to only call this function once and only when the formatted string is really needed.  <br /></td></tr>
<tr class="separator:a5c302473696ba0ff5a0d713a0e54657b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a741a366812cc19017f9c054f9e1dc6c6" id="r_a741a366812cc19017f9c054f9e1dc6c6"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a741a366812cc19017f9c054f9e1dc6c6">GetTextCStr</a> (<a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;out_sString) const</td></tr>
<tr class="memdesc:a741a366812cc19017f9c054f9e1dc6c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="#a5c302473696ba0ff5a0d713a0e54657b" title="Generates the formatted text. Make sure to only call this function once and only when the formatted s...">GetText()</a> but guaranteed to copy the string into the given string builder, and thus guaranteeing that the generated string is zero terminated.  <br /></td></tr>
<tr class="separator:a741a366812cc19017f9c054f9e1dc6c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4039d358150cb5fdc99ff97552b5aa61" id="r_a4039d358150cb5fdc99ff97552b5aa61"><td class="memItemLeft" align="right" valign="top"><a id="a4039d358150cb5fdc99ff97552b5aa61" name="a4039d358150cb5fdc99ff97552b5aa61"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="separator:a4039d358150cb5fdc99ff97552b5aa61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fa160acf211b3370e83b624b2a4c90a" id="r_a5fa160acf211b3370e83b624b2a4c90a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5fa160acf211b3370e83b624b2a4c90a">BuildFormattedText</a> (<a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;ref_sStorage, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> *pArgs, plUInt32 uiNumArgs) const</td></tr>
<tr class="memdesc:a5fa160acf211b3370e83b624b2a4c90a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Helper function to build the formatted text with the given arguments.  <br /></td></tr>
<tr class="separator:a5fa160acf211b3370e83b624b2a4c90a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:aca489713a90ddf0246046f03009f89f5" id="r_aca489713a90ddf0246046f03009f89f5"><td class="memItemLeft" align="right" valign="top"><a id="aca489713a90ddf0246046f03009f89f5" name="aca489713a90ddf0246046f03009f89f5"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sString</b></td></tr>
<tr class="separator:aca489713a90ddf0246046f03009f89f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Implements formating of strings with placeholders and formatting options. </p>
<p><a class="el" href="../../d6/d9a/classpl_format_string.htm" title="Implements formating of strings with placeholders and formatting options.">plFormatString</a> can be used anywhere where a string should be formatable when passing it into a function. Good examples are <a class="el" href="../../d3/d2d/classpl_string_builder.htm#ac3ef7eac1cbf7ccad0d79ab027e74924" title="Replaces this with a formatted string. Uses &#39;{}&#39; formatting placeholders, see plFormatString for deta...">plStringBuilder::SetFormat()</a> or <a class="el" href="../../dc/d24/classpl_log.htm#a5d51f00276edffdf712277280ad8b627" title="Status information that is important.">plLog::Info()</a>.</p>
<p>A function taking an <a class="el" href="../../d6/d9a/classpl_format_string.htm" title="Implements formating of strings with placeholders and formatting options.">plFormatString</a> can internally call <a class="el" href="#a5c302473696ba0ff5a0d713a0e54657b" title="Generates the formatted text. Make sure to only call this function once and only when the formatted s...">plFormatString::GetText()</a> to retrieve he formatted result. When calling such a function, one must wrap the parameter into 'plFmt' to enable formatting options, example: void MyFunc(const plFormatString&amp; text); MyFunc(plFmt("Cool Story {}", "Bro"));</p>
<p>To provide more convenience, one can add a template-function overload like this: template &lt;typename... ARGS&gt; void MyFunc(const char* szFormat, ARGS&amp;&amp;... args) { MyFunc(plFormatStringImpl&lt;ARGS...&gt;(szFormat, std::forward&lt;ARGS&gt;(args)...)); }</p>
<p>This allows to call MyFunc() without the 'plFmt' wrapper.</p>
<p>=== Formatting ===</p>
<p>Placeholders for variables are specified using '{}'. These may use numbers from 0 to 9, ie. {0}, {3}, {2}, etc. which allows to change the order or insert duplicates. If no number is provided, each {} instance represents the next argument.</p>
<p>To specify special formatting, wrap the argument into an plArgXY call: <a class="el" href="../../dd/d39/structpl_arg_c.htm">plArgC</a> - for characters <a class="el" href="../../d9/df1/structpl_arg_i.htm">plArgI</a> - for integer formatting <a class="el" href="../../d8/d3d/structpl_arg_u.htm">plArgU</a> - for unsigned integer formatting (e.g. HEX) <a class="el" href="../../d7/d1f/structpl_arg_f.htm">plArgF</a> - for floating point formatting <a class="el" href="../../dc/d2d/structpl_arg_p.htm">plArgP</a> - for pointer formatting <a class="el" href="../../d1/d44/structpl_arg_date_time.htm">plArgDateTime</a> - for <a class="el" href="../../d1/d5c/classpl_date_time.htm" title="The plDateTime class can be used to convert plTimestamp into a human readable form.">plDateTime</a> formatting options <a class="el" href="../../df/d37/structpl_arg_error_code.htm" title="Converts a windows HRESULT into an error code and a human-readable error message. Pass in GetLastErro...">plArgErrorCode</a> - for Windows error code formatting <a class="el" href="../../df/daf/structpl_arg_human_readable.htm" title="Formats a given number such that it will be in format [0, base){suffix} with suffix representing a po...">plArgHumanReadable</a> - for shortening numbers with common abbreviations <a class="el" href="../../df/dca/structpl_arg_file_size.htm">plArgFileSize</a> - for representing file sizes</p>
<p>Example: <a class="el" href="../../d3/d2d/classpl_string_builder.htm#ac3ef7eac1cbf7ccad0d79ab027e74924" title="Replaces this with a formatted string. Uses &#39;{}&#39; formatting placeholders, see plFormatString for deta...">plStringBuilder::SetFormat</a>("HEX: {}", <a class="el" href="../../d8/d3d/structpl_arg_u.htm">plArgU</a>(1337, 8 /*width*&zwj;/, true /*pad with zeros*&zwj;/, 16 /*base16*&zwj;/, true/*upper case*&zwj;/));</p>
<p>Arbitrary other types can support special formatting even without an plArgXY call. E.g. <a class="el" href="../../d1/df6/structpl_time.htm" title="The time class encapsulates a double value storing the time in seconds.">plTime</a> and <a class="el" href="../../d4/dfd/classpl_angle.htm" title="Float wrapper struct for a safe usage and conversions of angles.">plAngle</a> do special formatting. plArgXY calls are only necessary if formatting options are needed for a specific formatting should be enforced (e.g. <a class="el" href="../../df/d37/structpl_arg_error_code.htm" title="Converts a windows HRESULT into an error code and a human-readable error message. Pass in GetLastErro...">plArgErrorCode</a> would otherwise just use uint32 formatting).</p>
<p>To implement custom formatting see the various free standing 'BuildString' functions. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a5fa160acf211b3370e83b624b2a4c90a" name="a5fa160acf211b3370e83b624b2a4c90a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fa160acf211b3370e83b624b2a4c90a">&#9670;&#160;</a></span>BuildFormattedText()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> plFormatString::BuildFormattedText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_sStorage</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> *</td>          <td class="paramname"><span class="paramname"><em>pArgs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiNumArgs</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Helper function to build the formatted text with the given arguments. </p>
<dl class="section note"><dt>Note</dt><dd>We can't use <a class="el" href="../../db/d81/classpl_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">plArrayPtr</a> here because of include order. </dd></dl>

</div>
</div>
<a id="a5c302473696ba0ff5a0d713a0e54657b" name="a5c302473696ba0ff5a0d713a0e54657b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5c302473696ba0ff5a0d713a0e54657b">&#9670;&#160;</a></span>GetText()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> plFormatString::GetText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generates the formatted text. Make sure to only call this function once and only when the formatted string is really needed. </p>
<p>Requires an <a class="el" href="../../d3/d2d/classpl_string_builder.htm" title="plStringBuilder is a class that is meant for creating and modifying strings.">plStringBuilder</a> as storage, ie. POTENTIALLY writes the formatted text into it. However, if no formatting is required, it may not touch the string builder at all and just return a string directly.</p>
<dl class="section note"><dt>Note</dt><dd>Do not assume that the result is stored in <em>sb</em>. Always only use the return value. The string builder is only used when necessary. </dd></dl>

<p>Reimplemented in <a class="el" href="../../d2/d7f/classpl_format_string_impl.htm#a470c0840244a6ccd9677a6d5a915c79f">plFormatStringImpl&lt; ARGS &gt;</a>.</p>

</div>
</div>
<a id="a741a366812cc19017f9c054f9e1dc6c6" name="a741a366812cc19017f9c054f9e1dc6c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a741a366812cc19017f9c054f9e1dc6c6">&#9670;&#160;</a></span>GetTextCStr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * plFormatString::GetTextCStr </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_sString</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="#a5c302473696ba0ff5a0d713a0e54657b" title="Generates the formatted text. Make sure to only call this function once and only when the formatted s...">GetText()</a> but guaranteed to copy the string into the given string builder, and thus guaranteeing that the generated string is zero terminated. </p>

<p>Reimplemented in <a class="el" href="../../d2/d7f/classpl_format_string_impl.htm#a66fe87fa0c1eeb2a1c64b66ff0138f4a">plFormatStringImpl&lt; ARGS &gt;</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Strings/<a class="el" href="../../df/da3/_format_string_8h_source.htm">FormatString.h</a></li>
<li>Code/Engine/Foundation/Strings/Implementation/<b>FormatString.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/d9a/classpl_format_string.htm">plFormatString</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
