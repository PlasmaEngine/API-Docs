<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/IO/Stream.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d3/d99/_stream_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Stream.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Containers/ArrayBase.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Containers/HashTable.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/Containers/Map.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/Containers/Set.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;Foundation/Containers/SmallArray.h&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &lt;Foundation/Memory/EndianHelper.h&gt;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">using </span>plTypeVersion = plUInt16;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keyword">template</span> &lt;plUInt16 Size, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a>;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="keyword">using </span><a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> = <a class="code hl_struct" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt;32, plDefaultAllocatorWrapper&gt;</a>;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="foldopen" id="foldopen00021" data-start="{" data-end="};">
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="../../df/d3d/classpl_stream_reader.htm">   21</a></span><span class="keyword">class </span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>{</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  PL_DISALLOW_COPY_AND_ASSIGN(<a class="code hl_class" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a>);</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="../../df/d3d/classpl_stream_reader.htm#ac584a9b270f07e1d858cb4ecb428035f">   27</a></span>  <a class="code hl_function" href="../../df/d3d/classpl_stream_reader.htm#ac584a9b270f07e1d858cb4ecb428035f">plStreamReader</a>();</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="../../df/d3d/classpl_stream_reader.htm#a00fca6986a2498fb82fc58cdf744f846">   30</a></span>  <span class="keyword">virtual</span> <a class="code hl_function" href="../../df/d3d/classpl_stream_reader.htm#a00fca6986a2498fb82fc58cdf744f846">~plStreamReader</a>();</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../df/d3d/classpl_stream_reader.htm#aef948579ebcc493ff880997adfa08144">   34</a></span>  <span class="keyword">virtual</span> plUInt64 <a class="code hl_function" href="../../df/d3d/classpl_stream_reader.htm#aef948579ebcc493ff880997adfa08144">ReadBytes</a>(<span class="keywordtype">void</span>* pReadBuffer, plUInt64 uiBytesToRead) = 0; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadWordValue(T* pWordValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadDWordValue(T* pDWordValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadQWordValue(T* pQWordValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ArrayType, <span class="keyword">typename</span> ValueType&gt;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadArray(<a class="code hl_class" href="../../d4/dc8/classpl_array_base.htm">plArrayBase&lt;ValueType, ArrayType&gt;</a>&amp; inout_array); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ValueType, plUInt16 uiSize, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadArray(<a class="code hl_class" href="../../df/dd9/classpl_small_array.htm">plSmallArray&lt;ValueType, uiSize, AllocatorWrapper&gt;</a>&amp; ref_array);</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ValueType, plUInt32 uiSize&gt;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadArray(ValueType (&amp;array)[uiSize]);</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadSet(<a class="code hl_class" href="../../d4/d4c/classpl_set_base.htm">plSetBase&lt;KeyType, Comparer&gt;</a>&amp; inout_set); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadMap(<a class="code hl_class" href="../../d9/dbe/classpl_map_base.htm">plMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; inout_map); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadHashTable(<a class="code hl_class" href="../../d1/d77/classpl_hash_table_base.htm">plHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; inout_hashTable); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadString(<a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp; ref_sBuilder); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ReadString(<a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&amp; ref_sString);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="foldopen" id="foldopen00080" data-start="{" data-end="}">
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="../../df/d3d/classpl_stream_reader.htm#a044b77a6c729348b3488fbcc18e0ebd2">   80</a></span>  <span class="keyword">virtual</span> plUInt64 <a class="code hl_function" href="../../df/d3d/classpl_stream_reader.htm#a044b77a6c729348b3488fbcc18e0ebd2">SkipBytes</a>(plUInt64 uiBytesToSkip)</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  {</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    plUInt8 uiTempBuffer[1024];</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    plUInt64 uiBytesSkipped = 0;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="keywordflow">while</span> (uiBytesSkipped &lt; uiBytesToSkip)</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    {</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>      plUInt64 uiBytesToRead = <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">plMath::Min&lt;plUInt64&gt;</a>(uiBytesToSkip - uiBytesSkipped, 1024);</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>      plUInt64 uiBytesRead = ReadBytes(uiTempBuffer, uiBytesToRead);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>      uiBytesSkipped += uiBytesRead;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>      <span class="comment">// Terminate early if the stream didn&#39;t read as many bytes as we requested (EOF for example)</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>      <span class="keywordflow">if</span> (uiBytesRead &lt; uiBytesToRead)</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>        <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    }</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <span class="keywordflow">return</span> uiBytesSkipped;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  }</div>
</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  PL_ALWAYS_INLINE plTypeVersion ReadVersion(plTypeVersion expectedMaxVersion);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>};</div>
</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="foldopen" id="foldopen00106" data-start="{" data-end="};">
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="../../d6/d90/classpl_stream_writer.htm">  106</a></span><span class="keyword">class </span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>{</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  PL_DISALLOW_COPY_AND_ASSIGN(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="../../d6/d90/classpl_stream_writer.htm#a9b009139719875cf137cd43413ae4944">  112</a></span>  <a class="code hl_function" href="../../d6/d90/classpl_stream_writer.htm#a9b009139719875cf137cd43413ae4944">plStreamWriter</a>();</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="../../d6/d90/classpl_stream_writer.htm#a2f9a04330fda4668552d588c7f473923">  115</a></span>  <span class="keyword">virtual</span> <a class="code hl_function" href="../../d6/d90/classpl_stream_writer.htm#a2f9a04330fda4668552d588c7f473923">~plStreamWriter</a>();</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno"><a class="line" href="../../d6/d90/classpl_stream_writer.htm#a0ee41d4d7243d1ba861f6fd4226e1dfe">  119</a></span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../d6/d90/classpl_stream_writer.htm#a0ee41d4d7243d1ba861f6fd4226e1dfe">WriteBytes</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pWriteBuffer, plUInt64 uiBytesToWrite) = 0; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="foldopen" id="foldopen00123" data-start="{" data-end="}">
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno"><a class="line" href="../../d6/d90/classpl_stream_writer.htm#aa416fae411dc3c97a7fd0a752c23d879">  123</a></span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../d6/d90/classpl_stream_writer.htm#aa416fae411dc3c97a7fd0a752c23d879">Flush</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  {</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    <span class="keywordflow">return</span> PL_SUCCESS;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  }</div>
</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteWordValue(<span class="keyword">const</span> T* pWordValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteDWordValue(<span class="keyword">const</span> T* pDWordValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteQWordValue(<span class="keyword">const</span> T* pQWordValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  PL_ALWAYS_INLINE <span class="keywordtype">void</span> WriteVersion(plTypeVersion version);</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ArrayType, <span class="keyword">typename</span> ValueType&gt;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteArray(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/dc8/classpl_array_base.htm">plArrayBase&lt;ValueType, ArrayType&gt;</a>&amp; array); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ValueType, plUInt16 uiSize&gt;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteArray(<span class="keyword">const</span> <a class="code hl_class" href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase&lt;ValueType, uiSize&gt;</a>&amp; array);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> ValueType, plUInt32 uiSize&gt;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteArray(<span class="keyword">const</span> ValueType (&amp;array)[uiSize]);</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteSet(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d4c/classpl_set_base.htm">plSetBase&lt;KeyType, Comparer&gt;</a>&amp; set); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteMap(<span class="keyword">const</span> <a class="code hl_class" href="../../d9/dbe/classpl_map_base.htm">plMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; map); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteHashTable(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/d77/classpl_hash_table_base.htm">plHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; hashTable); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> WriteString(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sStringView); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>};</div>
</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="comment">// Contains the helper methods of both interfaces</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span><span class="preprocessor">#include &lt;Foundation/IO/Implementation/Stream_inl.h&gt;</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="comment">// Standard operators for overloads of common data types</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span><span class="preprocessor">#include &lt;Foundation/IO/Implementation/StreamOperations_inl.h&gt;</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="preprocessor">#include &lt;Foundation/IO/Implementation/StreamOperationsMath_inl.h&gt;</span></div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="preprocessor">#include &lt;Foundation/IO/Implementation/StreamOperationsOther_inl.h&gt;</span></div>
<div class="ttc" id="aclasspl_array_base_htm"><div class="ttname"><a href="../../d4/dc8/classpl_array_base.htm">plArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition</b> ArrayBase.h:19</div></div>
<div class="ttc" id="aclasspl_hash_table_base_htm"><div class="ttname"><a href="../../d1/d77/classpl_hash_table_base.htm">plHashTableBase</a></div><div class="ttdoc">Implementation of a hashtable which stores key/value pairs.</div><div class="ttdef"><b>Definition</b> HashTable.h:157</div></div>
<div class="ttc" id="aclasspl_map_base_htm"><div class="ttname"><a href="../../d9/dbe/classpl_map_base.htm">plMapBase</a></div><div class="ttdoc">An associative container. Similar to STL::map.</div><div class="ttdef"><b>Definition</b> Map.h:193</div></div>
<div class="ttc" id="aclasspl_set_base_htm"><div class="ttname"><a href="../../d4/d4c/classpl_set_base.htm">plSetBase</a></div><div class="ttdoc">A set container that only stores whether an element resides in it or not. Similar to STL::set.</div><div class="ttdef"><b>Definition</b> Set.h:13</div></div>
<div class="ttc" id="aclasspl_small_array_base_htm"><div class="ttname"><a href="../../d7/de3/classpl_small_array_base.htm">plSmallArrayBase</a></div><div class="ttdoc">Implementation of a dynamically growing array with in-place storage and small memory overhead.</div><div class="ttdef"><b>Definition</b> SmallArray.h:17</div></div>
<div class="ttc" id="aclasspl_small_array_htm"><div class="ttname"><a href="../../df/dd9/classpl_small_array.htm">plSmallArray</a></div><div class="ttdef"><b>Definition</b> SmallArray.h:219</div></div>
<div class="ttc" id="aclasspl_stream_reader_htm"><div class="ttname"><a href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclasspl_stream_reader_htm_a00fca6986a2498fb82fc58cdf744f846"><div class="ttname"><a href="../../df/d3d/classpl_stream_reader.htm#a00fca6986a2498fb82fc58cdf744f846">plStreamReader::~plStreamReader</a></div><div class="ttdeci">virtual ~plStreamReader()</div><div class="ttdoc">Virtual destructor to ensure correct cleanup.</div></div>
<div class="ttc" id="aclasspl_stream_reader_htm_a044b77a6c729348b3488fbcc18e0ebd2"><div class="ttname"><a href="../../df/d3d/classpl_stream_reader.htm#a044b77a6c729348b3488fbcc18e0ebd2">plStreamReader::SkipBytes</a></div><div class="ttdeci">virtual plUInt64 SkipBytes(plUInt64 uiBytesToSkip)</div><div class="ttdoc">Helper method to skip a number of bytes (implementations of the stream reader may implement this more...</div><div class="ttdef"><b>Definition</b> Stream.h:80</div></div>
<div class="ttc" id="aclasspl_stream_reader_htm_ac584a9b270f07e1d858cb4ecb428035f"><div class="ttname"><a href="../../df/d3d/classpl_stream_reader.htm#ac584a9b270f07e1d858cb4ecb428035f">plStreamReader::plStreamReader</a></div><div class="ttdeci">plStreamReader()</div><div class="ttdoc">Constructor.</div></div>
<div class="ttc" id="aclasspl_stream_reader_htm_aef948579ebcc493ff880997adfa08144"><div class="ttname"><a href="../../df/d3d/classpl_stream_reader.htm#aef948579ebcc493ff880997adfa08144">plStreamReader::ReadBytes</a></div><div class="ttdeci">virtual plUInt64 ReadBytes(void *pReadBuffer, plUInt64 uiBytesToRead)=0</div><div class="ttdoc">Reads a raw number of bytes into the read buffer, this is the only method which has to be implemented...</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:107</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm_a0ee41d4d7243d1ba861f6fd4226e1dfe"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm#a0ee41d4d7243d1ba861f6fd4226e1dfe">plStreamWriter::WriteBytes</a></div><div class="ttdeci">virtual plResult WriteBytes(const void *pWriteBuffer, plUInt64 uiBytesToWrite)=0</div><div class="ttdoc">Writes a raw number of bytes from the buffer, this is the only method which has to be implemented to ...</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm_a2f9a04330fda4668552d588c7f473923"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm#a2f9a04330fda4668552d588c7f473923">plStreamWriter::~plStreamWriter</a></div><div class="ttdeci">virtual ~plStreamWriter()</div><div class="ttdoc">Virtual destructor to ensure correct cleanup.</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm_a9b009139719875cf137cd43413ae4944"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm#a9b009139719875cf137cd43413ae4944">plStreamWriter::plStreamWriter</a></div><div class="ttdeci">plStreamWriter()</div><div class="ttdoc">Constructor.</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm_aa416fae411dc3c97a7fd0a752c23d879"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm#aa416fae411dc3c97a7fd0a752c23d879">plStreamWriter::Flush</a></div><div class="ttdeci">virtual plResult Flush()</div><div class="ttdoc">Flushes the stream, may be implemented (not necessary to implement the interface correctly) so that u...</div><div class="ttdef"><b>Definition</b> Stream.h:123</div></div>
<div class="ttc" id="aclasspl_string_builder_htm"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></div><div class="ttdoc">plStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="anamespacepl_math_htm_a314b24989122e22968ae0a11cc872e28"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">plMath::Min</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:27</div></div>
<div class="ttc" id="astructpl_hybrid_string_htm"><div class="ttname"><a href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a></div><div class="ttdef"><b>Definition</b> String.h:146</div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_53c6c6fb8a816921716f372d87aabbab.htm">IO</a></li><li class="navelem"><b>Stream.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
