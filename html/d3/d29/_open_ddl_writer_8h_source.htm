<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/IO/OpenDdlWriter.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d3/d29/_open_ddl_writer_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">OpenDdlWriter.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/IO/OpenDdlParser.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">// TODO</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment">// Write primitives in HEX (esp. float)</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="};">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm">   12</a></span><span class="keyword">class </span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../da/dda/classpl_open_ddl_writer.htm">plOpenDdlWriter</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="};">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm#a8ad38a0fdca8ac4fc78b4dcbd431d00f">   15</a></span>  <span class="keyword">enum class</span> <a class="code hl_enumeration" href="../../da/dda/classpl_open_ddl_writer.htm#a8ad38a0fdca8ac4fc78b4dcbd431d00f">TypeStringMode</a></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  {</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    Compliant,            </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    ShortenedUnsignedInt, </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    Shortest              </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  };</div>
</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="foldopen" id="foldopen00023" data-start="{" data-end="};">
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm#aaea8a6dd2930a0b70e616fdebfdc81ff">   23</a></span>  <span class="keyword">enum class</span> <a class="code hl_enumeration" href="../../da/dda/classpl_open_ddl_writer.htm#aaea8a6dd2930a0b70e616fdebfdc81ff">FloatPrecisionMode</a></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  {</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    Readable, </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    Exact,    </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  };</div>
</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <a class="code hl_class" href="../../da/dda/classpl_open_ddl_writer.htm">plOpenDdlWriter</a>();</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../da/dda/classpl_open_ddl_writer.htm">~plOpenDdlWriter</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm#aa902291dd1ce85d21244c62b95da3cd2">   35</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/dda/classpl_open_ddl_writer.htm#aa902291dd1ce85d21244c62b95da3cd2">SetOutputStream</a>(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>* pOutput) { m_pOutput = pOutput; } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm#a8f77fcc1032f030d0d7b1d2019500c7c">   38</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/dda/classpl_open_ddl_writer.htm#a8f77fcc1032f030d0d7b1d2019500c7c">SetCompactMode</a>(<span class="keywordtype">bool</span> bCompact) { m_bCompactMode = bCompact; } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm#a1f918d2356ec14d43f5f9bef9959bfc4">   41</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/dda/classpl_open_ddl_writer.htm#a1f918d2356ec14d43f5f9bef9959bfc4">SetPrimitiveTypeStringMode</a>(<a class="code hl_enumeration" href="../../da/dda/classpl_open_ddl_writer.htm#a8ad38a0fdca8ac4fc78b4dcbd431d00f">TypeStringMode</a> mode) { m_TypeStringMode = mode; }</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm#a3ad3d4c9c396120c92f50350bd7ebd81">   44</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/dda/classpl_open_ddl_writer.htm#a3ad3d4c9c396120c92f50350bd7ebd81">SetFloatPrecisionMode</a>(<a class="code hl_enumeration" href="../../da/dda/classpl_open_ddl_writer.htm#aaea8a6dd2930a0b70e616fdebfdc81ff">FloatPrecisionMode</a> mode) { m_FloatPrecisionMode = mode; }</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm#a5923c253f338ecd04c8033fc4748b6ae">   47</a></span>  <a class="code hl_enumeration" href="../../da/dda/classpl_open_ddl_writer.htm#aaea8a6dd2930a0b70e616fdebfdc81ff">FloatPrecisionMode</a> <a class="code hl_function" href="../../da/dda/classpl_open_ddl_writer.htm#a5923c253f338ecd04c8033fc4748b6ae">GetFloatPrecisionMode</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_FloatPrecisionMode; }</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="../../da/dda/classpl_open_ddl_writer.htm#a96b2fc6ac7f03ad450d3d9d02b929520">   51</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/dda/classpl_open_ddl_writer.htm#a96b2fc6ac7f03ad450d3d9d02b929520">SetIndentation</a>(plInt8 iIndentation) { m_iIndentation = iIndentation; }</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <span class="keywordtype">void</span> BeginObject(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sType, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName = {}, <span class="keywordtype">bool</span> bGlobalName = <span class="keyword">false</span>, <span class="keywordtype">bool</span> bSingleLine = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="keywordtype">void</span> EndObject(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="keywordtype">void</span> BeginPrimitiveList(plOpenDdlPrimitiveType type, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName = {}, <span class="keywordtype">bool</span> bGlobalName = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keywordtype">void</span> EndPrimitiveList(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keywordtype">void</span> WriteBool(<span class="keyword">const</span> <span class="keywordtype">bool</span>* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keywordtype">void</span> WriteInt8(<span class="keyword">const</span> plInt8* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keywordtype">void</span> WriteInt16(<span class="keyword">const</span> plInt16* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <span class="keywordtype">void</span> WriteInt32(<span class="keyword">const</span> plInt32* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keywordtype">void</span> WriteInt64(<span class="keyword">const</span> plInt64* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="keywordtype">void</span> WriteUInt8(<span class="keyword">const</span> plUInt8* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  <span class="keywordtype">void</span> WriteUInt16(<span class="keyword">const</span> plUInt16* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keywordtype">void</span> WriteUInt32(<span class="keyword">const</span> plUInt32* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keywordtype">void</span> WriteUInt64(<span class="keyword">const</span> plUInt64* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keywordtype">void</span> WriteFloat(<span class="keyword">const</span> <span class="keywordtype">float</span>* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keywordtype">void</span> WriteDouble(<span class="keyword">const</span> <span class="keywordtype">double</span>* pValues, plUInt32 uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keywordtype">void</span> WriteString(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&amp; sString); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="keywordtype">void</span> WriteBinaryAsString(<span class="keyword">const</span> <span class="keywordtype">void</span>* pData, plUInt32 uiBytes);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="keyword">enum</span> State</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  {</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    Invalid = -5,</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    Empty = -4,</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    ObjectSingleLine = -3,</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    ObjectMultiLine = -2,</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    ObjectStart = -1,</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    PrimitivesBool = 0, <span class="comment">// same values as in plOpenDdlPrimitiveType to enable casting</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    PrimitivesInt8,</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    PrimitivesInt16,</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    PrimitivesInt32,</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    PrimitivesInt64,</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    PrimitivesUInt8,</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    PrimitivesUInt16,</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    PrimitivesUInt32,</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    PrimitivesUInt64,</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>    PrimitivesFloat,</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    PrimitivesDouble,</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    PrimitivesString,</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  };</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="foldopen" id="foldopen00127" data-start="{" data-end="};">
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno"><a class="line" href="../../d0/dd6/structpl_open_ddl_writer_1_1_ddl_state.htm">  127</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d0/dd6/structpl_open_ddl_writer_1_1_ddl_state.htm">DdlState</a></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  {</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    State m_State = State::Empty;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <span class="keywordtype">bool</span> m_bPrimitivesWritten = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  };</div>
</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  PL_ALWAYS_INLINE <span class="keywordtype">void</span> OutputString(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> s) { m_pOutput-&gt;WriteBytes(s.<a class="code hl_function" href="../../d6/d79/classpl_string_view.htm#a74f83d2da688a507fee719c4deea8e28">GetStartPointer</a>(), s.<a class="code hl_function" href="../../d6/d79/classpl_string_view.htm#a0828063775dbf037984994e4d0827764">GetElementCount</a>()).IgnoreResult(); }</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  PL_ALWAYS_INLINE <span class="keywordtype">void</span> OutputString(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> s, plUInt32 uiElementCount) { m_pOutput-&gt;WriteBytes(s.<a class="code hl_function" href="../../d6/d79/classpl_string_view.htm#a74f83d2da688a507fee719c4deea8e28">GetStartPointer</a>(), uiElementCount).IgnoreResult(); }</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keywordtype">void</span> OutputEscapedString(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keywordtype">void</span> OutputIndentation();</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="keywordtype">void</span> OutputPrimitiveTypeNameCompliant(plOpenDdlPrimitiveType type);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <span class="keywordtype">void</span> OutputPrimitiveTypeNameShort(plOpenDdlPrimitiveType type);</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <span class="keywordtype">void</span> OutputPrimitiveTypeNameShortest(plOpenDdlPrimitiveType type);</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="keywordtype">void</span> WritePrimitiveType(plOpenDdlWriter::State exp);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <span class="keywordtype">void</span> OutputObjectName(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, <span class="keywordtype">bool</span> bGlobalName);</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keywordtype">void</span> WriteBinaryAsHex(<span class="keyword">const</span> <span class="keywordtype">void</span>* pData, plUInt32 uiBytes);</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="keywordtype">void</span> OutputObjectBeginning();</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  plInt32 m_iIndentation = 0;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  <span class="keywordtype">bool</span> m_bCompactMode = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  TypeStringMode m_TypeStringMode = TypeStringMode::ShortenedUnsignedInt;</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  FloatPrecisionMode m_FloatPrecisionMode = FloatPrecisionMode::Exact;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>* m_pOutput = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> m_sTemp;</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <a class="code hl_class" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray&lt;DdlState, 16&gt;</a> m_StateStack;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>};</div>
</div>
<div class="ttc" id="aclasspl_hybrid_array_htm"><div class="ttname"><a href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm">plOpenDdlWriter</a></div><div class="ttdoc">The base class for OpenDDL writers.</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:13</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm_a1f918d2356ec14d43f5f9bef9959bfc4"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm#a1f918d2356ec14d43f5f9bef9959bfc4">plOpenDdlWriter::SetPrimitiveTypeStringMode</a></div><div class="ttdeci">void SetPrimitiveTypeStringMode(TypeStringMode mode)</div><div class="ttdoc">Configures how verbose the type strings are going to be written.</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:41</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm_a3ad3d4c9c396120c92f50350bd7ebd81"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm#a3ad3d4c9c396120c92f50350bd7ebd81">plOpenDdlWriter::SetFloatPrecisionMode</a></div><div class="ttdeci">void SetFloatPrecisionMode(FloatPrecisionMode mode)</div><div class="ttdoc">Configures how float values are output.</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:44</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm_a5923c253f338ecd04c8033fc4748b6ae"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm#a5923c253f338ecd04c8033fc4748b6ae">plOpenDdlWriter::GetFloatPrecisionMode</a></div><div class="ttdeci">FloatPrecisionMode GetFloatPrecisionMode() const</div><div class="ttdoc">Returns how float values are output.</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:47</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm_a8ad38a0fdca8ac4fc78b4dcbd431d00f"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm#a8ad38a0fdca8ac4fc78b4dcbd431d00f">plOpenDdlWriter::TypeStringMode</a></div><div class="ttdeci">TypeStringMode</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:16</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm_a8f77fcc1032f030d0d7b1d2019500c7c"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm#a8f77fcc1032f030d0d7b1d2019500c7c">plOpenDdlWriter::SetCompactMode</a></div><div class="ttdeci">void SetCompactMode(bool bCompact)</div><div class="ttdoc">Configures how much whitespace is output.</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:38</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm_a96b2fc6ac7f03ad450d3d9d02b929520"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm#a96b2fc6ac7f03ad450d3d9d02b929520">plOpenDdlWriter::SetIndentation</a></div><div class="ttdeci">void SetIndentation(plInt8 iIndentation)</div><div class="ttdoc">Allows to set the indentation. Negative values are possible. This makes it possible to set the indent...</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:51</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm_aa902291dd1ce85d21244c62b95da3cd2"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm#aa902291dd1ce85d21244c62b95da3cd2">plOpenDdlWriter::SetOutputStream</a></div><div class="ttdeci">void SetOutputStream(plStreamWriter *pOutput)</div><div class="ttdoc">All output is written to this binary stream.</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:35</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm_aaea8a6dd2930a0b70e616fdebfdc81ff"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm#aaea8a6dd2930a0b70e616fdebfdc81ff">plOpenDdlWriter::FloatPrecisionMode</a></div><div class="ttdeci">FloatPrecisionMode</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:24</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:107</div></div>
<div class="ttc" id="aclasspl_string_builder_htm"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></div><div class="ttdoc">plStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_string_view_htm_a0828063775dbf037984994e4d0827764"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm#a0828063775dbf037984994e4d0827764">plStringView::GetElementCount</a></div><div class="ttdeci">plUInt32 GetElementCount() const</div><div class="ttdoc">Returns the number of bytes from the start position up to its end.</div><div class="ttdef"><b>Definition</b> StringView.h:93</div></div>
<div class="ttc" id="aclasspl_string_view_htm_a74f83d2da688a507fee719c4deea8e28"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm#a74f83d2da688a507fee719c4deea8e28">plStringView::GetStartPointer</a></div><div class="ttdeci">const char * GetStartPointer() const</div><div class="ttdoc">Returns the start of the view range.</div><div class="ttdef"><b>Definition</b> StringView.h:102</div></div>
<div class="ttc" id="astructpl_open_ddl_writer_1_1_ddl_state_htm"><div class="ttname"><a href="../../d0/dd6/structpl_open_ddl_writer_1_1_ddl_state.htm">plOpenDdlWriter::DdlState</a></div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:128</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_53c6c6fb8a816921716f372d87aabbab.htm">IO</a></li><li class="navelem"><b>OpenDdlWriter.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
