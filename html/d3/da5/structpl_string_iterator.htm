<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plStringIterator Struct Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d3/da5/structpl_string_iterator.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d8/d85/structpl_string_iterator-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plStringIterator Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p>STL forward iterator used by all string classes. Iterates over unicode characters. The iterator starts at the first character of the string and ends at the address beyond the last character of the string.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/d0b/_string_iterator_8h_source.htm">StringIterator.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a37d0de543fbf30767b344b0625407781" id="r_a37d0de543fbf30767b344b0625407781"><td class="memItemLeft" align="right" valign="top"><a id="a37d0de543fbf30767b344b0625407781" name="a37d0de543fbf30767b344b0625407781"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator_category</b> = std::bidirectional_iterator_tag</td></tr>
<tr class="separator:a37d0de543fbf30767b344b0625407781"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac33f76926c54d2d1f95753c5fd3c2614" id="r_ac33f76926c54d2d1f95753c5fd3c2614"><td class="memItemLeft" align="right" valign="top"><a id="ac33f76926c54d2d1f95753c5fd3c2614" name="ac33f76926c54d2d1f95753c5fd3c2614"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = plUInt32</td></tr>
<tr class="separator:ac33f76926c54d2d1f95753c5fd3c2614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5798ca2f04b5634c11ee0e72878452d" id="r_aa5798ca2f04b5634c11ee0e72878452d"><td class="memItemLeft" align="right" valign="top"><a id="aa5798ca2f04b5634c11ee0e72878452d" name="aa5798ca2f04b5634c11ee0e72878452d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>difference_type</b> = std::ptrdiff_t</td></tr>
<tr class="separator:aa5798ca2f04b5634c11ee0e72878452d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e9ce11f13f44684bdf30cf49ab6d5f" id="r_a04e9ce11f13f44684bdf30cf49ab6d5f"><td class="memItemLeft" align="right" valign="top"><a id="a04e9ce11f13f44684bdf30cf49ab6d5f" name="a04e9ce11f13f44684bdf30cf49ab6d5f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>pointer</b> = const char*</td></tr>
<tr class="separator:a04e9ce11f13f44684bdf30cf49ab6d5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84d8d25ea9afeba931cf3200a05a09b9" id="r_a84d8d25ea9afeba931cf3200a05a09b9"><td class="memItemLeft" align="right" valign="top"><a id="a84d8d25ea9afeba931cf3200a05a09b9" name="a84d8d25ea9afeba931cf3200a05a09b9"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reference</b> = plUInt32</td></tr>
<tr class="separator:a84d8d25ea9afeba931cf3200a05a09b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6f6ca913e2e700cf7591a8177c92bbcc" id="r_a6f6ca913e2e700cf7591a8177c92bbcc"><td class="memItemLeft" align="right" valign="top"><a id="a6f6ca913e2e700cf7591a8177c92bbcc" name="a6f6ca913e2e700cf7591a8177c92bbcc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a6f6ca913e2e700cf7591a8177c92bbcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ff7ab89f3cca1ca31f035884463d844" id="r_a8ff7ab89f3cca1ca31f035884463d844"><td class="memItemLeft" align="right" valign="top"><a id="a8ff7ab89f3cca1ca31f035884463d844" name="a8ff7ab89f3cca1ca31f035884463d844"></a>
PL_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>plStringIterator</b> ()=default</td></tr>
<tr class="memdesc:a8ff7ab89f3cca1ca31f035884463d844"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs an invalid iterator. <br /></td></tr>
<tr class="separator:a8ff7ab89f3cca1ca31f035884463d844"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1284d3c79acc7080d28e01497d2eb46" id="r_aa1284d3c79acc7080d28e01497d2eb46"><td class="memItemLeft" align="right" valign="top"><a id="aa1284d3c79acc7080d28e01497d2eb46" name="aa1284d3c79acc7080d28e01497d2eb46"></a>
PL_FORCE_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>plStringIterator</b> (const char *pStartPtr, const char *pEndPtr, const char *pCurPtr)</td></tr>
<tr class="memdesc:aa1284d3c79acc7080d28e01497d2eb46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs either a begin or end iterator for the given string. <br /></td></tr>
<tr class="separator:aa1284d3c79acc7080d28e01497d2eb46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5383a44ee305c49938838b09402d8f9" id="r_ac5383a44ee305c49938838b09402d8f9"><td class="memItemLeft" align="right" valign="top"><a id="ac5383a44ee305c49938838b09402d8f9" name="ac5383a44ee305c49938838b09402d8f9"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValid</b> () const</td></tr>
<tr class="memdesc:ac5383a44ee305c49938838b09402d8f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether this iterator points to a valid element. Invalid iterators either point to m_pEndPtr or were never initialized. <br /></td></tr>
<tr class="separator:ac5383a44ee305c49938838b09402d8f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e9a92b7cd80d79f0742b3fe9d9f30f8" id="r_a5e9a92b7cd80d79f0742b3fe9d9f30f8"><td class="memItemLeft" align="right" valign="top"><a id="a5e9a92b7cd80d79f0742b3fe9d9f30f8" name="a5e9a92b7cd80d79f0742b3fe9d9f30f8"></a>
PL_ALWAYS_INLINE plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCharacter</b> () const</td></tr>
<tr class="memdesc:a5e9a92b7cd80d79f0742b3fe9d9f30f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the currently pointed to character in Utf32 encoding. <br /></td></tr>
<tr class="separator:a5e9a92b7cd80d79f0742b3fe9d9f30f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27e134a12664a6c8a61c86bddcfa2eb9" id="r_a27e134a12664a6c8a61c86bddcfa2eb9"><td class="memItemLeft" align="right" valign="top"><a id="a27e134a12664a6c8a61c86bddcfa2eb9" name="a27e134a12664a6c8a61c86bddcfa2eb9"></a>
PL_ALWAYS_INLINE plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> () const</td></tr>
<tr class="memdesc:a27e134a12664a6c8a61c86bddcfa2eb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the currently pointed to character in Utf32 encoding. <br /></td></tr>
<tr class="separator:a27e134a12664a6c8a61c86bddcfa2eb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25f7924a13d9e28b2bea4be9141f2f88" id="r_a25f7924a13d9e28b2bea4be9141f2f88"><td class="memItemLeft" align="right" valign="top"><a id="a25f7924a13d9e28b2bea4be9141f2f88" name="a25f7924a13d9e28b2bea4be9141f2f88"></a>
PL_ALWAYS_INLINE const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:a25f7924a13d9e28b2bea4be9141f2f88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the address the iterator currently points to. <br /></td></tr>
<tr class="separator:a25f7924a13d9e28b2bea4be9141f2f88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2a0e524f0f9e203c5cb55955c528986" id="r_ab2a0e524f0f9e203c5cb55955c528986"><td class="memItemLeft" align="right" valign="top"><a id="ab2a0e524f0f9e203c5cb55955c528986" name="ab2a0e524f0f9e203c5cb55955c528986"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a> &amp;it2) const</td></tr>
<tr class="memdesc:ab2a0e524f0f9e203c5cb55955c528986"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the two iterators point to the same element. <br /></td></tr>
<tr class="separator:ab2a0e524f0f9e203c5cb55955c528986"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2605512df8227929f3986f8caf4fce55" id="r_a2605512df8227929f3986f8caf4fce55"><td class="memItemLeft" align="right" valign="top"><a id="a2605512df8227929f3986f8caf4fce55" name="a2605512df8227929f3986f8caf4fce55"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a> &amp;)</td></tr>
<tr class="separator:a2605512df8227929f3986f8caf4fce55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f26db1a349a2f23a0d9484224ee9d25" id="r_a2f26db1a349a2f23a0d9484224ee9d25"><td class="memItemLeft" align="right" valign="top"><a id="a2f26db1a349a2f23a0d9484224ee9d25" name="a2f26db1a349a2f23a0d9484224ee9d25"></a>
PL_ALWAYS_INLINE plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>Advance</b> ()</td></tr>
<tr class="memdesc:a2f26db1a349a2f23a0d9484224ee9d25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the iterated to the next character, same as operator++, but returns how many bytes were consumed in the source string. <br /></td></tr>
<tr class="separator:a2f26db1a349a2f23a0d9484224ee9d25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fe68c4d8ff72f3816e7849528b07f0a" id="r_a5fe68c4d8ff72f3816e7849528b07f0a"><td class="memItemLeft" align="right" valign="top"><a id="a5fe68c4d8ff72f3816e7849528b07f0a" name="a5fe68c4d8ff72f3816e7849528b07f0a"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator++</b> ()</td></tr>
<tr class="memdesc:a5fe68c4d8ff72f3816e7849528b07f0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the next Utf8 character. <br /></td></tr>
<tr class="separator:a5fe68c4d8ff72f3816e7849528b07f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e560c57963ee92b70d33c62efa0dc8" id="r_ad5e560c57963ee92b70d33c62efa0dc8"><td class="memItemLeft" align="right" valign="top"><a id="ad5e560c57963ee92b70d33c62efa0dc8" name="ad5e560c57963ee92b70d33c62efa0dc8"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator--</b> ()</td></tr>
<tr class="memdesc:ad5e560c57963ee92b70d33c62efa0dc8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the previous Utf8 character. <br /></td></tr>
<tr class="separator:ad5e560c57963ee92b70d33c62efa0dc8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9895ad7e5fd9c08a3f3479463257fbf" id="r_af9895ad7e5fd9c08a3f3479463257fbf"><td class="memItemLeft" align="right" valign="top"><a id="af9895ad7e5fd9c08a3f3479463257fbf" name="af9895ad7e5fd9c08a3f3479463257fbf"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator++</b> (int)</td></tr>
<tr class="memdesc:af9895ad7e5fd9c08a3f3479463257fbf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the next Utf8 character. <br /></td></tr>
<tr class="separator:af9895ad7e5fd9c08a3f3479463257fbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6335c0f3e92af9b518f2d204da60cbe7" id="r_a6335c0f3e92af9b518f2d204da60cbe7"><td class="memItemLeft" align="right" valign="top"><a id="a6335c0f3e92af9b518f2d204da60cbe7" name="a6335c0f3e92af9b518f2d204da60cbe7"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator--</b> (int)</td></tr>
<tr class="memdesc:a6335c0f3e92af9b518f2d204da60cbe7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the previous Utf8 character. <br /></td></tr>
<tr class="separator:a6335c0f3e92af9b518f2d204da60cbe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd09cafd0c2f10e62abfeadd5d788051" id="r_afd09cafd0c2f10e62abfeadd5d788051"><td class="memItemLeft" align="right" valign="top"><a id="afd09cafd0c2f10e62abfeadd5d788051" name="afd09cafd0c2f10e62abfeadd5d788051"></a>
PL_FORCE_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (difference_type d)</td></tr>
<tr class="memdesc:afd09cafd0c2f10e62abfeadd5d788051"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the iterator forwards by d characters. Does not move it beyond the range's end. <br /></td></tr>
<tr class="separator:afd09cafd0c2f10e62abfeadd5d788051"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe26743329dd67820e14d55a1b94583a" id="r_abe26743329dd67820e14d55a1b94583a"><td class="memItemLeft" align="right" valign="top"><a id="abe26743329dd67820e14d55a1b94583a" name="abe26743329dd67820e14d55a1b94583a"></a>
PL_FORCE_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (difference_type d)</td></tr>
<tr class="memdesc:abe26743329dd67820e14d55a1b94583a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the iterator backwards by d characters. Does not move it beyond the range's start. <br /></td></tr>
<tr class="separator:abe26743329dd67820e14d55a1b94583a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c78dd321d3dbad486435f37e205f71d" id="r_a4c78dd321d3dbad486435f37e205f71d"><td class="memItemLeft" align="right" valign="top"><a id="a4c78dd321d3dbad486435f37e205f71d" name="a4c78dd321d3dbad486435f37e205f71d"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (difference_type d) const</td></tr>
<tr class="memdesc:a4c78dd321d3dbad486435f37e205f71d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator that is advanced forwards by d characters. <br /></td></tr>
<tr class="separator:a4c78dd321d3dbad486435f37e205f71d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e847d35306f01a7e3a5f3790a368c9d" id="r_a0e847d35306f01a7e3a5f3790a368c9d"><td class="memItemLeft" align="right" valign="top"><a id="a0e847d35306f01a7e3a5f3790a368c9d" name="a0e847d35306f01a7e3a5f3790a368c9d"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (difference_type d) const</td></tr>
<tr class="memdesc:a0e847d35306f01a7e3a5f3790a368c9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator that is advanced backwards by d characters. <br /></td></tr>
<tr class="separator:a0e847d35306f01a7e3a5f3790a368c9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dfafddb47c4f2e0159130e258ca6460" id="r_a9dfafddb47c4f2e0159130e258ca6460"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9dfafddb47c4f2e0159130e258ca6460">SetCurrentPosition</a> (const char *szCurPos)</td></tr>
<tr class="memdesc:a9dfafddb47c4f2e0159130e258ca6460"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to set the 'current' iteration position to a different value.  <br /></td></tr>
<tr class="separator:a9dfafddb47c4f2e0159130e258ca6460"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>STL forward iterator used by all string classes. Iterates over unicode characters. The iterator starts at the first character of the string and ends at the address beyond the last character of the string. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9dfafddb47c4f2e0159130e258ca6460" name="a9dfafddb47c4f2e0159130e258ca6460"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9dfafddb47c4f2e0159130e258ca6460">&#9670;&#160;</a></span>SetCurrentPosition()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plStringIterator::SetCurrentPosition </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szCurPos</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allows to set the 'current' iteration position to a different value. </p>
<p>Must be between the iterators start and end range. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>Code/Engine/Foundation/Strings/Implementation/<a class="el" href="../../de/d0b/_string_iterator_8h_source.htm">StringIterator.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/da5/structpl_string_iterator.htm">plStringIterator</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
