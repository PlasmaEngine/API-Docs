<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plPathUtils Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/d1d/classpl_path_utils.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="../../de/d3a/classpl_path_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plPathUtils Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Contains Helper functions to work with paths.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/d82/_path_utils_8h_source.htm">PathUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9dedc44e6b28b37714be6aaf0c9cbec2" id="r_a9dedc44e6b28b37714be6aaf0c9cbec2"><td class="memItemLeft" align="right" valign="top"><a id="a9dedc44e6b28b37714be6aaf0c9cbec2" name="a9dedc44e6b28b37714be6aaf0c9cbec2"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsPathSeparator</b> (plUInt32 c)</td></tr>
<tr class="memdesc:a9dedc44e6b28b37714be6aaf0c9cbec2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether c is any known path separator. <br /></td></tr>
<tr class="separator:a9dedc44e6b28b37714be6aaf0c9cbec2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0583a55071e7cec2ae7f456c62a36f49" id="r_a0583a55071e7cec2ae7f456c62a36f49"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0583a55071e7cec2ae7f456c62a36f49">IsValidFilenameChar</a> (plUInt32 uiCharacter)</td></tr>
<tr class="memdesc:a0583a55071e7cec2ae7f456c62a36f49"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a given character is allowed in a filename (not path!)  <br /></td></tr>
<tr class="separator:a0583a55071e7cec2ae7f456c62a36f49"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fe13c94f4ff4b8376e4d697c3bc9d52" id="r_a9fe13c94f4ff4b8376e4d697c3bc9d52"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9fe13c94f4ff4b8376e4d697c3bc9d52">ContainsInvalidFilenameChars</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath)</td></tr>
<tr class="memdesc:a9fe13c94f4ff4b8376e4d697c3bc9d52"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks every character in the string with <a class="el" href="#a0583a55071e7cec2ae7f456c62a36f49" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a>  <br /></td></tr>
<tr class="separator:a9fe13c94f4ff4b8376e4d697c3bc9d52"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc51c8cd65b427448e9ea88892611110" id="r_abc51c8cd65b427448e9ea88892611110"><td class="memItemLeft" align="right" valign="top"><a id="abc51c8cd65b427448e9ea88892611110" name="abc51c8cd65b427448e9ea88892611110"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><b>FindPreviousSeparator</b> (const char *szPathStart, const char *szStartSearchAt)</td></tr>
<tr class="memdesc:abc51c8cd65b427448e9ea88892611110"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the previous path separator before szStartSearchAt. Will return nullptr if it reaches szPathStart before finding any separator. <br /></td></tr>
<tr class="separator:abc51c8cd65b427448e9ea88892611110"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b9ced8636d3b7f9b048ea69548c04d8" id="r_a4b9ced8636d3b7f9b048ea69548c04d8"><td class="memItemLeft" align="right" valign="top"><a id="a4b9ced8636d3b7f9b048ea69548c04d8" name="a4b9ced8636d3b7f9b048ea69548c04d8"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>HasAnyExtension</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath)</td></tr>
<tr class="memdesc:a4b9ced8636d3b7f9b048ea69548c04d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path has any file extension. <br /></td></tr>
<tr class="separator:a4b9ced8636d3b7f9b048ea69548c04d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8d80abca6c6e4333c85ea6b71473c0" id="r_aea8d80abca6c6e4333c85ea6b71473c0"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aea8d80abca6c6e4333c85ea6b71473c0">HasExtension</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sExtension)</td></tr>
<tr class="memdesc:aea8d80abca6c6e4333c85ea6b71473c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the path ends with the given file extension. szExtension may or may not start with a dot. The check is case insensitive.  <br /></td></tr>
<tr class="separator:aea8d80abca6c6e4333c85ea6b71473c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3cdac6cd4f314fad35d0a4461de0a37f" id="r_a3cdac6cd4f314fad35d0a4461de0a37f"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3cdac6cd4f314fad35d0a4461de0a37f">GetFileExtension</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath, bool bFullExtension=false)</td></tr>
<tr class="memdesc:a3cdac6cd4f314fad35d0a4461de0a37f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file extension of the given path. Will be empty, if the path does not end with a proper extension. The dot (.) is not included.  <br /></td></tr>
<tr class="separator:a3cdac6cd4f314fad35d0a4461de0a37f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74923a70930da7f1ac28d734bc743635" id="r_a74923a70930da7f1ac28d734bc743635"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a74923a70930da7f1ac28d734bc743635">GetFileName</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath, bool bRemoveFullExtension=false)</td></tr>
<tr class="memdesc:a74923a70930da7f1ac28d734bc743635"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file name of a path, excluding the path and extension.  <br /></td></tr>
<tr class="separator:a74923a70930da7f1ac28d734bc743635"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af69c4d24d65507b2213b340c3cf9a68d" id="r_af69c4d24d65507b2213b340c3cf9a68d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af69c4d24d65507b2213b340c3cf9a68d">GetFileNameAndExtension</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath)</td></tr>
<tr class="memdesc:af69c4d24d65507b2213b340c3cf9a68d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the substring that represents the file name including the file extension.  <br /></td></tr>
<tr class="separator:af69c4d24d65507b2213b340c3cf9a68d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2dbc2b1811a2b2bad3dff1d31688807" id="r_ac2dbc2b1811a2b2bad3dff1d31688807"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac2dbc2b1811a2b2bad3dff1d31688807">GetFileDirectory</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath)</td></tr>
<tr class="memdesc:ac2dbc2b1811a2b2bad3dff1d31688807"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the directory of the given file, which is the substring up to the last path separator.  <br /></td></tr>
<tr class="separator:ac2dbc2b1811a2b2bad3dff1d31688807"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a336c6dd9a5f0d5d196175025bb2fe208" id="r_a336c6dd9a5f0d5d196175025bb2fe208"><td class="memItemLeft" align="right" valign="top"><a id="a336c6dd9a5f0d5d196175025bb2fe208" name="a336c6dd9a5f0d5d196175025bb2fe208"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsAbsolutePath</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath)</td></tr>
<tr class="memdesc:a336c6dd9a5f0d5d196175025bb2fe208"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents an absolute path on the current OS. <br /></td></tr>
<tr class="separator:a336c6dd9a5f0d5d196175025bb2fe208"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e5cc595af12f5a01dc69d3335cb4c1f" id="r_a2e5cc595af12f5a01dc69d3335cb4c1f"><td class="memItemLeft" align="right" valign="top"><a id="a2e5cc595af12f5a01dc69d3335cb4c1f" name="a2e5cc595af12f5a01dc69d3335cb4c1f"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsRelativePath</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath)</td></tr>
<tr class="memdesc:a2e5cc595af12f5a01dc69d3335cb4c1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a relative path on the current OS. <br /></td></tr>
<tr class="separator:a2e5cc595af12f5a01dc69d3335cb4c1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7dbca436708847fcde61210cd1f710c" id="r_ac7dbca436708847fcde61210cd1f710c"><td class="memItemLeft" align="right" valign="top"><a id="ac7dbca436708847fcde61210cd1f710c" name="ac7dbca436708847fcde61210cd1f710c"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsRootedPath</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath)</td></tr>
<tr class="memdesc:ac7dbca436708847fcde61210cd1f710c"><td class="mdescLeft">&#160;</td><td class="mdescRight">A rooted path starts with a colon and then names a file-system data directory. Rooted paths are used as 'absolute' paths within the <a class="el" href="../../d5/d08/classpl_file_system.htm" title="The plFileSystem provides high-level functionality to manage files in a virtual file system.">plFileSystem</a>. <br /></td></tr>
<tr class="separator:ac7dbca436708847fcde61210cd1f710c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a5b409f0d8106f74ac65248c4cc0cd0" id="r_a2a5b409f0d8106f74ac65248c4cc0cd0"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2a5b409f0d8106f74ac65248c4cc0cd0">GetRootedPathParts</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;ref_sRoot, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;ref_sRelPath)</td></tr>
<tr class="memdesc:a2a5b409f0d8106f74ac65248c4cc0cd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Splits the passed path into its root portion and the relative path.  <br /></td></tr>
<tr class="separator:a2a5b409f0d8106f74ac65248c4cc0cd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8dd93f8449f68662592c116f38ffe8e" id="r_aa8dd93f8449f68662592c116f38ffe8e"><td class="memItemLeft" align="right" valign="top"><a id="aa8dd93f8449f68662592c116f38ffe8e" name="aa8dd93f8449f68662592c116f38ffe8e"></a>
static <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetRootedPathRootName</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath)</td></tr>
<tr class="memdesc:aa8dd93f8449f68662592c116f38ffe8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special case of GetRootedPathParts that returns the root of the input path and discards the relative path. <br /></td></tr>
<tr class="separator:aa8dd93f8449f68662592c116f38ffe8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eedc22a645f2eee549a636f1ee38c6f" id="r_a4eedc22a645f2eee549a636f1ee38c6f"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4eedc22a645f2eee549a636f1ee38c6f">MakeValidFilename</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFilename, plUInt32 uiReplacementCharacter, <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;out_sFilename)</td></tr>
<tr class="memdesc:a4eedc22a645f2eee549a636f1ee38c6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a valid filename (not path!) using the given string by replacing all disallowed characters.  <br /></td></tr>
<tr class="separator:a4eedc22a645f2eee549a636f1ee38c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8efe3552f05241f0862be44ad32f9b09" id="r_a8efe3552f05241f0862be44ad32f9b09"><td class="memItemLeft" align="right" valign="top"><a id="a8efe3552f05241f0862be44ad32f9b09" name="a8efe3552f05241f0862be44ad32f9b09"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsSubPath</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPrefixPath, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFullPath)</td></tr>
<tr class="memdesc:a8efe3552f05241f0862be44ad32f9b09"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether <em>sFullPath</em> starts with <em>sPrefixPath</em>. <br /></td></tr>
<tr class="separator:a8efe3552f05241f0862be44ad32f9b09"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3a95bd4c4904b7964e1beeeb54d21ea" id="r_ad3a95bd4c4904b7964e1beeeb54d21ea"><td class="memItemLeft" align="right" valign="top"><a id="ad3a95bd4c4904b7964e1beeeb54d21ea" name="ad3a95bd4c4904b7964e1beeeb54d21ea"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsSubPath_NoCase</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPrefixPath, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFullPath)</td></tr>
<tr class="memdesc:ad3a95bd4c4904b7964e1beeeb54d21ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether <em>sFullPath</em> starts with <em>sPrefixPath</em>. Case insensitive. <br /></td></tr>
<tr class="separator:ad3a95bd4c4904b7964e1beeeb54d21ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-attribs" name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a48192e29fd4442a28bded06aee154cff" id="r_a48192e29fd4442a28bded06aee154cff"><td class="memItemLeft" align="right" valign="top"><a id="a48192e29fd4442a28bded06aee154cff" name="a48192e29fd4442a28bded06aee154cff"></a>
static const char&#160;</td><td class="memItemRight" valign="bottom"><b>OsSpecificPathSeparator</b></td></tr>
<tr class="memdesc:a48192e29fd4442a28bded06aee154cff"><td class="mdescLeft">&#160;</td><td class="mdescRight">The path separator used by this operating system. <br /></td></tr>
<tr class="separator:a48192e29fd4442a28bded06aee154cff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Contains Helper functions to work with paths. </p>
<p>Only functions that require read-only access to a string are provided here All functions that require to modify the path are provided by <a class="el" href="../../d3/d2d/classpl_string_builder.htm" title="plStringBuilder is a class that is meant for creating and modifying strings.">plStringBuilder</a>. Many functions return <a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a>'s, which will always be strict sub-strings of their input data. That allows that these functions can work without any additional memory allocations. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9fe13c94f4ff4b8376e4d697c3bc9d52" name="a9fe13c94f4ff4b8376e4d697c3bc9d52"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fe13c94f4ff4b8376e4d697c3bc9d52">&#9670;&#160;</a></span>ContainsInvalidFilenameChars()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plPathUtils::ContainsInvalidFilenameChars </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks every character in the string with <a class="el" href="#a0583a55071e7cec2ae7f456c62a36f49" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a> </p>
<p>This is a basic check, only because each character passes the test, it does not guarantee that the full string is a valid path. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000035">Test</a></b></dt><dd>Not tested yet </dd></dl>

</div>
</div>
<a id="ac2dbc2b1811a2b2bad3dff1d31688807" name="ac2dbc2b1811a2b2bad3dff1d31688807"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac2dbc2b1811a2b2bad3dff1d31688807">&#9670;&#160;</a></span>GetFileDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> plPathUtils::GetFileDirectory </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the directory of the given file, which is the substring up to the last path separator. </p>
<p>If the path already ends in a path separator, and thus points to a folder, instead of a file, the unchanged path is returned. "path/to/file" -&gt; "path/to/" "path/to/folder/" -&gt; "path/to/folder/" "filename" -&gt; "" "/file_at_root_level" -&gt; "/" </p>

</div>
</div>
<a id="a3cdac6cd4f314fad35d0a4461de0a37f" name="a3cdac6cd4f314fad35d0a4461de0a37f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3cdac6cd4f314fad35d0a4461de0a37f">&#9670;&#160;</a></span>GetFileExtension()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> plPathUtils::GetFileExtension </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bFullExtension</em></span><span class="paramdefsep"> = </span><span class="paramdefval">false</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the file extension of the given path. Will be empty, if the path does not end with a proper extension. The dot (.) is not included. </p>
<p>If bFullExtension is false, a file named "file.a.b.c" will return "c". If bFullExtension is true, a file named "file.a.b.c" will return "a.b.c". </p>

</div>
</div>
<a id="a74923a70930da7f1ac28d734bc743635" name="a74923a70930da7f1ac28d734bc743635"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74923a70930da7f1ac28d734bc743635">&#9670;&#160;</a></span>GetFileName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> plPathUtils::GetFileName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bRemoveFullExtension</em></span><span class="paramdefsep"> = </span><span class="paramdefval">false</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the file name of a path, excluding the path and extension. </p>
<p>If the path already ends with a path separator, the result will be empty. </p>

</div>
</div>
<a id="af69c4d24d65507b2213b340c3cf9a68d" name="af69c4d24d65507b2213b340c3cf9a68d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af69c4d24d65507b2213b340c3cf9a68d">&#9670;&#160;</a></span>GetFileNameAndExtension()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> plPathUtils::GetFileNameAndExtension </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the substring that represents the file name including the file extension. </p>
<p>Returns an empty string, if sPath already ends in a path separator, or is empty itself. </p>

</div>
</div>
<a id="a2a5b409f0d8106f74ac65248c4cc0cd0" name="a2a5b409f0d8106f74ac65248c4cc0cd0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a5b409f0d8106f74ac65248c4cc0cd0">&#9670;&#160;</a></span>GetRootedPathParts()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPathUtils::GetRootedPathParts </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_sRoot</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_sRelPath</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Splits the passed path into its root portion and the relative path. </p>
<p>":MyRoot\file.txt" -&gt; root = "MyRoot", relPath="file.txt" ":MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" ":\MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" ":/MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" If the path is not rooted, then root will be an empty string and relPath is set to the full input path. </p>

</div>
</div>
<a id="aea8d80abca6c6e4333c85ea6b71473c0" name="aea8d80abca6c6e4333c85ea6b71473c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aea8d80abca6c6e4333c85ea6b71473c0">&#9670;&#160;</a></span>HasExtension()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plPathUtils::HasExtension </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sPath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sExtension</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks whether the path ends with the given file extension. szExtension may or may not start with a dot. The check is case insensitive. </p>
<p>HasExtension("file.txt", "txt") -&gt; true HasExtension("file.txt", ".txt") -&gt; true HasExtension("file.a.b", ".b") -&gt; true HasExtension("file.a.b", "a.b") -&gt; true HasExtension("file.a.b", ".a.b") -&gt; true HasExtension("file.a.b", "file.a.b") -&gt; false </p>

</div>
</div>
<a id="a0583a55071e7cec2ae7f456c62a36f49" name="a0583a55071e7cec2ae7f456c62a36f49"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0583a55071e7cec2ae7f456c62a36f49">&#9670;&#160;</a></span>IsValidFilenameChar()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plPathUtils::IsValidFilenameChar </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiCharacter</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if a given character is allowed in a filename (not path!) </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000034">Test</a></b></dt><dd>Not tested yet </dd></dl>

</div>
</div>
<a id="a4eedc22a645f2eee549a636f1ee38c6f" name="a4eedc22a645f2eee549a636f1ee38c6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4eedc22a645f2eee549a636f1ee38c6f">&#9670;&#160;</a></span>MakeValidFilename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPathUtils::MakeValidFilename </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sFilename</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiReplacementCharacter</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_sFilename</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a valid filename (not path!) using the given string by replacing all disallowed characters. </p>
<p>Note that path separators in the given string will be replaced as well! Asserts that replacementCharacter is an allowed character. </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="#a0583a55071e7cec2ae7f456c62a36f49" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Strings/<a class="el" href="../../dd/d82/_path_utils_8h_source.htm">PathUtils.h</a></li>
<li>Code/Engine/Foundation/Strings/Implementation/<b>PathUtils.cpp</b></li>
<li>Code/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d1/d9d/_path_utils__inl_8h_source.htm">PathUtils_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../df/d1d/classpl_path_utils.htm">plPathUtils</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
