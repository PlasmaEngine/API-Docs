<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plUniquePtr&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/d44/classpl_unique_ptr.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d5/d18/classpl_unique_ptr-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plUniquePtr&lt; T &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A Unique ptr manages an object and destroys that object when it goes out of scope. It is ensure that only one unique ptr can manage the same object.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/df6/_unique_ptr_8h_source.htm">UniquePtr.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a090599a4d2cb98f2121223750f42c738" id="r_a090599a4d2cb98f2121223750f42c738"><td class="memItemLeft" align="right" valign="top"><a id="a090599a4d2cb98f2121223750f42c738" name="a090599a4d2cb98f2121223750f42c738"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_MEM_RELOCATABLE_TYPE</b> ()</td></tr>
<tr class="separator:a090599a4d2cb98f2121223750f42c738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7b3606843adc0f9ef4866dd405432c1" id="r_ab7b3606843adc0f9ef4866dd405432c1"><td class="memItemLeft" align="right" valign="top"><a id="ab7b3606843adc0f9ef4866dd405432c1" name="ab7b3606843adc0f9ef4866dd405432c1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plUniquePtr</b> ()</td></tr>
<tr class="memdesc:ab7b3606843adc0f9ef4866dd405432c1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty unique ptr. <br /></td></tr>
<tr class="separator:ab7b3606843adc0f9ef4866dd405432c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a583d34983806cc76b7a516b7724b7370" id="r_a583d34983806cc76b7a516b7724b7370"><td class="memTemplParams" colspan="2"><a id="a583d34983806cc76b7a516b7724b7370" name="a583d34983806cc76b7a516b7724b7370"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a583d34983806cc76b7a516b7724b7370"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><b>plUniquePtr</b> (const <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="memdesc:a583d34983806cc76b7a516b7724b7370"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a unique ptr from a freshly created instance through PL_NEW or PL_DEFAULT_NEW. <br /></td></tr>
<tr class="separator:a583d34983806cc76b7a516b7724b7370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85d9437128b3f2d918222b4565fc0778" id="r_a85d9437128b3f2d918222b4565fc0778"><td class="memTemplParams" colspan="2"><a id="a85d9437128b3f2d918222b4565fc0778" name="a85d9437128b3f2d918222b4565fc0778"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a85d9437128b3f2d918222b4565fc0778"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><b>plUniquePtr</b> (U *pInstance, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a85d9437128b3f2d918222b4565fc0778"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a unique ptr from a pointer and an allocator. The passed allocator will be used to destroy the instance when the unique ptr goes out of scope. <br /></td></tr>
<tr class="separator:a85d9437128b3f2d918222b4565fc0778"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ddef1e6f97f96cd14c0a62641d1a87e" id="r_a3ddef1e6f97f96cd14c0a62641d1a87e"><td class="memTemplParams" colspan="2"><a id="a3ddef1e6f97f96cd14c0a62641d1a87e" name="a3ddef1e6f97f96cd14c0a62641d1a87e"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a3ddef1e6f97f96cd14c0a62641d1a87e"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><b>plUniquePtr</b> (<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:a3ddef1e6f97f96cd14c0a62641d1a87e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move constructs a unique ptr from another. The other unique ptr will be empty afterwards to guarantee that there is only one unique ptr managing the same object. <br /></td></tr>
<tr class="separator:a3ddef1e6f97f96cd14c0a62641d1a87e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad2f225b98a2344d6754087eb3322120" id="r_aad2f225b98a2344d6754087eb3322120"><td class="memItemLeft" align="right" valign="top"><a id="aad2f225b98a2344d6754087eb3322120" name="aad2f225b98a2344d6754087eb3322120"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plUniquePtr</b> (std::nullptr_t)</td></tr>
<tr class="memdesc:aad2f225b98a2344d6754087eb3322120"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization with nullptr to be able to return nullptr in functions that return unique ptr. <br /></td></tr>
<tr class="separator:aad2f225b98a2344d6754087eb3322120"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e92fe480a9abf7eedf38fb4fccf5c4e" id="r_a7e92fe480a9abf7eedf38fb4fccf5c4e"><td class="memItemLeft" align="right" valign="top"><a id="a7e92fe480a9abf7eedf38fb4fccf5c4e" name="a7e92fe480a9abf7eedf38fb4fccf5c4e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>~plUniquePtr</b> ()</td></tr>
<tr class="memdesc:a7e92fe480a9abf7eedf38fb4fccf5c4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the managed object using the stored allocator. <br /></td></tr>
<tr class="separator:a7e92fe480a9abf7eedf38fb4fccf5c4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af57a67b1f25f7143a56ed83d9c5050d9" id="r_af57a67b1f25f7143a56ed83d9c5050d9"><td class="memTemplParams" colspan="2"><a id="af57a67b1f25f7143a56ed83d9c5050d9" name="af57a67b1f25f7143a56ed83d9c5050d9"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:af57a67b1f25f7143a56ed83d9c5050d9"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="memdesc:af57a67b1f25f7143a56ed83d9c5050d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the unique ptr from a freshly created instance through PL_NEW or PL_DEFAULT_NEW. <br /></td></tr>
<tr class="separator:af57a67b1f25f7143a56ed83d9c5050d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af70ea5e4212ee4fb20e9c865c3dbd572" id="r_af70ea5e4212ee4fb20e9c865c3dbd572"><td class="memTemplParams" colspan="2"><a id="af70ea5e4212ee4fb20e9c865c3dbd572" name="af70ea5e4212ee4fb20e9c865c3dbd572"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:af70ea5e4212ee4fb20e9c865c3dbd572"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:af70ea5e4212ee4fb20e9c865c3dbd572"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move assigns a unique ptr from another. The other unique ptr will be empty afterwards to guarantee that there is only one unique ptr managing the same object. <br /></td></tr>
<tr class="separator:af70ea5e4212ee4fb20e9c865c3dbd572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1134e63690ef1c55d4a6d5f6c9e75d9" id="r_ab1134e63690ef1c55d4a6d5f6c9e75d9"><td class="memItemLeft" align="right" valign="top"><a id="ab1134e63690ef1c55d4a6d5f6c9e75d9" name="ab1134e63690ef1c55d4a6d5f6c9e75d9"></a>
<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (std::nullptr_t)</td></tr>
<tr class="memdesc:ab1134e63690ef1c55d4a6d5f6c9e75d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as calling 'Reset()'. <br /></td></tr>
<tr class="separator:ab1134e63690ef1c55d4a6d5f6c9e75d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55f9018297bf5ce5a39984ee14beec9a" id="r_a55f9018297bf5ce5a39984ee14beec9a"><td class="memItemLeft" align="right" valign="top"><a id="a55f9018297bf5ce5a39984ee14beec9a" name="a55f9018297bf5ce5a39984ee14beec9a"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>Release</b> ()</td></tr>
<tr class="memdesc:a55f9018297bf5ce5a39984ee14beec9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases the managed object without destroying it. The unique ptr will be empty afterwards. <br /></td></tr>
<tr class="separator:a55f9018297bf5ce5a39984ee14beec9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1971c4e61d478d97e3fc07970b5cf958" id="r_a1971c4e61d478d97e3fc07970b5cf958"><td class="memItemLeft" align="right" valign="top"><a id="a1971c4e61d478d97e3fc07970b5cf958" name="a1971c4e61d478d97e3fc07970b5cf958"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>Release</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&amp;out_pAllocator)</td></tr>
<tr class="memdesc:a1971c4e61d478d97e3fc07970b5cf958"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases the managed object without destroying it. The unique ptr will be empty afterwards. Also returns the allocator that should be used to destroy the object. <br /></td></tr>
<tr class="separator:a1971c4e61d478d97e3fc07970b5cf958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af096cbb9be39710bd57d7810e31059b1" id="r_af096cbb9be39710bd57d7810e31059b1"><td class="memItemLeft" align="right" valign="top"><a id="af096cbb9be39710bd57d7810e31059b1" name="af096cbb9be39710bd57d7810e31059b1"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>Borrow</b> () const</td></tr>
<tr class="memdesc:af096cbb9be39710bd57d7810e31059b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Borrows the managed object. The unique ptr stays unmodified. <br /></td></tr>
<tr class="separator:af096cbb9be39710bd57d7810e31059b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a047b768f78cbf56f696b2e92b277a20a" id="r_a047b768f78cbf56f696b2e92b277a20a"><td class="memItemLeft" align="right" valign="top"><a id="a047b768f78cbf56f696b2e92b277a20a" name="a047b768f78cbf56f696b2e92b277a20a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a047b768f78cbf56f696b2e92b277a20a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the managed object and resets the unique ptr. <br /></td></tr>
<tr class="separator:a047b768f78cbf56f696b2e92b277a20a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1681212de097a2588aceedfa8296c8bf" id="r_a1681212de097a2588aceedfa8296c8bf"><td class="memItemLeft" align="right" valign="top"><a id="a1681212de097a2588aceedfa8296c8bf" name="a1681212de097a2588aceedfa8296c8bf"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> () const</td></tr>
<tr class="memdesc:a1681212de097a2588aceedfa8296c8bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:a1681212de097a2588aceedfa8296c8bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98050cc0ce056e8a2004ccf19dfd1a18" id="r_a98050cc0ce056e8a2004ccf19dfd1a18"><td class="memItemLeft" align="right" valign="top"><a id="a98050cc0ce056e8a2004ccf19dfd1a18" name="a98050cc0ce056e8a2004ccf19dfd1a18"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>operator-&gt;</b> () const</td></tr>
<tr class="memdesc:a98050cc0ce056e8a2004ccf19dfd1a18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:a98050cc0ce056e8a2004ccf19dfd1a18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39f99524536c8b6e1a2b90c9fb325e31" id="r_a39f99524536c8b6e1a2b90c9fb325e31"><td class="memItemLeft" align="right" valign="top"><a id="a39f99524536c8b6e1a2b90c9fb325e31" name="a39f99524536c8b6e1a2b90c9fb325e31"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator bool</b> () const</td></tr>
<tr class="memdesc:a39f99524536c8b6e1a2b90c9fb325e31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if there is managed object and false if the unique ptr is empty. <br /></td></tr>
<tr class="separator:a39f99524536c8b6e1a2b90c9fb325e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7fa45b0df0fe496571b6f21ec1db8b2" id="r_ac7fa45b0df0fe496571b6f21ec1db8b2"><td class="memItemLeft" align="right" valign="top"><a id="ac7fa45b0df0fe496571b6f21ec1db8b2" name="ac7fa45b0df0fe496571b6f21ec1db8b2"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ac7fa45b0df0fe496571b6f21ec1db8b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the unique ptr against another unique ptr. <br /></td></tr>
<tr class="separator:ac7fa45b0df0fe496571b6f21ec1db8b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b653282a5ef39525983aa01a7971731" id="r_a1b653282a5ef39525983aa01a7971731"><td class="memItemLeft" align="right" valign="top"><a id="a1b653282a5ef39525983aa01a7971731" name="a1b653282a5ef39525983aa01a7971731"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a1b653282a5ef39525983aa01a7971731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a261409d5128df69d878a8165d0e539dc" id="r_a261409d5128df69d878a8165d0e539dc"><td class="memItemLeft" align="right" valign="top"><a id="a261409d5128df69d878a8165d0e539dc" name="a261409d5128df69d878a8165d0e539dc"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a261409d5128df69d878a8165d0e539dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b0c9ce2a14fbb816771b25ab5e15fee" id="r_a6b0c9ce2a14fbb816771b25ab5e15fee"><td class="memItemLeft" align="right" valign="top"><a id="a6b0c9ce2a14fbb816771b25ab5e15fee" name="a6b0c9ce2a14fbb816771b25ab5e15fee"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a6b0c9ce2a14fbb816771b25ab5e15fee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae481e83d146fada12f1ede069ccb155" id="r_aae481e83d146fada12f1ede069ccb155"><td class="memItemLeft" align="right" valign="top"><a id="aae481e83d146fada12f1ede069ccb155" name="aae481e83d146fada12f1ede069ccb155"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:aae481e83d146fada12f1ede069ccb155"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abae7ccbbea3804052f94343d5a0f65e0" id="r_abae7ccbbea3804052f94343d5a0f65e0"><td class="memItemLeft" align="right" valign="top"><a id="abae7ccbbea3804052f94343d5a0f65e0" name="abae7ccbbea3804052f94343d5a0f65e0"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:abae7ccbbea3804052f94343d5a0f65e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab023f724c94c8f799c72c1e0dc230b04" id="r_ab023f724c94c8f799c72c1e0dc230b04"><td class="memItemLeft" align="right" valign="top"><a id="ab023f724c94c8f799c72c1e0dc230b04" name="ab023f724c94c8f799c72c1e0dc230b04"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (std::nullptr_t) const</td></tr>
<tr class="memdesc:ab023f724c94c8f799c72c1e0dc230b04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the unique ptr against nullptr. <br /></td></tr>
<tr class="separator:ab023f724c94c8f799c72c1e0dc230b04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74dc5e16e98ce2c70444ea1a9fe8bf36" id="r_a74dc5e16e98ce2c70444ea1a9fe8bf36"><td class="memItemLeft" align="right" valign="top"><a id="a74dc5e16e98ce2c70444ea1a9fe8bf36" name="a74dc5e16e98ce2c70444ea1a9fe8bf36"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a74dc5e16e98ce2c70444ea1a9fe8bf36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51fdd559cb479f67ccee98ecca7de678" id="r_a51fdd559cb479f67ccee98ecca7de678"><td class="memItemLeft" align="right" valign="top"><a id="a51fdd559cb479f67ccee98ecca7de678" name="a51fdd559cb479f67ccee98ecca7de678"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a51fdd559cb479f67ccee98ecca7de678"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34c04da692784c6154f2977a5f2cb4db" id="r_a34c04da692784c6154f2977a5f2cb4db"><td class="memItemLeft" align="right" valign="top"><a id="a34c04da692784c6154f2977a5f2cb4db" name="a34c04da692784c6154f2977a5f2cb4db"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a34c04da692784c6154f2977a5f2cb4db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ecfb57c0685fced5651673b84bda402" id="r_a2ecfb57c0685fced5651673b84bda402"><td class="memItemLeft" align="right" valign="top"><a id="a2ecfb57c0685fced5651673b84bda402" name="a2ecfb57c0685fced5651673b84bda402"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a2ecfb57c0685fced5651673b84bda402"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29c11b34cc552f702d94b101b8372c57" id="r_a29c11b34cc552f702d94b101b8372c57"><td class="memItemLeft" align="right" valign="top"><a id="a29c11b34cc552f702d94b101b8372c57" name="a29c11b34cc552f702d94b101b8372c57"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a29c11b34cc552f702d94b101b8372c57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fb14bb63fe941f7fe82cdf941902445" id="r_a5fb14bb63fe941f7fe82cdf941902445"><td class="memTemplParams" colspan="2"><a id="a5fb14bb63fe941f7fe82cdf941902445" name="a5fb14bb63fe941f7fe82cdf941902445"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a5fb14bb63fe941f7fe82cdf941902445"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>plUniquePtr</b> (const <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="separator:a5fb14bb63fe941f7fe82cdf941902445"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa436c5a7ad138109057572afcc12df7" id="r_afa436c5a7ad138109057572afcc12df7"><td class="memTemplParams" colspan="2"><a id="afa436c5a7ad138109057572afcc12df7" name="afa436c5a7ad138109057572afcc12df7"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:afa436c5a7ad138109057572afcc12df7"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>plUniquePtr</b> (U *pInstance, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:afa436c5a7ad138109057572afcc12df7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05825ba900e6cd2ec821a5b7b510a773" id="r_a05825ba900e6cd2ec821a5b7b510a773"><td class="memTemplParams" colspan="2"><a id="a05825ba900e6cd2ec821a5b7b510a773" name="a05825ba900e6cd2ec821a5b7b510a773"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a05825ba900e6cd2ec821a5b7b510a773"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>plUniquePtr</b> (<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a05825ba900e6cd2ec821a5b7b510a773"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a220714695ebb352089ebca3303a6159a" id="r_a220714695ebb352089ebca3303a6159a"><td class="memTemplParams" colspan="2"><a id="a220714695ebb352089ebca3303a6159a" name="a220714695ebb352089ebca3303a6159a"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a220714695ebb352089ebca3303a6159a"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="separator:a220714695ebb352089ebca3303a6159a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5c55c5c31bfbda9c2f4ecabaa910840" id="r_ac5c55c5c31bfbda9c2f4ecabaa910840"><td class="memTemplParams" colspan="2"><a id="ac5c55c5c31bfbda9c2f4ecabaa910840" name="ac5c55c5c31bfbda9c2f4ecabaa910840"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ac5c55c5c31bfbda9c2f4ecabaa910840"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:ac5c55c5c31bfbda9c2f4ecabaa910840"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename T&gt;<br />
class plUniquePtr&lt; T &gt;</div><p>A Unique ptr manages an object and destroys that object when it goes out of scope. It is ensure that only one unique ptr can manage the same object. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Types/<a class="el" href="../../d8/df6/_unique_ptr_8h_source.htm">UniquePtr.h</a></li>
<li>Code/Engine/Foundation/Types/Implementation/<a class="el" href="../../d9/d4d/_unique_ptr__inl_8h_source.htm">UniquePtr_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
