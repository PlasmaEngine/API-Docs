<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plAbstractEnumerationProperty Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/d77/classpl_abstract_enumeration_property.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d1/d3e/classpl_abstract_enumeration_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAbstractEnumerationProperty Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>The base class for enum and bitflags member properties.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d5/ddb/_enum_property_8h_source.htm">EnumProperty.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plAbstractEnumerationProperty:</div>
<div class="dyncontent">
<div class="center"><img src="../../d7/d85/classpl_abstract_enumeration_property__inherit__graph.png" border="0" usemap="#apl_abstract_enumeration_property_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_abstract_enumeration_property_inherit__map" id="apl_abstract_enumeration_property_inherit__map">
<area shape="rect" title="The base class for enum and bitflags member properties." alt="" coords="407,113,609,140"/>
<area shape="rect" href="../../d3/db5/classpl_typed_enum_property.htm" title="[internal] Base class for enum / bitflags properties that already defines the type." alt="" coords="657,105,807,148"/>
<area shape="poly" title=" " alt="" coords="625,124,657,124,657,129,625,129"/>
<area shape="rect" href="../../d3/d73/classpl_abstract_member_property.htm" title="This is the base class for all properties that are members of a class. It provides more information a..." alt="" coords="183,113,359,140"/>
<area shape="poly" title=" " alt="" coords="375,124,407,124,407,129,375,129"/>
<area shape="rect" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="5,113,135,140"/>
<area shape="poly" title=" " alt="" coords="150,124,182,124,182,129,150,129"/>
<area shape="rect" href="../../d7/d99/classpl_bitflags_accessor_property.htm" title="[internal] An implementation of plTypedEnumProperty that uses custom getter / setter functions to acc..." alt="" coords="855,5,1039,48"/>
<area shape="poly" title=" " alt="" coords="781,95,854,58,881,46,883,51,856,62,784,100"/>
<area shape="rect" href="../../d0/d00/classpl_bitflags_member_property.htm" title="[internal] An implementation of plTypedEnumProperty that accesses the bitflags property data directly..." alt="" coords="855,72,1039,115"/>
<area shape="poly" title=" " alt="" coords="821,110,854,105,854,110,822,115"/>
<area shape="rect" href="../../de/df2/classpl_enum_accessor_property.htm" title="[internal] An implementation of plTypedEnumProperty that uses custom getter / setter functions to acc..." alt="" coords="855,139,1039,181"/>
<area shape="poly" title=" " alt="" coords="822,138,854,143,854,148,821,143"/>
<area shape="rect" href="../../d5/d8f/classpl_enum_member_property.htm" title="[internal] An implementation of plTypedEnumProperty that accesses the enum property data directly." alt="" coords="855,205,1039,248"/>
<area shape="poly" title=" " alt="" coords="784,154,856,191,883,202,881,207,854,196,781,158"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5e58f6177ed0f8044e90a5fcb4563beb" id="r_a5e58f6177ed0f8044e90a5fcb4563beb"><td class="memItemLeft" align="right" valign="top"><a id="a5e58f6177ed0f8044e90a5fcb4563beb" name="a5e58f6177ed0f8044e90a5fcb4563beb"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractEnumerationProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a5e58f6177ed0f8044e90a5fcb4563beb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d3/d73/classpl_abstract_member_property.htm" title="This is the base class for all properties that are members of a class. It provides more information a...">plAbstractMemberProperty</a>. <br /></td></tr>
<tr class="separator:a5e58f6177ed0f8044e90a5fcb4563beb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a461e6a3fe012148a0b8753315973f0" id="r_a5a461e6a3fe012148a0b8753315973f0"><td class="memItemLeft" align="right" valign="top">virtual plInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5a461e6a3fe012148a0b8753315973f0">GetValue</a> (const void *pInstance) const =0</td></tr>
<tr class="memdesc:a5a461e6a3fe012148a0b8753315973f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the property. Pass the instance pointer to the surrounding class along.  <br /></td></tr>
<tr class="separator:a5a461e6a3fe012148a0b8753315973f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9991950939e934b9d163a76e8449d487" id="r_a9991950939e934b9d163a76e8449d487"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9991950939e934b9d163a76e8449d487">SetValue</a> (void *pInstance, plInt64 value) const =0</td></tr>
<tr class="memdesc:a9991950939e934b9d163a76e8449d487"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies the value of the property. Pass the instance pointer to the surrounding class along.  <br /></td></tr>
<tr class="separator:a9991950939e934b9d163a76e8449d487"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a03d86cd60a2fd6a69aa9d257051331" id="r_a6a03d86cd60a2fd6a69aa9d257051331"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6a03d86cd60a2fd6a69aa9d257051331">GetValuePtr</a> (const void *pInstance, void *pObject) const override</td></tr>
<tr class="memdesc:a6a03d86cd60a2fd6a69aa9d257051331"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of this property's type.  <br /></td></tr>
<tr class="separator:a6a03d86cd60a2fd6a69aa9d257051331"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89fff07adff33a1d9ecc32ccfbe5fdca" id="r_a89fff07adff33a1d9ecc32ccfbe5fdca"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a89fff07adff33a1d9ecc32ccfbe5fdca">SetValuePtr</a> (void *pInstance, const void *pObject) const override</td></tr>
<tr class="memdesc:a89fff07adff33a1d9ecc32ccfbe5fdca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this property's type.  <br /></td></tr>
<tr class="separator:a89fff07adff33a1d9ecc32ccfbe5fdca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_member_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_member_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a></td></tr>
<tr class="memitem:a68de7217da30c9b7065fd5f134f3c70d inherit pub_methods_classpl_abstract_member_property" id="r_a68de7217da30c9b7065fd5f134f3c70d"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractMemberProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a68de7217da30c9b7065fd5f134f3c70d inherit pub_methods_classpl_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">plAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a68de7217da30c9b7065fd5f134f3c70d inherit pub_methods_classpl_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0854e27c63959a2f18d7afa910d84ee6 inherit pub_methods_classpl_abstract_member_property" id="r_a0854e27c63959a2f18d7afa910d84ee6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d73/classpl_abstract_member_property.htm#a0854e27c63959a2f18d7afa910d84ee6">GetCategory</a> () const override</td></tr>
<tr class="memdesc:a0854e27c63959a2f18d7afa910d84ee6 inherit pub_methods_classpl_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7a093f40bc5632091e5588feee46489b8b" title="The property is a &#39;member property&#39;, i.e. it represents some accessible value. Cast to plAbstractMemb...">plPropertyCategory::Member</a>.  <br /></td></tr>
<tr class="separator:a0854e27c63959a2f18d7afa910d84ee6 inherit pub_methods_classpl_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06cbb9f12610e4b706260f3323b106d2 inherit pub_methods_classpl_abstract_member_property" id="r_a06cbb9f12610e4b706260f3323b106d2"><td class="memItemLeft" align="right" valign="top">virtual void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d73/classpl_abstract_member_property.htm#a06cbb9f12610e4b706260f3323b106d2">GetPropertyPointer</a> (const void *pInstance) const =0</td></tr>
<tr class="memdesc:a06cbb9f12610e4b706260f3323b106d2 inherit pub_methods_classpl_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the property data or nullptr. If a valid pointer is returned, that pointer and the information from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm#acbd1806e4b123998797a4c080ad9fbb1" title="Returns the type information of the constant property. Use this to cast this property to a specific v...">GetSpecificType()</a> can be used to step deeper into the type (if required).  <br /></td></tr>
<tr class="separator:a06cbb9f12610e4b706260f3323b106d2 inherit pub_methods_classpl_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property" id="r_a8ae8dcf20f01b0926e321d68fd38d243"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property" id="r_ab192fac6724fcbd56a160013230bad0b"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbd1806e4b123998797a4c080ad9fbb1 inherit pub_methods_classpl_abstract_property" id="r_acbd1806e4b123998797a4c080ad9fbb1"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dd7/classpl_abstract_property.htm#acbd1806e4b123998797a4c080ad9fbb1">GetSpecificType</a> () const =0</td></tr>
<tr class="memdesc:acbd1806e4b123998797a4c080ad9fbb1 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dd/d62/classpl_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">plTypedConstantProperty</a>.  <br /></td></tr>
<tr class="separator:acbd1806e4b123998797a4c080ad9fbb1 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property" id="r_a988149e0184a527d89a6fc7b529aa6fc"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property" id="r_a1a7c0de0ecff4c5ab4a37987f9780a64"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property" id="r_a249245c8d8a5bd14d12b7b72920b4d5e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property" id="r_aa28f7ffab1bd6667a67f94a351e618ba"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property" id="r_a74666a9b6312d9e8a0208ff67ec56a7d"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property" id="r_a5226bc2ced2436f3aeaf96fadea40f70"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property" id="r_a135a819e72ea2827916acdefd2fb6848"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property" id="r_aaf46ae0b97785db5048abb483c603cea"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *, 2, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The base class for enum and bitflags member properties. </p>
<p>Cast any property whose type derives from <a class="el" href="../../df/d8e/classpl_enum_base.htm" title="Dummy type to pass to templates and macros that expect a base type for an enum class.">plEnumBase</a> or <a class="el" href="../../dd/d08/classpl_bitflags_base.htm" title="Dummy type to pass to templates and macros that expect a base type for an bitflags class.">plBitflagsBase</a> class to access its value. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a5a461e6a3fe012148a0b8753315973f0" name="a5a461e6a3fe012148a0b8753315973f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5a461e6a3fe012148a0b8753315973f0">&#9670;&#160;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual plInt64 plAbstractEnumerationProperty::GetValue </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value of the property. Pass the instance pointer to the surrounding class along. </p>

<p>Implemented in <a class="el" href="../../d7/d99/classpl_bitflags_accessor_property.htm#a6eb04ecebce5540679d1a6bd8c4565a3">plBitflagsAccessorProperty&lt; Class, EnumType, Type &gt;</a>, <a class="el" href="../../d0/d00/classpl_bitflags_member_property.htm#a3e755d3093f39aaabef669db3b3ade39">plBitflagsMemberProperty&lt; Class, EnumType, Type &gt;</a>, <a class="el" href="../../de/df2/classpl_enum_accessor_property.htm#a780d2f33a5045495db5ffffbaa7ec354">plEnumAccessorProperty&lt; Class, EnumType, Type &gt;</a>, and <a class="el" href="../../d5/d8f/classpl_enum_member_property.htm#afafe5454859951ecb0f7ba411731ce39">plEnumMemberProperty&lt; Class, EnumType, Type &gt;</a>.</p>

</div>
</div>
<a id="a6a03d86cd60a2fd6a69aa9d257051331" name="a6a03d86cd60a2fd6a69aa9d257051331"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a03d86cd60a2fd6a69aa9d257051331">&#9670;&#160;</a></span>GetValuePtr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAbstractEnumerationProperty::GetValuePtr </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>out_pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of this property's type. </p>

<p>Implements <a class="el" href="../../d3/d73/classpl_abstract_member_property.htm#a2c6c0b191082d5257ee0ed8c0d2bc707">plAbstractMemberProperty</a>.</p>

</div>
</div>
<a id="a9991950939e934b9d163a76e8449d487" name="a9991950939e934b9d163a76e8449d487"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9991950939e934b9d163a76e8449d487">&#9670;&#160;</a></span>SetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAbstractEnumerationProperty::SetValue </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plInt64</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Modifies the value of the property. Pass the instance pointer to the surrounding class along. </p>
<dl class="section note"><dt>Note</dt><dd>Make sure the property is not read-only before calling this, otherwise an assert will fire. </dd></dl>

<p>Implemented in <a class="el" href="../../d7/d99/classpl_bitflags_accessor_property.htm#a160cd1351fbd91e5dc1e00c0c40034d0">plBitflagsAccessorProperty&lt; Class, EnumType, Type &gt;</a>, <a class="el" href="../../d0/d00/classpl_bitflags_member_property.htm#a66546f4bfe19796e8b3d6089caf3a1c1">plBitflagsMemberProperty&lt; Class, EnumType, Type &gt;</a>, <a class="el" href="../../de/df2/classpl_enum_accessor_property.htm#aa62654137eda8988f3bce51a390f7277">plEnumAccessorProperty&lt; Class, EnumType, Type &gt;</a>, and <a class="el" href="../../d5/d8f/classpl_enum_member_property.htm#a1f126b4167abfb114d825f00cac5b91f">plEnumMemberProperty&lt; Class, EnumType, Type &gt;</a>.</p>

</div>
</div>
<a id="a89fff07adff33a1d9ecc32ccfbe5fdca" name="a89fff07adff33a1d9ecc32ccfbe5fdca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a89fff07adff33a1d9ecc32ccfbe5fdca">&#9670;&#160;</a></span>SetValuePtr()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAbstractEnumerationProperty::SetValuePtr </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this property's type. </p>

<p>Implements <a class="el" href="../../d3/d73/classpl_abstract_member_property.htm#a33bb83d97d030d538ee8fb911aed9c8f">plAbstractMemberProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../d5/ddb/_enum_property_8h_source.htm">EnumProperty.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../df/d77/classpl_abstract_enumeration_property.htm">plAbstractEnumerationProperty</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
