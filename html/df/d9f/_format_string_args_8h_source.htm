<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/Strings/Implementation/FormatStringArgs.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/d9f/_format_string_args_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">FormatStringArgs.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#ifndef PL_INCLUDING_BASICS_H</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#  error &quot;Please don&#39;t include FormatStringArgs.h directly, but instead include Foundation/Basics.h&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">class </span><a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">class </span><a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>;</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">class </span><a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a>;</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">class </span><a class="code hl_class" href="../../d7/ddb/classpl_rational.htm">plRational</a>;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>;</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="};">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../d9/df1/structpl_arg_i.htm">   13</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d9/df1/structpl_arg_i.htm">plArgI</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../d9/df1/structpl_arg_i.htm">plArgI</a>(plInt64 value, plUInt8 uiWidth = 1, <span class="keywordtype">bool</span> bPadWithZeros = <span class="keyword">false</span>, plUInt8 uiBase = 10)</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>    : m_Value(value)</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    , m_uiWidth(uiWidth)</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    , m_bPadWithZeros(bPadWithZeros)</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    , m_uiBase(uiBase)</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  {</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  }</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  plInt64 m_Value;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  plUInt8 m_uiWidth;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <span class="keywordtype">bool</span> m_bPadWithZeros;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  plUInt8 m_uiBase;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>};</div>
</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="foldopen" id="foldopen00029" data-start="{" data-end="};">
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="../../d8/d3d/structpl_arg_u.htm">   29</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d8/d3d/structpl_arg_u.htm">plArgU</a></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>{</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../d8/d3d/structpl_arg_u.htm">plArgU</a>(plUInt64 value, plUInt8 uiWidth = 1, <span class="keywordtype">bool</span> bPadWithZeros = <span class="keyword">false</span>, plUInt8 uiBase = 10, <span class="keywordtype">bool</span> bUpperCase = <span class="keyword">false</span>)</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    : m_Value(value)</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    , m_uiWidth(uiWidth)</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    , m_bPadWithZeros(bPadWithZeros)</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    , m_bUpperCase(bUpperCase)</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    , m_uiBase(uiBase)</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  {</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  }</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  plUInt64 m_Value;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  plUInt8 m_uiWidth;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keywordtype">bool</span> m_bPadWithZeros;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <span class="keywordtype">bool</span> m_bUpperCase;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  plUInt8 m_uiBase;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>};</div>
</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="foldopen" id="foldopen00047" data-start="{" data-end="};">
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="../../d7/d1f/structpl_arg_f.htm">   47</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d7/d1f/structpl_arg_f.htm">plArgF</a></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>{</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../d7/d1f/structpl_arg_f.htm">plArgF</a>(<span class="keywordtype">double</span> value, plInt8 iPrecision = -1, <span class="keywordtype">bool</span> bScientific = <span class="keyword">false</span>, plUInt8 uiWidth = 1, <span class="keywordtype">bool</span> bPadWithZeros = <span class="keyword">false</span>)</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    : m_Value(value)</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    , m_uiWidth(uiWidth)</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    , m_bPadWithZeros(bPadWithZeros)</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    , m_bScientific(bScientific)</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    , m_iPrecision(iPrecision)</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  }</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <span class="keywordtype">double</span> m_Value;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  plUInt8 m_uiWidth;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="keywordtype">bool</span> m_bPadWithZeros;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="keywordtype">bool</span> m_bScientific;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  plInt8 m_iPrecision;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>};</div>
</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="foldopen" id="foldopen00065" data-start="{" data-end="};">
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="../../dd/d39/structpl_arg_c.htm">   65</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dd/d39/structpl_arg_c.htm">plArgC</a></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>{</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../dd/d39/structpl_arg_c.htm">plArgC</a>(<span class="keywordtype">char</span> value)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    : m_Value(value)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  }</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keywordtype">char</span> m_Value;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>};</div>
</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="foldopen" id="foldopen00075" data-start="{" data-end="};">
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno"><a class="line" href="../../dc/d2d/structpl_arg_p.htm">   75</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d2d/structpl_arg_p.htm">plArgP</a></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>{</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../dc/d2d/structpl_arg_p.htm">plArgP</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* value)</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    : m_Value(value)</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  {</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  }</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keyword">const</span> <span class="keywordtype">void</span>* m_Value;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>};</div>
</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="foldopen" id="foldopen00094" data-start="{" data-end="};">
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="../../df/daf/structpl_arg_human_readable.htm">   94</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>{</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keyword">inline</span> <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>(<span class="keyword">const</span> <span class="keywordtype">double</span> value, <span class="keyword">const</span> plUInt64 uiBase, <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span>* <span class="keyword">const</span> pSuffixes, plUInt32 uiSuffixCount)</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    : m_Value(value)</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    , m_Base(uiBase)</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    , m_Suffixes(pSuffixes)</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    , m_SuffixCount(uiSuffixCount)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  {</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  }</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keyword">inline</span> <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>(<span class="keyword">const</span> plInt64 value, <span class="keyword">const</span> plUInt64 uiBase, <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span>* <span class="keyword">const</span> pSuffixes, plUInt32 uiSuffixCount)</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    : <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(value), uiBase, pSuffixes, uiSuffixCount)</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  {</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  }</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>(<span class="keyword">const</span> <span class="keywordtype">double</span> value)</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    : <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>(value, 1000u, m_DefaultSuffixes, PL_ARRAY_SIZE(m_DefaultSuffixes))</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  {</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  }</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>(<span class="keyword">const</span> plInt64 value)</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    : <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(value), 1000u, m_DefaultSuffixes, PL_ARRAY_SIZE(m_DefaultSuffixes))</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  {</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  }</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="keyword">const</span> <span class="keywordtype">double</span> m_Value;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  <span class="keyword">const</span> plUInt64 m_Base;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span>* <span class="keyword">const</span> m_Suffixes;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> m_DefaultSuffixes[6] = {<span class="stringliteral">&quot;&quot;</span>, <span class="stringliteral">&quot;K&quot;</span>, <span class="stringliteral">&quot;M&quot;</span>, <span class="stringliteral">&quot;G&quot;</span>, <span class="stringliteral">&quot;T&quot;</span>, <span class="stringliteral">&quot;P&quot;</span>};</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  <span class="keyword">const</span> plUInt32 m_SuffixCount;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>};</div>
</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="foldopen" id="foldopen00126" data-start="{" data-end="};">
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="../../df/dca/structpl_arg_file_size.htm">  126</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../df/dca/structpl_arg_file_size.htm">plArgFileSize</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>{</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../df/dca/structpl_arg_file_size.htm">plArgFileSize</a>(<span class="keyword">const</span> plUInt64 value)</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>    : <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">double</span><span class="keyword">&gt;</span>(value), 1024u, m_ByteSuffixes, PL_ARRAY_SIZE(m_ByteSuffixes))</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  {</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  }</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* <span class="keyword">const</span> m_ByteSuffixes[6] = {<span class="stringliteral">&quot;B&quot;</span>, <span class="stringliteral">&quot;KB&quot;</span>, <span class="stringliteral">&quot;MB&quot;</span>, <span class="stringliteral">&quot;GB&quot;</span>, <span class="stringliteral">&quot;TB&quot;</span>, <span class="stringliteral">&quot;PB&quot;</span>};</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>};</div>
</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="foldopen" id="foldopen00139" data-start="{" data-end="};">
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno"><a class="line" href="../../df/d37/structpl_arg_error_code.htm">  139</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../df/d37/structpl_arg_error_code.htm">plArgErrorCode</a></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>{</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../df/d37/structpl_arg_error_code.htm">plArgErrorCode</a>(plUInt32 uiErrorCode)</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    : m_ErrorCode(uiErrorCode)</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  {</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  }</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  plUInt32 m_ErrorCode;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>};</div>
</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../df/d37/structpl_arg_error_code.htm">plArgErrorCode</a>&amp; arg);</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="preprocessor">#if PL_ENABLED(PL_PLATFORM_LINUX) || PL_ENABLED(PL_PLATFORM_ANDROID)</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span><span class="keyword">struct </span>plArgErrno</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>{</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> plArgErrno(plInt32 iErrno)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    : m_iErrno(iErrno)</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  {</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  }</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  plInt32 m_iErrno;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>};</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> plArgErrno&amp; arg);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="foldopen" id="foldopen00176" data-start="{" data-end="};">
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno"><a class="line" href="../../d7/de2/structpl_arg_sensitive.htm">  176</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d7/de2/structpl_arg_sensitive.htm">plArgSensitive</a></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>{</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  <span class="keyword">inline</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../d7/de2/structpl_arg_sensitive.htm">plArgSensitive</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&amp; sSensitiveInfo, <span class="keyword">const</span> <span class="keywordtype">char</span>* szContext = <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>    : m_sSensitiveInfo(sSensitiveInfo)</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>    , m_szContext(szContext)</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  {</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  }</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> m_sSensitiveInfo;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_szContext;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keyword">using </span>BuildStringCallback = <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> (*)(<span class="keywordtype">char</span>*, plUInt32, <span class="keyword">const</span> <a class="code hl_struct" href="../../d7/de2/structpl_arg_sensitive.htm">plArgSensitive</a>&amp;);</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  PL_FOUNDATION_DLL <span class="keyword">static</span> BuildStringCallback s_BuildStringCB;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  PL_FOUNDATION_DLL <span class="keyword">static</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> <a class="code hl_function" href="../../d7/de2/structpl_arg_sensitive.htm#ac9a5ccb3826fb8c8cf4459ba464685f9">BuildString_SensitiveUserData_Hash</a>(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../d7/de2/structpl_arg_sensitive.htm">plArgSensitive</a>&amp; arg);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>};</div>
</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../d9/df1/structpl_arg_i.htm">plArgI</a>&amp; arg);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, plInt64 iArg);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, plInt32 iArg);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../d8/d3d/structpl_arg_u.htm">plArgU</a>&amp; arg);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, plUInt64 uiArg);</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, plUInt32 uiArg);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../d7/d1f/structpl_arg_f.htm">plArgF</a>&amp; arg);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keywordtype">double</span> fArg);</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keywordtype">bool</span> bArg);</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <span class="keywordtype">char</span>* szArg);</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pArg);</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp; sArg);</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>PL_FOUNDATION_DLL <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&amp; BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&amp; sArg);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../dd/d39/structpl_arg_c.htm">plArgC</a>&amp; arg);</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../dc/d2d/structpl_arg_p.htm">plArgP</a>&amp; arg);</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> arg);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; arg);</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&amp; arg);</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_class" href="../../d7/ddb/classpl_rational.htm">plRational</a>&amp; arg);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a>&amp; arg);</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; arg);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keyword">const</span> <a class="code hl_struct" href="../../d7/de2/structpl_arg_sensitive.htm">plArgSensitive</a>&amp; arg);</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span> </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_GCC) || PL_ENABLED(PL_COMPILER_CLANG)</span></div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span><span class="comment">// on these platforms &quot;long int&quot; is a different type from &quot;long long int&quot;</span></div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keywordtype">long</span> <span class="keywordtype">int</span> iArg)</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>{</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  <span class="keywordflow">return</span> BuildString(szTmp, uiLength, <span class="keyword">static_cast&lt;</span>plInt64<span class="keyword">&gt;</span>(iArg));</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>}</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> BuildString(<span class="keywordtype">char</span>* szTmp, plUInt32 uiLength, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">int</span> uiArg)</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>{</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  <span class="keywordflow">return</span> BuildString(szTmp, uiLength, <span class="keyword">static_cast&lt;</span>plUInt64<span class="keyword">&gt;</span>(uiArg));</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>}</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span><span class="preprocessor">#endif</span></div>
<div class="ttc" id="aclasspl_angle_htm"><div class="ttname"><a href="../../d4/dfd/classpl_angle.htm">plAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition</b> Angle.h:10</div></div>
<div class="ttc" id="aclasspl_rational_htm"><div class="ttname"><a href="../../d7/ddb/classpl_rational.htm">plRational</a></div><div class="ttdoc">A class which can be used to represent rational numbers by stating their numerator and denominator.</div><div class="ttdef"><b>Definition</b> Rational.h:13</div></div>
<div class="ttc" id="aclasspl_string_builder_htm"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></div><div class="ttdoc">plStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_variant_htm"><div class="ttname"><a href="../../da/d4c/classpl_variant.htm">plVariant</a></div><div class="ttdoc">plVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="astructpl_arg_c_htm"><div class="ttname"><a href="../../dd/d39/structpl_arg_c.htm">plArgC</a></div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:66</div></div>
<div class="ttc" id="astructpl_arg_error_code_htm"><div class="ttname"><a href="../../df/d37/structpl_arg_error_code.htm">plArgErrorCode</a></div><div class="ttdoc">Converts a windows HRESULT into an error code and a human-readable error message. Pass in GetLastErro...</div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:140</div></div>
<div class="ttc" id="astructpl_arg_f_htm"><div class="ttname"><a href="../../d7/d1f/structpl_arg_f.htm">plArgF</a></div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:48</div></div>
<div class="ttc" id="astructpl_arg_file_size_htm"><div class="ttname"><a href="../../df/dca/structpl_arg_file_size.htm">plArgFileSize</a></div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:127</div></div>
<div class="ttc" id="astructpl_arg_human_readable_htm"><div class="ttname"><a href="../../df/daf/structpl_arg_human_readable.htm">plArgHumanReadable</a></div><div class="ttdoc">Formats a given number such that it will be in format [0, base){suffix} with suffix representing a po...</div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:95</div></div>
<div class="ttc" id="astructpl_arg_i_htm"><div class="ttname"><a href="../../d9/df1/structpl_arg_i.htm">plArgI</a></div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:14</div></div>
<div class="ttc" id="astructpl_arg_p_htm"><div class="ttname"><a href="../../dc/d2d/structpl_arg_p.htm">plArgP</a></div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:76</div></div>
<div class="ttc" id="astructpl_arg_sensitive_htm"><div class="ttname"><a href="../../d7/de2/structpl_arg_sensitive.htm">plArgSensitive</a></div><div class="ttdoc">Wraps a string that may contain sensitive information, such as user file paths.</div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:177</div></div>
<div class="ttc" id="astructpl_arg_sensitive_htm_ac9a5ccb3826fb8c8cf4459ba464685f9"><div class="ttname"><a href="../../d7/de2/structpl_arg_sensitive.htm#ac9a5ccb3826fb8c8cf4459ba464685f9">plArgSensitive::BuildString_SensitiveUserData_Hash</a></div><div class="ttdeci">static PL_FOUNDATION_DLL plStringView BuildString_SensitiveUserData_Hash(char *szTmp, plUInt32 uiLength, const plArgSensitive &amp;arg)</div><div class="ttdoc">Set s_BuildStringCB to this function to enable scrambling of sensitive data.</div><div class="ttdef"><b>Definition</b> FormatString.cpp:368</div></div>
<div class="ttc" id="astructpl_arg_u_htm"><div class="ttname"><a href="../../d8/d3d/structpl_arg_u.htm">plArgU</a></div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:30</div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructpl_time_htm"><div class="ttname"><a href="../../d1/df6/structpl_time.htm">plTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition</b> Time.h:12</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_93f3a51c0220f51fc2c286c08d531e1e.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_fec2b21556ce2cf7e27237dfb4edc8a6.htm">Implementation</a></li><li class="navelem"><b>FormatStringArgs.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
