<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/EnginePlugins/OpenXRPlugin/OpenXRInputDevice.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/d34/_open_x_r_input_device_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">OpenXRInputDevice.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;OpenXRPlugin/Basics.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;OpenXRPlugin/OpenXRIncludes.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;GameEngine/XR/XRInputDevice.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;GameEngine/XR/XRInterface.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">class </span><a class="code hl_class" href="../../dd/df3/classpl_open_x_r.htm">plOpenXR</a>;</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>PL_DEFINE_AS_POD_TYPE(XrActionSuggestedBinding);</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>PL_DEFINE_AS_POD_TYPE(XrActiveActionSet);</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="foldopen" id="foldopen00014" data-start="{" data-end="};">
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno"><a class="line" href="../../dc/dd5/classpl_open_x_r_input_device.htm">   14</a></span><span class="keyword">class </span>PL_OPENXRPLUGIN_DLL <a class="code hl_class" href="../../dc/dd5/classpl_open_x_r_input_device.htm">plOpenXRInputDevice</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d3/d9b/classpl_x_r_input_device.htm">plXRInputDevice</a></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>{</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  PL_ADD_DYNAMIC_REFLECTION(<a class="code hl_class" href="../../dc/dd5/classpl_open_x_r_input_device.htm">plOpenXRInputDevice</a>, <a class="code hl_class" href="../../d3/d9b/classpl_x_r_input_device.htm">plXRInputDevice</a>);</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d9b/classpl_x_r_input_device.htm#a3cf383e9ffe2271fdc5a01e871d2e3a5">GetDeviceList</a>(<a class="code hl_class" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray&lt;plXRDeviceID, 64&gt;</a>&amp; out_devices) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  plXRDeviceID <a class="code hl_function" href="../../d3/d9b/classpl_x_r_input_device.htm#aef39d1994950b3982b0e5f82f2a3478f">GetDeviceIDByType</a>(plXRDeviceType::Enum type) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="keyword">const</span> <a class="code hl_struct" href="../../d8/dbe/structpl_x_r_device_state.htm">plXRDeviceState</a>&amp; <a class="code hl_function" href="../../d3/d9b/classpl_x_r_input_device.htm#ad385b4d7d5a33d2ae6d26f345c0329c7">GetDeviceState</a>(plXRDeviceID deviceID) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> <a class="code hl_function" href="../../d3/d9b/classpl_x_r_input_device.htm#a5698519881751f1581d93470653ddb4c">GetDeviceName</a>(plXRDeviceID deviceID) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <a class="code hl_struct" href="../../df/dd9/structpl_bitflags.htm">plBitflags&lt;plXRDeviceFeatures&gt;</a> <a class="code hl_function" href="../../d3/d9b/classpl_x_r_input_device.htm#ade0d5e85cae5a661203158297c76c373">GetDeviceFeatures</a>(plXRDeviceID deviceID) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../dd/df3/classpl_open_x_r.htm">plOpenXR</a>;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <span class="keyword">struct </span>Bind</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  {</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    XrAction action;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    <span class="keyword">const</span> <span class="keywordtype">char</span>* szPath;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  };</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="keyword">struct </span>Action</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  {</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <a class="code hl_enumeration" href="../../df/df4/structpl_x_r_device_features.htm#a3d438fe3bffb638cc9aa4c515ec46b9e">plXRDeviceFeatures::Enum</a> m_Feature;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    XrAction m_Action;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sKey[2];</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  };</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keyword">struct </span>Vec2Action</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  {</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    Vec2Action(<a class="code hl_enumeration" href="../../df/df4/structpl_x_r_device_features.htm#a3d438fe3bffb638cc9aa4c515ec46b9e">plXRDeviceFeatures::Enum</a> feature, XrAction pAction, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sLeft, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sRight);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <a class="code hl_enumeration" href="../../df/df4/structpl_x_r_device_features.htm#a3d438fe3bffb638cc9aa4c515ec46b9e">plXRDeviceFeatures::Enum</a> m_Feature;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    XrAction m_Action;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sKey_negx[2];</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sKey_posx[2];</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sKey_negy[2];</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sKey_posy[2];</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  };</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <a class="code hl_class" href="../../dc/dd5/classpl_open_x_r_input_device.htm">plOpenXRInputDevice</a>(<a class="code hl_class" href="../../dd/df3/classpl_open_x_r.htm">plOpenXR</a>* pOpenXR);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  XrResult CreateActions(XrSession session, XrSpace m_sceneSpace);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keywordtype">void</span> DestroyActions();</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  XrPath CreatePath(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPath);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  XrResult CreateAction(<a class="code hl_enumeration" href="../../df/df4/structpl_x_r_device_features.htm#a3d438fe3bffb638cc9aa4c515ec46b9e">plXRDeviceFeatures::Enum</a> feature, <span class="keyword">const</span> <span class="keywordtype">char</span>* actionName, XrActionType actionType, XrAction&amp; out_action);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  XrResult SuggestInteractionProfileBindings(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInteractionProfile, <span class="keyword">const</span> <span class="keywordtype">char</span>* szNiceName, <a class="code hl_class" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt;Bind&gt;</a> bindings);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  XrResult AttachSessionActionSets(XrSession session);</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  XrResult UpdateCurrentInteractionProfile();</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d8/d58/classpl_input_device.htm#ae979467dda16cc0b8d3f557dac50c3a2">InitializeDevice</a>() <span class="keyword">override</span>;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d8/d58/classpl_input_device.htm#affc9a06096720f741b0a347003de785c">RegisterInputSlots</a>() <span class="keyword">override</span>;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="../../dc/dd5/classpl_open_x_r_input_device.htm#a59cb42fa9d2d46cef06ae3d1dc5523a1">   63</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/dd5/classpl_open_x_r_input_device.htm#a59cb42fa9d2d46cef06ae3d1dc5523a1">UpdateInputSlotValues</a>()<span class="keyword"> override </span>{}</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  XrResult UpdateActions();</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keywordtype">void</span> UpdateControllerState();</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <a class="code hl_class" href="../../dd/df3/classpl_open_x_r.htm">plOpenXR</a>* m_pOpenXR = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  XrInstance m_pInstance = XR_NULL_HANDLE;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  XrSession m_pSession = XR_NULL_HANDLE;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <a class="code hl_struct" href="../../d8/dbe/structpl_x_r_device_state.htm">plXRDeviceState</a> m_DeviceState[3]; <span class="comment">// Hard-coded for now</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sActiveProfile[3];</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <a class="code hl_struct" href="../../df/dd9/structpl_bitflags.htm">plBitflags&lt;plXRDeviceFeatures&gt;</a> m_SupportedFeatures[3];</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keyword">const</span> plInt8 m_iLeftControllerDeviceID = 1;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keyword">const</span> plInt8 m_iRightControllerDeviceID = 2;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  XrActionSet m_pActionSet = XR_NULL_HANDLE;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <a class="code hl_class" href="../../dd/d55/classpl_hash_table.htm">plHashTable&lt;XrPath, plString&gt;</a> m_InteractionProfileToNiceName;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <a class="code hl_class" href="../../d1/d67/classpl_static_array.htm">plStaticArray&lt;const char*, 2&gt;</a> m_SubActionPrefix;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <a class="code hl_class" href="../../d1/d67/classpl_static_array.htm">plStaticArray&lt;XrPath, 2&gt;</a> m_SubActionPath;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <a class="code hl_class" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray&lt;Action, 4&gt;</a> m_BooleanActions;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <a class="code hl_class" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray&lt;Action, 4&gt;</a> m_FloatActions;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <a class="code hl_class" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray&lt;Vec2Action, 4&gt;</a> m_Vec2Actions;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <a class="code hl_class" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray&lt;Action, 4&gt;</a> m_PoseActions;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  XrSpace m_gripSpace[2];</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  XrSpace m_aimSpace[2];</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>};</div>
</div>
<div class="ttc" id="aclasspl_array_ptr_htm"><div class="ttname"><a href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="aclasspl_hash_table_htm"><div class="ttname"><a href="../../dd/d55/classpl_hash_table.htm">plHashTable</a></div><div class="ttdef"><b>Definition</b> HashTable.h:333</div></div>
<div class="ttc" id="aclasspl_hybrid_array_htm"><div class="ttname"><a href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclasspl_input_device_htm_ae979467dda16cc0b8d3f557dac50c3a2"><div class="ttname"><a href="../../d8/d58/classpl_input_device.htm#ae979467dda16cc0b8d3f557dac50c3a2">plInputDevice::InitializeDevice</a></div><div class="ttdeci">virtual void InitializeDevice()=0</div><div class="ttdoc">Override this if you need to do device specific initialization before the first use.</div></div>
<div class="ttc" id="aclasspl_input_device_htm_affc9a06096720f741b0a347003de785c"><div class="ttname"><a href="../../d8/d58/classpl_input_device.htm#affc9a06096720f741b0a347003de785c">plInputDevice::RegisterInputSlots</a></div><div class="ttdeci">virtual void RegisterInputSlots()=0</div><div class="ttdoc">Override this to register all the input slots that this device exposes.</div></div>
<div class="ttc" id="aclasspl_open_x_r_htm"><div class="ttname"><a href="../../dd/df3/classpl_open_x_r.htm">plOpenXR</a></div><div class="ttdef"><b>Definition</b> OpenXRSingleton.h:25</div></div>
<div class="ttc" id="aclasspl_open_x_r_input_device_htm"><div class="ttname"><a href="../../dc/dd5/classpl_open_x_r_input_device.htm">plOpenXRInputDevice</a></div><div class="ttdef"><b>Definition</b> OpenXRInputDevice.h:15</div></div>
<div class="ttc" id="aclasspl_open_x_r_input_device_htm_a59cb42fa9d2d46cef06ae3d1dc5523a1"><div class="ttname"><a href="../../dc/dd5/classpl_open_x_r_input_device.htm#a59cb42fa9d2d46cef06ae3d1dc5523a1">plOpenXRInputDevice::UpdateInputSlotValues</a></div><div class="ttdeci">void UpdateInputSlotValues() override</div><div class="ttdoc">Override this, if you need to query the state of the hardware to update the input slots.</div><div class="ttdef"><b>Definition</b> OpenXRInputDevice.h:63</div></div>
<div class="ttc" id="aclasspl_static_array_htm"><div class="ttname"><a href="../../d1/d67/classpl_static_array.htm">plStaticArray</a></div><div class="ttdoc">Wraps a C-style array, which has a fixed size at compile-time, with a more convenient interface.</div><div class="ttdef"><b>Definition</b> StaticArray.h:13</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_x_r_input_device_htm"><div class="ttname"><a href="../../d3/d9b/classpl_x_r_input_device.htm">plXRInputDevice</a></div><div class="ttdef"><b>Definition</b> XRInputDevice.h:49</div></div>
<div class="ttc" id="aclasspl_x_r_input_device_htm_a3cf383e9ffe2271fdc5a01e871d2e3a5"><div class="ttname"><a href="../../d3/d9b/classpl_x_r_input_device.htm#a3cf383e9ffe2271fdc5a01e871d2e3a5">plXRInputDevice::GetDeviceList</a></div><div class="ttdeci">virtual void GetDeviceList(plHybridArray&lt; plXRDeviceID, 64 &gt; &amp;out_devices) const =0</div><div class="ttdoc">Fills out a list of valid (connected) device IDs.</div></div>
<div class="ttc" id="aclasspl_x_r_input_device_htm_a5698519881751f1581d93470653ddb4c"><div class="ttname"><a href="../../d3/d9b/classpl_x_r_input_device.htm#a5698519881751f1581d93470653ddb4c">plXRInputDevice::GetDeviceName</a></div><div class="ttdeci">virtual plString GetDeviceName(plXRDeviceID deviceID) const =0</div><div class="ttdoc">Returns the device name for a valid device ID.</div></div>
<div class="ttc" id="aclasspl_x_r_input_device_htm_ad385b4d7d5a33d2ae6d26f345c0329c7"><div class="ttname"><a href="../../d3/d9b/classpl_x_r_input_device.htm#ad385b4d7d5a33d2ae6d26f345c0329c7">plXRInputDevice::GetDeviceState</a></div><div class="ttdeci">virtual const plXRDeviceState &amp; GetDeviceState(plXRDeviceID deviceID) const =0</div><div class="ttdoc">Returns the current device state for a valid device ID.</div></div>
<div class="ttc" id="aclasspl_x_r_input_device_htm_ade0d5e85cae5a661203158297c76c373"><div class="ttname"><a href="../../d3/d9b/classpl_x_r_input_device.htm#ade0d5e85cae5a661203158297c76c373">plXRInputDevice::GetDeviceFeatures</a></div><div class="ttdeci">virtual plBitflags&lt; plXRDeviceFeatures &gt; GetDeviceFeatures(plXRDeviceID deviceID) const =0</div><div class="ttdoc">Returns the device features for a valid device ID.</div></div>
<div class="ttc" id="aclasspl_x_r_input_device_htm_aef39d1994950b3982b0e5f82f2a3478f"><div class="ttname"><a href="../../d3/d9b/classpl_x_r_input_device.htm#aef39d1994950b3982b0e5f82f2a3478f">plXRInputDevice::GetDeviceIDByType</a></div><div class="ttdeci">virtual plXRDeviceID GetDeviceIDByType(plXRDeviceType::Enum type) const =0</div><div class="ttdoc">Returns the deviceID for a specific type of device. If the device is not connected,...</div></div>
<div class="ttc" id="astructpl_bitflags_htm"><div class="ttname"><a href="../../df/dd9/structpl_bitflags.htm">plBitflags</a></div><div class="ttdoc">The plBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition</b> Bitflags.h:82</div></div>
<div class="ttc" id="astructpl_hybrid_string_htm"><div class="ttname"><a href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt; 32, plDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructpl_x_r_device_features_htm_a3d438fe3bffb638cc9aa4c515ec46b9e"><div class="ttname"><a href="../../df/df4/structpl_x_r_device_features.htm#a3d438fe3bffb638cc9aa4c515ec46b9e">plXRDeviceFeatures::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> Declarations.h:100</div></div>
<div class="ttc" id="astructpl_x_r_device_state_htm"><div class="ttname"><a href="../../d8/dbe/structpl_x_r_device_state.htm">plXRDeviceState</a></div><div class="ttdoc">A device's pose state.</div><div class="ttdef"><b>Definition</b> Declarations.h:80</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_459df76271ee35b1efacabeb533de483.htm">EnginePlugins</a></li><li class="navelem"><a class="el" href="../../dir_6e5bcb2b86946c7371237e5a7fc24467.htm">OpenXRPlugin</a></li><li class="navelem"><b>OpenXRInputDevice.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
