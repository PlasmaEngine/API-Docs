<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plRectTemplate&lt; Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/dd8/classpl_rect_template.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../dd/d2c/classpl_rect_template-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plRectTemplate&lt; Type &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A simple rectangle class templated on the type for x, y and width, height.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d27/_rect_8h_source.htm">Rect.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad920030f51cded5215b520c5bca2cfdc" id="r_ad920030f51cded5215b520c5bca2cfdc"><td class="memItemLeft" align="right" valign="top"><a id="ad920030f51cded5215b520c5bca2cfdc" name="ad920030f51cded5215b520c5bca2cfdc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:ad920030f51cded5215b520c5bca2cfdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90a4588e4e978a700b029f0851742222" id="r_a90a4588e4e978a700b029f0851742222"><td class="memItemLeft" align="right" valign="top"><a id="a90a4588e4e978a700b029f0851742222" name="a90a4588e4e978a700b029f0851742222"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plRectTemplate</b> ()</td></tr>
<tr class="memdesc:a90a4588e4e978a700b029f0851742222"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor does not initialize the data. <br /></td></tr>
<tr class="separator:a90a4588e4e978a700b029f0851742222"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa43980be4e3fcf6f1f6cf26c7f447bd1" id="r_aa43980be4e3fcf6f1f6cf26c7f447bd1"><td class="memItemLeft" align="right" valign="top"><a id="aa43980be4e3fcf6f1f6cf26c7f447bd1" name="aa43980be4e3fcf6f1f6cf26c7f447bd1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plRectTemplate</b> (Type x, Type y, Type width, Type height)</td></tr>
<tr class="memdesc:aa43980be4e3fcf6f1f6cf26c7f447bd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor to set all values. <br /></td></tr>
<tr class="separator:aa43980be4e3fcf6f1f6cf26c7f447bd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dbd20546e18103d56a9ab4988f5704d" id="r_a1dbd20546e18103d56a9ab4988f5704d"><td class="memItemLeft" align="right" valign="top"><a id="a1dbd20546e18103d56a9ab4988f5704d" name="a1dbd20546e18103d56a9ab4988f5704d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plRectTemplate</b> (Type width, Type height)</td></tr>
<tr class="memdesc:a1dbd20546e18103d56a9ab4988f5704d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes x and y with zero, width and height with the given values. <br /></td></tr>
<tr class="separator:a1dbd20546e18103d56a9ab4988f5704d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcba2d253ff5edb85879a92fa091834a" id="r_adcba2d253ff5edb85879a92fa091834a"><td class="memItemLeft" align="right" valign="top"><a id="adcba2d253ff5edb85879a92fa091834a" name="adcba2d253ff5edb85879a92fa091834a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plRectTemplate</b> (const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt; &amp;vTopLeftPosition, const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt; &amp;vSize)</td></tr>
<tr class="memdesc:adcba2d253ff5edb85879a92fa091834a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes x and y from pos, width and height from vSize. <br /></td></tr>
<tr class="separator:adcba2d253ff5edb85879a92fa091834a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52a95f4dd8bb8f6112fd1a0df632b082" id="r_a52a95f4dd8bb8f6112fd1a0df632b082"><td class="memItemLeft" align="right" valign="top"><a id="a52a95f4dd8bb8f6112fd1a0df632b082" name="a52a95f4dd8bb8f6112fd1a0df632b082"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>Left</b> () const</td></tr>
<tr class="memdesc:a52a95f4dd8bb8f6112fd1a0df632b082"><td class="mdescLeft">&#160;</td><td class="mdescRight">The smaller value along x. <br /></td></tr>
<tr class="separator:a52a95f4dd8bb8f6112fd1a0df632b082"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38941771889149a4e9c357b645a9297e" id="r_a38941771889149a4e9c357b645a9297e"><td class="memItemLeft" align="right" valign="top"><a id="a38941771889149a4e9c357b645a9297e" name="a38941771889149a4e9c357b645a9297e"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>Right</b> () const</td></tr>
<tr class="memdesc:a38941771889149a4e9c357b645a9297e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The larger value along x. <br /></td></tr>
<tr class="separator:a38941771889149a4e9c357b645a9297e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9ff370fb43610921ff1bfe89ca8b2da" id="r_ae9ff370fb43610921ff1bfe89ca8b2da"><td class="memItemLeft" align="right" valign="top"><a id="ae9ff370fb43610921ff1bfe89ca8b2da" name="ae9ff370fb43610921ff1bfe89ca8b2da"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>Top</b> () const</td></tr>
<tr class="memdesc:ae9ff370fb43610921ff1bfe89ca8b2da"><td class="mdescLeft">&#160;</td><td class="mdescRight">The smaller value along y. <br /></td></tr>
<tr class="separator:ae9ff370fb43610921ff1bfe89ca8b2da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd58015df6660735c30f6867e753ab4e" id="r_afd58015df6660735c30f6867e753ab4e"><td class="memItemLeft" align="right" valign="top"><a id="afd58015df6660735c30f6867e753ab4e" name="afd58015df6660735c30f6867e753ab4e"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>Bottom</b> () const</td></tr>
<tr class="memdesc:afd58015df6660735c30f6867e753ab4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">The larger value along y. <br /></td></tr>
<tr class="separator:afd58015df6660735c30f6867e753ab4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77f0c79104ef95660e39c4c81ff2dbff" id="r_a77f0c79104ef95660e39c4c81ff2dbff"><td class="memItemLeft" align="right" valign="top"><a id="a77f0c79104ef95660e39c4c81ff2dbff" name="a77f0c79104ef95660e39c4c81ff2dbff"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetX1</b> () const</td></tr>
<tr class="memdesc:a77f0c79104ef95660e39c4c81ff2dbff"><td class="mdescLeft">&#160;</td><td class="mdescRight">The smaller value along x. Same as Left(). <br /></td></tr>
<tr class="separator:a77f0c79104ef95660e39c4c81ff2dbff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a514e1d0d9027b4fede6278537abdc62d" id="r_a514e1d0d9027b4fede6278537abdc62d"><td class="memItemLeft" align="right" valign="top"><a id="a514e1d0d9027b4fede6278537abdc62d" name="a514e1d0d9027b4fede6278537abdc62d"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetX2</b> () const</td></tr>
<tr class="memdesc:a514e1d0d9027b4fede6278537abdc62d"><td class="mdescLeft">&#160;</td><td class="mdescRight">The larger value along x. Same as Right(). <br /></td></tr>
<tr class="separator:a514e1d0d9027b4fede6278537abdc62d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25f4bf015424b3cc3e9cb322506135c0" id="r_a25f4bf015424b3cc3e9cb322506135c0"><td class="memItemLeft" align="right" valign="top"><a id="a25f4bf015424b3cc3e9cb322506135c0" name="a25f4bf015424b3cc3e9cb322506135c0"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetY1</b> () const</td></tr>
<tr class="memdesc:a25f4bf015424b3cc3e9cb322506135c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">The smaller value along y. Same as <a class="el" href="#ae9ff370fb43610921ff1bfe89ca8b2da" title="The smaller value along y.">Top()</a>. <br /></td></tr>
<tr class="separator:a25f4bf015424b3cc3e9cb322506135c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b6681e89a0bde9ac0bc40536abf4513" id="r_a3b6681e89a0bde9ac0bc40536abf4513"><td class="memItemLeft" align="right" valign="top"><a id="a3b6681e89a0bde9ac0bc40536abf4513" name="a3b6681e89a0bde9ac0bc40536abf4513"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetY2</b> () const</td></tr>
<tr class="memdesc:a3b6681e89a0bde9ac0bc40536abf4513"><td class="mdescLeft">&#160;</td><td class="mdescRight">The larger value along y. Same as <a class="el" href="#afd58015df6660735c30f6867e753ab4e" title="The larger value along y.">Bottom()</a>. <br /></td></tr>
<tr class="separator:a3b6681e89a0bde9ac0bc40536abf4513"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a173381d4c5c1b26d17afda16d86e4e93" id="r_a173381d4c5c1b26d17afda16d86e4e93"><td class="memItemLeft" align="right" valign="top"><a id="a173381d4c5c1b26d17afda16d86e4e93" name="a173381d4c5c1b26d17afda16d86e4e93"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetMinCorner</b> () const</td></tr>
<tr class="memdesc:a173381d4c5c1b26d17afda16d86e4e93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the minimum corner position. Same as <a class="el" href="#a3e46f1b5209aa362703529701834982d" title="Returns the top left corner. Same as GetMinCorner().">GetTopLeft()</a>. <br /></td></tr>
<tr class="separator:a173381d4c5c1b26d17afda16d86e4e93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dfdbb72a5ba807c8b7cd5f170f977c8" id="r_a0dfdbb72a5ba807c8b7cd5f170f977c8"><td class="memItemLeft" align="right" valign="top"><a id="a0dfdbb72a5ba807c8b7cd5f170f977c8" name="a0dfdbb72a5ba807c8b7cd5f170f977c8"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetMaxCorner</b> () const</td></tr>
<tr class="memdesc:a0dfdbb72a5ba807c8b7cd5f170f977c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the maximum corner position. Same as <a class="el" href="#a6a025dad8041f72d8e99338380595131" title="Returns the bottom right corner. Same as GetMaxCorner().">GetBottomRight()</a>. <br /></td></tr>
<tr class="separator:a0dfdbb72a5ba807c8b7cd5f170f977c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e46f1b5209aa362703529701834982d" id="r_a3e46f1b5209aa362703529701834982d"><td class="memItemLeft" align="right" valign="top"><a id="a3e46f1b5209aa362703529701834982d" name="a3e46f1b5209aa362703529701834982d"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetTopLeft</b> () const</td></tr>
<tr class="memdesc:a3e46f1b5209aa362703529701834982d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the top left corner. Same as <a class="el" href="#a173381d4c5c1b26d17afda16d86e4e93" title="Returns the minimum corner position. Same as GetTopLeft().">GetMinCorner()</a>. <br /></td></tr>
<tr class="separator:a3e46f1b5209aa362703529701834982d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4fbb6fa8780b68c52053ceb94018832" id="r_aa4fbb6fa8780b68c52053ceb94018832"><td class="memItemLeft" align="right" valign="top"><a id="aa4fbb6fa8780b68c52053ceb94018832" name="aa4fbb6fa8780b68c52053ceb94018832"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetTopRight</b> () const</td></tr>
<tr class="memdesc:aa4fbb6fa8780b68c52053ceb94018832"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the top right corner. <br /></td></tr>
<tr class="separator:aa4fbb6fa8780b68c52053ceb94018832"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88ca5f30a2d91b047a925ea04a2205b2" id="r_a88ca5f30a2d91b047a925ea04a2205b2"><td class="memItemLeft" align="right" valign="top"><a id="a88ca5f30a2d91b047a925ea04a2205b2" name="a88ca5f30a2d91b047a925ea04a2205b2"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetBottomLeft</b> () const</td></tr>
<tr class="memdesc:a88ca5f30a2d91b047a925ea04a2205b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the bottom left corner. <br /></td></tr>
<tr class="separator:a88ca5f30a2d91b047a925ea04a2205b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a025dad8041f72d8e99338380595131" id="r_a6a025dad8041f72d8e99338380595131"><td class="memItemLeft" align="right" valign="top"><a id="a6a025dad8041f72d8e99338380595131" name="a6a025dad8041f72d8e99338380595131"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetBottomRight</b> () const</td></tr>
<tr class="memdesc:a6a025dad8041f72d8e99338380595131"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the bottom right corner. Same as <a class="el" href="#a0dfdbb72a5ba807c8b7cd5f170f977c8" title="Returns the maximum corner position. Same as GetBottomRight().">GetMaxCorner()</a>. <br /></td></tr>
<tr class="separator:a6a025dad8041f72d8e99338380595131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5b71d7fcffc498896a8a631fd45a0da" id="r_ae5b71d7fcffc498896a8a631fd45a0da"><td class="memItemLeft" align="right" valign="top"><a id="ae5b71d7fcffc498896a8a631fd45a0da" name="ae5b71d7fcffc498896a8a631fd45a0da"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetCenter</b> () const</td></tr>
<tr class="memdesc:ae5b71d7fcffc498896a8a631fd45a0da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the center point of the rectangle. <br /></td></tr>
<tr class="separator:ae5b71d7fcffc498896a8a631fd45a0da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32e60ee5bdf5bc82d3ea0201cb7f699b" id="r_a32e60ee5bdf5bc82d3ea0201cb7f699b"><td class="memItemLeft" align="right" valign="top"><a id="a32e60ee5bdf5bc82d3ea0201cb7f699b" name="a32e60ee5bdf5bc82d3ea0201cb7f699b"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetExtents</b> () const</td></tr>
<tr class="memdesc:a32e60ee5bdf5bc82d3ea0201cb7f699b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the width and height as a vec2. <br /></td></tr>
<tr class="separator:a32e60ee5bdf5bc82d3ea0201cb7f699b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf7c139140670fc35065f3469f39aa5d" id="r_adf7c139140670fc35065f3469f39aa5d"><td class="memItemLeft" align="right" valign="top"><a id="adf7c139140670fc35065f3469f39aa5d" name="adf7c139140670fc35065f3469f39aa5d"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetHalfExtents</b> () const</td></tr>
<tr class="memdesc:adf7c139140670fc35065f3469f39aa5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the half width and half height as a vec2. <br /></td></tr>
<tr class="separator:adf7c139140670fc35065f3469f39aa5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23791c38f319e5eb3335f2c12d821c18" id="r_a23791c38f319e5eb3335f2c12d821c18"><td class="memItemLeft" align="right" valign="top"><a id="a23791c38f319e5eb3335f2c12d821c18" name="a23791c38f319e5eb3335f2c12d821c18"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Grow</b> (Type xy)</td></tr>
<tr class="memdesc:a23791c38f319e5eb3335f2c12d821c18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the size of the rect in all directions. <br /></td></tr>
<tr class="separator:a23791c38f319e5eb3335f2c12d821c18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae632946fa627b2c59b6fb76d0643c105" id="r_ae632946fa627b2c59b6fb76d0643c105"><td class="memItemLeft" align="right" valign="top"><a id="ae632946fa627b2c59b6fb76d0643c105" name="ae632946fa627b2c59b6fb76d0643c105"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="separator:ae632946fa627b2c59b6fb76d0643c105"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18cb2df49cd2fb119bed6c27c8a351c1" id="r_a18cb2df49cd2fb119bed6c27c8a351c1"><td class="memItemLeft" align="right" valign="top"><a id="a18cb2df49cd2fb119bed6c27c8a351c1" name="a18cb2df49cd2fb119bed6c27c8a351c1"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="separator:a18cb2df49cd2fb119bed6c27c8a351c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eb2e4a5f6bc1d98183f4c61d2607b6f" id="r_a3eb2e4a5f6bc1d98183f4c61d2607b6f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3eb2e4a5f6bc1d98183f4c61d2607b6f">IsValid</a> () const</td></tr>
<tr class="memdesc:a3eb2e4a5f6bc1d98183f4c61d2607b6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the position and size contain valid values.  <br /></td></tr>
<tr class="separator:a3eb2e4a5f6bc1d98183f4c61d2607b6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fee5a00fe860b9de060d28148fb8b2c" id="r_a0fee5a00fe860b9de060d28148fb8b2c"><td class="memItemLeft" align="right" valign="top"><a id="a0fee5a00fe860b9de060d28148fb8b2c" name="a0fee5a00fe860b9de060d28148fb8b2c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>HasNonZeroArea</b> () const</td></tr>
<tr class="memdesc:a0fee5a00fe860b9de060d28148fb8b2c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the area of the rectangle is non zero. <br /></td></tr>
<tr class="separator:a0fee5a00fe860b9de060d28148fb8b2c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71dc90f3c2e600e4b067eae630644f26" id="r_a71dc90f3c2e600e4b067eae630644f26"><td class="memItemLeft" align="right" valign="top"><a id="a71dc90f3c2e600e4b067eae630644f26" name="a71dc90f3c2e600e4b067eae630644f26"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt; &amp;vPoint) const</td></tr>
<tr class="memdesc:a71dc90f3c2e600e4b067eae630644f26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the rectangle contains the provided point. <br /></td></tr>
<tr class="separator:a71dc90f3c2e600e4b067eae630644f26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ec934e7ae2a59ed5c89855ee7be44b5" id="r_a7ec934e7ae2a59ed5c89855ee7be44b5"><td class="memItemLeft" align="right" valign="top"><a id="a7ec934e7ae2a59ed5c89855ee7be44b5" name="a7ec934e7ae2a59ed5c89855ee7be44b5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;r) const</td></tr>
<tr class="separator:a7ec934e7ae2a59ed5c89855ee7be44b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab41e8d34319a244d3ad14762ba577ec8" id="r_ab41e8d34319a244d3ad14762ba577ec8"><td class="memItemLeft" align="right" valign="top"><a id="ab41e8d34319a244d3ad14762ba577ec8" name="ab41e8d34319a244d3ad14762ba577ec8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Overlaps</b> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;other) const</td></tr>
<tr class="memdesc:ab41e8d34319a244d3ad14762ba577ec8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the rectangle overlaps the provided rectangle. Also returns true if the rectangles are contained within each other completely(no intersecting edges). <br /></td></tr>
<tr class="separator:ab41e8d34319a244d3ad14762ba577ec8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe5eec58ad969cccfba13c96e9a40641" id="r_afe5eec58ad969cccfba13c96e9a40641"><td class="memItemLeft" align="right" valign="top"><a id="afe5eec58ad969cccfba13c96e9a40641" name="afe5eec58ad969cccfba13c96e9a40641"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandToInclude</b> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;other)</td></tr>
<tr class="memdesc:afe5eec58ad969cccfba13c96e9a40641"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extends this rectangle so that the provided rectangle is completely contained within it. <br /></td></tr>
<tr class="separator:afe5eec58ad969cccfba13c96e9a40641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c6b4965db84eaed17f7987274e0f648" id="r_a7c6b4965db84eaed17f7987274e0f648"><td class="memItemLeft" align="right" valign="top"><a id="a7c6b4965db84eaed17f7987274e0f648" name="a7c6b4965db84eaed17f7987274e0f648"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandToInclude</b> (const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt; &amp;other)</td></tr>
<tr class="memdesc:a7c6b4965db84eaed17f7987274e0f648"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extends this rectangle so that the provided point is contained within it. <br /></td></tr>
<tr class="separator:a7c6b4965db84eaed17f7987274e0f648"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a092544bc5790fa258ae3842e6de8365c" id="r_a092544bc5790fa258ae3842e6de8365c"><td class="memItemLeft" align="right" valign="top"><a id="a092544bc5790fa258ae3842e6de8365c" name="a092544bc5790fa258ae3842e6de8365c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clip</b> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;clipRect)</td></tr>
<tr class="memdesc:a092544bc5790fa258ae3842e6de8365c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clips this rect so that it is fully inside the provided rectangle. <br /></td></tr>
<tr class="separator:a092544bc5790fa258ae3842e6de8365c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5179ec1a3009fd512b185fc3e04e0250" id="r_a5179ec1a3009fd512b185fc3e04e0250"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5179ec1a3009fd512b185fc3e04e0250">GetClampedPoint</a> (const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt; &amp;vPoint) const</td></tr>
<tr class="memdesc:a5179ec1a3009fd512b185fc3e04e0250"><td class="mdescLeft">&#160;</td><td class="mdescRight">The given point is clamped to the area of the rect, i.e. it will be either inside the rect or on its edge and it will have the closest possible distance to the original point.  <br /></td></tr>
<tr class="separator:a5179ec1a3009fd512b185fc3e04e0250"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affead8cfd8c40bd6fc8704b4ec5c2c22" id="r_affead8cfd8c40bd6fc8704b4ec5c2c22"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#affead8cfd8c40bd6fc8704b4ec5c2c22">GetClampedRect</a> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;r) const</td></tr>
<tr class="memdesc:affead8cfd8c40bd6fc8704b4ec5c2c22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamps the given rect to the area of this rect and returns it.  <br /></td></tr>
<tr class="separator:affead8cfd8c40bd6fc8704b4ec5c2c22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4419f5556ab3f068a4f409424abf1db2" id="r_a4419f5556ab3f068a4f409424abf1db2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4419f5556ab3f068a4f409424abf1db2">SetCenter</a> (Type tX, Type tY)</td></tr>
<tr class="memdesc:a4419f5556ab3f068a4f409424abf1db2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the center of the rectangle.  <br /></td></tr>
<tr class="separator:a4419f5556ab3f068a4f409424abf1db2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab65499459d2879348beefb94b1f11e05" id="r_ab65499459d2879348beefb94b1f11e05"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab65499459d2879348beefb94b1f11e05">Translate</a> (Type tX, Type tY)</td></tr>
<tr class="memdesc:ab65499459d2879348beefb94b1f11e05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the rectangle.  <br /></td></tr>
<tr class="separator:ab65499459d2879348beefb94b1f11e05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41b7372818bd2b3c87aa4673cf8a9a38" id="r_a41b7372818bd2b3c87aa4673cf8a9a38"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a41b7372818bd2b3c87aa4673cf8a9a38">Scale</a> (Type sX, Type sY)</td></tr>
<tr class="memdesc:a41b7372818bd2b3c87aa4673cf8a9a38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales width and height, and moves the position as well.  <br /></td></tr>
<tr class="separator:a41b7372818bd2b3c87aa4673cf8a9a38"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ab6b6ffbc99344aa1e1e0398a3a79ff2e" id="r_ab6b6ffbc99344aa1e1e0398a3a79ff2e"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab6b6ffbc99344aa1e1e0398a3a79ff2e">MakeInvalid</a> ()</td></tr>
<tr class="memdesc:ab6b6ffbc99344aa1e1e0398a3a79ff2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an 'invalid' rect.  <br /></td></tr>
<tr class="separator:ab6b6ffbc99344aa1e1e0398a3a79ff2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe8e9ebeea76a155df9b9f4e540786e4" id="r_abe8e9ebeea76a155df9b9f4e540786e4"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abe8e9ebeea76a155df9b9f4e540786e4">MakeIntersection</a> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;r0, const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;r1)</td></tr>
<tr class="memdesc:abe8e9ebeea76a155df9b9f4e540786e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a rect that is the intersection of the two provided rects.  <br /></td></tr>
<tr class="separator:abe8e9ebeea76a155df9b9f4e540786e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae576102cf4498036f0d8eee3ff2a4b" id="r_a9ae576102cf4498036f0d8eee3ff2a4b"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9ae576102cf4498036f0d8eee3ff2a4b">MakeUnion</a> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;r0, const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;r1)</td></tr>
<tr class="memdesc:a9ae576102cf4498036f0d8eee3ff2a4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a rect that is the union of the two provided rects.  <br /></td></tr>
<tr class="separator:a9ae576102cf4498036f0d8eee3ff2a4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:acda6a9b4bf4ff2de8e5f817d80f85891" id="r_acda6a9b4bf4ff2de8e5f817d80f85891"><td class="memItemLeft" align="right" valign="top"><a id="acda6a9b4bf4ff2de8e5f817d80f85891" name="acda6a9b4bf4ff2de8e5f817d80f85891"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>x</b></td></tr>
<tr class="separator:acda6a9b4bf4ff2de8e5f817d80f85891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a494b558b5c1e60b61d6cde458a990e01" id="r_a494b558b5c1e60b61d6cde458a990e01"><td class="memItemLeft" align="right" valign="top"><a id="a494b558b5c1e60b61d6cde458a990e01" name="a494b558b5c1e60b61d6cde458a990e01"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>y</b></td></tr>
<tr class="separator:a494b558b5c1e60b61d6cde458a990e01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11252c1deb11ab4307bd2c7c0c81fbc3" id="r_a11252c1deb11ab4307bd2c7c0c81fbc3"><td class="memItemLeft" align="right" valign="top"><a id="a11252c1deb11ab4307bd2c7c0c81fbc3" name="a11252c1deb11ab4307bd2c7c0c81fbc3"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>width</b></td></tr>
<tr class="separator:a11252c1deb11ab4307bd2c7c0c81fbc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd6c44bc5375138df28c1fcd3cb41214" id="r_afd6c44bc5375138df28c1fcd3cb41214"><td class="memItemLeft" align="right" valign="top"><a id="afd6c44bc5375138df28c1fcd3cb41214" name="afd6c44bc5375138df28c1fcd3cb41214"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>height</b></td></tr>
<tr class="separator:afd6c44bc5375138df28c1fcd3cb41214"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Type&gt;<br />
class plRectTemplate&lt; Type &gt;</div><p>A simple rectangle class templated on the type for x, y and width, height. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a5179ec1a3009fd512b185fc3e04e0250" name="a5179ec1a3009fd512b185fc3e04e0250"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5179ec1a3009fd512b185fc3e04e0250">&#9670;&#160;</a></span>GetClampedPoint()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PL_ALWAYS_INLINE const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt; <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::GetClampedPoint </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template</a>&lt; Type &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>vPoint</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>The given point is clamped to the area of the rect, i.e. it will be either inside the rect or on its edge and it will have the closest possible distance to the original point. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000027">Test</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<a id="affead8cfd8c40bd6fc8704b4ec5c2c22" name="affead8cfd8c40bd6fc8704b4ec5c2c22"></a>
<h2 class="memtitle"><span class="permalink"><a href="#affead8cfd8c40bd6fc8704b4ec5c2c22">&#9670;&#160;</a></span>GetClampedRect()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::GetClampedRect </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>r</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clamps the given rect to the area of this rect and returns it. </p>
<p>If the input rect is entirely outside this rect, the result will be reduced to a point or a line closest to the input rect. </p>

</div>
</div>
<a id="a3eb2e4a5f6bc1d98183f4c61d2607b6f" name="a3eb2e4a5f6bc1d98183f4c61d2607b6f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3eb2e4a5f6bc1d98183f4c61d2607b6f">&#9670;&#160;</a></span>IsValid()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PL_ALWAYS_INLINE bool <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::IsValid </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks whether the position and size contain valid values. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000026">Test</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<a id="abe8e9ebeea76a155df9b9f4e540786e4" name="abe8e9ebeea76a155df9b9f4e540786e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe8e9ebeea76a155df9b9f4e540786e4">&#9670;&#160;</a></span>MakeIntersection()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::MakeIntersection </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>r0</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>r1</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a rect that is the intersection of the two provided rects. </p>
<p>If the two rects don't overlap, the result will be a valid rect, but have zero area. See <a class="el" href="#a3eb2e4a5f6bc1d98183f4c61d2607b6f" title="Checks whether the position and size contain valid values.">IsValid()</a> and <a class="el" href="#a0fee5a00fe860b9de060d28148fb8b2c" title="Returns true if the area of the rectangle is non zero.">HasNonZeroArea()</a>. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000024">Test</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<a id="ab6b6ffbc99344aa1e1e0398a3a79ff2e" name="ab6b6ffbc99344aa1e1e0398a3a79ff2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6b6ffbc99344aa1e1e0398a3a79ff2e">&#9670;&#160;</a></span>MakeInvalid()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::MakeInvalid </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an 'invalid' rect. </p>
<p><a class="el" href="#a3eb2e4a5f6bc1d98183f4c61d2607b6f" title="Checks whether the position and size contain valid values.">IsValid()</a> will return false. It is possible to make an invalid rect valid using <a class="el" href="#afe5eec58ad969cccfba13c96e9a40641" title="Extends this rectangle so that the provided rectangle is completely contained within it.">ExpandToInclude()</a>. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000023">Test</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<a id="a9ae576102cf4498036f0d8eee3ff2a4b" name="a9ae576102cf4498036f0d8eee3ff2a4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9ae576102cf4498036f0d8eee3ff2a4b">&#9670;&#160;</a></span>MakeUnion()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::MakeUnion </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>r0</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>r1</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">nodiscard</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a rect that is the union of the two provided rects. </p>
<p>This is the same as constructing a bounding box around the two rects. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000025">Test</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<a id="a41b7372818bd2b3c87aa4673cf8a9a38" name="a41b7372818bd2b3c87aa4673cf8a9a38"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41b7372818bd2b3c87aa4673cf8a9a38">&#9670;&#160;</a></span>Scale()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::Scale </td>
          <td>(</td>
          <td class="paramtype">Type</td>          <td class="paramname"><span class="paramname"><em>sX</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type</td>          <td class="paramname"><span class="paramname"><em>sY</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Scales width and height, and moves the position as well. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000030">Test</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<a id="a4419f5556ab3f068a4f409424abf1db2" name="a4419f5556ab3f068a4f409424abf1db2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4419f5556ab3f068a4f409424abf1db2">&#9670;&#160;</a></span>SetCenter()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::SetCenter </td>
          <td>(</td>
          <td class="paramtype">Type</td>          <td class="paramname"><span class="paramname"><em>tX</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type</td>          <td class="paramname"><span class="paramname"><em>tY</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the center of the rectangle. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000028">Test</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<a id="ab65499459d2879348beefb94b1f11e05" name="ab65499459d2879348beefb94b1f11e05"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab65499459d2879348beefb94b1f11e05">&#9670;&#160;</a></span>Translate()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a>&lt; Type &gt;::Translate </td>
          <td>(</td>
          <td class="paramtype">Type</td>          <td class="paramname"><span class="paramname"><em>tX</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type</td>          <td class="paramname"><span class="paramname"><em>tY</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Moves the rectangle. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000029">Test</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Math/<a class="el" href="../../d4/dbc/_engine_2_foundation_2_math_2_declarations_8h_source.htm">Declarations.h</a></li>
<li>Code/Engine/Foundation/Math/<a class="el" href="../../d3/d27/_rect_8h_source.htm">Rect.h</a></li>
<li>Code/Engine/Foundation/Math/Implementation/<a class="el" href="../../d1/d55/_rect__inl_8h_source.htm">Rect_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectTemplate</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
