<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plArchiveUtils Namespace Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/d23/namespacepl_archive_utils.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle"><div class="title">plArchiveUtils Namespace Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Utilities for working with plArchive files.  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d33/structpl_archive_utils_1_1_t_o_c_meta.htm">TOCMeta</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="typedef-members" name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a71e424abcbb3708d8a5c002196a36d5b" id="r_a71e424abcbb3708d8a5c002196a36d5b"><td class="memItemLeft" align="right" valign="top"><a id="a71e424abcbb3708d8a5c002196a36d5b" name="a71e424abcbb3708d8a5c002196a36d5b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>FileWriteProgressCallback</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt;bool(plUInt64, plUInt64)&gt;</td></tr>
<tr class="separator:a71e424abcbb3708d8a5c002196a36d5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="func-members" name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ae91bb28d0eea76b56996a51d2941ee06" id="r_ae91bb28d0eea76b56996a51d2941ee06"><td class="memItemLeft" align="right" valign="top">PL_FOUNDATION_DLL <a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>, 4, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae91bb28d0eea76b56996a51d2941ee06">GetAcceptedArchiveFileExtensions</a> ()</td></tr>
<tr class="memdesc:ae91bb28d0eea76b56996a51d2941ee06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a modifiable array of file extensions that the engine considers to be valid plArchive file extensions.  <br /></td></tr>
<tr class="separator:ae91bb28d0eea76b56996a51d2941ee06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afed9ab956b9b0cfa3e595ae1fab37614" id="r_afed9ab956b9b0cfa3e595ae1fab37614"><td class="memItemLeft" align="right" valign="top"><a id="afed9ab956b9b0cfa3e595ae1fab37614" name="afed9ab956b9b0cfa3e595ae1fab37614"></a>
PL_FOUNDATION_DLL bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsAcceptedArchiveFileExtensions</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sExtension)</td></tr>
<tr class="memdesc:afed9ab956b9b0cfa3e595ae1fab37614"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks case insensitive, whether the given extension is in the list of <a class="el" href="#ae91bb28d0eea76b56996a51d2941ee06" title="Returns a modifiable array of file extensions that the engine considers to be valid plArchive file ex...">GetAcceptedArchiveFileExtensions()</a>. <br /></td></tr>
<tr class="separator:afed9ab956b9b0cfa3e595ae1fab37614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeda1da4c0092f061edf13cd9e3eb5bbd" id="r_aeda1da4c0092f061edf13cd9e3eb5bbd"><td class="memItemLeft" align="right" valign="top"><a id="aeda1da4c0092f061edf13cd9e3eb5bbd" name="aeda1da4c0092f061edf13cd9e3eb5bbd"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>WriteHeader</b> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_stream)</td></tr>
<tr class="memdesc:aeda1da4c0092f061edf13cd9e3eb5bbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the header that identifies the plArchive file and version to the stream. <br /></td></tr>
<tr class="separator:aeda1da4c0092f061edf13cd9e3eb5bbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9878ad36b4a1d0f87b3760bfbfab4555" id="r_a9878ad36b4a1d0f87b3760bfbfab4555"><td class="memItemLeft" align="right" valign="top"><a id="a9878ad36b4a1d0f87b3760bfbfab4555" name="a9878ad36b4a1d0f87b3760bfbfab4555"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ReadHeader</b> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &amp;inout_stream, plUInt8 &amp;out_uiVersion)</td></tr>
<tr class="memdesc:a9878ad36b4a1d0f87b3760bfbfab4555"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the plArchive header. Returns success and the version, if the stream is a valid plArchive file. <br /></td></tr>
<tr class="separator:a9878ad36b4a1d0f87b3760bfbfab4555"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed9ef9c93523c3f59eb079aa494a485f" id="r_aed9ef9c93523c3f59eb079aa494a485f"><td class="memItemLeft" align="right" valign="top"><a id="aed9ef9c93523c3f59eb079aa494a485f" name="aed9ef9c93523c3f59eb079aa494a485f"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>AppendTOC</b> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_stream, const <a class="el" href="../../d2/d41/classpl_archive_t_o_c.htm">plArchiveTOC</a> &amp;toc)</td></tr>
<tr class="memdesc:aed9ef9c93523c3f59eb079aa494a485f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the archive TOC to the stream. This must be the last thing in the stream, if <a class="el" href="#a917f1c2dfd544146d04fac1d27d39b9e" title="Deserializes the TOC from from archive ending. Assumes the TOC is the very last data in the file and ...">ExtractTOC()</a> is supposed to work. <br /></td></tr>
<tr class="separator:aed9ef9c93523c3f59eb079aa494a485f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae8e4e1633bd05bd4d0fba17044155641" id="r_ae8e4e1633bd05bd4d0fba17044155641"><td class="memItemLeft" align="right" valign="top"><a id="ae8e4e1633bd05bd4d0fba17044155641" name="ae8e4e1633bd05bd4d0fba17044155641"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ExtractTOCMeta</b> (plUInt64 uiArchiveEndingDataSize, const void *pArchiveEndingDataBuffer, <a class="el" href="../../da/d33/structpl_archive_utils_1_1_t_o_c_meta.htm">TOCMeta</a> &amp;ref_tocMeta, plUInt8 uiArchiveVersion)</td></tr>
<tr class="memdesc:ae8e4e1633bd05bd4d0fba17044155641"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deserializes the TOC meta from archive ending. Assumes the TOC is the very last data in the file. <br /></td></tr>
<tr class="separator:ae8e4e1633bd05bd4d0fba17044155641"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03ad0d9a1113cbb1b2afa9978bff9aea" id="r_a03ad0d9a1113cbb1b2afa9978bff9aea"><td class="memItemLeft" align="right" valign="top"><a id="a03ad0d9a1113cbb1b2afa9978bff9aea" name="a03ad0d9a1113cbb1b2afa9978bff9aea"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ExtractTOCMeta</b> (const <a class="el" href="../../dd/dda/classpl_memory_mapped_file.htm">plMemoryMappedFile</a> &amp;memFile, <a class="el" href="../../da/d33/structpl_archive_utils_1_1_t_o_c_meta.htm">TOCMeta</a> &amp;ref_tocMeta, plUInt8 uiArchiveVersion)</td></tr>
<tr class="memdesc:a03ad0d9a1113cbb1b2afa9978bff9aea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deserializes the TOC meta from the memory mapped file. Assumes the TOC is the very last data in the file. <br /></td></tr>
<tr class="separator:a03ad0d9a1113cbb1b2afa9978bff9aea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f1c2dfd544146d04fac1d27d39b9e" id="r_a917f1c2dfd544146d04fac1d27d39b9e"><td class="memItemLeft" align="right" valign="top"><a id="a917f1c2dfd544146d04fac1d27d39b9e" name="a917f1c2dfd544146d04fac1d27d39b9e"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ExtractTOC</b> (plUInt64 uiArchiveEndingDataSize, const void *pArchiveEndingDataBuffer, <a class="el" href="../../d2/d41/classpl_archive_t_o_c.htm">plArchiveTOC</a> &amp;ref_toc, plUInt8 uiArchiveVersion)</td></tr>
<tr class="memdesc:a917f1c2dfd544146d04fac1d27d39b9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deserializes the TOC from from archive ending. Assumes the TOC is the very last data in the file and reads it from the back. <br /></td></tr>
<tr class="separator:a917f1c2dfd544146d04fac1d27d39b9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5af92072c1d9c7ed06dc02fd96069f8" id="r_ae5af92072c1d9c7ed06dc02fd96069f8"><td class="memItemLeft" align="right" valign="top"><a id="ae5af92072c1d9c7ed06dc02fd96069f8" name="ae5af92072c1d9c7ed06dc02fd96069f8"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ExtractTOC</b> (const <a class="el" href="../../dd/dda/classpl_memory_mapped_file.htm">plMemoryMappedFile</a> &amp;memFile, <a class="el" href="../../d2/d41/classpl_archive_t_o_c.htm">plArchiveTOC</a> &amp;ref_toc, plUInt8 uiArchiveVersion)</td></tr>
<tr class="memdesc:ae5af92072c1d9c7ed06dc02fd96069f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deserializes the TOC from the memory mapped file. Assumes the TOC is the very last data in the file and reads it from the back. <br /></td></tr>
<tr class="separator:ae5af92072c1d9c7ed06dc02fd96069f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace49186bd481f763445e5102c12e3e51" id="r_ace49186bd481f763445e5102c12e3e51"><td class="memItemLeft" align="right" valign="top">PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ace49186bd481f763445e5102c12e3e51">WriteEntry</a> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_stream, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sAbsSourcePath, plUInt32 uiPathStringOffset, plArchiveCompressionMode compression, plInt32 iCompressionLevel, <a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;ref_tocEntry, plUInt64 &amp;inout_uiCurrentStreamPosition, <a class="el" href="../../df/df1/structpl_delegate.htm">FileWriteProgressCallback</a> progress=<a class="el" href="../../df/df1/structpl_delegate.htm">FileWriteProgressCallback</a>())</td></tr>
<tr class="memdesc:ace49186bd481f763445e5102c12e3e51"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a single file entry to an plArchive stream with the given compression level.  <br /></td></tr>
<tr class="separator:ace49186bd481f763445e5102c12e3e51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47c80bbefc2cf9e3ff70c7f753e33fa4" id="r_a47c80bbefc2cf9e3ff70c7f753e33fa4"><td class="memItemLeft" align="right" valign="top">PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a47c80bbefc2cf9e3ff70c7f753e33fa4">WriteEntryPreprocessed</a> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_stream, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plConstByteArrayPtr</a> entryData, plUInt32 uiPathStringOffset, plArchiveCompressionMode compression, plUInt32 uiUncompressedEntryDataSize, <a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;ref_tocEntry, plUInt64 &amp;inout_uiCurrentStreamPosition)</td></tr>
<tr class="memdesc:a47c80bbefc2cf9e3ff70c7f753e33fa4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a single file entry to an plArchive stream with the given compression level.  <br /></td></tr>
<tr class="separator:a47c80bbefc2cf9e3ff70c7f753e33fa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6d5fd58a30efeb88ee205c9251de883" id="r_af6d5fd58a30efeb88ee205c9251de883"><td class="memItemLeft" align="right" valign="top"><a id="af6d5fd58a30efeb88ee205c9251de883" name="af6d5fd58a30efeb88ee205c9251de883"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>WriteEntryOptimal</b> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_stream, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sAbsSourcePath, plUInt32 uiPathStringOffset, plArchiveCompressionMode compression, plInt32 iCompressionLevel, <a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;ref_tocEntry, plUInt64 &amp;inout_uiCurrentStreamPosition, <a class="el" href="../../df/df1/structpl_delegate.htm">FileWriteProgressCallback</a> progress=<a class="el" href="../../df/df1/structpl_delegate.htm">FileWriteProgressCallback</a>())</td></tr>
<tr class="memdesc:af6d5fd58a30efeb88ee205c9251de883"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to WriteEntry, but if compression is enabled, checks that compression makes enough of a difference. If compression does not reduce file size enough, the file is stored uncompressed instead. <br /></td></tr>
<tr class="separator:af6d5fd58a30efeb88ee205c9251de883"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0848014d73a848142e2f4f56566a72f" id="r_ad0848014d73a848142e2f4f56566a72f"><td class="memItemLeft" align="right" valign="top">PL_FOUNDATION_DLL void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad0848014d73a848142e2f4f56566a72f">ConfigureRawMemoryStreamReader</a> (const <a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;entry, const void *pStartOfArchiveData, <a class="el" href="../../dd/d54/classpl_raw_memory_stream_reader.htm">plRawMemoryStreamReader</a> &amp;ref_memReader)</td></tr>
<tr class="memdesc:ad0848014d73a848142e2f4f56566a72f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures <em>memReader</em> as a view into the data stored for <em>entry</em> in the archive file.  <br /></td></tr>
<tr class="separator:ad0848014d73a848142e2f4f56566a72f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae717b0706dc09c82655e1e9dc024b7b7" id="r_ae717b0706dc09c82655e1e9dc024b7b7"><td class="memItemLeft" align="right" valign="top">PL_FOUNDATION_DLL <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae717b0706dc09c82655e1e9dc024b7b7">CreateEntryReader</a> (const <a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;entry, const void *pStartOfArchiveData)</td></tr>
<tr class="memdesc:ae717b0706dc09c82655e1e9dc024b7b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new stream reader which allows to read the uncompressed data for the given archive entry.  <br /></td></tr>
<tr class="separator:ae717b0706dc09c82655e1e9dc024b7b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb0179157dd64f1ac45daa9cf90e3420" id="r_afb0179157dd64f1ac45daa9cf90e3420"><td class="memItemLeft" align="right" valign="top"><a id="afb0179157dd64f1ac45daa9cf90e3420" name="afb0179157dd64f1ac45daa9cf90e3420"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ReadZipHeader</b> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &amp;inout_stream, plUInt8 &amp;out_uiVersion)</td></tr>
<tr class="separator:afb0179157dd64f1ac45daa9cf90e3420"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d230352fee57613d40232a2dca5af1a" id="r_a3d230352fee57613d40232a2dca5af1a"><td class="memItemLeft" align="right" valign="top"><a id="a3d230352fee57613d40232a2dca5af1a" name="a3d230352fee57613d40232a2dca5af1a"></a>
PL_FOUNDATION_DLL <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ExtractZipTOC</b> (const <a class="el" href="../../dd/dda/classpl_memory_mapped_file.htm">plMemoryMappedFile</a> &amp;memFile, <a class="el" href="../../d2/d41/classpl_archive_t_o_c.htm">plArchiveTOC</a> &amp;ref_toc)</td></tr>
<tr class="separator:a3d230352fee57613d40232a2dca5af1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="var-members" name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a0a59ea7b8cfe4a2055001022d320a640" id="r_a0a59ea7b8cfe4a2055001022d320a640"><td class="memItemLeft" align="right" valign="top"><a id="a0a59ea7b8cfe4a2055001022d320a640" name="a0a59ea7b8cfe4a2055001022d320a640"></a>
constexpr plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>ArchiveHeaderSize</b> = 16</td></tr>
<tr class="separator:a0a59ea7b8cfe4a2055001022d320a640"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf20b1738b50f3a07cfd273f78606ef5" id="r_aaf20b1738b50f3a07cfd273f78606ef5"><td class="memItemLeft" align="right" valign="top"><a id="aaf20b1738b50f3a07cfd273f78606ef5" name="aaf20b1738b50f3a07cfd273f78606ef5"></a>
constexpr plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>ArchiveTOCMetaMaxFooterSize</b> = 14 + 12</td></tr>
<tr class="separator:aaf20b1738b50f3a07cfd273f78606ef5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Utilities for working with plArchive files. </p>
</div><h2 class="groupheader">Function Documentation</h2>
<a id="ad0848014d73a848142e2f4f56566a72f" name="ad0848014d73a848142e2f4f56566a72f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad0848014d73a848142e2f4f56566a72f">&#9670;&#160;</a></span>ConfigureRawMemoryStreamReader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plArchiveUtils::ConfigureRawMemoryStreamReader </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>entry</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pStartOfArchiveData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dd/d54/classpl_raw_memory_stream_reader.htm">plRawMemoryStreamReader</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_memReader</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Configures <em>memReader</em> as a view into the data stored for <em>entry</em> in the archive file. </p>
<p>The raw memory stream may be compressed or uncompressed. This only creates a view for the stored data, it does not interpret it. </p>

</div>
</div>
<a id="ae717b0706dc09c82655e1e9dc024b7b7" name="ae717b0706dc09c82655e1e9dc024b7b7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae717b0706dc09c82655e1e9dc024b7b7">&#9670;&#160;</a></span>CreateEntryReader()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &gt; plArchiveUtils::CreateEntryReader </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>entry</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pStartOfArchiveData</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates a new stream reader which allows to read the uncompressed data for the given archive entry. </p>
<p>Under the hood it may create different types of stream readers to uncompress or decode the data. </p>

</div>
</div>
<a id="ae91bb28d0eea76b56996a51d2941ee06" name="ae91bb28d0eea76b56996a51d2941ee06"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae91bb28d0eea76b56996a51d2941ee06">&#9670;&#160;</a></span>GetAcceptedArchiveFileExtensions()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>, 4, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt; &amp; plArchiveUtils::GetAcceptedArchiveFileExtensions </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a modifiable array of file extensions that the engine considers to be valid plArchive file extensions. </p>
<p>By default it always contains 'plArchive'. Add or overwrite the values, if you want custom file extensions to be handled as plArchives. </p>

</div>
</div>
<a id="ace49186bd481f763445e5102c12e3e51" name="ace49186bd481f763445e5102c12e3e51"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ace49186bd481f763445e5102c12e3e51">&#9670;&#160;</a></span>WriteEntry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plArchiveUtils::WriteEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>inout_stream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sAbsSourcePath</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiPathStringOffset</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plArchiveCompressionMode</td>          <td class="paramname"><span class="paramname"><em>compression</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plInt32</td>          <td class="paramname"><span class="paramname"><em>iCompressionLevel</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_tocEntry</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt64 &amp;</td>          <td class="paramname"><span class="paramname"><em>inout_uiCurrentStreamPosition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/df1/structpl_delegate.htm">FileWriteProgressCallback</a></td>          <td class="paramname"><span class="paramname"><em>progress</em></span><span class="paramdefsep"> = </span><span class="paramdefval"><a class="el" href="../../df/df1/structpl_delegate.htm">FileWriteProgressCallback</a>()</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes a single file entry to an plArchive stream with the given compression level. </p>
<p>Appends information to the TOC for finding the data in the stream. Reads and updates inout_uiCurrentStreamPosition with the data byte offset. The progress callback is executed for every couple of KB of data that were written. </p>

</div>
</div>
<a id="a47c80bbefc2cf9e3ff70c7f753e33fa4" name="a47c80bbefc2cf9e3ff70c7f753e33fa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a47c80bbefc2cf9e3ff70c7f753e33fa4">&#9670;&#160;</a></span>WriteEntryPreprocessed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plArchiveUtils::WriteEntryPreprocessed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>inout_stream</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d81/classpl_array_ptr.htm">plConstByteArrayPtr</a></td>          <td class="paramname"><span class="paramname"><em>entryData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiPathStringOffset</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plArchiveCompressionMode</td>          <td class="paramname"><span class="paramname"><em>compression</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiUncompressedEntryDataSize</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d1/d7f/classpl_archive_entry.htm">plArchiveEntry</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>ref_tocEntry</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt64 &amp;</td>          <td class="paramname"><span class="paramname"><em>inout_uiCurrentStreamPosition</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes a single file entry to an plArchive stream with the given compression level. </p>
<p>Appends information to the TOC for finding the data in the stream. Reads and updates inout_uiCurrentStreamPosition with the data byte offset. Compression parameter indicate compression that the entry data already have applied. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/d23/namespacepl_archive_utils.htm">plArchiveUtils</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
