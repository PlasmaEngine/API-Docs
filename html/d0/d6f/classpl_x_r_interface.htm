<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plXRInterface Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/d6f/classpl_x_r_interface.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../df/d99/classpl_x_r_interface-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plXRInterface Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>XR singleton interface. Needs to be initialized to be used for VR or AR purposes.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d9/dcd/_x_r_interface_8h_source.htm">XRInterface.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plXRInterface:</div>
<div class="dyncontent">
<div class="center"><img src="../../d1/d1d/classpl_x_r_interface__inherit__graph.png" border="0" usemap="#apl_x_r_interface_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_x_r_interface_inherit__map" id="apl_x_r_interface_inherit__map">
<area shape="rect" title="XR singleton interface. Needs to be initialized to be used for VR or AR purposes." alt="" coords="58,5,154,32"/>
<area shape="rect" href="../../d2/d2a/classpl_dummy_x_r.htm" title=" " alt="" coords="5,80,98,107"/>
<area shape="poly" title=" " alt="" coords="89,46,63,81,59,78,85,43"/>
<area shape="rect" href="../../dd/df3/classpl_open_x_r.htm" title=" " alt="" coords="122,80,200,107"/>
<area shape="poly" title=" " alt="" coords="127,43,154,78,149,81,123,46"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8867f44cc575067a42f61340a624cb1d" id="r_a8867f44cc575067a42f61340a624cb1d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8867f44cc575067a42f61340a624cb1d">IsHmdPresent</a> () const =0</td></tr>
<tr class="memdesc:a8867f44cc575067a42f61340a624cb1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an HMD is available. Can be used to decide whether it makes sense to call Initialize at all.  <br /></td></tr>
<tr class="separator:a8867f44cc575067a42f61340a624cb1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Setup</div></td></tr>
<tr class="memitem:ae4acd7418338baf83a8f6112170a1662" id="r_ae4acd7418338baf83a8f6112170a1662"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae4acd7418338baf83a8f6112170a1662">Initialize</a> ()=0</td></tr>
<tr class="memdesc:ae4acd7418338baf83a8f6112170a1662"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the XR system. This can be quite time consuming as it will generally start supporting applications needed to run and start up the HMD if it went to sleep.  <br /></td></tr>
<tr class="separator:ae4acd7418338baf83a8f6112170a1662"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd22d58bd7335f7e603189566b224a9d" id="r_acd22d58bd7335f7e603189566b224a9d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acd22d58bd7335f7e603189566b224a9d">Deinitialize</a> ()=0</td></tr>
<tr class="memdesc:acd22d58bd7335f7e603189566b224a9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shuts down the XR system again.  <br /></td></tr>
<tr class="separator:acd22d58bd7335f7e603189566b224a9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa5337def15173879fa5b96c1a59b390" id="r_aaa5337def15173879fa5b96c1a59b390"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaa5337def15173879fa5b96c1a59b390">IsInitialized</a> () const =0</td></tr>
<tr class="memdesc:aaa5337def15173879fa5b96c1a59b390"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the XR system is initialized.  <br /></td></tr>
<tr class="separator:aaa5337def15173879fa5b96c1a59b390"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Devices</div></td></tr>
<tr class="memitem:a4bc296c817821659e5594c1e08eab86a" id="r_a4bc296c817821659e5594c1e08eab86a"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../dc/da0/structpl_h_m_d_info.htm">plHMDInfo</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4bc296c817821659e5594c1e08eab86a">GetHmdInfo</a> () const =0</td></tr>
<tr class="memdesc:a4bc296c817821659e5594c1e08eab86a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns general HMD information.  <br /></td></tr>
<tr class="separator:a4bc296c817821659e5594c1e08eab86a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fbcd04caffcdc1e46e3e085f06363a9" id="r_a6fbcd04caffcdc1e46e3e085f06363a9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d3/d9b/classpl_x_r_input_device.htm">plXRInputDevice</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6fbcd04caffcdc1e46e3e085f06363a9">GetXRInput</a> () const =0</td></tr>
<tr class="memdesc:a6fbcd04caffcdc1e46e3e085f06363a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the XR input device.  <br /></td></tr>
<tr class="separator:a6fbcd04caffcdc1e46e3e085f06363a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">View</div></td></tr>
<tr class="memitem:a8291a5ce36ba17a00a17f6b4b63daad0" id="r_a8291a5ce36ba17a00a17f6b4b63daad0"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8291a5ce36ba17a00a17f6b4b63daad0">SupportsCompanionView</a> ()=0</td></tr>
<tr class="memdesc:a8291a5ce36ba17a00a17f6b4b63daad0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if a companion window can be passed into CreateActor.  <br /></td></tr>
<tr class="separator:a8291a5ce36ba17a00a17f6b4b63daad0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e4af401df9d0e5c6bf9a068cbfe4d65" id="r_a9e4af401df9d0e5c6bf9a068cbfe4d65"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d6/d5c/classpl_actor.htm">plActor</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9e4af401df9d0e5c6bf9a068cbfe4d65">CreateActor</a> (<a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *pView, plGALMSAASampleCount::Enum msaaCount=plGALMSAASampleCount::None, <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d8/d8b/classpl_window_base.htm">plWindowBase</a> &gt; pCompanionWindow=nullptr, <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d5/d9d/classpl_window_output_target_g_a_l.htm">plWindowOutputTargetGAL</a> &gt; pCompanionWindowOutput=nullptr)=0</td></tr>
<tr class="memdesc:a9e4af401df9d0e5c6bf9a068cbfe4d65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a XR actor by trying to startup an XR session.  <br /></td></tr>
<tr class="separator:a9e4af401df9d0e5c6bf9a068cbfe4d65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Internal</div></td></tr>
<tr class="memitem:a84208bc44bd1aa3468a417996e657e56" id="r_a84208bc44bd1aa3468a417996e657e56"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/de5/classpl_g_a_l_texture_handle.htm">plGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a84208bc44bd1aa3468a417996e657e56">GetCurrentTexture</a> ()=0</td></tr>
<tr class="memdesc:a84208bc44bd1aa3468a417996e657e56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by plWindowOutputTargetXR::RenderCompanionView Returns the color texture to be used by the companion view if enabled, otherwise an invalid handle.  <br /></td></tr>
<tr class="separator:a84208bc44bd1aa3468a417996e657e56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e0aa2b4f7be602de740fa2303bd227f" id="r_a0e0aa2b4f7be602de740fa2303bd227f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0e0aa2b4f7be602de740fa2303bd227f">OnActorDestroyed</a> ()=0</td></tr>
<tr class="memdesc:a0e0aa2b4f7be602de740fa2303bd227f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the actor created by 'CreateActor' is destroyed.  <br /></td></tr>
<tr class="separator:a0e0aa2b4f7be602de740fa2303bd227f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>XR singleton interface. Needs to be initialized to be used for VR or AR purposes. </p>
<p>To be used in a project the project needs to have an enabled <a class="el" href="../../d4/df1/classpl_x_r_config.htm">plXRConfig</a> with a set render pipeline in the platform profile. To then use the interface, Initialize must be called first and on success CreateActor. Everything else is optional. Aquire interface via <a class="el" href="../../d0/ddb/classpl_singleton_registry.htm#ae6713688a57f2dbab789f700f1b92d15" title="Retrieves a singleton instance by type name. Returns nullptr if no singleton instance is available.">plSingletonRegistry::GetSingletonInstance&lt;plXRInterface&gt;()</a>. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9e4af401df9d0e5c6bf9a068cbfe4d65" name="a9e4af401df9d0e5c6bf9a068cbfe4d65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e4af401df9d0e5c6bf9a068cbfe4d65">&#9670;&#160;</a></span>CreateActor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d6/d5c/classpl_actor.htm">plActor</a> &gt; plXRInterface::CreateActor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *</td>          <td class="paramname"><span class="paramname"><em>pView</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plGALMSAASampleCount::Enum</td>          <td class="paramname"><span class="paramname"><em>msaaCount</em></span><span class="paramdefsep"> = </span><span class="paramdefval">plGALMSAASampleCount::None</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d8/d8b/classpl_window_base.htm">plWindowBase</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>pCompanionWindow</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a>&lt; <a class="el" href="../../d5/d9d/classpl_window_output_target_g_a_l.htm">plWindowOutputTargetGAL</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>pCompanionWindowOutput</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a XR actor by trying to startup an XR session. </p>
<p>If SupportsCompanionView is true (VR only), a normal window and window output can be passed in. The window will be used to blit the VR output into the window. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#a16dea7ec1be48626c0c91f9e22ffce01">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#a9a485b02a3881358556208dfbcf48294">plOpenXR</a>.</p>

</div>
</div>
<a id="acd22d58bd7335f7e603189566b224a9d" name="acd22d58bd7335f7e603189566b224a9d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acd22d58bd7335f7e603189566b224a9d">&#9670;&#160;</a></span>Deinitialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plXRInterface::Deinitialize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Shuts down the XR system again. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#a5845718d942635355cd32c0d5de2f982">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#a3b2601793fce6b1a553832cb6b0c0d58">plOpenXR</a>.</p>

</div>
</div>
<a id="a84208bc44bd1aa3468a417996e657e56" name="a84208bc44bd1aa3468a417996e657e56"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84208bc44bd1aa3468a417996e657e56">&#9670;&#160;</a></span>GetCurrentTexture()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../dc/de5/classpl_g_a_l_texture_handle.htm">plGALTextureHandle</a> plXRInterface::GetCurrentTexture </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called by plWindowOutputTargetXR::RenderCompanionView Returns the color texture to be used by the companion view if enabled, otherwise an invalid handle. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#afe2fcd9aa08b83f5414191dead916027">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#a256ad62d2806f1002b3f924223a66f35">plOpenXR</a>.</p>

</div>
</div>
<a id="a4bc296c817821659e5594c1e08eab86a" name="a4bc296c817821659e5594c1e08eab86a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4bc296c817821659e5594c1e08eab86a">&#9670;&#160;</a></span>GetHmdInfo()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../dc/da0/structpl_h_m_d_info.htm">plHMDInfo</a> &amp; plXRInterface::GetHmdInfo </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns general HMD information. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#aa07eaa22e6ef60bc594af051e91c862f">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#a058bd70a6ecfef64a3e7ccad20d13425">plOpenXR</a>.</p>

</div>
</div>
<a id="a6fbcd04caffcdc1e46e3e085f06363a9" name="a6fbcd04caffcdc1e46e3e085f06363a9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6fbcd04caffcdc1e46e3e085f06363a9">&#9670;&#160;</a></span>GetXRInput()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d3/d9b/classpl_x_r_input_device.htm">plXRInputDevice</a> &amp; plXRInterface::GetXRInput </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the XR input device. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#a1c4082198f58b7242aab734b0c31f0c4">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#a08a1cad9e7c5816f6f95368769ee7716">plOpenXR</a>.</p>

</div>
</div>
<a id="ae4acd7418338baf83a8f6112170a1662" name="ae4acd7418338baf83a8f6112170a1662"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4acd7418338baf83a8f6112170a1662">&#9670;&#160;</a></span>Initialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plXRInterface::Initialize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the XR system. This can be quite time consuming as it will generally start supporting applications needed to run and start up the HMD if it went to sleep. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#aa67e29997da49bf9fd0367bb6ab4f37e">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#a27aeb97f9e526dafe4197b557b910b91">plOpenXR</a>.</p>

</div>
</div>
<a id="a8867f44cc575067a42f61340a624cb1d" name="a8867f44cc575067a42f61340a624cb1d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8867f44cc575067a42f61340a624cb1d">&#9670;&#160;</a></span>IsHmdPresent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plXRInterface::IsHmdPresent </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether an HMD is available. Can be used to decide whether it makes sense to call Initialize at all. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#a6f805ce69c13a0a2bb639c1d7c9efd40">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#a794b0b106cdd1669d10cddcfc38ccf33">plOpenXR</a>.</p>

</div>
</div>
<a id="aaa5337def15173879fa5b96c1a59b390" name="aaa5337def15173879fa5b96c1a59b390"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaa5337def15173879fa5b96c1a59b390">&#9670;&#160;</a></span>IsInitialized()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plXRInterface::IsInitialized </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether the XR system is initialized. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#ab4a0bb63f2c80f96002d23cb7d25898a">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#ac536ec096e1225f68cce0cda977638a5">plOpenXR</a>.</p>

</div>
</div>
<a id="a0e0aa2b4f7be602de740fa2303bd227f" name="a0e0aa2b4f7be602de740fa2303bd227f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0e0aa2b4f7be602de740fa2303bd227f">&#9670;&#160;</a></span>OnActorDestroyed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plXRInterface::OnActorDestroyed </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the actor created by 'CreateActor' is destroyed. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#a5323647aaf8256dd51ad201b94915279">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#a0e93737746f5d210f2c336a08d1ad4f9">plOpenXR</a>.</p>

</div>
</div>
<a id="a8291a5ce36ba17a00a17f6b4b63daad0" name="a8291a5ce36ba17a00a17f6b4b63daad0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8291a5ce36ba17a00a17f6b4b63daad0">&#9670;&#160;</a></span>SupportsCompanionView()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool plXRInterface::SupportsCompanionView </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if a companion window can be passed into CreateActor. </p>

<p>Implemented in <a class="el" href="../../d2/d2a/classpl_dummy_x_r.htm#a91a922b6a3eef785bc1237e8e3536f48">plDummyXR</a>, and <a class="el" href="../../dd/df3/classpl_open_x_r.htm#aaa816462133dd8dfdc8e9b3160004f88">plOpenXR</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/GameEngine/XR/<a class="el" href="../../d9/dcd/_x_r_interface_8h_source.htm">XRInterface.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/d6f/classpl_x_r_interface.htm">plXRInterface</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
