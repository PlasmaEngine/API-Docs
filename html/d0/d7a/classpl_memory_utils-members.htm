<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Member List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('df/d4d/classpl_memory_utils.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">plMemoryUtils Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a15b127801462e31890c28aac2d8bc4bf">AddByteOffset</a>(T *pPtr, std::ptrdiff_t offset)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>AddByteOffset</b>(T *pPtr, std::ptrdiff_t offset) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a2cf7c4f708e620d0bd3ce78f685a1977">AlignBackwards</a>(T *pPtr, size_t uiAlignment)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>AlignBackwards</b>(T *pPtr, size_t uiAlignment) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a05761337cfbe0233d8c8897137b22d42">AlignForwards</a>(T *pPtr, size_t uiAlignment)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>AlignForwards</b>(T *pPtr, size_t uiAlignment) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#aebac0ea8dc364f79d0ed4cf8c65ab0de">AlignSize</a>(T uiSize, T uiAlignment)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>AlignSize</b>(T uiSize, T uiAlignment) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#acab682b66169751ce37b98cd4f9a30e1">Compare</a>(const T *a, const T *b, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Compare</b>(const T *a, const T *b, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a611d82f77f3c825a296d39e2bfa3b1c6">Construct</a>(T *pDestination, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Construct</b>(T *pDestination, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>ConstructorFunction</b> typedef (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a9a74df0cde5a8c8012d7b6c48d3d8729">Copy</a>(T *pDestination, const T *pSource, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Copy</b>(T *pDestination, const T *pSource, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a07b6ac85720d94f8568760ac12f786e5">CopyConstruct</a>(Destination *pDestination, const Source &amp;copy, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>CopyConstruct</b>(Destination *pDestination, const Source &amp;copy, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a1f9d7301372dec5fdcee4015a4620c8e">CopyConstructArray</a>(T *pDestination, const T *pSource, size_t uiCount)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>CopyConstructArray</b>(T *pDestination, const T *pSource, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>CopyConstructorFunction</b> typedef (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a32843c9343c7195dcc1d3ed8122c55e0">CopyOrMoveConstruct</a>(Destination *pDestination, Source &amp;&amp;source)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>CopyOrMoveConstruct</b>(Destination *pDestination, Source &amp;&amp;source) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#ad95431ce4b94b94c62927ef693d82b18">CopyOverlapped</a>(T *pDestination, const T *pSource, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>CopyOverlapped</b>(T *pDestination, const T *pSource, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#afe524b6781f69e2fd4eceb18f2a27640">Destruct</a>(T *pDestination, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Destruct</b>(T *pDestination, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>DestructorFunction</b> typedef (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#ad0e9adef6f30af3d9e6e592657784023">IsAligned</a>(const T *pPtr, size_t uiAlignment)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsAligned</b>(const T *pPtr, size_t uiAlignment) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a4164db412280d367dd4aa34e7c4787e8">IsEqual</a>(const T *a, const T *b, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsEqual</b>(const T *a, const T *b, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a85af144b5babe0bc72fb443bfce08f7c">IsSizeAligned</a>(T uiSize, T uiAlignment)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>IsSizeAligned</b>(T uiSize, T uiAlignment) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a319e45b45155a767cebb1940c4f4d36d">MakeConstructorFunction</a>()</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>MakeConstructorFunction</b>() (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a483a589dbd88e043d4323e586c90bd7a">MakeCopyConstructorFunction</a>()</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>MakeCopyConstructorFunction</b>() (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a6e5ae39199aab53f5ce3e03e44741b20">MakeDestructorFunction</a>()</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>MakeDestructorFunction</b>() (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#abec7a10f06a461b6d32c183b6347cc80">MoveConstruct</a>(T *pDestination, T &amp;&amp;source)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a8145ebb009d76cb343e96465864d51d7">MoveConstruct</a>(T *pDestination, T *pSource, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>MoveConstruct</b>(T *pDestination, T &amp;&amp;source) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>MoveConstruct</b>(T *pDestination, T *pSource, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a893c3feccfb317b5e738f946202ca58f">PatternFill</a>(T *pDestination, plUInt8 uiBytePattern, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#aa50a4ea94b07365189c41478bcaab4c1">PatternFill</a>(T(&amp;destination)[N], plUInt8 uiBytePattern)=delete</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>PatternFill</b>(T *pDestination, plUInt8 uiBytePattern, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#ab1d308ced5c5e37116dbe8ab947b2bd3">PatternFillArray</a>(T(&amp;destination)[N], plUInt8 uiBytePattern)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>PatternFillArray</b>(T(&amp;destination)[N], plUInt8 uiBytePattern) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a896238870c5f0caca5ab1464920698b6">Prepend</a>(T *pDestination, const T &amp;source, size_t uiCount)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a2b7e75b441e7703845c191ab15993ae0">Prepend</a>(T *pDestination, T &amp;&amp;source, size_t uiCount)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#ae6adc3d41e0b96afab52c43705196161">Prepend</a>(T *pDestination, const T *pSource, size_t uiSourceCount, size_t uiCount)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Prepend</b>(T *pDestination, const T &amp;source, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>Prepend</b>(T *pDestination, T &amp;&amp;source, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Prepend</b>(T *pDestination, const T *pSource, size_t uiSourceCount, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a8d4fb163aeaf9c445783e5f19bb4f19e">RawByteCompare</a>(const void *a, const void *b, size_t uiNumBytesToCompare)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a88366ff491026f5ddfce3275ce55b4d2">RawByteCopy</a>(void *pDestination, const void *pSource, size_t uiNumBytesToCopy)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#afbb364a54fec529647934e8f394dff3d">Relocate</a>(T *pDestination, T *pSource, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>Relocate</b>(T *pDestination, T *pSource, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a5a199ddfb8a76151f443013bf3eb8310">RelocateConstruct</a>(T *pDestination, T *pSource, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>RelocateConstruct</b>(T *pDestination, T *pSource, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#ad644c6cd5636810d5218474fa2b478c5">RelocateOverlapped</a>(T *pDestination, T *pSource, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>RelocateOverlapped</b>(T *pDestination, T *pSource, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a48bc8fa24ddbd2aa74827d0de2e5195d">ReserveLower4GBAddressSpace</a>()</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#aeb44ed929d54c464ebc79e29c0e6f62e">ZeroFill</a>(T *pDestination, size_t uiCount=1)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a00e7847069d21587dc9253d0538d90fe">ZeroFill</a>(T(&amp;destination)[N])=delete</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>ZeroFill</b>(T *pDestination, size_t uiCount) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm#a4a991243519b9d2b461604d644aa97b9">ZeroFillArray</a>(T(&amp;destination)[N])</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="odd"><td class="entry"><b>ZeroFillArray</b>(T(&amp;destination)[N]) (defined in <a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a>)</td><td class="entry"><a class="el" href="../../df/d4d/classpl_memory_utils.htm">plMemoryUtils</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
