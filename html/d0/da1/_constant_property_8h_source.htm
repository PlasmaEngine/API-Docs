<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Foundation/Reflection/Implementation/ConstantProperty.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/da1/_constant_property_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ConstantProperty.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/AbstractProperty.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/StaticRTTI.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00014" data-start="{" data-end="};">
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno"><a class="line" href="../../dd/d62/classpl_typed_constant_property.htm">   14</a></span><span class="keyword">class </span><a class="code hl_class" href="../../dd/d62/classpl_typed_constant_property.htm">plTypedConstantProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d7/d64/classpl_abstract_constant_property.htm">plAbstractConstantProperty</a></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>{</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="}">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../dd/d62/classpl_typed_constant_property.htm#adb860979d924bf82cb452be73a08070e">   18</a></span>  <a class="code hl_function" href="../../dd/d62/classpl_typed_constant_property.htm#adb860979d924bf82cb452be73a08070e">plTypedConstantProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    : <a class="code hl_class" href="../../d7/d64/classpl_abstract_constant_property.htm">plAbstractConstantProperty</a>(szPropertyName)</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  {</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    m_Flags = plPropertyFlags::GetParameterFlags&lt;Type&gt;();</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  }</div>
</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="foldopen" id="foldopen00026" data-start="{" data-end="}">
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="../../dd/d62/classpl_typed_constant_property.htm#a55c871b3c2b3ab8abb327294c50c2ba3">   26</a></span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* <a class="code hl_function" href="../../dd/d62/classpl_typed_constant_property.htm#a55c871b3c2b3ab8abb327294c50c2ba3">GetSpecificType</a>() const override <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    <span class="keywordflow">return</span> plGetStaticRTTI&lt;typename plTypeTraits&lt;Type&gt;::NonConstReferenceType&gt;();</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  }</div>
</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="../../dd/d62/classpl_typed_constant_property.htm#ae7e3b1f1383865f99289942c39daa983">   32</a></span>  <span class="keyword">virtual</span> Type <a class="code hl_function" href="../../dd/d62/classpl_typed_constant_property.htm#ae7e3b1f1383865f99289942c39daa983">GetValue</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>};</div>
</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00037" data-start="{" data-end="};">
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="../../df/db0/classpl_constant_property.htm">   37</a></span><span class="keyword">class </span><a class="code hl_class" href="../../df/db0/classpl_constant_property.htm">plConstantProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../dd/d62/classpl_typed_constant_property.htm">plTypedConstantProperty</a>&lt;Type&gt;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>{</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00041" data-start="{" data-end="}">
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="../../df/db0/classpl_constant_property.htm#a428d5e22c4bde308434bab28d897434f">   41</a></span>  <a class="code hl_function" href="../../df/db0/classpl_constant_property.htm#a428d5e22c4bde308434bab28d897434f">plConstantProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName, Type value)</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    : <a class="code hl_class" href="../../dd/d62/classpl_typed_constant_property.htm">plTypedConstantProperty</a>&lt;Type&gt;(szPropertyName)</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    , m_Value(value)</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  {</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    PL_ASSERT_DEBUG(this-&gt;m_Flags.<a class="code hl_function" href="../../df/dd9/structpl_bitflags.htm#ae6aa76fea32d1d2777f8c4da767cda67">IsSet</a>(<a class="code hl_enumvalue" href="../../db/d0f/structpl_property_flags.htm#aa9691dcb8643c279db2c187968da4d10a69f692be2ed348904be1ea4cd7aafa8b">plPropertyFlags::StandardType</a>), <span class="stringliteral">&quot;Only constants that can be put in an plVariant are currently supported!&quot;</span>);</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  }</div>
</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="../../df/db0/classpl_constant_property.htm#a2b60dfb0eeccdf89967b3e1209024a79">   49</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code hl_function" href="../../df/db0/classpl_constant_property.htm#a2b60dfb0eeccdf89967b3e1209024a79">GetPropertyPointer</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> (<span class="keywordtype">void</span>*)&amp;m_Value; }</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="foldopen" id="foldopen00052" data-start="{" data-end="}">
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="../../df/db0/classpl_constant_property.htm#a477c38e97d0e9cac1a9b7f9b272e42fc">   52</a></span>  <span class="keyword">virtual</span> Type <a class="code hl_function" href="../../df/db0/classpl_constant_property.htm#a477c38e97d0e9cac1a9b7f9b272e42fc">GetValue</a>() const override <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  {</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    <span class="keywordflow">return</span> m_Value;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  }</div>
</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="../../df/db0/classpl_constant_property.htm#a9faea657b613c46f741f793d3f3b65fd">   57</a></span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a> <a class="code hl_function" href="../../df/db0/classpl_constant_property.htm#a9faea657b613c46f741f793d3f3b65fd">GetConstant</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>(m_Value); }</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  Type m_Value;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>};</div>
</div>
<div class="ttc" id="aclasspl_abstract_constant_property_htm"><div class="ttname"><a href="../../d7/d64/classpl_abstract_constant_property.htm">plAbstractConstantProperty</a></div><div class="ttdoc">This is the base class for all constant properties that are stored inside the RTTI data.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:213</div></div>
<div class="ttc" id="aclasspl_constant_property_htm"><div class="ttname"><a href="../../df/db0/classpl_constant_property.htm">plConstantProperty</a></div><div class="ttdoc">[internal] An implementation of plTypedConstantProperty that accesses the property data directly.</div><div class="ttdef"><b>Definition</b> ConstantProperty.h:38</div></div>
<div class="ttc" id="aclasspl_constant_property_htm_a2b60dfb0eeccdf89967b3e1209024a79"><div class="ttname"><a href="../../df/db0/classpl_constant_property.htm#a2b60dfb0eeccdf89967b3e1209024a79">plConstantProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer() const override</div><div class="ttdoc">Returns a pointer to the member property.</div><div class="ttdef"><b>Definition</b> ConstantProperty.h:49</div></div>
<div class="ttc" id="aclasspl_constant_property_htm_a428d5e22c4bde308434bab28d897434f"><div class="ttname"><a href="../../df/db0/classpl_constant_property.htm#a428d5e22c4bde308434bab28d897434f">plConstantProperty::plConstantProperty</a></div><div class="ttdeci">plConstantProperty(const char *szPropertyName, Type value)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition</b> ConstantProperty.h:41</div></div>
<div class="ttc" id="aclasspl_constant_property_htm_a477c38e97d0e9cac1a9b7f9b272e42fc"><div class="ttname"><a href="../../df/db0/classpl_constant_property.htm#a477c38e97d0e9cac1a9b7f9b272e42fc">plConstantProperty::GetValue</a></div><div class="ttdeci">virtual Type GetValue() const override</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> ConstantProperty.h:52</div></div>
<div class="ttc" id="aclasspl_constant_property_htm_a9faea657b613c46f741f793d3f3b65fd"><div class="ttname"><a href="../../df/db0/classpl_constant_property.htm#a9faea657b613c46f741f793d3f3b65fd">plConstantProperty::GetConstant</a></div><div class="ttdeci">virtual plVariant GetConstant() const override</div><div class="ttdoc">Returns the constant value as an plVariant.</div><div class="ttdef"><b>Definition</b> ConstantProperty.h:57</div></div>
<div class="ttc" id="aclasspl_r_t_t_i_htm"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclasspl_typed_constant_property_htm"><div class="ttname"><a href="../../dd/d62/classpl_typed_constant_property.htm">plTypedConstantProperty</a></div><div class="ttdoc">The base class for all typed member properties. Ie. once the type of a property is determined,...</div><div class="ttdef"><b>Definition</b> ConstantProperty.h:15</div></div>
<div class="ttc" id="aclasspl_typed_constant_property_htm_a55c871b3c2b3ab8abb327294c50c2ba3"><div class="ttname"><a href="../../dd/d62/classpl_typed_constant_property.htm#a55c871b3c2b3ab8abb327294c50c2ba3">plTypedConstantProperty::GetSpecificType</a></div><div class="ttdeci">virtual const plRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the actual type of the property. You can then compare that with known types,...</div><div class="ttdef"><b>Definition</b> ConstantProperty.h:26</div></div>
<div class="ttc" id="aclasspl_typed_constant_property_htm_adb860979d924bf82cb452be73a08070e"><div class="ttname"><a href="../../dd/d62/classpl_typed_constant_property.htm#adb860979d924bf82cb452be73a08070e">plTypedConstantProperty::plTypedConstantProperty</a></div><div class="ttdeci">plTypedConstantProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to plAbstractMemberProperty.</div><div class="ttdef"><b>Definition</b> ConstantProperty.h:18</div></div>
<div class="ttc" id="aclasspl_typed_constant_property_htm_ae7e3b1f1383865f99289942c39daa983"><div class="ttname"><a href="../../dd/d62/classpl_typed_constant_property.htm#ae7e3b1f1383865f99289942c39daa983">plTypedConstantProperty::GetValue</a></div><div class="ttdeci">virtual Type GetValue() const =0</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div></div>
<div class="ttc" id="aclasspl_variant_htm"><div class="ttname"><a href="../../da/d4c/classpl_variant.htm">plVariant</a></div><div class="ttdoc">plVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="astructpl_bitflags_htm_ae6aa76fea32d1d2777f8c4da767cda67"><div class="ttname"><a href="../../df/dd9/structpl_bitflags.htm#ae6aa76fea32d1d2777f8c4da767cda67">plBitflags::IsSet</a></div><div class="ttdeci">PL_ALWAYS_INLINE bool IsSet(Enum flag) const</div><div class="ttdoc">Checks if certain flags are set within the bitfield.</div><div class="ttdef"><b>Definition</b> Bitflags.h:127</div></div>
<div class="ttc" id="astructpl_property_flags_htm_aa9691dcb8643c279db2c187968da4d10a69f692be2ed348904be1ea4cd7aafa8b"><div class="ttname"><a href="../../db/d0f/structpl_property_flags.htm#aa9691dcb8643c279db2c187968da4d10a69f692be2ed348904be1ea4cd7aafa8b">plPropertyFlags::StandardType</a></div><div class="ttdeci">@ StandardType</div><div class="ttdoc">Anything that can be stored inside an plVariant except for pointers and containers.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:53</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_03dd0ffe19aabd3d1cd0d82a91256ab1.htm">Reflection</a></li><li class="navelem"><a class="el" href="../../dir_e37e67d8810cb9249b77d55deb37c5cb.htm">Implementation</a></li><li class="navelem"><b>ConstantProperty.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
