<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plWorld Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d2/d12/classpl_world.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../db/d3d/classpl_world-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plWorld Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>A world encapsulates a scene graph of game objects and various component managers and their components.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/d86/_world_8h_source.htm">World.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:af232e07f5d9dfeb9d0a6c0db4153b750" id="r_af232e07f5d9dfeb9d0a6c0db4153b750"><td class="memItemLeft" align="right" valign="top"><a id="af232e07f5d9dfeb9d0a6c0db4153b750" name="af232e07f5d9dfeb9d0a6c0db4153b750"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ReferenceResolver</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt;<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a>(const void*, <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> hThis, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sProperty)&gt;</td></tr>
<tr class="separator:af232e07f5d9dfeb9d0a6c0db4153b750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcbf13fffa0e7c9837e6334074b79e20" id="r_abcbf13fffa0e7c9837e6334074b79e20"><td class="memItemLeft" align="right" valign="top"><a id="abcbf13fffa0e7c9837e6334074b79e20" name="abcbf13fffa0e7c9837e6334074b79e20"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ResourceReloadContext</b> = plInternal::WorldData::ResourceReloadContext</td></tr>
<tr class="separator:abcbf13fffa0e7c9837e6334074b79e20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad976a885d6f4e1456210962b43696bef" id="r_ad976a885d6f4e1456210962b43696bef"><td class="memItemLeft" align="right" valign="top"><a id="ad976a885d6f4e1456210962b43696bef" name="ad976a885d6f4e1456210962b43696bef"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ResourceReloadFunc</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plInternal::WorldData::ResourceReloadFunc</a></td></tr>
<tr class="separator:ad976a885d6f4e1456210962b43696bef"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2256b90b7369a32a695ce1be4d046e79" id="r_a2256b90b7369a32a695ce1be4d046e79"><td class="memItemLeft" align="right" valign="top"><a id="a2256b90b7369a32a695ce1be4d046e79" name="a2256b90b7369a32a695ce1be4d046e79"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plWorld</b> (<a class="el" href="../../d7/d6f/structpl_world_desc.htm">plWorldDesc</a> &amp;ref_desc)</td></tr>
<tr class="memdesc:a2256b90b7369a32a695ce1be4d046e79"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new world with the given name. <br /></td></tr>
<tr class="separator:a2256b90b7369a32a695ce1be4d046e79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab76861451ee04683cb3aae694e5ffaa" id="r_aab76861451ee04683cb3aae694e5ffaa"><td class="memItemLeft" align="right" valign="top"><a id="aab76861451ee04683cb3aae694e5ffaa" name="aab76861451ee04683cb3aae694e5ffaa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:aab76861451ee04683cb3aae694e5ffaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes all game objects in a world. <br /></td></tr>
<tr class="separator:aab76861451ee04683cb3aae694e5ffaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd6b1e807c3c4a87a064902aa126471" id="r_aadd6b1e807c3c4a87a064902aa126471"><td class="memItemLeft" align="right" valign="top"><a id="aadd6b1e807c3c4a87a064902aa126471" name="aadd6b1e807c3c4a87a064902aa126471"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="memdesc:aadd6b1e807c3c4a87a064902aa126471"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of this world. <br /></td></tr>
<tr class="separator:aadd6b1e807c3c4a87a064902aa126471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c4ab0f3868ba08df8ad136844a2ae5b" id="r_a0c4ab0f3868ba08df8ad136844a2ae5b"><td class="memItemLeft" align="right" valign="top"><a id="a0c4ab0f3868ba08df8ad136844a2ae5b" name="a0c4ab0f3868ba08df8ad136844a2ae5b"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetIndex</b> () const</td></tr>
<tr class="memdesc:a0c4ab0f3868ba08df8ad136844a2ae5b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of this world. <br /></td></tr>
<tr class="separator:a0c4ab0f3868ba08df8ad136844a2ae5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7250f5c861f9a86039a192e0cdf248cc" id="r_a7250f5c861f9a86039a192e0cdf248cc"><td class="memItemLeft" align="right" valign="top"><a id="a7250f5c861f9a86039a192e0cdf248cc" name="a7250f5c861f9a86039a192e0cdf248cc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetWorldSimulationEnabled</b> (bool bEnable)</td></tr>
<tr class="memdesc:a7250f5c861f9a86039a192e0cdf248cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">If enabled, the full simulation should be executed, otherwise only the rendering related updates should be done. <br /></td></tr>
<tr class="separator:a7250f5c861f9a86039a192e0cdf248cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd8677ff878a305455ae2ef01e50de90" id="r_acd8677ff878a305455ae2ef01e50de90"><td class="memItemLeft" align="right" valign="top"><a id="acd8677ff878a305455ae2ef01e50de90" name="acd8677ff878a305455ae2ef01e50de90"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorldSimulationEnabled</b> () const</td></tr>
<tr class="memdesc:acd8677ff878a305455ae2ef01e50de90"><td class="mdescLeft">&#160;</td><td class="mdescRight">If enabled, the full simulation should be executed, otherwise only the rendering related updates should be done. <br /></td></tr>
<tr class="separator:acd8677ff878a305455ae2ef01e50de90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d335d3b9a0f3cddb8e18fde737439d2" id="r_a9d335d3b9a0f3cddb8e18fde737439d2"><td class="memItemLeft" align="right" valign="top"><a id="a9d335d3b9a0f3cddb8e18fde737439d2" name="a9d335d3b9a0f3cddb8e18fde737439d2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Update</b> ()</td></tr>
<tr class="memdesc:a9d335d3b9a0f3cddb8e18fde737439d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the world by calling the various update methods on the component managers and also updates the transformation data of the game objects. See <a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> for a detailed description of the update phases. <br /></td></tr>
<tr class="separator:a9d335d3b9a0f3cddb8e18fde737439d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd4bc1244ae0a588ce3635ebed6102cc" id="r_afd4bc1244ae0a588ce3635ebed6102cc"><td class="memItemLeft" align="right" valign="top"><a id="afd4bc1244ae0a588ce3635ebed6102cc" name="afd4bc1244ae0a588ce3635ebed6102cc"></a>
const <a class="el" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>&lt; <a class="el" href="../../d9/db9/classpl_task.htm">plTask</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetUpdateTask</b> ()</td></tr>
<tr class="memdesc:afd4bc1244ae0a588ce3635ebed6102cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a task implementation that calls Update on this world. <br /></td></tr>
<tr class="separator:afd4bc1244ae0a588ce3635ebed6102cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45211a56b83a04e3ea068791b2f3ef6b" id="r_a45211a56b83a04e3ea068791b2f3ef6b"><td class="memItemLeft" align="right" valign="top"><a id="a45211a56b83a04e3ea068791b2f3ef6b" name="a45211a56b83a04e3ea068791b2f3ef6b"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetUpdateCounter</b> () const</td></tr>
<tr class="memdesc:a45211a56b83a04e3ea068791b2f3ef6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of update calls. Can be used to determine whether an operation has already been done during a frame. <br /></td></tr>
<tr class="separator:a45211a56b83a04e3ea068791b2f3ef6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74efa0f2e646edd6606464fef15576e3" id="r_a74efa0f2e646edd6606464fef15576e3"><td class="memItemLeft" align="right" valign="top"><a id="a74efa0f2e646edd6606464fef15576e3" name="a74efa0f2e646edd6606464fef15576e3"></a>
<a class="el" href="../../df/d2f/classpl_spatial_system.htm">plSpatialSystem</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetSpatialSystem</b> ()</td></tr>
<tr class="memdesc:a74efa0f2e646edd6606464fef15576e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the spatial system that is associated with this world. <br /></td></tr>
<tr class="separator:a74efa0f2e646edd6606464fef15576e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f39fe812a363a66efa309dab0563ffc" id="r_a0f39fe812a363a66efa309dab0563ffc"><td class="memItemLeft" align="right" valign="top"><a id="a0f39fe812a363a66efa309dab0563ffc" name="a0f39fe812a363a66efa309dab0563ffc"></a>
const <a class="el" href="../../df/d2f/classpl_spatial_system.htm">plSpatialSystem</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetSpatialSystem</b> () const</td></tr>
<tr class="memdesc:a0f39fe812a363a66efa309dab0563ffc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the spatial system that is associated with this world. <br /></td></tr>
<tr class="separator:a0f39fe812a363a66efa309dab0563ffc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b49645624f8734561254555eb9bc676" id="r_a5b49645624f8734561254555eb9bc676"><td class="memItemLeft" align="right" valign="top"><a id="a5b49645624f8734561254555eb9bc676" name="a5b49645624f8734561254555eb9bc676"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetCoordinateSystem</b> (const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vGlobalPosition, <a class="el" href="../../d4/da0/structpl_coordinate_system.htm">plCoordinateSystem</a> &amp;out_coordinateSystem) const</td></tr>
<tr class="memdesc:a5b49645624f8734561254555eb9bc676"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the coordinate system for the given position. By default this always returns a coordinate system with forward = +X, right = +Y and up = +Z. This can be customized by setting a different coordinate system provider. <br /></td></tr>
<tr class="separator:a5b49645624f8734561254555eb9bc676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a048a0605607009e6917a9d31fd76d275" id="r_a048a0605607009e6917a9d31fd76d275"><td class="memItemLeft" align="right" valign="top"><a id="a048a0605607009e6917a9d31fd76d275" name="a048a0605607009e6917a9d31fd76d275"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCoordinateSystemProvider</b> (const <a class="el" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>&lt; <a class="el" href="../../d7/db4/classpl_coordinate_system_provider.htm">plCoordinateSystemProvider</a> &gt; &amp;pProvider)</td></tr>
<tr class="memdesc:a048a0605607009e6917a9d31fd76d275"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the coordinate system provider that should be used in this world. <br /></td></tr>
<tr class="separator:a048a0605607009e6917a9d31fd76d275"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8f95e54d80b736c0d6b6dca6cdd1598" id="r_aa8f95e54d80b736c0d6b6dca6cdd1598"><td class="memItemLeft" align="right" valign="top"><a id="aa8f95e54d80b736c0d6b6dca6cdd1598" name="aa8f95e54d80b736c0d6b6dca6cdd1598"></a>
<a class="el" href="../../d7/db4/classpl_coordinate_system_provider.htm">plCoordinateSystemProvider</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetCoordinateSystemProvider</b> ()</td></tr>
<tr class="memdesc:aa8f95e54d80b736c0d6b6dca6cdd1598"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the coordinate system provider that is associated with this world. <br /></td></tr>
<tr class="separator:aa8f95e54d80b736c0d6b6dca6cdd1598"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac52777d6422444d40386bc082aaee8a" id="r_aac52777d6422444d40386bc082aaee8a"><td class="memItemLeft" align="right" valign="top"><a id="aac52777d6422444d40386bc082aaee8a" name="aac52777d6422444d40386bc082aaee8a"></a>
const <a class="el" href="../../d7/db4/classpl_coordinate_system_provider.htm">plCoordinateSystemProvider</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetCoordinateSystemProvider</b> () const</td></tr>
<tr class="memdesc:aac52777d6422444d40386bc082aaee8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the coordinate system provider that is associated with this world. <br /></td></tr>
<tr class="separator:aac52777d6422444d40386bc082aaee8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cb582985566eef6604c974a76db653f" id="r_a0cb582985566eef6604c974a76db653f"><td class="memItemLeft" align="right" valign="top"><a id="a0cb582985566eef6604c974a76db653f" name="a0cb582985566eef6604c974a76db653f"></a>
<a class="el" href="../../d6/def/classpl_clock.htm">plClock</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetClock</b> ()</td></tr>
<tr class="memdesc:a0cb582985566eef6604c974a76db653f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the clock that is used for all updates in this game world. <br /></td></tr>
<tr class="separator:a0cb582985566eef6604c974a76db653f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf3455d3a059aaf7124bc5abde1f4b25" id="r_abf3455d3a059aaf7124bc5abde1f4b25"><td class="memItemLeft" align="right" valign="top"><a id="abf3455d3a059aaf7124bc5abde1f4b25" name="abf3455d3a059aaf7124bc5abde1f4b25"></a>
const <a class="el" href="../../d6/def/classpl_clock.htm">plClock</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetClock</b> () const</td></tr>
<tr class="memdesc:abf3455d3a059aaf7124bc5abde1f4b25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the clock that is used for all updates in this game world. <br /></td></tr>
<tr class="separator:abf3455d3a059aaf7124bc5abde1f4b25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c371990fd426ebd91b4a1c8bab3ad28" id="r_a6c371990fd426ebd91b4a1c8bab3ad28"><td class="memItemLeft" align="right" valign="top"><a id="a6c371990fd426ebd91b4a1c8bab3ad28" name="a6c371990fd426ebd91b4a1c8bab3ad28"></a>
<a class="el" href="../../dc/d34/classpl_random.htm">plRandom</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetRandomNumberGenerator</b> ()</td></tr>
<tr class="memdesc:a6c371990fd426ebd91b4a1c8bab3ad28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Accesses the default random number generator. If more control is desired, individual components should use their own RNG. <br /></td></tr>
<tr class="separator:a6c371990fd426ebd91b4a1c8bab3ad28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b159861267bf30648b3b2ccd418125d" id="r_a9b159861267bf30648b3b2ccd418125d"><td class="memItemLeft" align="right" valign="top"><a id="a9b159861267bf30648b3b2ccd418125d" name="a9b159861267bf30648b3b2ccd418125d"></a>
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> ()</td></tr>
<tr class="memdesc:a9b159861267bf30648b3b2ccd418125d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator used by this world. <br /></td></tr>
<tr class="separator:a9b159861267bf30648b3b2ccd418125d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a770041afe5ca4b181ed6ec1c98f43282" id="r_a770041afe5ca4b181ed6ec1c98f43282"><td class="memItemLeft" align="right" valign="top"><a id="a770041afe5ca4b181ed6ec1c98f43282" name="a770041afe5ca4b181ed6ec1c98f43282"></a>
<a class="el" href="../../dc/d2e/classpl_large_block_allocator.htm">plInternal::WorldLargeBlockAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetBlockAllocator</b> ()</td></tr>
<tr class="memdesc:a770041afe5ca4b181ed6ec1c98f43282"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the block allocator used by this world. <br /></td></tr>
<tr class="separator:a770041afe5ca4b181ed6ec1c98f43282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfcb91a738e26e33134e2a48a14a06e3" id="r_adfcb91a738e26e33134e2a48a14a06e3"><td class="memItemLeft" align="right" valign="top"><a id="adfcb91a738e26e33134e2a48a14a06e3" name="adfcb91a738e26e33134e2a48a14a06e3"></a>
<a class="el" href="../../d6/d1d/classpl_double_buffered_linear_allocator.htm">plDoubleBufferedLinearAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStackAllocator</b> ()</td></tr>
<tr class="memdesc:adfcb91a738e26e33134e2a48a14a06e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the stack allocator used by this world. <br /></td></tr>
<tr class="separator:adfcb91a738e26e33134e2a48a14a06e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6a0e643e99cde81386e454d89ce07a" id="r_a7e6a0e643e99cde81386e454d89ce07a"><td class="memItemLeft" align="right" valign="top"><a id="a7e6a0e643e99cde81386e454d89ce07a" name="a7e6a0e643e99cde81386e454d89ce07a"></a>
<a class="el" href="../../d0/d8f/classpl_internal_1_1_world_data_1_1_read_marker.htm">plInternal::WorldData::ReadMarker</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetReadMarker</b> () const</td></tr>
<tr class="memdesc:a7e6a0e643e99cde81386e454d89ce07a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mark the world for reading by using PL_LOCK(world.GetReadMarker()). Multiple threads can read simultaneously if none is writing. <br /></td></tr>
<tr class="separator:a7e6a0e643e99cde81386e454d89ce07a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5289db3374b3f49499b827746b8a7f23" id="r_a5289db3374b3f49499b827746b8a7f23"><td class="memItemLeft" align="right" valign="top"><a id="a5289db3374b3f49499b827746b8a7f23" name="a5289db3374b3f49499b827746b8a7f23"></a>
<a class="el" href="../../d1/d03/classpl_internal_1_1_world_data_1_1_write_marker.htm">plInternal::WorldData::WriteMarker</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetWriteMarker</b> ()</td></tr>
<tr class="memdesc:a5289db3374b3f49499b827746b8a7f23"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mark the world for writing by using PL_LOCK(world.GetWriteMarker()). Only one thread can write at a time. <br /></td></tr>
<tr class="separator:a5289db3374b3f49499b827746b8a7f23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5654da3f8f44ced16826fc3140cc9e37" id="r_a5654da3f8f44ced16826fc3140cc9e37"><td class="memItemLeft" align="right" valign="top"><a id="a5654da3f8f44ced16826fc3140cc9e37" name="a5654da3f8f44ced16826fc3140cc9e37"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetMaxInitializationTimePerFrame</b> (<a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> maxInitTime)</td></tr>
<tr class="memdesc:a5654da3f8f44ced16826fc3140cc9e37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows re-setting the maximum time that is spent on component initialization per frame, which is first configured on construction. <br /></td></tr>
<tr class="separator:a5654da3f8f44ced16826fc3140cc9e37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebcfea0e6bbd59f94665c1e12779f03e" id="r_aebcfea0e6bbd59f94665c1e12779f03e"><td class="memItemLeft" align="right" valign="top"><a id="aebcfea0e6bbd59f94665c1e12779f03e" name="aebcfea0e6bbd59f94665c1e12779f03e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetUserData</b> (void *pUserData)</td></tr>
<tr class="memdesc:aebcfea0e6bbd59f94665c1e12779f03e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Associates the given user data with the world. The user is responsible for the life time of user data. <br /></td></tr>
<tr class="separator:aebcfea0e6bbd59f94665c1e12779f03e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af89535510093d66dc163d6e989e3f173" id="r_af89535510093d66dc163d6e989e3f173"><td class="memItemLeft" align="right" valign="top"><a id="af89535510093d66dc163d6e989e3f173" name="af89535510093d66dc163d6e989e3f173"></a>
void *&#160;</td><td class="memItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="memdesc:af89535510093d66dc163d6e989e3f173"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the associated user data. <br /></td></tr>
<tr class="separator:af89535510093d66dc163d6e989e3f173"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab94904a69f68cf2ea2e4c9abdee7b0ec" id="r_ab94904a69f68cf2ea2e4c9abdee7b0ec"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab94904a69f68cf2ea2e4c9abdee7b0ec">SetGameObjectReferenceResolver</a> (const <a class="el" href="../../df/df1/structpl_delegate.htm">ReferenceResolver</a> &amp;resolver)</td></tr>
<tr class="memdesc:ab94904a69f68cf2ea2e4c9abdee7b0ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">If set, this delegate can be used to map some data (GUID or string) to an <a class="el" href="../../d2/d49/structpl_game_object_handle.htm" title="A handle to a game object.">plGameObjectHandle</a>.  <br /></td></tr>
<tr class="separator:ab94904a69f68cf2ea2e4c9abdee7b0ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc63a9cecfa0048b29f183218c471ef9" id="r_afc63a9cecfa0048b29f183218c471ef9"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../df/df1/structpl_delegate.htm">ReferenceResolver</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afc63a9cecfa0048b29f183218c471ef9">GetGameObjectReferenceResolver</a> () const</td></tr>
<tr class="separator:afc63a9cecfa0048b29f183218c471ef9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fdd34e8997fe117f84bddcf27317315" id="r_a3fdd34e8997fe117f84bddcf27317315"><td class="memItemLeft" align="right" valign="top"><a id="a3fdd34e8997fe117f84bddcf27317315" name="a3fdd34e8997fe117f84bddcf27317315"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddResourceReloadFunction</b> (<a class="el" href="../../d1/d91/classpl_typeless_resource_handle.htm">plTypelessResourceHandle</a> hResource, <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> hComponent, void *pUserData, <a class="el" href="../../df/df1/structpl_delegate.htm">ResourceReloadFunc</a> function)</td></tr>
<tr class="memdesc:a3fdd34e8997fe117f84bddcf27317315"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a function that is called when the given resource has been reloaded. <br /></td></tr>
<tr class="separator:a3fdd34e8997fe117f84bddcf27317315"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a078243acaa988b45182c4742c9bd5d81" id="r_a078243acaa988b45182c4742c9bd5d81"><td class="memItemLeft" align="right" valign="top"><a id="a078243acaa988b45182c4742c9bd5d81" name="a078243acaa988b45182c4742c9bd5d81"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveResourceReloadFunction</b> (<a class="el" href="../../d1/d91/classpl_typeless_resource_handle.htm">plTypelessResourceHandle</a> hResource, <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> hComponent, void *pUserData)</td></tr>
<tr class="separator:a078243acaa988b45182c4742c9bd5d81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76db18e39f2d7c357acae5fd32aef01d" id="r_a76db18e39f2d7c357acae5fd32aef01d"><td class="memTemplParams" colspan="2"><a id="a76db18e39f2d7c357acae5fd32aef01d" name="a76db18e39f2d7c357acae5fd32aef01d"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a76db18e39f2d7c357acae5fd32aef01d"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE ModuleType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetOrCreateModule</b> ()</td></tr>
<tr class="separator:a76db18e39f2d7c357acae5fd32aef01d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2730d806aacc95438574bf0449fc1446" id="r_a2730d806aacc95438574bf0449fc1446"><td class="memTemplParams" colspan="2"><a id="a2730d806aacc95438574bf0449fc1446" name="a2730d806aacc95438574bf0449fc1446"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a2730d806aacc95438574bf0449fc1446"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>DeleteModule</b> ()</td></tr>
<tr class="separator:a2730d806aacc95438574bf0449fc1446"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78718a3abe1c8c2e789c68535e6876fe" id="r_a78718a3abe1c8c2e789c68535e6876fe"><td class="memTemplParams" colspan="2"><a id="a78718a3abe1c8c2e789c68535e6876fe" name="a78718a3abe1c8c2e789c68535e6876fe"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a78718a3abe1c8c2e789c68535e6876fe"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE ModuleType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetModule</b> ()</td></tr>
<tr class="separator:a78718a3abe1c8c2e789c68535e6876fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6457da1addb29f1cccf85bbe676fd13d" id="r_a6457da1addb29f1cccf85bbe676fd13d"><td class="memTemplParams" colspan="2"><a id="a6457da1addb29f1cccf85bbe676fd13d" name="a6457da1addb29f1cccf85bbe676fd13d"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a6457da1addb29f1cccf85bbe676fd13d"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE const ModuleType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetModule</b> () const</td></tr>
<tr class="separator:a6457da1addb29f1cccf85bbe676fd13d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a376a8fee0a119036ec931887cac6405b" id="r_a376a8fee0a119036ec931887cac6405b"><td class="memTemplParams" colspan="2"><a id="a376a8fee0a119036ec931887cac6405b" name="a376a8fee0a119036ec931887cac6405b"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a376a8fee0a119036ec931887cac6405b"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE const ModuleType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetModuleReadOnly</b> () const</td></tr>
<tr class="separator:a376a8fee0a119036ec931887cac6405b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b867109b5693c16c2dc60447bdfd683" id="r_a7b867109b5693c16c2dc60447bdfd683"><td class="memTemplParams" colspan="2"><a id="a7b867109b5693c16c2dc60447bdfd683" name="a7b867109b5693c16c2dc60447bdfd683"></a>
template&lt;typename ManagerType &gt; </td></tr>
<tr class="memitem:a7b867109b5693c16c2dc60447bdfd683"><td class="memTemplItemLeft" align="right" valign="top">PL_FORCE_INLINE ManagerType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetComponentManager</b> ()</td></tr>
<tr class="separator:a7b867109b5693c16c2dc60447bdfd683"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab48215044113903ebe086d98b80c2974" id="r_ab48215044113903ebe086d98b80c2974"><td class="memTemplParams" colspan="2"><a id="ab48215044113903ebe086d98b80c2974" name="ab48215044113903ebe086d98b80c2974"></a>
template&lt;typename ManagerType &gt; </td></tr>
<tr class="memitem:ab48215044113903ebe086d98b80c2974"><td class="memTemplItemLeft" align="right" valign="top">PL_FORCE_INLINE const ManagerType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetComponentManager</b> () const</td></tr>
<tr class="separator:ab48215044113903ebe086d98b80c2974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Module Functions</div></td></tr>
<tr class="memitem:a8eaf30460dc7605f40598a5ee0dee52e" id="r_a8eaf30460dc7605f40598a5ee0dee52e"><td class="memTemplParams" colspan="2"><a id="a8eaf30460dc7605f40598a5ee0dee52e" name="a8eaf30460dc7605f40598a5ee0dee52e"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a8eaf30460dc7605f40598a5ee0dee52e"><td class="memTemplItemLeft" align="right" valign="top">ModuleType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetOrCreateModule</b> ()</td></tr>
<tr class="memdesc:a8eaf30460dc7605f40598a5ee0dee52e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an instance of the given module type or derived type or returns a pointer to an already existing instance. <br /></td></tr>
<tr class="separator:a8eaf30460dc7605f40598a5ee0dee52e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa37dfb40974a3072af8ef81e56fe9f5d" id="r_aa37dfb40974a3072af8ef81e56fe9f5d"><td class="memItemLeft" align="right" valign="top"><a id="aa37dfb40974a3072af8ef81e56fe9f5d" name="aa37dfb40974a3072af8ef81e56fe9f5d"></a>
<a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetOrCreateModule</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pRtti)</td></tr>
<tr class="memdesc:aa37dfb40974a3072af8ef81e56fe9f5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an instance of the given module type or derived type or returns a pointer to an already existing instance. <br /></td></tr>
<tr class="separator:aa37dfb40974a3072af8ef81e56fe9f5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d3e84af0b6bb77cc8aedb43fbbdf061" id="r_a5d3e84af0b6bb77cc8aedb43fbbdf061"><td class="memTemplParams" colspan="2"><a id="a5d3e84af0b6bb77cc8aedb43fbbdf061" name="a5d3e84af0b6bb77cc8aedb43fbbdf061"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a5d3e84af0b6bb77cc8aedb43fbbdf061"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>DeleteModule</b> ()</td></tr>
<tr class="memdesc:a5d3e84af0b6bb77cc8aedb43fbbdf061"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the module of the given type or derived types. <br /></td></tr>
<tr class="separator:a5d3e84af0b6bb77cc8aedb43fbbdf061"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8806bd87650ec090dd920007baf8950" id="r_af8806bd87650ec090dd920007baf8950"><td class="memItemLeft" align="right" valign="top"><a id="af8806bd87650ec090dd920007baf8950" name="af8806bd87650ec090dd920007baf8950"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DeleteModule</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pRtti)</td></tr>
<tr class="memdesc:af8806bd87650ec090dd920007baf8950"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the module of the given type or derived types. <br /></td></tr>
<tr class="separator:af8806bd87650ec090dd920007baf8950"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e412037d1019d8c32a2b128561e8521" id="r_a0e412037d1019d8c32a2b128561e8521"><td class="memTemplParams" colspan="2"><a id="a0e412037d1019d8c32a2b128561e8521" name="a0e412037d1019d8c32a2b128561e8521"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a0e412037d1019d8c32a2b128561e8521"><td class="memTemplItemLeft" align="right" valign="top">ModuleType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetModule</b> ()</td></tr>
<tr class="memdesc:a0e412037d1019d8c32a2b128561e8521"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the instance to the given module type or derived types. <br /></td></tr>
<tr class="separator:a0e412037d1019d8c32a2b128561e8521"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd5583d17717cdee90581ad39cad259d" id="r_abd5583d17717cdee90581ad39cad259d"><td class="memTemplParams" colspan="2"><a id="abd5583d17717cdee90581ad39cad259d" name="abd5583d17717cdee90581ad39cad259d"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:abd5583d17717cdee90581ad39cad259d"><td class="memTemplItemLeft" align="right" valign="top">const ModuleType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetModule</b> () const</td></tr>
<tr class="memdesc:abd5583d17717cdee90581ad39cad259d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the instance to the given module type or derived types. <br /></td></tr>
<tr class="separator:abd5583d17717cdee90581ad39cad259d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13c2421765988d6e611af9b9dd05d64f" id="r_a13c2421765988d6e611af9b9dd05d64f"><td class="memTemplParams" colspan="2"><a id="a13c2421765988d6e611af9b9dd05d64f" name="a13c2421765988d6e611af9b9dd05d64f"></a>
template&lt;typename ModuleType &gt; </td></tr>
<tr class="memitem:a13c2421765988d6e611af9b9dd05d64f"><td class="memTemplItemLeft" align="right" valign="top">const ModuleType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetModuleReadOnly</b> () const</td></tr>
<tr class="memdesc:a13c2421765988d6e611af9b9dd05d64f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the instance to the given module type or derived types. <br /></td></tr>
<tr class="separator:a13c2421765988d6e611af9b9dd05d64f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2fdb2a906567e8469386d7412cc4bef" id="r_ab2fdb2a906567e8469386d7412cc4bef"><td class="memItemLeft" align="right" valign="top"><a id="ab2fdb2a906567e8469386d7412cc4bef" name="ab2fdb2a906567e8469386d7412cc4bef"></a>
<a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetModule</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pRtti)</td></tr>
<tr class="memdesc:ab2fdb2a906567e8469386d7412cc4bef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the instance to the given module type or derived types. <br /></td></tr>
<tr class="separator:ab2fdb2a906567e8469386d7412cc4bef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a418ce86a44eb0988d5b1a73397c23b17" id="r_a418ce86a44eb0988d5b1a73397c23b17"><td class="memItemLeft" align="right" valign="top"><a id="a418ce86a44eb0988d5b1a73397c23b17" name="a418ce86a44eb0988d5b1a73397c23b17"></a>
const <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetModule</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pRtti) const</td></tr>
<tr class="memdesc:a418ce86a44eb0988d5b1a73397c23b17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the instance to the given module type or derived types. <br /></td></tr>
<tr class="separator:a418ce86a44eb0988d5b1a73397c23b17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Component Functions</div></td></tr>
<tr class="memitem:a46c74f781f964f735f7c94ac584cb4d4" id="r_a46c74f781f964f735f7c94ac584cb4d4"><td class="memTemplParams" colspan="2"><a id="a46c74f781f964f735f7c94ac584cb4d4" name="a46c74f781f964f735f7c94ac584cb4d4"></a>
template&lt;typename ManagerType &gt; </td></tr>
<tr class="memitem:a46c74f781f964f735f7c94ac584cb4d4"><td class="memTemplItemLeft" align="right" valign="top">ManagerType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetOrCreateComponentManager</b> ()</td></tr>
<tr class="memdesc:a46c74f781f964f735f7c94ac584cb4d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an instance of the given component manager type or returns a pointer to an already existing instance. <br /></td></tr>
<tr class="separator:a46c74f781f964f735f7c94ac584cb4d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37f4f1dca4cbf23909c8f94c3046ffd0" id="r_a37f4f1dca4cbf23909c8f94c3046ffd0"><td class="memItemLeft" align="right" valign="top"><a id="a37f4f1dca4cbf23909c8f94c3046ffd0" name="a37f4f1dca4cbf23909c8f94c3046ffd0"></a>
<a class="el" href="../../d2/db6/classpl_component_manager_base.htm">plComponentManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetOrCreateManagerForComponentType</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pComponentRtti)</td></tr>
<tr class="memdesc:a37f4f1dca4cbf23909c8f94c3046ffd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component manager that handles the given rtti component type. <br /></td></tr>
<tr class="separator:a37f4f1dca4cbf23909c8f94c3046ffd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ce2adb1027fe04d3d4a55351432c910" id="r_a0ce2adb1027fe04d3d4a55351432c910"><td class="memTemplParams" colspan="2"><a id="a0ce2adb1027fe04d3d4a55351432c910" name="a0ce2adb1027fe04d3d4a55351432c910"></a>
template&lt;typename ManagerType &gt; </td></tr>
<tr class="memitem:a0ce2adb1027fe04d3d4a55351432c910"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>DeleteComponentManager</b> ()</td></tr>
<tr class="memdesc:a0ce2adb1027fe04d3d4a55351432c910"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the component manager of the given type and all its components. <br /></td></tr>
<tr class="separator:a0ce2adb1027fe04d3d4a55351432c910"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeeca88cb929f3e31791fa91262c367d8" id="r_aeeca88cb929f3e31791fa91262c367d8"><td class="memTemplParams" colspan="2"><a id="aeeca88cb929f3e31791fa91262c367d8" name="aeeca88cb929f3e31791fa91262c367d8"></a>
template&lt;typename ManagerType &gt; </td></tr>
<tr class="memitem:aeeca88cb929f3e31791fa91262c367d8"><td class="memTemplItemLeft" align="right" valign="top">ManagerType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetComponentManager</b> ()</td></tr>
<tr class="memdesc:aeeca88cb929f3e31791fa91262c367d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the instance to the given component manager type. <br /></td></tr>
<tr class="separator:aeeca88cb929f3e31791fa91262c367d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a066e9d556b03ab1026a1bb969ce65b4c" id="r_a066e9d556b03ab1026a1bb969ce65b4c"><td class="memTemplParams" colspan="2"><a id="a066e9d556b03ab1026a1bb969ce65b4c" name="a066e9d556b03ab1026a1bb969ce65b4c"></a>
template&lt;typename ManagerType &gt; </td></tr>
<tr class="memitem:a066e9d556b03ab1026a1bb969ce65b4c"><td class="memTemplItemLeft" align="right" valign="top">const ManagerType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetComponentManager</b> () const</td></tr>
<tr class="memdesc:a066e9d556b03ab1026a1bb969ce65b4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the instance to the given component manager type. <br /></td></tr>
<tr class="separator:a066e9d556b03ab1026a1bb969ce65b4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae339b6a2ddda3ed42581f1e57cbf2d6f" id="r_ae339b6a2ddda3ed42581f1e57cbf2d6f"><td class="memItemLeft" align="right" valign="top"><a id="ae339b6a2ddda3ed42581f1e57cbf2d6f" name="ae339b6a2ddda3ed42581f1e57cbf2d6f"></a>
<a class="el" href="../../d2/db6/classpl_component_manager_base.htm">plComponentManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetManagerForComponentType</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pComponentRtti)</td></tr>
<tr class="memdesc:ae339b6a2ddda3ed42581f1e57cbf2d6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component manager that handles the given rtti component type. <br /></td></tr>
<tr class="separator:ae339b6a2ddda3ed42581f1e57cbf2d6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9412164c19861d04fb361ac2cd438699" id="r_a9412164c19861d04fb361ac2cd438699"><td class="memItemLeft" align="right" valign="top"><a id="a9412164c19861d04fb361ac2cd438699" name="a9412164c19861d04fb361ac2cd438699"></a>
const <a class="el" href="../../d2/db6/classpl_component_manager_base.htm">plComponentManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetManagerForComponentType</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pComponentRtti) const</td></tr>
<tr class="memdesc:a9412164c19861d04fb361ac2cd438699"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component manager that handles the given rtti component type. <br /></td></tr>
<tr class="separator:a9412164c19861d04fb361ac2cd438699"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad68bb48f7fec75eb8ff270284d4a2806" id="r_ad68bb48f7fec75eb8ff270284d4a2806"><td class="memItemLeft" align="right" valign="top"><a id="ad68bb48f7fec75eb8ff270284d4a2806" name="ad68bb48f7fec75eb8ff270284d4a2806"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValidComponent</b> (const <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> &amp;hComponent) const</td></tr>
<tr class="memdesc:ad68bb48f7fec75eb8ff270284d4a2806"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given handle references a valid component. <br /></td></tr>
<tr class="separator:ad68bb48f7fec75eb8ff270284d4a2806"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af22f1d8ee0a00aa06f1733be1142d31e" id="r_af22f1d8ee0a00aa06f1733be1142d31e"><td class="memTemplParams" colspan="2"><a id="af22f1d8ee0a00aa06f1733be1142d31e" name="af22f1d8ee0a00aa06f1733be1142d31e"></a>
template&lt;typename ComponentType &gt; </td></tr>
<tr class="memitem:af22f1d8ee0a00aa06f1733be1142d31e"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetComponent</b> (const <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> &amp;hComponent, ComponentType *&amp;out_pComponent)</td></tr>
<tr class="memdesc:af22f1d8ee0a00aa06f1733be1142d31e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether a component with the given handle exists and if so writes out the corresponding pointer to out_pComponent. <br /></td></tr>
<tr class="separator:af22f1d8ee0a00aa06f1733be1142d31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada87eebcdc5866c1771818b010b5e2b0" id="r_ada87eebcdc5866c1771818b010b5e2b0"><td class="memTemplParams" colspan="2"><a id="ada87eebcdc5866c1771818b010b5e2b0" name="ada87eebcdc5866c1771818b010b5e2b0"></a>
template&lt;typename ComponentType &gt; </td></tr>
<tr class="memitem:ada87eebcdc5866c1771818b010b5e2b0"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetComponent</b> (const <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> &amp;hComponent, const ComponentType *&amp;out_pComponent) const</td></tr>
<tr class="memdesc:ada87eebcdc5866c1771818b010b5e2b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether a component with the given handle exists and if so writes out the corresponding pointer to out_pComponent. <br /></td></tr>
<tr class="separator:ada87eebcdc5866c1771818b010b5e2b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40ae5dd6ec080783bf6d2a4b02c668ed" id="r_a40ae5dd6ec080783bf6d2a4b02c668ed"><td class="memItemLeft" align="right" valign="top"><a id="a40ae5dd6ec080783bf6d2a4b02c668ed" name="a40ae5dd6ec080783bf6d2a4b02c668ed"></a>
<a class="el" href="../../d9/d3f/classpl_component_init_batch_handle.htm">plComponentInitBatchHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CreateComponentInitBatch</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sBatchName, bool bMustFinishWithinOneFrame=true)</td></tr>
<tr class="memdesc:a40ae5dd6ec080783bf6d2a4b02c668ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new component init batch. It is ensured that the Initialize function is called for all components in a batch before the OnSimulationStarted is called. If bMustFinishWithinOneFrame is set to false the processing of an init batch can be distributed over multiple frames if m_MaxComponentInitializationTimePerFrame in the world desc is set to a reasonable value. <br /></td></tr>
<tr class="separator:a40ae5dd6ec080783bf6d2a4b02c668ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dc61a0a5687b9e3a33e5eb9b680d6dd" id="r_a2dc61a0a5687b9e3a33e5eb9b680d6dd"><td class="memItemLeft" align="right" valign="top"><a id="a2dc61a0a5687b9e3a33e5eb9b680d6dd" name="a2dc61a0a5687b9e3a33e5eb9b680d6dd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DeleteComponentInitBatch</b> (const <a class="el" href="../../d9/d3f/classpl_component_init_batch_handle.htm">plComponentInitBatchHandle</a> &amp;hBatch)</td></tr>
<tr class="memdesc:a2dc61a0a5687b9e3a33e5eb9b680d6dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes a component init batch. It must be completely processed before it can be deleted. <br /></td></tr>
<tr class="separator:a2dc61a0a5687b9e3a33e5eb9b680d6dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad080c4ac8160e011d2dcd3d65344a90d" id="r_ad080c4ac8160e011d2dcd3d65344a90d"><td class="memItemLeft" align="right" valign="top"><a id="ad080c4ac8160e011d2dcd3d65344a90d" name="ad080c4ac8160e011d2dcd3d65344a90d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>BeginAddingComponentsToInitBatch</b> (const <a class="el" href="../../d9/d3f/classpl_component_init_batch_handle.htm">plComponentInitBatchHandle</a> &amp;hBatch)</td></tr>
<tr class="memdesc:ad080c4ac8160e011d2dcd3d65344a90d"><td class="mdescLeft">&#160;</td><td class="mdescRight">All components that are created between an BeginAddingComponentsToInitBatch/EndAddingComponentsToInitBatch scope are added to the given init batch. <br /></td></tr>
<tr class="separator:ad080c4ac8160e011d2dcd3d65344a90d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e3d61f0ffc9151de13aa7052e058cc0" id="r_a8e3d61f0ffc9151de13aa7052e058cc0"><td class="memItemLeft" align="right" valign="top"><a id="a8e3d61f0ffc9151de13aa7052e058cc0" name="a8e3d61f0ffc9151de13aa7052e058cc0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EndAddingComponentsToInitBatch</b> (const <a class="el" href="../../d9/d3f/classpl_component_init_batch_handle.htm">plComponentInitBatchHandle</a> &amp;hBatch)</td></tr>
<tr class="memdesc:a8e3d61f0ffc9151de13aa7052e058cc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">End adding components to the given batch. Components created after this call are added to the default init batch. <br /></td></tr>
<tr class="separator:a8e3d61f0ffc9151de13aa7052e058cc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee12fd8a5f2eecf0a5cca7ce3deaf8ad" id="r_aee12fd8a5f2eecf0a5cca7ce3deaf8ad"><td class="memItemLeft" align="right" valign="top"><a id="aee12fd8a5f2eecf0a5cca7ce3deaf8ad" name="aee12fd8a5f2eecf0a5cca7ce3deaf8ad"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SubmitComponentInitBatch</b> (const <a class="el" href="../../d9/d3f/classpl_component_init_batch_handle.htm">plComponentInitBatchHandle</a> &amp;hBatch)</td></tr>
<tr class="memdesc:aee12fd8a5f2eecf0a5cca7ce3deaf8ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">After all components have been added to the init batch call submit to start processing the batch. <br /></td></tr>
<tr class="separator:aee12fd8a5f2eecf0a5cca7ce3deaf8ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad77396f5712c03e3fe305d0754626538" id="r_ad77396f5712c03e3fe305d0754626538"><td class="memItemLeft" align="right" valign="top"><a id="ad77396f5712c03e3fe305d0754626538" name="ad77396f5712c03e3fe305d0754626538"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsComponentInitBatchCompleted</b> (const <a class="el" href="../../d9/d3f/classpl_component_init_batch_handle.htm">plComponentInitBatchHandle</a> &amp;hBatch, double *pCompletionFactor=nullptr)</td></tr>
<tr class="memdesc:ad77396f5712c03e3fe305d0754626538"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the init batch has been completely processed and all corresponding components are initialized and their OnSimulationStarted function was called. <br /></td></tr>
<tr class="separator:ad77396f5712c03e3fe305d0754626538"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9040a4a08ab04ee7f60a51293325816" id="r_af9040a4a08ab04ee7f60a51293325816"><td class="memItemLeft" align="right" valign="top"><a id="af9040a4a08ab04ee7f60a51293325816" name="af9040a4a08ab04ee7f60a51293325816"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CancelComponentInitBatch</b> (const <a class="el" href="../../d9/d3f/classpl_component_init_batch_handle.htm">plComponentInitBatchHandle</a> &amp;hBatch)</td></tr>
<tr class="memdesc:af9040a4a08ab04ee7f60a51293325816"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cancel the init batch if it is still active. This might leave outstanding components in an inconsistent state, so this function has be used with care. <br /></td></tr>
<tr class="separator:af9040a4a08ab04ee7f60a51293325816"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Message Functions</div></td></tr>
<tr class="memitem:ae53dde009c4409e616e2b607c6674682" id="r_ae53dde009c4409e616e2b607c6674682"><td class="memItemLeft" align="right" valign="top"><a id="ae53dde009c4409e616e2b607c6674682" name="ae53dde009c4409e616e2b607c6674682"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SendMessage</b> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hReceiverObject, <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;ref_msg)</td></tr>
<tr class="memdesc:ae53dde009c4409e616e2b607c6674682"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message to all components of the receiverObject. <br /></td></tr>
<tr class="separator:ae53dde009c4409e616e2b607c6674682"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abde4e32c074df1382cc4fd4b7afa226b" id="r_abde4e32c074df1382cc4fd4b7afa226b"><td class="memItemLeft" align="right" valign="top"><a id="abde4e32c074df1382cc4fd4b7afa226b" name="abde4e32c074df1382cc4fd4b7afa226b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SendMessageRecursive</b> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hReceiverObject, <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;ref_msg)</td></tr>
<tr class="memdesc:abde4e32c074df1382cc4fd4b7afa226b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message to all components of the receiverObject and all its children. <br /></td></tr>
<tr class="separator:abde4e32c074df1382cc4fd4b7afa226b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad338a2c27543a805bb5b8f7ccf5e2a5c" id="r_ad338a2c27543a805bb5b8f7ccf5e2a5c"><td class="memItemLeft" align="right" valign="top"><a id="ad338a2c27543a805bb5b8f7ccf5e2a5c" name="ad338a2c27543a805bb5b8f7ccf5e2a5c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PostMessage</b> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hReceiverObject, const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg, <a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> delay, <a class="el" href="../../d5/d06/structpl_object_msg_queue_type.htm#a17fe916fa4e797a7186aed5f0d795c30">plObjectMsgQueueType::Enum</a> queueType=<a class="el" href="../../d5/d06/structpl_object_msg_queue_type.htm#a17fe916fa4e797a7186aed5f0d795c30a2404b64a3633334367c032b2ea935c1a">plObjectMsgQueueType::NextFrame</a>) const</td></tr>
<tr class="memdesc:ad338a2c27543a805bb5b8f7ccf5e2a5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queues the message for the given phase. The message is send to the receiverObject after the given delay in the corresponding phase. <br /></td></tr>
<tr class="separator:ad338a2c27543a805bb5b8f7ccf5e2a5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4b649ebfb87e99f6788eaeb54ad467b" id="r_af4b649ebfb87e99f6788eaeb54ad467b"><td class="memItemLeft" align="right" valign="top"><a id="af4b649ebfb87e99f6788eaeb54ad467b" name="af4b649ebfb87e99f6788eaeb54ad467b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PostMessageRecursive</b> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hReceiverObject, const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg, <a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> delay, <a class="el" href="../../d5/d06/structpl_object_msg_queue_type.htm#a17fe916fa4e797a7186aed5f0d795c30">plObjectMsgQueueType::Enum</a> queueType=<a class="el" href="../../d5/d06/structpl_object_msg_queue_type.htm#a17fe916fa4e797a7186aed5f0d795c30a2404b64a3633334367c032b2ea935c1a">plObjectMsgQueueType::NextFrame</a>) const</td></tr>
<tr class="memdesc:af4b649ebfb87e99f6788eaeb54ad467b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queues the message for the given phase. The message is send to the receiverObject and all its children after the given delay in the corresponding phase. <br /></td></tr>
<tr class="separator:af4b649ebfb87e99f6788eaeb54ad467b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53260480fa52d23e0a1982dc7ed87600" id="r_a53260480fa52d23e0a1982dc7ed87600"><td class="memItemLeft" align="right" valign="top"><a id="a53260480fa52d23e0a1982dc7ed87600" name="a53260480fa52d23e0a1982dc7ed87600"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SendMessage</b> (const <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> &amp;hReceiverComponent, <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;ref_msg)</td></tr>
<tr class="memdesc:a53260480fa52d23e0a1982dc7ed87600"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message to the component. <br /></td></tr>
<tr class="separator:a53260480fa52d23e0a1982dc7ed87600"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73c2238640717ebd7933ea1fff67d89c" id="r_a73c2238640717ebd7933ea1fff67d89c"><td class="memItemLeft" align="right" valign="top"><a id="a73c2238640717ebd7933ea1fff67d89c" name="a73c2238640717ebd7933ea1fff67d89c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PostMessage</b> (const <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> &amp;hReceiverComponent, const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg, <a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> delay, <a class="el" href="../../d5/d06/structpl_object_msg_queue_type.htm#a17fe916fa4e797a7186aed5f0d795c30">plObjectMsgQueueType::Enum</a> queueType=<a class="el" href="../../d5/d06/structpl_object_msg_queue_type.htm#a17fe916fa4e797a7186aed5f0d795c30a2404b64a3633334367c032b2ea935c1a">plObjectMsgQueueType::NextFrame</a>) const</td></tr>
<tr class="memdesc:a73c2238640717ebd7933ea1fff67d89c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queues the message for the given phase. The message is send to the receiverComponent after the given delay in the corresponding phase. <br /></td></tr>
<tr class="separator:a73c2238640717ebd7933ea1fff67d89c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25180d268411ef5ab0039a0895cbe06e" id="r_a25180d268411ef5ab0039a0895cbe06e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a25180d268411ef5ab0039a0895cbe06e">FindEventMsgHandlers</a> (const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg, <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *pSearchObject, <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d1/d81/classpl_component.htm">plComponent</a> * &gt; &amp;out_components)</td></tr>
<tr class="memdesc:a25180d268411ef5ab0039a0895cbe06e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds the closest (parent) object, starting at pSearchObject, which has an <a class="el" href="../../d1/d81/classpl_component.htm" title="Base class of all component types.">plComponent</a> that handles the given message and returns all matching components owned by that object. If a <a class="el" href="../../df/deb/classpl_event_message_handler_component.htm" title="Base class for components that want to handle &#39;event messages&#39;.">plEventMessageHandlerComponent</a> is found the search is stopped even if it doesn't handle the given message.  <br /></td></tr>
<tr class="separator:a25180d268411ef5ab0039a0895cbe06e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcf2efcf1d0711368413e029f7101270" id="r_adcf2efcf1d0711368413e029f7101270"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adcf2efcf1d0711368413e029f7101270">FindEventMsgHandlers</a> (const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg, const <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *pSearchObject, <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; const <a class="el" href="../../d1/d81/classpl_component.htm">plComponent</a> * &gt; &amp;out_components) const</td></tr>
<tr class="memdesc:adcf2efcf1d0711368413e029f7101270"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds the closest (parent) object, starting at pSearchObject, which has an <a class="el" href="../../d1/d81/classpl_component.htm" title="Base class of all component types.">plComponent</a> that handles the given message and returns all matching components owned by that object. If a <a class="el" href="../../df/deb/classpl_event_message_handler_component.htm" title="Base class for components that want to handle &#39;event messages&#39;.">plEventMessageHandlerComponent</a> is found the search is stopped even if it doesn't handle the given message.     <br /></td></tr>
<tr class="separator:adcf2efcf1d0711368413e029f7101270"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aa46cb0b5cf846e3d9a981c31d8246c87" id="r_aa46cb0b5cf846e3d9a981c31d8246c87"><td class="memItemLeft" align="right" valign="top"><a id="aa46cb0b5cf846e3d9a981c31d8246c87" name="aa46cb0b5cf846e3d9a981c31d8246c87"></a>
static plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorldCount</b> ()</td></tr>
<tr class="memdesc:aa46cb0b5cf846e3d9a981c31d8246c87"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active worlds. <br /></td></tr>
<tr class="separator:aa46cb0b5cf846e3d9a981c31d8246c87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4472e33c7ca880f9e53386c60d360655" id="r_a4472e33c7ca880f9e53386c60d360655"><td class="memItemLeft" align="right" valign="top"><a id="a4472e33c7ca880f9e53386c60d360655" name="a4472e33c7ca880f9e53386c60d360655"></a>
static <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> (plUInt32 uiIndex)</td></tr>
<tr class="memdesc:a4472e33c7ca880f9e53386c60d360655"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the world with the given index. <br /></td></tr>
<tr class="separator:a4472e33c7ca880f9e53386c60d360655"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae84ae55695eb5b94aef94a588236b3d5" id="r_ae84ae55695eb5b94aef94a588236b3d5"><td class="memItemLeft" align="right" valign="top"><a id="ae84ae55695eb5b94aef94a588236b3d5" name="ae84ae55695eb5b94aef94a588236b3d5"></a>
static <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hObject)</td></tr>
<tr class="memdesc:ae84ae55695eb5b94aef94a588236b3d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the world for the given game object handle. <br /></td></tr>
<tr class="separator:ae84ae55695eb5b94aef94a588236b3d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15f9e319abc8b1dd315e3b5b92bcf538" id="r_a15f9e319abc8b1dd315e3b5b92bcf538"><td class="memItemLeft" align="right" valign="top"><a id="a15f9e319abc8b1dd315e3b5b92bcf538" name="a15f9e319abc8b1dd315e3b5b92bcf538"></a>
static <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> (const <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> &amp;hComponent)</td></tr>
<tr class="memdesc:a15f9e319abc8b1dd315e3b5b92bcf538"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the world for the given component handle. <br /></td></tr>
<tr class="separator:a15f9e319abc8b1dd315e3b5b92bcf538"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Helper methods to query plWorld limits</div></td></tr>
<tr class="memitem:ad1076b6143fe50b5194c8e3f2834dfb0" id="r_ad1076b6143fe50b5194c8e3f2834dfb0"><td class="memItemLeft" align="right" valign="top"><a id="ad1076b6143fe50b5194c8e3f2834dfb0" name="ad1076b6143fe50b5194c8e3f2834dfb0"></a>
static constexpr plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetMaxNumGameObjects</b> ()</td></tr>
<tr class="separator:ad1076b6143fe50b5194c8e3f2834dfb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad598c69fdb0ff880264c3150821297c4" id="r_ad598c69fdb0ff880264c3150821297c4"><td class="memItemLeft" align="right" valign="top"><a id="ad598c69fdb0ff880264c3150821297c4" name="ad598c69fdb0ff880264c3150821297c4"></a>
static constexpr plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetMaxNumHierarchyLevels</b> ()</td></tr>
<tr class="separator:ad598c69fdb0ff880264c3150821297c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9df611ea3f771891ecfa7cf5fb9c16da" id="r_a9df611ea3f771891ecfa7cf5fb9c16da"><td class="memItemLeft" align="right" valign="top"><a id="a9df611ea3f771891ecfa7cf5fb9c16da" name="a9df611ea3f771891ecfa7cf5fb9c16da"></a>
static constexpr plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetMaxNumComponentsPerType</b> ()</td></tr>
<tr class="separator:a9df611ea3f771891ecfa7cf5fb9c16da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dd78fb1b6b9d2b9c24c3b42477cc47f" id="r_a3dd78fb1b6b9d2b9c24c3b42477cc47f"><td class="memItemLeft" align="right" valign="top"><a id="a3dd78fb1b6b9d2b9c24c3b42477cc47f" name="a3dd78fb1b6b9d2b9c24c3b42477cc47f"></a>
static constexpr plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetMaxNumWorldModules</b> ()</td></tr>
<tr class="separator:a3dd78fb1b6b9d2b9c24c3b42477cc47f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab658990b8362f852832faeac066f82ee" id="r_ab658990b8362f852832faeac066f82ee"><td class="memItemLeft" align="right" valign="top"><a id="ab658990b8362f852832faeac066f82ee" name="ab658990b8362f852832faeac066f82ee"></a>
static constexpr plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetMaxNumComponentTypes</b> ()</td></tr>
<tr class="separator:ab658990b8362f852832faeac066f82ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad941951087432b9a0f770b76aa1961a4" id="r_ad941951087432b9a0f770b76aa1961a4"><td class="memItemLeft" align="right" valign="top"><a id="ad941951087432b9a0f770b76aa1961a4" name="ad941951087432b9a0f770b76aa1961a4"></a>
static constexpr plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetMaxNumWorlds</b> ()</td></tr>
<tr class="separator:ad941951087432b9a0f770b76aa1961a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a3c0249e3230d07fdde2783a436467ea9" id="r_a3c0249e3230d07fdde2783a436467ea9"><td class="memItemLeft" align="right" valign="top"><a id="a3c0249e3230d07fdde2783a436467ea9" name="a3c0249e3230d07fdde2783a436467ea9"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plGameObject</b></td></tr>
<tr class="separator:a3c0249e3230d07fdde2783a436467ea9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02eb2665205686f515efffb667a5783a" id="r_a02eb2665205686f515efffb667a5783a"><td class="memItemLeft" align="right" valign="top"><a id="a02eb2665205686f515efffb667a5783a" name="a02eb2665205686f515efffb667a5783a"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plWorldModule</b></td></tr>
<tr class="separator:a02eb2665205686f515efffb667a5783a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a622f67bcd01a400f4e2b6baf04a02075" id="r_a622f67bcd01a400f4e2b6baf04a02075"><td class="memItemLeft" align="right" valign="top"><a id="a622f67bcd01a400f4e2b6baf04a02075" name="a622f67bcd01a400f4e2b6baf04a02075"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plComponentManagerBase</b></td></tr>
<tr class="separator:a622f67bcd01a400f4e2b6baf04a02075"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14420a7f7c36d8a2e857bfb4509c1f6c" id="r_a14420a7f7c36d8a2e857bfb4509c1f6c"><td class="memItemLeft" align="right" valign="top"><a id="a14420a7f7c36d8a2e857bfb4509c1f6c" name="a14420a7f7c36d8a2e857bfb4509c1f6c"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plComponent</b></td></tr>
<tr class="separator:a14420a7f7c36d8a2e857bfb4509c1f6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader">Object Functions</h2></td></tr>
<tr class="memitem:a6b7a7853eebab437e143baa631b2ee82" id="r_a6b7a7853eebab437e143baa631b2ee82"><td class="memItemLeft" align="right" valign="top"><a id="a6b7a7853eebab437e143baa631b2ee82" name="a6b7a7853eebab437e143baa631b2ee82"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>TraversalMethod</b> { <b>BreadthFirst</b>
, <b>DepthFirst</b>
 }</td></tr>
<tr class="separator:a6b7a7853eebab437e143baa631b2ee82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2f8cf520d0bb052693614f475ab9eb2" id="r_ab2f8cf520d0bb052693614f475ab9eb2"><td class="memItemLeft" align="right" valign="top"><a id="ab2f8cf520d0bb052693614f475ab9eb2" name="ab2f8cf520d0bb052693614f475ab9eb2"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>VisitorFunc</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plInternal::WorldData::VisitorFunc</a></td></tr>
<tr class="memdesc:ab2f8cf520d0bb052693614f475ab9eb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines a visitor function that is called for every game-object when using the traverse method. The function takes a pointer to the game object as argument and returns a bool which indicates whether to continue (true) or abort (false) traversal. <br /></td></tr>
<tr class="separator:ab2f8cf520d0bb052693614f475ab9eb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0139726f69815cae4731b6f2c3f444b4" id="r_a0139726f69815cae4731b6f2c3f444b4"><td class="memItemLeft" align="right" valign="top"><a id="a0139726f69815cae4731b6f2c3f444b4" name="a0139726f69815cae4731b6f2c3f444b4"></a>
<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CreateObject</b> (const <a class="el" href="../../dd/d7e/structpl_game_object_desc.htm">plGameObjectDesc</a> &amp;desc)</td></tr>
<tr class="memdesc:a0139726f69815cae4731b6f2c3f444b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new game object from the given description and returns a handle to it. <br /></td></tr>
<tr class="separator:a0139726f69815cae4731b6f2c3f444b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7e97c69f9ae4a13746e73d9e6965bbe" id="r_ab7e97c69f9ae4a13746e73d9e6965bbe"><td class="memItemLeft" align="right" valign="top"><a id="ab7e97c69f9ae4a13746e73d9e6965bbe" name="ab7e97c69f9ae4a13746e73d9e6965bbe"></a>
<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CreateObject</b> (const <a class="el" href="../../dd/d7e/structpl_game_object_desc.htm">plGameObjectDesc</a> &amp;desc, <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *&amp;out_pObject)</td></tr>
<tr class="memdesc:ab7e97c69f9ae4a13746e73d9e6965bbe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create a new game object from the given description, writes a pointer to it to out_pObject and returns a handle to it. <br /></td></tr>
<tr class="separator:ab7e97c69f9ae4a13746e73d9e6965bbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28b23091afb6e8bc3b10c90f71d18af8" id="r_a28b23091afb6e8bc3b10c90f71d18af8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a28b23091afb6e8bc3b10c90f71d18af8">DeleteObjectNow</a> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hObject, bool bAlsoDeleteEmptyParents=true)</td></tr>
<tr class="memdesc:a28b23091afb6e8bc3b10c90f71d18af8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the given object, its children and all components.  <br /></td></tr>
<tr class="separator:a28b23091afb6e8bc3b10c90f71d18af8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5033fa6edc8ab4f3a3efe131c4a3a8c3" id="r_a5033fa6edc8ab4f3a3efe131c4a3a8c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5033fa6edc8ab4f3a3efe131c4a3a8c3">DeleteObjectDelayed</a> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hObject, bool bAlsoDeleteEmptyParents=true)</td></tr>
<tr class="memdesc:a5033fa6edc8ab4f3a3efe131c4a3a8c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the given object at the beginning of the next world update. The object and its components and children stay completely valid until then.  <br /></td></tr>
<tr class="separator:a5033fa6edc8ab4f3a3efe131c4a3a8c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e889070f9f83ba63884cca056c82805" id="r_a0e889070f9f83ba63884cca056c82805"><td class="memItemLeft" align="right" valign="top"><a id="a0e889070f9f83ba63884cca056c82805" name="a0e889070f9f83ba63884cca056c82805"></a>
const <a class="el" href="../../dd/d61/classpl_event.htm">plEvent</a>&lt; const <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetObjectDeletionEvent</b> () const</td></tr>
<tr class="memdesc:a0e889070f9f83ba63884cca056c82805"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the event that is triggered before an object is deleted. This can be used for external systems to cleanup data which is associated with the deleted object. <br /></td></tr>
<tr class="separator:a0e889070f9f83ba63884cca056c82805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a296d85b33b123f6f687ec182b455dd" id="r_a6a296d85b33b123f6f687ec182b455dd"><td class="memItemLeft" align="right" valign="top"><a id="a6a296d85b33b123f6f687ec182b455dd" name="a6a296d85b33b123f6f687ec182b455dd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValidObject</b> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hObject) const</td></tr>
<tr class="memdesc:a6a296d85b33b123f6f687ec182b455dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the given handle corresponds to a valid object. <br /></td></tr>
<tr class="separator:a6a296d85b33b123f6f687ec182b455dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afacc472eb2c765643a7cacef3cb38249" id="r_afacc472eb2c765643a7cacef3cb38249"><td class="memItemLeft" align="right" valign="top"><a id="afacc472eb2c765643a7cacef3cb38249" name="afacc472eb2c765643a7cacef3cb38249"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>TryGetObject</b> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hObject, <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *&amp;out_pObject)</td></tr>
<tr class="memdesc:afacc472eb2c765643a7cacef3cb38249"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an object with the given handle exists and if so writes out the corresponding pointer to out_pObject. <br /></td></tr>
<tr class="separator:afacc472eb2c765643a7cacef3cb38249"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf246aced1f8db02597aa980bff02d6d" id="r_acf246aced1f8db02597aa980bff02d6d"><td class="memItemLeft" align="right" valign="top"><a id="acf246aced1f8db02597aa980bff02d6d" name="acf246aced1f8db02597aa980bff02d6d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>TryGetObject</b> (const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;hObject, const <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *&amp;out_pObject) const</td></tr>
<tr class="memdesc:acf246aced1f8db02597aa980bff02d6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an object with the given handle exists and if so writes out the corresponding pointer to out_pObject. <br /></td></tr>
<tr class="separator:acf246aced1f8db02597aa980bff02d6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a1ca97526723d6ab4372e1839af0bac" id="r_a3a1ca97526723d6ab4372e1839af0bac"><td class="memItemLeft" align="right" valign="top"><a id="a3a1ca97526723d6ab4372e1839af0bac" name="a3a1ca97526723d6ab4372e1839af0bac"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>TryGetObjectWithGlobalKey</b> (const <a class="el" href="../../d3/d33/classpl_temp_hashed_string.htm">plTempHashedString</a> &amp;sGlobalKey, <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *&amp;out_pObject)</td></tr>
<tr class="memdesc:a3a1ca97526723d6ab4372e1839af0bac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an object with the given global key exists and if so writes out the corresponding pointer to out_pObject. <br /></td></tr>
<tr class="separator:a3a1ca97526723d6ab4372e1839af0bac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae333660c51b295f1572e4bedb616b76a" id="r_ae333660c51b295f1572e4bedb616b76a"><td class="memItemLeft" align="right" valign="top"><a id="ae333660c51b295f1572e4bedb616b76a" name="ae333660c51b295f1572e4bedb616b76a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>TryGetObjectWithGlobalKey</b> (const <a class="el" href="../../d3/d33/classpl_temp_hashed_string.htm">plTempHashedString</a> &amp;sGlobalKey, const <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *&amp;out_pObject) const</td></tr>
<tr class="memdesc:ae333660c51b295f1572e4bedb616b76a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an object with the given global key exists and if so writes out the corresponding pointer to out_pObject. <br /></td></tr>
<tr class="separator:ae333660c51b295f1572e4bedb616b76a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affc3d986537c6000aacfcc8d70b68148" id="r_affc3d986537c6000aacfcc8d70b68148"><td class="memItemLeft" align="right" valign="top"><a id="affc3d986537c6000aacfcc8d70b68148" name="affc3d986537c6000aacfcc8d70b68148"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetObjectCount</b> () const</td></tr>
<tr class="memdesc:affc3d986537c6000aacfcc8d70b68148"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total number of objects in this world. <br /></td></tr>
<tr class="separator:affc3d986537c6000aacfcc8d70b68148"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7660fb157687b77e9047e8bd1f2d703c" id="r_a7660fb157687b77e9047e8bd1f2d703c"><td class="memItemLeft" align="right" valign="top"><a id="a7660fb157687b77e9047e8bd1f2d703c" name="a7660fb157687b77e9047e8bd1f2d703c"></a>
<a class="el" href="../../d1/d5a/classpl_internal_1_1_world_data_1_1_object_iterator.htm">plInternal::WorldData::ObjectIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetObjects</b> ()</td></tr>
<tr class="memdesc:a7660fb157687b77e9047e8bd1f2d703c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator over all objects in this world in no specific order. <br /></td></tr>
<tr class="separator:a7660fb157687b77e9047e8bd1f2d703c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49b8e98d880dfedc982be623685e496c" id="r_a49b8e98d880dfedc982be623685e496c"><td class="memItemLeft" align="right" valign="top"><a id="a49b8e98d880dfedc982be623685e496c" name="a49b8e98d880dfedc982be623685e496c"></a>
<a class="el" href="../../dc/df9/classpl_internal_1_1_world_data_1_1_const_object_iterator.htm">plInternal::WorldData::ConstObjectIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetObjects</b> () const</td></tr>
<tr class="memdesc:a49b8e98d880dfedc982be623685e496c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator over all objects in this world in no specific order. <br /></td></tr>
<tr class="separator:a49b8e98d880dfedc982be623685e496c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a371d61a48cd16a4cf88ad287132fc25f" id="r_a371d61a48cd16a4cf88ad287132fc25f"><td class="memItemLeft" align="right" valign="top"><a id="a371d61a48cd16a4cf88ad287132fc25f" name="a371d61a48cd16a4cf88ad287132fc25f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Traverse</b> (<a class="el" href="#ab2f8cf520d0bb052693614f475ab9eb2">VisitorFunc</a> visitorFunc, TraversalMethod method=DepthFirst)</td></tr>
<tr class="memdesc:a371d61a48cd16a4cf88ad287132fc25f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Traverses the game object tree starting at the top level objects and then recursively all children. The given callback function is called for every object. <br /></td></tr>
<tr class="separator:a371d61a48cd16a4cf88ad287132fc25f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A world encapsulates a scene graph of game objects and various component managers and their components. </p>
<p>There can be multiple worlds active at a time, but only 64 at most. The world manages all object storage and might move objects around in memory. Thus it is not allowed to store pointers to objects. They should be referenced by handles.<br  />
 The world has a multi-phase update mechanism which is divided in the following phases:<br  />
</p><ul>
<li>Pre-async phase: The corresponding component manager update functions are called synchronously in the order of their dependencies.</li>
<li>Async phase: The update functions are called in batches asynchronously on multiple threads. There is absolutely no guarantee in which order the functions are called. Thus it is not allowed to access any data other than the components own data during that phase.</li>
<li>Post-async phase: Another synchronous phase like the pre-async phase.</li>
<li>Actual deletion of dead objects and components are done now.</li>
<li>Transform update: The global transformation of dynamic objects is updated.</li>
<li>Post-transform phase: Another synchronous phase like the pre-async phase after the transformation has been updated. </li>
</ul>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a5033fa6edc8ab4f3a3efe131c4a3a8c3" name="a5033fa6edc8ab4f3a3efe131c4a3a8c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5033fa6edc8ab4f3a3efe131c4a3a8c3">&#9670;&#160;</a></span>DeleteObjectDelayed()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plWorld::DeleteObjectDelayed </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>hObject</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bAlsoDeleteEmptyParents</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deletes the given object at the beginning of the next world update. The object and its components and children stay completely valid until then. </p>
<p>If bAlsoDeleteEmptyParents is set, any ancestor object that has no other children and no components, will also get deleted. </p>

</div>
</div>
<a id="a28b23091afb6e8bc3b10c90f71d18af8" name="a28b23091afb6e8bc3b10c90f71d18af8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28b23091afb6e8bc3b10c90f71d18af8">&#9670;&#160;</a></span>DeleteObjectNow()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plWorld::DeleteObjectNow </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>hObject</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bAlsoDeleteEmptyParents</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Deletes the given object, its children and all components. </p>
<dl class="section note"><dt>Note</dt><dd>This function deletes the object immediately! It is unsafe to use this during a game update loop, as other objects may rely on this object staying valid for the rest of the frame. Use <a class="el" href="#a5033fa6edc8ab4f3a3efe131c4a3a8c3" title="Deletes the given object at the beginning of the next world update. The object and its components and...">DeleteObjectDelayed()</a> instead for safe removal at the end of the frame.</dd></dl>
<p>If bAlsoDeleteEmptyParents is set, any ancestor object that has no other children and no components, will also get deleted. </p>

</div>
</div>
<a id="adcf2efcf1d0711368413e029f7101270" name="adcf2efcf1d0711368413e029f7101270"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adcf2efcf1d0711368413e029f7101270">&#9670;&#160;</a></span>FindEventMsgHandlers() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plWorld::FindEventMsgHandlers </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>msg</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *</td>          <td class="paramname"><span class="paramname"><em>pSearchObject</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; const <a class="el" href="../../d1/d81/classpl_component.htm">plComponent</a> * &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>out_components</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds the closest (parent) object, starting at pSearchObject, which has an <a class="el" href="../../d1/d81/classpl_component.htm" title="Base class of all component types.">plComponent</a> that handles the given message and returns all matching components owned by that object. If a <a class="el" href="../../df/deb/classpl_event_message_handler_component.htm" title="Base class for components that want to handle &#39;event messages&#39;.">plEventMessageHandlerComponent</a> is found the search is stopped even if it doesn't handle the given message.    </p>
<p>If no such parent object exists, it searches for all <a class="el" href="../../df/deb/classpl_event_message_handler_component.htm" title="Base class for components that want to handle &#39;event messages&#39;.">plEventMessageHandlerComponent</a> instances that are set to 'handle global events' that handle messages of the given type.    </p>

</div>
</div>
<a id="a25180d268411ef5ab0039a0895cbe06e" name="a25180d268411ef5ab0039a0895cbe06e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a25180d268411ef5ab0039a0895cbe06e">&#9670;&#160;</a></span>FindEventMsgHandlers() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plWorld::FindEventMsgHandlers </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>msg</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *</td>          <td class="paramname"><span class="paramname"><em>pSearchObject</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d1/d81/classpl_component.htm">plComponent</a> * &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>out_components</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Finds the closest (parent) object, starting at pSearchObject, which has an <a class="el" href="../../d1/d81/classpl_component.htm" title="Base class of all component types.">plComponent</a> that handles the given message and returns all matching components owned by that object. If a <a class="el" href="../../df/deb/classpl_event_message_handler_component.htm" title="Base class for components that want to handle &#39;event messages&#39;.">plEventMessageHandlerComponent</a> is found the search is stopped even if it doesn't handle the given message. </p>
<p>If no such parent object exists, it searches for all <a class="el" href="../../df/deb/classpl_event_message_handler_component.htm" title="Base class for components that want to handle &#39;event messages&#39;.">plEventMessageHandlerComponent</a> instances that are set to 'handle global events' that handle messages of the given type. </p>

</div>
</div>
<a id="afc63a9cecfa0048b29f183218c471ef9" name="afc63a9cecfa0048b29f183218c471ef9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc63a9cecfa0048b29f183218c471ef9">&#9670;&#160;</a></span>GetGameObjectReferenceResolver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../df/df1/structpl_delegate.htm">plWorld::ReferenceResolver</a> &amp; plWorld::GetGameObjectReferenceResolver </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section see"><dt>See also</dt><dd><a class="el" href="#ab94904a69f68cf2ea2e4c9abdee7b0ec" title="If set, this delegate can be used to map some data (GUID or string) to an plGameObjectHandle.">SetGameObjectReferenceResolver()</a> </dd></dl>

</div>
</div>
<a id="ab94904a69f68cf2ea2e4c9abdee7b0ec" name="ab94904a69f68cf2ea2e4c9abdee7b0ec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab94904a69f68cf2ea2e4c9abdee7b0ec">&#9670;&#160;</a></span>SetGameObjectReferenceResolver()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plWorld::SetGameObjectReferenceResolver </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../df/df1/structpl_delegate.htm">ReferenceResolver</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>resolver</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If set, this delegate can be used to map some data (GUID or string) to an <a class="el" href="../../d2/d49/structpl_game_object_handle.htm" title="A handle to a game object.">plGameObjectHandle</a>. </p>
<p>Currently only used in editor settings, to create a runtime handle from a unique editor reference. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Core/World/<a class="el" href="../../d8/d86/_world_8h_source.htm">World.h</a></li>
<li>Code/Engine/Core/World/Implementation/<b>World.cpp</b></li>
<li>Code/Engine/Core/World/Implementation/<a class="el" href="../../dc/d38/_world__inl_8h_source.htm">World_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
