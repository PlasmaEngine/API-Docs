<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/Containers/HashSet.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d2/dfc/_hash_set_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">HashSet.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Algorithm/HashingUtils.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Memory/AllocatorWrapper.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="};">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../dc/d07/classpl_hash_set_base.htm">   18</a></span><span class="keyword">class </span><a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>{</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00022" data-start="{" data-end="};">
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">   22</a></span>  <span class="keyword">class </span><a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  {</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keyword">public</span>:</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#a0203d9ef6fdc6eeb49aff95c0484e7bf">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#ae7bc8dad6a08847142903474ca04c279">operator==</a>(<span class="keyword">const</span> <span class="keyword">typename</span> <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">plHashSetBase&lt;KeyType, Hasher&gt;::ConstIterator</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    PL_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <span class="keyword">typename</span> <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">plHashSetBase&lt;KeyType, Hasher&gt;::ConstIterator</a>&amp;);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keyword">const</span> KeyType&amp; <a class="code hl_function" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#abb933c60035f82c1829aac3f13d342e7">Key</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#aa21f0456f43de0cc0a7a505cddb2e268">   37</a></span>    PL_ALWAYS_INLINE <span class="keyword">const</span> KeyType&amp; <a class="code hl_function" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#aa21f0456f43de0cc0a7a505cddb2e268">operator*</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#abb933c60035f82c1829aac3f13d342e7">Key</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#a9b699b554fb677a9805d7a00620e14db">Next</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#a69b0bfa985038a0e4c4d9e83c73874ff">operator++</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keyword">protected</span>:</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt;KeyType, Hasher&gt;;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    <span class="keyword">explicit</span> <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; hashSet);</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    <span class="keywordtype">void</span> SetToBegin();</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <span class="keywordtype">void</span> SetToEnd();</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    <span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>* m_pHashSet = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    plUInt32 m_uiCurrentIndex = 0; <span class="comment">// current element index that this iterator points to.</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    plUInt32 m_uiCurrentCount = 0; <span class="comment">// current number of valid elements that this iterator has found so far.</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  };</div>
</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keyword">explicit</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#ab4320d477a91b6b22ace187e9493dd67">plHashSetBase</a>(<a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="../../dc/d07/classpl_hash_set_base.htm#af36f0eddbd6bc223bf6881373b971011">   62</a></span>  <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#af36f0eddbd6bc223bf6881373b971011">plHashSetBase</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; rhs, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="../../dc/d07/classpl_hash_set_base.htm#a1bbff430f1abb2c8d66aeff61a9d51f8">   65</a></span>  <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a1bbff430f1abb2c8d66aeff61a9d51f8">plHashSetBase</a>(<a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp;&amp; rhs, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a80594120dbadfa53fa7d14ed702df1e7">~plHashSetBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="../../dc/d07/classpl_hash_set_base.htm#af8249769381fd0c518886d3697b0ef06">   71</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#af8249769381fd0c518886d3697b0ef06">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="../../dc/d07/classpl_hash_set_base.htm#aca0dd0019b551a18782ea90e05310874">   74</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#aca0dd0019b551a18782ea90e05310874">operator=</a>(<a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp;&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a08aecdf49744c6b2f72465b10b4cda01">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  PL_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp;);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#abbd446a2ff9a7e3807ed930798fe648d">Reserve</a>(plUInt32 uiCapacity); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a6debf422dce33c8f57d878cb4df46737">Compact</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  plUInt32 <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#ab79c135d60cb442f7bb33098f9c83fee">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a8756cb8af8d2643cb3276206e5c0333d">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a28cd256a6fae5853fbe24ce8eae3c9a4">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a50640c77a1b350a7385a76e555c07700">Insert</a>(CompatibleKeyType&amp;&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#affbdc1fba7458c4b8fe050aa2eade5fb">Remove</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="../../dc/d07/classpl_hash_set_base.htm#a737bb208eb6af00d1785d1d2d27fb02e">  109</a></span>  <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a737bb208eb6af00d1785d1d2d27fb02e">Remove</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&amp; pos); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="../../dc/d07/classpl_hash_set_base.htm#a0e3a9521099f21f265f5f54a76c24fb5">  113</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a0e3a9521099f21f265f5f54a76c24fb5">Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#aa9d51804256eed67c8a0ac3b75a5571d">ContainsSet</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; operand) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a7088a82693b353b2e36c9b615436d328">Union</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; operand); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#ac3b092a011fc5a1dde8afa4e1a7520f2">Difference</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; operand); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a535336e17a8ba7b2ae5acde2bf71932d">Intersection</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; operand); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#ad7f4069968d2aacec10eb279d0744332">GetIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#afd4edef10c6d85eae6047d8dd5f45000">GetEndIterator</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a67d2ad89b4a1a03d562023785586fdec">GetAllocator</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  plUInt64 <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#ad69d61f67c679da0879713133e521570">GetHeapMemoryUsage</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#aba899f2205c7229f2bf7f9093d2705bb">Swap</a>(<a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; other); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="../../dc/d07/classpl_hash_set_base.htm#a97ef27573c2c0b82be548e32cd23d624">  145</a></span>  <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">ConstIterator</a> <a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#a97ef27573c2c0b82be548e32cd23d624">Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  KeyType* m_pEntries;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  plUInt32* m_pEntryFlags;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  plUInt32 m_uiCount;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  plUInt32 m_uiCapacity;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* m_pAllocator;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <span class="keyword">enum</span></div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  {</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    FREE_ENTRY = 0,</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    VALID_ENTRY = 1,</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>    DELETED_ENTRY = 2,</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    FLAGS_MASK = 3,</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>    CAPACITY_ALIGNMENT = 32</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  };</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  <span class="keywordtype">void</span> SetCapacity(plUInt32 uiCapacity);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keywordtype">void</span> RemoveInternal(plUInt32 uiIndex);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  plUInt32 FindEntry(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  plUInt32 FindEntry(plUInt32 uiHash, <span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  plUInt32 GetFlagsCapacity() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  plUInt32 GetFlags(plUInt32* pFlags, plUInt32 uiEntryIndex) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  <span class="keywordtype">void</span> SetFlags(plUInt32 uiEntryIndex, plUInt32 uiFlags);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <span class="keywordtype">bool</span> IsFreeEntry(plUInt32 uiEntryIndex) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="keywordtype">bool</span> IsValidEntry(plUInt32 uiEntryIndex) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="keywordtype">bool</span> IsDeletedEntry(plUInt32 uiEntryIndex) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  <span class="keywordtype">void</span> MarkEntryAsFree(plUInt32 uiEntryIndex);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keywordtype">void</span> MarkEntryAsValid(plUInt32 uiEntryIndex);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keywordtype">void</span> MarkEntryAsDeleted(plUInt32 uiEntryIndex);</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>};</div>
</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Hasher = plHashHelper&lt;KeyType&gt;, <span class="keyword">typename</span> AllocatorWrapper = plDefaultAllocatorWrapper&gt;</div>
<div class="foldopen" id="foldopen00190" data-start="{" data-end="};">
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno"><a class="line" href="../../de/dad/classpl_hash_set.htm">  190</a></span><span class="keyword">class </span><a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a>&lt;KeyType, Hasher&gt;</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>{</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet</a>();</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="keyword">explicit</span> <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet</a>(<a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet&lt;KeyType, Hasher, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; other);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet</a>(<a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet&lt;KeyType, Hasher, AllocatorWrapper&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet</a>(<a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet&lt;KeyType, Hasher, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_class" href="../../de/dad/classpl_hash_set.htm">plHashSet&lt;KeyType, Hasher, AllocatorWrapper&gt;</a>&amp;&amp; rhs);</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp;&amp; rhs);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>};</div>
</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span><span class="keyword">typename</span> <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">plHashSetBase&lt;KeyType, Hasher&gt;::ConstIterator</a> begin(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; set)</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>{</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>  <span class="keywordflow">return</span> set.<a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#ad7f4069968d2aacec10eb279d0744332">GetIterator</a>();</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>}</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span><span class="keyword">typename</span> <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">plHashSetBase&lt;KeyType, Hasher&gt;::ConstIterator</a> cbegin(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; set)</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>{</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>  <span class="keywordflow">return</span> set.<a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#ad7f4069968d2aacec10eb279d0744332">GetIterator</a>();</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>}</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span><span class="keyword">typename</span> <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">plHashSetBase&lt;KeyType, Hasher&gt;::ConstIterator</a> end(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; set)</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>{</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  <span class="keywordflow">return</span> set.<a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#afd4edef10c6d85eae6047d8dd5f45000">GetEndIterator</a>();</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>}</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span><span class="keyword">typename</span> <a class="code hl_class" href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">plHashSetBase&lt;KeyType, Hasher&gt;::ConstIterator</a> cend(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase&lt;KeyType, Hasher&gt;</a>&amp; set)</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>{</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  <span class="keywordflow">return</span> set.<a class="code hl_function" href="../../dc/d07/classpl_hash_set_base.htm#afd4edef10c6d85eae6047d8dd5f45000">GetEndIterator</a>();</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>}</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span><span class="preprocessor">#include &lt;Foundation/Containers/Implementation/HashSet_inl.h&gt;</span></div>
<div class="ttc" id="aclasspl_allocator_htm"><div class="ttname"><a href="../../da/df3/classpl_allocator.htm">plAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclasspl_hash_set_base_1_1_const_iterator_htm"><div class="ttname"><a href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm">plHashSetBase::ConstIterator</a></div><div class="ttdoc">Const iterator.</div><div class="ttdef"><b>Definition</b> HashSet.h:23</div></div>
<div class="ttc" id="aclasspl_hash_set_base_1_1_const_iterator_htm_a0203d9ef6fdc6eeb49aff95c0484e7bf"><div class="ttname"><a href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#a0203d9ef6fdc6eeb49aff95c0484e7bf">plHashSetBase::ConstIterator::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid element.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:37</div></div>
<div class="ttc" id="aclasspl_hash_set_base_1_1_const_iterator_htm_a69b0bfa985038a0e4c4d9e83c73874ff"><div class="ttname"><a href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#a69b0bfa985038a0e4c4d9e83c73874ff">plHashSetBase::ConstIterator::operator++</a></div><div class="ttdeci">void operator++()</div><div class="ttdoc">Shorthand for 'Next'.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:75</div></div>
<div class="ttc" id="aclasspl_hash_set_base_1_1_const_iterator_htm_a9b699b554fb677a9805d7a00620e14db"><div class="ttname"><a href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#a9b699b554fb677a9805d7a00620e14db">plHashSetBase::ConstIterator::Next</a></div><div class="ttdeci">void Next()</div><div class="ttdoc">Advances the iterator to the next element in the map. The iterator will not be valid anymore,...</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:55</div></div>
<div class="ttc" id="aclasspl_hash_set_base_1_1_const_iterator_htm_aa21f0456f43de0cc0a7a505cddb2e268"><div class="ttname"><a href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#aa21f0456f43de0cc0a7a505cddb2e268">plHashSetBase::ConstIterator::operator*</a></div><div class="ttdeci">PL_ALWAYS_INLINE const KeyType &amp; operator*() const</div><div class="ttdoc">Returns the 'key' of the element that this iterator points to.</div><div class="ttdef"><b>Definition</b> HashSet.h:37</div></div>
<div class="ttc" id="aclasspl_hash_set_base_1_1_const_iterator_htm_abb933c60035f82c1829aac3f13d342e7"><div class="ttname"><a href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#abb933c60035f82c1829aac3f13d342e7">plHashSetBase::ConstIterator::Key</a></div><div class="ttdeci">const KeyType &amp; Key() const</div><div class="ttdoc">Returns the 'key' of the element that this iterator points to.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:49</div></div>
<div class="ttc" id="aclasspl_hash_set_base_1_1_const_iterator_htm_ae7bc8dad6a08847142903474ca04c279"><div class="ttname"><a href="../../de/d91/classpl_hash_set_base_1_1_const_iterator.htm#ae7bc8dad6a08847142903474ca04c279">plHashSetBase::ConstIterator::operator==</a></div><div class="ttdeci">bool operator==(const typename plHashSetBase&lt; KeyType, Hasher &gt;::ConstIterator &amp;rhs) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:43</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm">plHashSetBase</a></div><div class="ttdoc">Implementation of a hashset.</div><div class="ttdef"><b>Definition</b> HashSet.h:19</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a08aecdf49744c6b2f72465b10b4cda01"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a08aecdf49744c6b2f72465b10b4cda01">plHashSetBase::operator==</a></div><div class="ttdeci">bool operator==(const plHashSetBase&lt; KeyType, Hasher &gt; &amp;rhs) const</div><div class="ttdoc">Compares this table to another table.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:185</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a0e3a9521099f21f265f5f54a76c24fb5"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a0e3a9521099f21f265f5f54a76c24fb5">plHashSetBase::Contains</a></div><div class="ttdeci">bool Contains(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns if an entry with given key exists in the table.</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a1bbff430f1abb2c8d66aeff61a9d51f8"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a1bbff430f1abb2c8d66aeff61a9d51f8">plHashSetBase::plHashSetBase</a></div><div class="ttdeci">plHashSetBase(plHashSetBase&lt; KeyType, Hasher &gt; &amp;&amp;rhs, plAllocator *pAllocator)</div><div class="ttdoc">Moves data from an existing hashtable into this one.</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a28cd256a6fae5853fbe24ce8eae3c9a4"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a28cd256a6fae5853fbe24ce8eae3c9a4">plHashSetBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the table.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:254</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a50640c77a1b350a7385a76e555c07700"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a50640c77a1b350a7385a76e555c07700">plHashSetBase::Insert</a></div><div class="ttdeci">bool Insert(CompatibleKeyType &amp;&amp;key)</div><div class="ttdoc">Inserts the key. Returns whether the key was already existing.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:270</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a535336e17a8ba7b2ae5acde2bf71932d"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a535336e17a8ba7b2ae5acde2bf71932d">plHashSetBase::Intersection</a></div><div class="ttdeci">void Intersection(const plHashSetBase&lt; KeyType, Hasher &gt; &amp;operand)</div><div class="ttdoc">Makes this set the intersection of itself and the operand.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:425</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a67d2ad89b4a1a03d562023785586fdec"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a67d2ad89b4a1a03d562023785586fdec">plHashSetBase::GetAllocator</a></div><div class="ttdeci">plAllocator * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:453</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a6debf422dce33c8f57d878cb4df46737"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a6debf422dce33c8f57d878cb4df46737">plHashSetBase::Compact</a></div><div class="ttdeci">void Compact()</div><div class="ttdoc">Tries to compact the hashset to avoid wasting memory.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:224</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a7088a82693b353b2e36c9b615436d328"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a7088a82693b353b2e36c9b615436d328">plHashSetBase::Union</a></div><div class="ttdeci">void Union(const plHashSetBase&lt; KeyType, Hasher &gt; &amp;operand)</div><div class="ttdoc">Makes this set the union of itself and the operand.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:406</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a737bb208eb6af00d1785d1d2d27fb02e"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a737bb208eb6af00d1785d1d2d27fb02e">plHashSetBase::Remove</a></div><div class="ttdeci">ConstIterator Remove(const ConstIterator &amp;pos)</div><div class="ttdoc">Erases the key at the given Iterator. Returns an iterator to the element after the given iterator.</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a80594120dbadfa53fa7d14ed702df1e7"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a80594120dbadfa53fa7d14ed702df1e7">plHashSetBase::~plHashSetBase</a></div><div class="ttdeci">~plHashSetBase()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:118</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a8756cb8af8d2643cb3276206e5c0333d"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a8756cb8af8d2643cb3276206e5c0333d">plHashSetBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the hashset does not contain any elements.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:248</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_a97ef27573c2c0b82be548e32cd23d624"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#a97ef27573c2c0b82be548e32cd23d624">plHashSetBase::Find</a></div><div class="ttdeci">ConstIterator Find(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Searches for key, returns a ConstIterator to it or an invalid iterator, if no such key is found....</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_aa9d51804256eed67c8a0ac3b75a5571d"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#aa9d51804256eed67c8a0ac3b75a5571d">plHashSetBase::ContainsSet</a></div><div class="ttdeci">bool ContainsSet(const plHashSetBase&lt; KeyType, Hasher &gt; &amp;operand) const</div><div class="ttdoc">Checks whether all keys of the given set are in the container.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:394</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_ab4320d477a91b6b22ace187e9493dd67"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#ab4320d477a91b6b22ace187e9493dd67">plHashSetBase::plHashSetBase</a></div><div class="ttdeci">plHashSetBase(plAllocator *pAllocator)</div><div class="ttdoc">Creates an empty hashset. Does not allocate any data yet.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:84</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_ab79c135d60cb442f7bb33098f9c83fee"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#ab79c135d60cb442f7bb33098f9c83fee">plHashSetBase::GetCount</a></div><div class="ttdeci">plUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active entries in the table.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:242</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_aba899f2205c7229f2bf7f9093d2705bb"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#aba899f2205c7229f2bf7f9093d2705bb">plHashSetBase::Swap</a></div><div class="ttdeci">void Swap(plHashSetBase&lt; KeyType, Hasher &gt; &amp;other)</div><div class="ttdoc">Swaps this map with the other one.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:663</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_abbd446a2ff9a7e3807ed930798fe648d"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#abbd446a2ff9a7e3807ed930798fe648d">plHashSetBase::Reserve</a></div><div class="ttdeci">void Reserve(plUInt32 uiCapacity)</div><div class="ttdoc">Expands the hashset by over-allocating the internal storage so that the load factor is lower or equal...</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:206</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_ac3b092a011fc5a1dde8afa4e1a7520f2"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#ac3b092a011fc5a1dde8afa4e1a7520f2">plHashSetBase::Difference</a></div><div class="ttdeci">void Difference(const plHashSetBase&lt; KeyType, Hasher &gt; &amp;operand)</div><div class="ttdoc">Makes this set the difference of itself and the operand, i.e. subtracts operand.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:416</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_aca0dd0019b551a18782ea90e05310874"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#aca0dd0019b551a18782ea90e05310874">plHashSetBase::operator=</a></div><div class="ttdeci">void operator=(plHashSetBase&lt; KeyType, Hasher &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves data from an existing hashset into this one.</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_ad69d61f67c679da0879713133e521570"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#ad69d61f67c679da0879713133e521570">plHashSetBase::GetHeapMemoryUsage</a></div><div class="ttdeci">plUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:459</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_ad7f4069968d2aacec10eb279d0744332"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#ad7f4069968d2aacec10eb279d0744332">plHashSetBase::GetIterator</a></div><div class="ttdeci">ConstIterator GetIterator() const</div><div class="ttdoc">Returns a constant Iterator to the very first element.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:437</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_af36f0eddbd6bc223bf6881373b971011"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#af36f0eddbd6bc223bf6881373b971011">plHashSetBase::plHashSetBase</a></div><div class="ttdeci">plHashSetBase(const plHashSetBase&lt; KeyType, Hasher &gt; &amp;rhs, plAllocator *pAllocator)</div><div class="ttdoc">Creates a copy of the given hashset.</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_af8249769381fd0c518886d3697b0ef06"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#af8249769381fd0c518886d3697b0ef06">plHashSetBase::operator=</a></div><div class="ttdeci">void operator=(const plHashSetBase&lt; KeyType, Hasher &gt; &amp;rhs)</div><div class="ttdoc">Copies the data from another hashset into this one.</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_afd4edef10c6d85eae6047d8dd5f45000"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#afd4edef10c6d85eae6047d8dd5f45000">plHashSetBase::GetEndIterator</a></div><div class="ttdeci">ConstIterator GetEndIterator() const</div><div class="ttdoc">Returns a constant Iterator to the first element that is not part of the hashset. Needed to implement...</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:445</div></div>
<div class="ttc" id="aclasspl_hash_set_base_htm_affbdc1fba7458c4b8fe050aa2eade5fb"><div class="ttname"><a href="../../dc/d07/classpl_hash_set_base.htm#affbdc1fba7458c4b8fe050aa2eade5fb">plHashSetBase::Remove</a></div><div class="ttdeci">bool Remove(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Removes the entry with the given key. Returns if an entry was removed.</div><div class="ttdef"><b>Definition</b> HashSet_inl.h:310</div></div>
<div class="ttc" id="aclasspl_hash_set_htm"><div class="ttname"><a href="../../de/dad/classpl_hash_set.htm">plHashSet</a></div><div class="ttdef"><b>Definition</b> HashSet.h:191</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_3416883c1320ec68c4d0694befd114fc.htm">Containers</a></li><li class="navelem"><b>HashSet.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
