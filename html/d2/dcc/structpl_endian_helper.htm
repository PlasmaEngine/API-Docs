<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plEndianHelper Struct Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d2/dcc/structpl_endian_helper.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d3/d64/structpl_endian_helper-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plEndianHelper Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Collection of helper methods when working with endianess "problems".  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/dad/_endian_helper_8h_source.htm">EndianHelper.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a48631f9674eec020198d882065027310" id="r_a48631f9674eec020198d882065027310"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a48631f9674eec020198d882065027310">IsBigEndian</a> ()</td></tr>
<tr class="memdesc:a48631f9674eec020198d882065027310"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if called on a big endian system, false otherwise.  <br /></td></tr>
<tr class="separator:a48631f9674eec020198d882065027310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad06af6e880a55e7423a6d4ea3c2e8e76" id="r_ad06af6e880a55e7423a6d4ea3c2e8e76"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad06af6e880a55e7423a6d4ea3c2e8e76">IsLittleEndian</a> ()</td></tr>
<tr class="memdesc:ad06af6e880a55e7423a6d4ea3c2e8e76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if called on a little endian system, false otherwise.  <br /></td></tr>
<tr class="separator:ad06af6e880a55e7423a6d4ea3c2e8e76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0ac5b4a08aa14ddf6c3e0f815158551" id="r_ae0ac5b4a08aa14ddf6c3e0f815158551"><td class="memItemLeft" align="right" valign="top"><a id="ae0ac5b4a08aa14ddf6c3e0f815158551" name="ae0ac5b4a08aa14ddf6c3e0f815158551"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>SwitchWords</b> (plUInt16 *pWords, plUInt32 uiCount)</td></tr>
<tr class="memdesc:ae0ac5b4a08aa14ddf6c3e0f815158551"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches endianess of the given array of words (16 bit values). <br /></td></tr>
<tr class="separator:ae0ac5b4a08aa14ddf6c3e0f815158551"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17e7d51430c44ab42787ff2cbb668c76" id="r_a17e7d51430c44ab42787ff2cbb668c76"><td class="memItemLeft" align="right" valign="top"><a id="a17e7d51430c44ab42787ff2cbb668c76" name="a17e7d51430c44ab42787ff2cbb668c76"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>SwitchDWords</b> (plUInt32 *pDWords, plUInt32 uiCount)</td></tr>
<tr class="memdesc:a17e7d51430c44ab42787ff2cbb668c76"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches endianess of the given array of double words (32 bit values). <br /></td></tr>
<tr class="separator:a17e7d51430c44ab42787ff2cbb668c76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b42b9395d84f9967bb75543c3dda29a" id="r_a5b42b9395d84f9967bb75543c3dda29a"><td class="memItemLeft" align="right" valign="top"><a id="a5b42b9395d84f9967bb75543c3dda29a" name="a5b42b9395d84f9967bb75543c3dda29a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>SwitchQWords</b> (plUInt64 *pQWords, plUInt32 uiCount)</td></tr>
<tr class="memdesc:a5b42b9395d84f9967bb75543c3dda29a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches endianess of the given array of quad words (64 bit values). <br /></td></tr>
<tr class="separator:a5b42b9395d84f9967bb75543c3dda29a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36b208854ef9545ce78e1f6086047855" id="r_a36b208854ef9545ce78e1f6086047855"><td class="memItemLeft" align="right" valign="top"><a id="a36b208854ef9545ce78e1f6086047855" name="a36b208854ef9545ce78e1f6086047855"></a>
static PL_ALWAYS_INLINE plUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>Switch</b> (plUInt16 uiWord)</td></tr>
<tr class="memdesc:a36b208854ef9545ce78e1f6086047855"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a single switched word (16 bit value). <br /></td></tr>
<tr class="separator:a36b208854ef9545ce78e1f6086047855"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a549862c35dd838a2765a7609c878c90b" id="r_a549862c35dd838a2765a7609c878c90b"><td class="memItemLeft" align="right" valign="top"><a id="a549862c35dd838a2765a7609c878c90b" name="a549862c35dd838a2765a7609c878c90b"></a>
static PL_ALWAYS_INLINE plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>Switch</b> (plUInt32 uiDWord)</td></tr>
<tr class="memdesc:a549862c35dd838a2765a7609c878c90b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a single switched double word (32 bit value). <br /></td></tr>
<tr class="separator:a549862c35dd838a2765a7609c878c90b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe14b0c5916cf60f50c5be7b7f91341d" id="r_abe14b0c5916cf60f50c5be7b7f91341d"><td class="memItemLeft" align="right" valign="top"><a id="abe14b0c5916cf60f50c5be7b7f91341d" name="abe14b0c5916cf60f50c5be7b7f91341d"></a>
static PL_ALWAYS_INLINE plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>Switch</b> (plUInt64 uiQWord)</td></tr>
<tr class="memdesc:abe14b0c5916cf60f50c5be7b7f91341d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a single switched quad word (64 bit value). <br /></td></tr>
<tr class="separator:abe14b0c5916cf60f50c5be7b7f91341d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf453f393a4d3c59b488986115082036" id="r_acf453f393a4d3c59b488986115082036"><td class="memTemplParams" colspan="2"><a id="acf453f393a4d3c59b488986115082036" name="acf453f393a4d3c59b488986115082036"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:acf453f393a4d3c59b488986115082036"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SwitchInPlace</b> (T *pValue)</td></tr>
<tr class="memdesc:acf453f393a4d3c59b488986115082036"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches a value in place (template accepts pointers for 2, 4 &amp; 8 byte data types) <br /></td></tr>
<tr class="separator:acf453f393a4d3c59b488986115082036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91de68ce9174c88d1f97e182b250dde6" id="r_a91de68ce9174c88d1f97e182b250dde6"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a91de68ce9174c88d1f97e182b250dde6">SwitchStruct</a> (void *pDataPointer, const char *szFormat)</td></tr>
<tr class="memdesc:a91de68ce9174c88d1f97e182b250dde6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches a given struct according to the layout described in the szFormat parameter.  <br /></td></tr>
<tr class="separator:a91de68ce9174c88d1f97e182b250dde6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae00a5598f9a212a17e0b7f8517afb14e" id="r_ae00a5598f9a212a17e0b7f8517afb14e"><td class="memTemplParams" colspan="2"><a id="ae00a5598f9a212a17e0b7f8517afb14e" name="ae00a5598f9a212a17e0b7f8517afb14e"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:ae00a5598f9a212a17e0b7f8517afb14e"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SwitchStruct</b> (T *pDataPointer, const char *szFormat)</td></tr>
<tr class="memdesc:ae00a5598f9a212a17e0b7f8517afb14e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Templated helper method for SwitchStruct. <br /></td></tr>
<tr class="separator:ae00a5598f9a212a17e0b7f8517afb14e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6743264672ffe8e1b21fbcea8424d229" id="r_a6743264672ffe8e1b21fbcea8424d229"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6743264672ffe8e1b21fbcea8424d229">SwitchStructs</a> (void *pDataPointer, const char *szFormat, plUInt32 uiStride, plUInt32 uiCount)</td></tr>
<tr class="memdesc:a6743264672ffe8e1b21fbcea8424d229"><td class="mdescLeft">&#160;</td><td class="mdescRight">Switches a given set of struct according to the layout described in the szFormat parameter.  <br /></td></tr>
<tr class="separator:a6743264672ffe8e1b21fbcea8424d229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d049fa341ab0306ea8458183997924a" id="r_a9d049fa341ab0306ea8458183997924a"><td class="memTemplParams" colspan="2"><a id="a9d049fa341ab0306ea8458183997924a" name="a9d049fa341ab0306ea8458183997924a"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a9d049fa341ab0306ea8458183997924a"><td class="memTemplItemLeft" align="right" valign="top">static void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SwitchStructs</b> (T *pDataPointer, const char *szFormat, plUInt32 uiCount)</td></tr>
<tr class="memdesc:a9d049fa341ab0306ea8458183997924a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Templated helper method for SwitchStructs. <br /></td></tr>
<tr class="separator:a9d049fa341ab0306ea8458183997924a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Collection of helper methods when working with endianess "problems". </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a48631f9674eec020198d882065027310" name="a48631f9674eec020198d882065027310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48631f9674eec020198d882065027310">&#9670;&#160;</a></span>IsBigEndian()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool plEndianHelper::IsBigEndian </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if called on a big endian system, false otherwise. </p>
<dl class="section note"><dt>Note</dt><dd>Note that usually the compile time decisions with the defines PL_PLATFORM_LITTLE_ENDIAN, PL_PLATFORM_BIG_ENDIAN is preferred. </dd></dl>

</div>
</div>
<a id="ad06af6e880a55e7423a6d4ea3c2e8e76" name="ad06af6e880a55e7423a6d4ea3c2e8e76"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad06af6e880a55e7423a6d4ea3c2e8e76">&#9670;&#160;</a></span>IsLittleEndian()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool plEndianHelper::IsLittleEndian </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns true if called on a little endian system, false otherwise. </p>
<dl class="section note"><dt>Note</dt><dd>Note that usually the compile time decisions with the defines PL_PLATFORM_LITTLE_ENDIAN, PL_PLATFORM_BIG_ENDIAN is preferred. </dd></dl>

</div>
</div>
<a id="a91de68ce9174c88d1f97e182b250dde6" name="a91de68ce9174c88d1f97e182b250dde6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a91de68ce9174c88d1f97e182b250dde6">&#9670;&#160;</a></span>SwitchStruct()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plEndianHelper::SwitchStruct </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pDataPointer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szFormat</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Switches a given struct according to the layout described in the szFormat parameter. </p>
<p>The format string may contain the characters:</p><ul>
<li>c, b for a member of 1 byte</li>
<li>w, s for a member of 2 bytes (word, plUInt16)</li>
<li>d for a member of 4 bytes (DWORD, plUInt32)</li>
<li>q for a member of 8 bytes (DWORD, plUInt64) </li>
</ul>

</div>
</div>
<a id="a6743264672ffe8e1b21fbcea8424d229" name="a6743264672ffe8e1b21fbcea8424d229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6743264672ffe8e1b21fbcea8424d229">&#9670;&#160;</a></span>SwitchStructs()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plEndianHelper::SwitchStructs </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pDataPointer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szFormat</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiStride</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiCount</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Switches a given set of struct according to the layout described in the szFormat parameter. </p>
<p>The format string may contain the characters:</p><ul>
<li>c, b for a member of 1 byte</li>
<li>w, s for a member of 2 bytes (word, plUInt16)</li>
<li>d for a member of 4 bytes (DWORD, plUInt32)</li>
<li>q for a member of 8 bytes (DWORD, plUInt64) </li>
</ul>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>Code/Engine/Foundation/Memory/<a class="el" href="../../db/dad/_endian_helper_8h_source.htm">EndianHelper.h</a></li>
<li>Code/Engine/Foundation/Memory/Implementation/<b>EndianHelper.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d2/dcc/structpl_endian_helper.htm">plEndianHelper</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
