<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plArrayMap&lt; KEY, VALUE, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dc/d8c/classpl_array_map.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d3/de7/classpl_array_map-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plArrayMap&lt; KEY, VALUE, AllocatorWrapper &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>See <a class="el" href="../../dd/d6d/classpl_array_map_base.htm" title="An associative container, similar to plMap, but all data is stored in a sorted contiguous array,...">plArrayMapBase</a> for details.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d6/d0b/_array_map_8h_source.htm">ArrayMap.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plArrayMap&lt; KEY, VALUE, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d0/dbe/classpl_array_map__inherit__graph.png" border="0" usemap="#apl_array_map_3_01_k_e_y_00_01_v_a_l_u_e_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_array_map_3_01_k_e_y_00_01_v_a_l_u_e_00_01_allocator_wrapper_01_4_inherit__map" id="apl_array_map_3_01_k_e_y_00_01_v_a_l_u_e_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title="See plArrayMapBase for details." alt="" coords="5,96,187,139"/>
<area shape="rect" href="../../dd/d6d/classpl_array_map_base.htm" title="An associative container, similar to plMap, but all data is stored in a sorted contiguous array,..." alt="" coords="16,5,176,48"/>
<area shape="poly" title=" " alt="" coords="99,64,99,96,93,96,93,64"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a63ad63d5e9e374717e98011a91407698" id="r_a63ad63d5e9e374717e98011a91407698"><td class="memItemLeft" align="right" valign="top"><a id="a63ad63d5e9e374717e98011a91407698" name="a63ad63d5e9e374717e98011a91407698"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plArrayMap</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a63ad63d5e9e374717e98011a91407698"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80c86a0d955854aa91e68951fb304f2f" id="r_a80c86a0d955854aa91e68951fb304f2f"><td class="memItemLeft" align="right" valign="top"><a id="a80c86a0d955854aa91e68951fb304f2f" name="a80c86a0d955854aa91e68951fb304f2f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plArrayMap</b> (const <a class="el" href="../../dc/d8c/classpl_array_map.htm">plArrayMap</a>&lt; KEY, VALUE, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:a80c86a0d955854aa91e68951fb304f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af092e41804005c0ba541199db560b8f4" id="r_af092e41804005c0ba541199db560b8f4"><td class="memItemLeft" align="right" valign="top"><a id="af092e41804005c0ba541199db560b8f4" name="af092e41804005c0ba541199db560b8f4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plArrayMap</b> (const <a class="el" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&lt; KEY, VALUE &gt; &amp;rhs)</td></tr>
<tr class="separator:af092e41804005c0ba541199db560b8f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ec29a874391c03c351466bdb638960b" id="r_a6ec29a874391c03c351466bdb638960b"><td class="memItemLeft" align="right" valign="top"><a id="a6ec29a874391c03c351466bdb638960b" name="a6ec29a874391c03c351466bdb638960b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dc/d8c/classpl_array_map.htm">plArrayMap</a>&lt; KEY, VALUE, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:a6ec29a874391c03c351466bdb638960b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ac62d0baa4d262df3bd726e5c879865" id="r_a0ac62d0baa4d262df3bd726e5c879865"><td class="memItemLeft" align="right" valign="top"><a id="a0ac62d0baa4d262df3bd726e5c879865" name="a0ac62d0baa4d262df3bd726e5c879865"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&lt; KEY, VALUE &gt; &amp;rhs)</td></tr>
<tr class="separator:a0ac62d0baa4d262df3bd726e5c879865"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_array_map_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_array_map_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase&lt; KEY, VALUE &gt;</a></td></tr>
<tr class="memitem:a08ef654eb4aa15588b74df52970487d9 inherit pub_methods_classpl_array_map_base" id="r_a08ef654eb4aa15588b74df52970487d9"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plArrayMapBase</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a08ef654eb4aa15588b74df52970487d9 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:a08ef654eb4aa15588b74df52970487d9 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e83e4d7ca38614db25fa0b08daad2e6 inherit pub_methods_classpl_array_map_base" id="r_a9e83e4d7ca38614db25fa0b08daad2e6"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plArrayMapBase</b> (const <a class="el" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a> &amp;rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a9e83e4d7ca38614db25fa0b08daad2e6 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy-Constructor. <br /></td></tr>
<tr class="separator:a9e83e4d7ca38614db25fa0b08daad2e6 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd45e8f34437b687f8914b1d5ccaff2a inherit pub_methods_classpl_array_map_base" id="r_abd45e8f34437b687f8914b1d5ccaff2a"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a> &amp;rhs)</td></tr>
<tr class="memdesc:abd45e8f34437b687f8914b1d5ccaff2a inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy assignment operator. <br /></td></tr>
<tr class="separator:abd45e8f34437b687f8914b1d5ccaff2a inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa09470f9b7332b4542ba6fa8ecb337a3 inherit pub_methods_classpl_array_map_base" id="r_aa09470f9b7332b4542ba6fa8ecb337a3"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:aa09470f9b7332b4542ba6fa8ecb337a3 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements stored in the map. <br /></td></tr>
<tr class="separator:aa09470f9b7332b4542ba6fa8ecb337a3 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a929d1dbf74180a7631e38a2b4bad3bb6 inherit pub_methods_classpl_array_map_base" id="r_a929d1dbf74180a7631e38a2b4bad3bb6"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:a929d1dbf74180a7631e38a2b4bad3bb6 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">True if the map contains no elements. <br /></td></tr>
<tr class="separator:a929d1dbf74180a7631e38a2b4bad3bb6 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69d7b12de613197128e0f2585aa2a73b inherit pub_methods_classpl_array_map_base" id="r_a69d7b12de613197128e0f2585aa2a73b"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a69d7b12de613197128e0f2585aa2a73b inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Purges all elements from the map. <br /></td></tr>
<tr class="separator:a69d7b12de613197128e0f2585aa2a73b inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a8a319d6435c100b9fa7515c13e85ca inherit pub_methods_classpl_array_map_base" id="r_a9a8a319d6435c100b9fa7515c13e85ca"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType , typename CompatibleValueType &gt; </td></tr>
<tr class="memitem:a9a8a319d6435c100b9fa7515c13e85ca inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">plUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Insert</b> (CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</td></tr>
<tr class="memdesc:a9a8a319d6435c100b9fa7515c13e85ca inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Always inserts a new value under the given key. Duplicates are allowed. Returns the index of the newly added element. <br /></td></tr>
<tr class="separator:a9a8a319d6435c100b9fa7515c13e85ca inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d3fb5841fa5439a867eeb78d11b08bd inherit pub_methods_classpl_array_map_base" id="r_a3d3fb5841fa5439a867eeb78d11b08bd"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Sort</b> () const</td></tr>
<tr class="memdesc:a3d3fb5841fa5439a867eeb78d11b08bd inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the internal data structure is sorted. This is done automatically every time a lookup needs to be made. <br /></td></tr>
<tr class="separator:a3d3fb5841fa5439a867eeb78d11b08bd inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac6cf8dccb2fdb95b8dd7b7bf9c17259 inherit pub_methods_classpl_array_map_base" id="r_aac6cf8dccb2fdb95b8dd7b7bf9c17259"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aac6cf8dccb2fdb95b8dd7b7bf9c17259 inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">plUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:aac6cf8dccb2fdb95b8dd7b7bf9c17259 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an index to one element with the given key. If the key is inserted multiple times, there is no guarantee which one is returned. Returns plInvalidIndex when no such element exists. <br /></td></tr>
<tr class="separator:aac6cf8dccb2fdb95b8dd7b7bf9c17259 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec0791850dada82f635bd3a14635f9b3 inherit pub_methods_classpl_array_map_base" id="r_aec0791850dada82f635bd3a14635f9b3"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aec0791850dada82f635bd3a14635f9b3 inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">plUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:aec0791850dada82f635bd3a14635f9b3 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index to the first element with a key equal or larger than the given key. Returns plInvalidIndex when no such element exists. If there are multiple keys with the same value, the one at the smallest index is returned. <br /></td></tr>
<tr class="separator:aec0791850dada82f635bd3a14635f9b3 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c98dabaf9b7b7ee15c0a81eadb627b inherit pub_methods_classpl_array_map_base" id="r_ae3c98dabaf9b7b7ee15c0a81eadb627b"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ae3c98dabaf9b7b7ee15c0a81eadb627b inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">plUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ae3c98dabaf9b7b7ee15c0a81eadb627b inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index to the first element with a key that is LARGER than the given key. Returns plInvalidIndex when no such element exists. If there are multiple keys with the same value, the one at the smallest index is returned. <br /></td></tr>
<tr class="separator:ae3c98dabaf9b7b7ee15c0a81eadb627b inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9982983319e38d0d892595614b4326ad inherit pub_methods_classpl_array_map_base" id="r_a9982983319e38d0d892595614b4326ad"><td class="memItemLeft" align="right" valign="top">
const KEY &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetKey</b> (plUInt32 uiIndex) const</td></tr>
<tr class="memdesc:a9982983319e38d0d892595614b4326ad inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the key that is stored at the given index. <br /></td></tr>
<tr class="separator:a9982983319e38d0d892595614b4326ad inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a530ab2931eb2f2f82bebc19589f4123b inherit pub_methods_classpl_array_map_base" id="r_a530ab2931eb2f2f82bebc19589f4123b"><td class="memItemLeft" align="right" valign="top">
const VALUE &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetValue</b> (plUInt32 uiIndex) const</td></tr>
<tr class="memdesc:a530ab2931eb2f2f82bebc19589f4123b inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value that is stored at the given index. <br /></td></tr>
<tr class="separator:a530ab2931eb2f2f82bebc19589f4123b inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eed6273f6a9845a14aa00a0d57afad4 inherit pub_methods_classpl_array_map_base" id="r_a8eed6273f6a9845a14aa00a0d57afad4"><td class="memItemLeft" align="right" valign="top">
VALUE &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetValue</b> (plUInt32 uiIndex)</td></tr>
<tr class="memdesc:a8eed6273f6a9845a14aa00a0d57afad4 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value that is stored at the given index. <br /></td></tr>
<tr class="separator:a8eed6273f6a9845a14aa00a0d57afad4 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ae141bf1c5829df922ce88aa9fb1a03 inherit pub_methods_classpl_array_map_base" id="r_a3ae141bf1c5829df922ce88aa9fb1a03"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">Pair</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> ()</td></tr>
<tr class="memdesc:a3ae141bf1c5829df922ce88aa9fb1a03 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a reference to the map data array. <br /></td></tr>
<tr class="separator:a3ae141bf1c5829df922ce88aa9fb1a03 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2203b8f48a341aacbc24389fdb3db66a inherit pub_methods_classpl_array_map_base" id="r_a2203b8f48a341aacbc24389fdb3db66a"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">Pair</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:a2203b8f48a341aacbc24389fdb3db66a inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant reference to the map data array. <br /></td></tr>
<tr class="separator:a2203b8f48a341aacbc24389fdb3db66a inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a258ca4c4f48e4438d16c661b4c9507f8 inherit pub_methods_classpl_array_map_base" id="r_a258ca4c4f48e4438d16c661b4c9507f8"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a258ca4c4f48e4438d16c661b4c9507f8 inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">VALUE &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>FindOrAdd</b> (const CompatibleKeyType &amp;key, bool *out_pExisted=nullptr)</td></tr>
<tr class="memdesc:a258ca4c4f48e4438d16c661b4c9507f8 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value stored at the given key. If none exists, one is created. <em>bExisted</em> indicates whether an element needed to be created. <br /></td></tr>
<tr class="separator:a258ca4c4f48e4438d16c661b4c9507f8 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b74e7cb097472ff92bd3cb7f2b52b35 inherit pub_methods_classpl_array_map_base" id="r_a3b74e7cb097472ff92bd3cb7f2b52b35"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a3b74e7cb097472ff92bd3cb7f2b52b35 inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">VALUE &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator[]</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a3b74e7cb097472ff92bd3cb7f2b52b35 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as FindOrAdd. <br /></td></tr>
<tr class="separator:a3b74e7cb097472ff92bd3cb7f2b52b35 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a507d52e24d47579e95420b80dfd96233 inherit pub_methods_classpl_array_map_base" id="r_a507d52e24d47579e95420b80dfd96233"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">Pair</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetPair</b> (plUInt32 uiIndex) const</td></tr>
<tr class="memdesc:a507d52e24d47579e95420b80dfd96233 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the key/value pair at the given index. <br /></td></tr>
<tr class="separator:a507d52e24d47579e95420b80dfd96233 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a18c73ebd8aa870195412f556505383 inherit pub_methods_classpl_array_map_base" id="r_a9a18c73ebd8aa870195412f556505383"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d6d/classpl_array_map_base.htm#a9a18c73ebd8aa870195412f556505383">RemoveAtAndCopy</a> (plUInt32 uiIndex, bool bKeepSorted=false)</td></tr>
<tr class="memdesc:a9a18c73ebd8aa870195412f556505383 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at the given index.  <br /></td></tr>
<tr class="separator:a9a18c73ebd8aa870195412f556505383 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fd665eae6bff7309938aa046c945b8f inherit pub_methods_classpl_array_map_base" id="r_a4fd665eae6bff7309938aa046c945b8f"><td class="memTemplParams" colspan="2">template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a4fd665eae6bff7309938aa046c945b8f inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dd/d6d/classpl_array_map_base.htm#a4fd665eae6bff7309938aa046c945b8f">RemoveAndCopy</a> (const CompatibleKeyType &amp;key, bool bKeepSorted=false)</td></tr>
<tr class="memdesc:a4fd665eae6bff7309938aa046c945b8f inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes one element with the given key. Returns true, if one was found and removed. If the same key exists multiple times, you need to call this function multiple times to remove them all.  <br /></td></tr>
<tr class="separator:a4fd665eae6bff7309938aa046c945b8f inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a989d84b2e28e044a5e235a72a5a1fe38 inherit pub_methods_classpl_array_map_base" id="r_a989d84b2e28e044a5e235a72a5a1fe38"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a989d84b2e28e044a5e235a72a5a1fe38 inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a989d84b2e28e044a5e235a72a5a1fe38 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an element with the given key exists. <br /></td></tr>
<tr class="separator:a989d84b2e28e044a5e235a72a5a1fe38 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a594cdd3dd81f35ef98b46001bac7fd00 inherit pub_methods_classpl_array_map_base" id="r_a594cdd3dd81f35ef98b46001bac7fd00"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a594cdd3dd81f35ef98b46001bac7fd00 inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key, const VALUE &amp;value) const</td></tr>
<tr class="memdesc:a594cdd3dd81f35ef98b46001bac7fd00 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an element with the given key and value already exists. <br /></td></tr>
<tr class="separator:a594cdd3dd81f35ef98b46001bac7fd00 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acefc92b751ffb5fd5271c80b58216d60 inherit pub_methods_classpl_array_map_base" id="r_acefc92b751ffb5fd5271c80b58216d60"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (plUInt32 uiSize)</td></tr>
<tr class="memdesc:acefc92b751ffb5fd5271c80b58216d60 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserves enough memory to store <em>size</em> elements. <br /></td></tr>
<tr class="separator:acefc92b751ffb5fd5271c80b58216d60 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3a4eb5145e295f070449425ed888053 inherit pub_methods_classpl_array_map_base" id="r_ad3a4eb5145e295f070449425ed888053"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> ()</td></tr>
<tr class="memdesc:ad3a4eb5145e295f070449425ed888053 inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compacts the internal memory to not waste any space. <br /></td></tr>
<tr class="separator:ad3a4eb5145e295f070449425ed888053 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01d1eb8796afb51171f16b7869aac2ba inherit pub_methods_classpl_array_map_base" id="r_a01d1eb8796afb51171f16b7869aac2ba"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&lt; KEY, VALUE &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a01d1eb8796afb51171f16b7869aac2ba inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the two containers for equality. <br /></td></tr>
<tr class="separator:a01d1eb8796afb51171f16b7869aac2ba inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56b82114e867a6ea17a750bbe0a89cd4 inherit pub_methods_classpl_array_map_base" id="r_a56b82114e867a6ea17a750bbe0a89cd4"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&lt; KEY, VALUE &gt; &amp;)</td></tr>
<tr class="separator:a56b82114e867a6ea17a750bbe0a89cd4 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2841f01d37e2b4e363005962ce7198ef inherit pub_methods_classpl_array_map_base" id="r_a2841f01d37e2b4e363005962ce7198ef"><td class="memItemLeft" align="right" valign="top">
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:a2841f01d37e2b4e363005962ce7198ef inherit pub_methods_classpl_array_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a2841f01d37e2b4e363005962ce7198ef inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7794c08b8bf40844e736e04b759b7ea inherit pub_methods_classpl_array_map_base" id="r_ad7794c08b8bf40844e736e04b759b7ea"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ad7794c08b8bf40844e736e04b759b7ea inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE VALUE &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator[]</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:ad7794c08b8bf40844e736e04b759b7ea inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a674e4c58e284f0002f03676ec9ae56a9 inherit pub_methods_classpl_array_map_base" id="r_a674e4c58e284f0002f03676ec9ae56a9"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a674e4c58e284f0002f03676ec9ae56a9 inherit pub_methods_classpl_array_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a674e4c58e284f0002f03676ec9ae56a9 inherit pub_methods_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classpl_array_map_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_classpl_array_map_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase&lt; KEY, VALUE &gt;</a></td></tr>
<tr class="memitem:a1b425d1d72af8788555e67cbe58e149c inherit pub_types_classpl_array_map_base" id="r_a1b425d1d72af8788555e67cbe58e149c"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = typename <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt;<a class="el" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">Pair</a>&gt;::const_iterator</td></tr>
<tr class="separator:a1b425d1d72af8788555e67cbe58e149c inherit pub_types_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a186f6f7ade18d1027afe5f5d29633ea8 inherit pub_types_classpl_array_map_base" id="r_a186f6f7ade18d1027afe5f5d29633ea8"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = typename <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt;<a class="el" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">Pair</a>&gt;::const_reverse_iterator</td></tr>
<tr class="separator:a186f6f7ade18d1027afe5f5d29633ea8 inherit pub_types_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85207b486a869b52cf68bd2f6de45640 inherit pub_types_classpl_array_map_base" id="r_a85207b486a869b52cf68bd2f6de45640"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = typename <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt;<a class="el" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">Pair</a>&gt;::iterator</td></tr>
<tr class="separator:a85207b486a869b52cf68bd2f6de45640 inherit pub_types_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a245dfdf1e8f2b3a8013e7379387f279e inherit pub_types_classpl_array_map_base" id="r_a245dfdf1e8f2b3a8013e7379387f279e"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = typename <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt;<a class="el" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">Pair</a>&gt;::reverse_iterator</td></tr>
<tr class="separator:a245dfdf1e8f2b3a8013e7379387f279e inherit pub_types_classpl_array_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename KEY, typename VALUE, typename AllocatorWrapper = plDefaultAllocatorWrapper&gt;<br />
class plArrayMap&lt; KEY, VALUE, AllocatorWrapper &gt;</div><p>See <a class="el" href="../../dd/d6d/classpl_array_map_base.htm" title="An associative container, similar to plMap, but all data is stored in a sorted contiguous array,...">plArrayMapBase</a> for details. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../d6/d0b/_array_map_8h_source.htm">ArrayMap.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../dc/d08/_array_map__inl_8h_source.htm">ArrayMap_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dc/d8c/classpl_array_map.htm">plArrayMap</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
