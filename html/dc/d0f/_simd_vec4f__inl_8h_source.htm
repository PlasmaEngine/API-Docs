<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/SimdMath/Implementation/SimdVec4f_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dc/d0f/_simd_vec4f__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">SimdVec4f_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span>PL_ALWAYS_INLINE plSimdVec4f::plSimdVec4f(<a class="code hl_class" href="../../d1/d4b/classpl_vec4_template.htm">plInternal::QuadFloat</a> v)</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span>{</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>  m_v = v;</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>}</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="foldopen" id="foldopen00008" data-start="{" data-end="}">
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">    8</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> <a class="code hl_function" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a>()</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(<a class="code hl_function" href="../../d6/d46/classpl_simd_float.htm#ac1e5fde02ac38476a85a6f785738bced">plSimdFloat::MakeZero</a>());</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>}</div>
</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="}">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../d6/dc1/classpl_simd_vec4f.htm#a2e52b6ff1c525d8483c9a1cc2f215ab0">   13</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> <a class="code hl_function" href="../../d6/dc1/classpl_simd_vec4f.htm#a2e52b6ff1c525d8483c9a1cc2f215ab0">plSimdVec4f::MakeNaN</a>()</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(<a class="code hl_function" href="../../d6/d46/classpl_simd_float.htm#a626f27f8b19fe10c280f8bd3ffd9c2a5">plSimdFloat::MakeNaN</a>());</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>}</div>
</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="keyword">template</span> &lt;<span class="keywordtype">int</span> N, plMathAcc::Enum acc&gt;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> plSimdVec4f::GetLength()<span class="keyword"> const</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> squaredLen = GetLengthSquared&lt;N&gt;();</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <span class="keywordflow">return</span> squaredLen.GetSqrt&lt;acc&gt;();</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>}</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="keyword">template</span> &lt;<span class="keywordtype">int</span> N, plMathAcc::Enum acc&gt;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> plSimdVec4f::GetInvLength()<span class="keyword"> const</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> squaredLen = GetLengthSquared&lt;N&gt;();</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keywordflow">return</span> squaredLen.GetInvSqrt&lt;acc&gt;();</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>}</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="keyword">template</span> &lt;<span class="keywordtype">int</span> N&gt;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> plSimdVec4f::GetLengthSquared()<span class="keyword"> const</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keywordflow">return</span> Dot&lt;N&gt;(*<span class="keyword">this</span>);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>}</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="keyword">template</span> &lt;<span class="keywordtype">int</span> N, plMathAcc::Enum acc&gt;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> plSimdVec4f::GetLengthAndNormalize()</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>{</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> squaredLen = GetLengthSquared&lt;N&gt;();</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> reciprocalLen = squaredLen.GetInvSqrt&lt;acc&gt;();</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  *<span class="keyword">this</span> = (*this) * reciprocalLen;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keywordflow">return</span> squaredLen * reciprocalLen;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>}</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="keyword">template</span> &lt;<span class="keywordtype">int</span> N, plMathAcc::Enum acc&gt;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdVec4f::GetNormalized()<span class="keyword"> const</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <span class="keywordflow">return</span> (*<span class="keyword">this</span>) * GetInvLength&lt;N, acc&gt;();</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>}</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">template</span> &lt;<span class="keywordtype">int</span> N, plMathAcc::Enum acc&gt;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> plSimdVec4f::Normalize()</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>{</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  *<span class="keyword">this</span> = GetNormalized&lt;N, acc&gt;();</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>}</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="keyword">template</span> &lt;<span class="keywordtype">int</span> N&gt;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> plSimdVec4f::IsNormalized(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a>&amp; fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> sqLength = GetLengthSquared&lt;N&gt;();</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keywordflow">return</span> sqLength.IsEqual(1.0f, fEpsilon);</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>}</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="keyword">inline</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> plSimdVec4f::GetComponent(<span class="keywordtype">int</span> i)<span class="keyword"> const</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keywordflow">switch</span> (i)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    <span class="keywordflow">case</span> 0:</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>      <span class="keywordflow">return</span> GetComponent&lt;0&gt;();</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    <span class="keywordflow">case</span> 1:</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>      <span class="keywordflow">return</span> GetComponent&lt;1&gt;();</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    <span class="keywordflow">case</span> 2:</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      <span class="keywordflow">return</span> GetComponent&lt;2&gt;();</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <span class="keywordflow">default</span>:</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>      <span class="keywordflow">return</span> GetComponent&lt;3&gt;();</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  }</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>}</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdVec4f::Fraction()<span class="keyword"> const</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keywordflow">return</span> *<span class="keyword">this</span> - Trunc();</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>}</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span><span class="comment">// static</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdVec4f::Lerp(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; a, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; b, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; t)</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>{</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keywordflow">return</span> a + t.CompMul(b - a);</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>}</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d2/dbd/classpl_simd_vec4b.htm">plSimdVec4b</a> plSimdVec4f::IsEqual(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; rhs, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a>&amp; fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> minusEps = rhs - <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(fEpsilon);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plusEps = rhs + <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(fEpsilon);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keywordflow">return</span> (*<span class="keyword">this</span> &gt;= minusEps) &amp;&amp; (*<span class="keyword">this</span> &lt;= plusEps);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>}</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> plSimdVec4f::HorizontalSum&lt;1&gt;()<span class="keyword"> const</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keywordflow">return</span> GetComponent&lt;0&gt;();</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>}</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> plSimdVec4f::HorizontalMin&lt;1&gt;()<span class="keyword"> const</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keywordflow">return</span> GetComponent&lt;0&gt;();</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>}</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a> plSimdVec4f::HorizontalMax&lt;1&gt;()<span class="keyword"> const</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  <span class="keywordflow">return</span> GetComponent&lt;0&gt;();</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>}</div>
<div class="ttc" id="aclasspl_simd_float_htm"><div class="ttname"><a href="../../d6/d46/classpl_simd_float.htm">plSimdFloat</a></div><div class="ttdef"><b>Definition</b> SimdFloat.h:7</div></div>
<div class="ttc" id="aclasspl_simd_float_htm_a626f27f8b19fe10c280f8bd3ffd9c2a5"><div class="ttname"><a href="../../d6/d46/classpl_simd_float.htm#a626f27f8b19fe10c280f8bd3ffd9c2a5">plSimdFloat::MakeNaN</a></div><div class="ttdeci">static plSimdFloat MakeNaN()</div><div class="ttdoc">Creates an plSimdFloat that is initialized to Not-A-Number (NaN).</div><div class="ttdef"><b>Definition</b> FPUFloat_inl.h:42</div></div>
<div class="ttc" id="aclasspl_simd_float_htm_ac1e5fde02ac38476a85a6f785738bced"><div class="ttname"><a href="../../d6/d46/classpl_simd_float.htm#ac1e5fde02ac38476a85a6f785738bced">plSimdFloat::MakeZero</a></div><div class="ttdeci">static plSimdFloat MakeZero()</div><div class="ttdoc">Creates an plSimdFloat that is initialized to zero.</div><div class="ttdef"><b>Definition</b> FPUFloat_inl.h:36</div></div>
<div class="ttc" id="aclasspl_simd_vec4b_htm"><div class="ttname"><a href="../../d2/dbd/classpl_simd_vec4b.htm">plSimdVec4b</a></div><div class="ttdef"><b>Definition</b> SimdVec4b.h:7</div></div>
<div class="ttc" id="aclasspl_simd_vec4f_htm"><div class="ttname"><a href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a></div><div class="ttdoc">A 4-component SIMD vector class.</div><div class="ttdef"><b>Definition</b> SimdVec4f.h:8</div></div>
<div class="ttc" id="aclasspl_simd_vec4f_htm_a2e52b6ff1c525d8483c9a1cc2f215ab0"><div class="ttname"><a href="../../d6/dc1/classpl_simd_vec4f.htm#a2e52b6ff1c525d8483c9a1cc2f215ab0">plSimdVec4f::MakeNaN</a></div><div class="ttdeci">static plSimdVec4f MakeNaN()</div><div class="ttdoc">Creates an plSimdVec4f that is initialized to Not-A-Number (NaN).</div><div class="ttdef"><b>Definition</b> SimdVec4f_inl.h:13</div></div>
<div class="ttc" id="aclasspl_simd_vec4f_htm_a9079be9cc5ff9c8644d5a275f1099c0f"><div class="ttname"><a href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a></div><div class="ttdeci">static plSimdVec4f MakeZero()</div><div class="ttdoc">Creates an plSimdVec4f that is initialized to zero.</div><div class="ttdef"><b>Definition</b> SimdVec4f_inl.h:8</div></div>
<div class="ttc" id="aclasspl_vec4_template_htm"><div class="ttname"><a href="../../d1/d4b/classpl_vec4_template.htm">plVec4Template&lt; float &gt;</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_e0773f6bc48aee020523ff8d30d00c02.htm">SimdMath</a></li><li class="navelem"><a class="el" href="../../dir_3ba8ecdc8c842079897e8785b600fb10.htm">Implementation</a></li><li class="navelem"><b>SimdVec4f_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
