<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/Containers/Implementation/ArrayMap_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('dc/d08/_array_map__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ArrayMap_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00004" data-start="{" data-end="}">
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a08ef654eb4aa15588b74df52970487d9">    4</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a08ef654eb4aa15588b74df52970487d9">plArrayMapBase&lt;KEY, VALUE&gt;::plArrayMapBase</a>(<a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>  : m_Data(pAllocator)</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>{</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  m_bSorted = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>}</div>
</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00011" data-start="{" data-end="}">
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a9e83e4d7ca38614db25fa0b08daad2e6">   11</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a08ef654eb4aa15588b74df52970487d9">plArrayMapBase&lt;KEY, VALUE&gt;::plArrayMapBase</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&amp; rhs, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  : m_bSorted(rhs.m_bSorted)</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  , m_Data(pAllocator)</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  m_Data = rhs.m_Data;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>}</div>
</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00019" data-start="{" data-end="}">
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#abd45e8f34437b687f8914b1d5ccaff2a">   19</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#abd45e8f34437b687f8914b1d5ccaff2a">plArrayMapBase&lt;KEY, VALUE&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&amp; rhs)</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>{</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  m_bSorted = rhs.m_bSorted;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  m_Data = rhs.m_Data;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>}</div>
</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00026" data-start="{" data-end="}">
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#aa09470f9b7332b4542ba6fa8ecb337a3">   26</a></span>PL_ALWAYS_INLINE plUInt32 <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#aa09470f9b7332b4542ba6fa8ecb337a3">plArrayMapBase&lt;KEY, VALUE&gt;::GetCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keywordflow">return</span> m_Data.GetCount();</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>}</div>
</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a08ef654eb4aa15588b74df52970487d9">   31</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00032" data-start="{" data-end="}">
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a929d1dbf74180a7631e38a2b4bad3bb6">   32</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a929d1dbf74180a7631e38a2b4bad3bb6">plArrayMapBase&lt;KEY, VALUE&gt;::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="}">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a9e83e4d7ca38614db25fa0b08daad2e6">   34</a></span>  <span class="keywordflow">return</span> m_Data.IsEmpty();</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>}</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="foldopen" id="foldopen00037" data-start="{" data-end="}">
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#abd45e8f34437b687f8914b1d5ccaff2a">   37</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00038" data-start="{" data-end="}">
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a69d7b12de613197128e0f2585aa2a73b">   38</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a69d7b12de613197128e0f2585aa2a73b">plArrayMapBase&lt;KEY, VALUE&gt;::Clear</a>()</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>{</div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="}">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#aa09470f9b7332b4542ba6fa8ecb337a3">   40</a></span>  m_bSorted = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  m_Data.Clear();</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>}</div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="}">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a929d1dbf74180a7631e38a2b4bad3bb6">   43</a></span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType, <span class="keyword">typename</span> CompatibleValueType&gt;</div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a69d7b12de613197128e0f2585aa2a73b">   46</a></span><span class="keyword">inline</span> plUInt32 <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a9a8a319d6435c100b9fa7515c13e85ca">plArrayMapBase&lt;KEY, VALUE&gt;::Insert</a>(CompatibleKeyType&amp;&amp; key, CompatibleValueType&amp;&amp; value)</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>{</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  Pair&amp; ref = m_Data.ExpandAndGetRef();</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  ref.key = std::forward&lt;CompatibleKeyType&gt;(key);</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  ref.value = std::forward&lt;CompatibleValueType&gt;(value);</div>
<div class="foldopen" id="foldopen00051" data-start="{" data-end="}">
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a9a8a319d6435c100b9fa7515c13e85ca">   51</a></span>  m_bSorted = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keywordflow">return</span> m_Data.GetCount() - 1;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>}</div>
</div>
<div class="foldopen" id="foldopen00054" data-start="{" data-end="}">
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a3d3fb5841fa5439a867eeb78d11b08bd">   54</a></span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00056" data-start="{" data-end="}">
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a3d3fb5841fa5439a867eeb78d11b08bd">   56</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a3d3fb5841fa5439a867eeb78d11b08bd">plArrayMapBase&lt;KEY, VALUE&gt;::Sort</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <span class="keywordflow">if</span> (m_bSorted)</div>
<div class="foldopen" id="foldopen00059" data-start="{" data-end="}">
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#aac6cf8dccb2fdb95b8dd7b7bf9c17259">   59</a></span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  m_bSorted = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  m_Data.Sort();</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>}</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="foldopen" id="foldopen00065" data-start="{" data-end="}">
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#aec0791850dada82f635bd3a14635f9b3">   65</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="}">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#aac6cf8dccb2fdb95b8dd7b7bf9c17259">   67</a></span>plUInt32 <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#aac6cf8dccb2fdb95b8dd7b7bf9c17259">plArrayMapBase&lt;KEY, VALUE&gt;::Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)<span class="keyword"> const</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keywordflow">if</span> (!m_bSorted)</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  {</div>
<div class="foldopen" id="foldopen00071" data-start="{" data-end="}">
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#ae3c98dabaf9b7b7ee15c0a81eadb627b">   71</a></span>    m_Data.Sort();</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  }</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="foldopen" id="foldopen00074" data-start="{" data-end="}">
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a9982983319e38d0d892595614b4326ad">   74</a></span>  plUInt32 lb = 0;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  plUInt32 ub = m_Data.GetCount();</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="foldopen" id="foldopen00077" data-start="{" data-end="}">
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a530ab2931eb2f2f82bebc19589f4123b">   77</a></span>  <span class="keywordflow">while</span> (lb &lt; ub)</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  {</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <span class="keyword">const</span> plUInt32 middle = lb + ((ub - lb) &gt;&gt; 1);</div>
<div class="foldopen" id="foldopen00080" data-start="{" data-end="}">
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a8eed6273f6a9845a14aa00a0d57afad4">   80</a></span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="keywordflow">if</span> (m_Data[middle].key &lt; key)</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    {</div>
<div class="foldopen" id="foldopen00083" data-start="{" data-end="}">
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a3ae141bf1c5829df922ce88aa9fb1a03">   83</a></span>      lb = middle + 1;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    }</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (key &lt; m_Data[middle].key)</div>
<div class="foldopen" id="foldopen00086" data-start="{" data-end="}">
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a2203b8f48a341aacbc24389fdb3db66a">   86</a></span>    {</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>      ub = middle;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    }</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    <span class="keywordflow">else</span> <span class="comment">// equal</span></div>
<div class="foldopen" id="foldopen00090" data-start="{" data-end="}">
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a258ca4c4f48e4438d16c661b4c9507f8">   90</a></span>    {</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>      <span class="keywordflow">return</span> middle;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    }</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  }</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordflow">return</span> plInvalidIndex;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>}</div>
<div class="foldopen" id="foldopen00097" data-start="{" data-end="}">
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a507d52e24d47579e95420b80dfd96233">   97</a></span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="foldopen" id="foldopen00100" data-start="{" data-end="}">
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#aec0791850dada82f635bd3a14635f9b3">  100</a></span>plUInt32 <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#aec0791850dada82f635bd3a14635f9b3">plArrayMapBase&lt;KEY, VALUE&gt;::LowerBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)<span class="keyword"> const</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="keywordflow">if</span> (!m_bSorted)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  {</div>
<div class="foldopen" id="foldopen00104" data-start="{" data-end="}">
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a9a18c73ebd8aa870195412f556505383">  104</a></span>    m_Data.Sort();</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  }</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  plUInt32 lb = 0;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  plUInt32 ub = m_Data.GetCount();</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="keywordflow">while</span> (lb &lt; ub)</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  {</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    <span class="keyword">const</span> plUInt32 middle = lb + ((ub - lb) &gt;&gt; 1);</div>
<div class="foldopen" id="foldopen00113" data-start="{" data-end="}">
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a4fd665eae6bff7309938aa046c945b8f">  113</a></span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    <span class="keywordflow">if</span> (m_Data[middle].key &lt; key)</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    {</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>      lb = middle + 1;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    }</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      ub = middle;</div>
<div class="foldopen" id="foldopen00121" data-start="{" data-end="}">
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a594cdd3dd81f35ef98b46001bac7fd00">  121</a></span>    }</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  }</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="foldopen" id="foldopen00124" data-start="{" data-end="}">
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#acefc92b751ffb5fd5271c80b58216d60">  124</a></span>  <span class="keywordflow">if</span> (lb == m_Data.GetCount())</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    <span class="keywordflow">return</span> plInvalidIndex;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="foldopen" id="foldopen00127" data-start="{" data-end="}">
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#ad3a4eb5145e295f070449425ed888053">  127</a></span>  <span class="keywordflow">return</span> lb;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>}</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="foldopen" id="foldopen00130" data-start="{" data-end="}">
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a01d1eb8796afb51171f16b7869aac2ba">  130</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="foldopen" id="foldopen00132" data-start="{" data-end="}">
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#ae3c98dabaf9b7b7ee15c0a81eadb627b">  132</a></span>plUInt32 <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#ae3c98dabaf9b7b7ee15c0a81eadb627b">plArrayMapBase&lt;KEY, VALUE&gt;::UpperBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)<span class="keyword"> const</span></div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="keywordflow">if</span> (!m_bSorted)</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  {</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    m_Data.Sort();</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  }</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  plUInt32 lb = 0;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  plUInt32 ub = m_Data.GetCount();</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keywordflow">while</span> (lb &lt; ub)</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  {</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>    <span class="keyword">const</span> plUInt32 middle = lb + ((ub - lb) &gt;&gt; 1);</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    <span class="keywordflow">if</span> (key &lt; m_Data[middle].key)</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    {</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>      ub = middle;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    }</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>    {</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>      lb = middle + 1;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    }</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  }</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <span class="keywordflow">if</span> (ub == m_Data.GetCount())</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>    <span class="keywordflow">return</span> plInvalidIndex;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  <span class="keywordflow">return</span> ub;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>}</div>
</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00163" data-start="{" data-end="}">
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a9982983319e38d0d892595614b4326ad">  163</a></span>PL_ALWAYS_INLINE <span class="keyword">const</span> KEY&amp; <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a9982983319e38d0d892595614b4326ad">plArrayMapBase&lt;KEY, VALUE&gt;::GetKey</a>(plUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  <span class="keywordflow">return</span> m_Data[uiIndex].key;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>}</div>
</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00169" data-start="{" data-end="}">
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a530ab2931eb2f2f82bebc19589f4123b">  169</a></span>PL_ALWAYS_INLINE <span class="keyword">const</span> VALUE&amp; <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a530ab2931eb2f2f82bebc19589f4123b">plArrayMapBase&lt;KEY, VALUE&gt;::GetValue</a>(plUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  <span class="keywordflow">return</span> m_Data[uiIndex].value;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>}</div>
</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00175" data-start="{" data-end="}">
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a8eed6273f6a9845a14aa00a0d57afad4">  175</a></span>VALUE&amp; <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a530ab2931eb2f2f82bebc19589f4123b">plArrayMapBase&lt;KEY, VALUE&gt;::GetValue</a>(plUInt32 uiIndex)</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>{</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  <span class="keywordflow">return</span> m_Data[uiIndex].value;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>}</div>
</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00181" data-start="{" data-end="}">
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a3ae141bf1c5829df922ce88aa9fb1a03">  181</a></span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;typename plArrayMapBase&lt;KEY, VALUE&gt;::Pair</a>&gt;&amp; <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a3ae141bf1c5829df922ce88aa9fb1a03">plArrayMapBase&lt;KEY, VALUE&gt;::GetData</a>()</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>{</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  m_bSorted = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keywordflow">return</span> m_Data;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>}</div>
</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00188" data-start="{" data-end="}">
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a2203b8f48a341aacbc24389fdb3db66a">  188</a></span>PL_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;typename plArrayMapBase&lt;KEY, VALUE&gt;::Pair</a>&gt;&amp; <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a3ae141bf1c5829df922ce88aa9fb1a03">plArrayMapBase&lt;KEY, VALUE&gt;::GetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="keywordflow">return</span> m_Data;</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>}</div>
</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="foldopen" id="foldopen00195" data-start="{" data-end="}">
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a258ca4c4f48e4438d16c661b4c9507f8">  195</a></span>VALUE&amp; <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a258ca4c4f48e4438d16c661b4c9507f8">plArrayMapBase&lt;KEY, VALUE&gt;::FindOrAdd</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keywordtype">bool</span>* out_pExisted)</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>{</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  plUInt32 index = Find&lt;CompatibleKeyType&gt;(key);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  <span class="keywordflow">if</span> (out_pExisted)</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>    *out_pExisted = index != plInvalidIndex;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  <span class="keywordflow">if</span> (index == plInvalidIndex)</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  {</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>    index = Insert(key, VALUE());</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  }</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  <span class="keywordflow">return</span> GetValue(index);</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>}</div>
</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>PL_ALWAYS_INLINE VALUE&amp; <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a3b74e7cb097472ff92bd3cb7f2b52b35">plArrayMapBase&lt;KEY, VALUE&gt;::operator[]</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>{</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  <span class="keywordflow">return</span> FindOrAdd(key);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>}</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00218" data-start="{" data-end="}">
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a507d52e24d47579e95420b80dfd96233">  218</a></span>PL_ALWAYS_INLINE <span class="keyword">const</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">plArrayMapBase&lt;KEY, VALUE&gt;::Pair</a>&amp; <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a507d52e24d47579e95420b80dfd96233">plArrayMapBase&lt;KEY, VALUE&gt;::GetPair</a>(plUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>  <span class="keywordflow">return</span> m_Data[uiIndex];</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>}</div>
</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00224" data-start="{" data-end="}">
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a9a18c73ebd8aa870195412f556505383">  224</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a9a18c73ebd8aa870195412f556505383">plArrayMapBase&lt;KEY, VALUE&gt;::RemoveAtAndCopy</a>(plUInt32 uiIndex, <span class="keywordtype">bool</span> bKeepSorted)</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>{</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <span class="keywordflow">if</span> (bKeepSorted &amp;&amp; m_bSorted)</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  {</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    m_Data.RemoveAtAndCopy(uiIndex);</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  }</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  {</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    m_Data.RemoveAtAndSwap(uiIndex);</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    m_bSorted = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>  }</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>}</div>
</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="foldopen" id="foldopen00239" data-start="{" data-end="}">
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a4fd665eae6bff7309938aa046c945b8f">  239</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a4fd665eae6bff7309938aa046c945b8f">plArrayMapBase&lt;KEY, VALUE&gt;::RemoveAndCopy</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keywordtype">bool</span> bKeepSorted)</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>{</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  <span class="keyword">const</span> plUInt32 uiIndex = Find(key);</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  <span class="keywordflow">if</span> (uiIndex == plInvalidIndex)</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>  RemoveAtAndCopy(uiIndex, bKeepSorted);</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>}</div>
</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a989d84b2e28e044a5e235a72a5a1fe38">plArrayMapBase&lt;KEY, VALUE&gt;::Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)<span class="keyword"> const</span></div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  <span class="keywordflow">return</span> Find(key) != plInvalidIndex;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>}</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="foldopen" id="foldopen00259" data-start="{" data-end="}">
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a594cdd3dd81f35ef98b46001bac7fd00">  259</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a989d84b2e28e044a5e235a72a5a1fe38">plArrayMapBase&lt;KEY, VALUE&gt;::Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keyword">const</span> VALUE&amp; value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  plUInt32 atpos = LowerBound(key);</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>  <span class="keywordflow">if</span> (atpos == plInvalidIndex)</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  <span class="keywordflow">while</span> (atpos &lt; m_Data.GetCount())</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  {</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>    <span class="keywordflow">if</span> (m_Data[atpos].key != key)</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>    <span class="keywordflow">if</span> (m_Data[atpos].value == value)</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>    ++atpos;</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>  }</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>}</div>
</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00282" data-start="{" data-end="}">
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#acefc92b751ffb5fd5271c80b58216d60">  282</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#acefc92b751ffb5fd5271c80b58216d60">plArrayMapBase&lt;KEY, VALUE&gt;::Reserve</a>(plUInt32 uiSize)</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>{</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  m_Data.Reserve(uiSize);</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>}</div>
</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00288" data-start="{" data-end="}">
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#ad3a4eb5145e295f070449425ed888053">  288</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#ad3a4eb5145e295f070449425ed888053">plArrayMapBase&lt;KEY, VALUE&gt;::Compact</a>()</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>{</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>  m_Data.Compact();</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>}</div>
</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span> </div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="foldopen" id="foldopen00294" data-start="{" data-end="}">
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno"><a class="line" href="../../dd/d6d/classpl_array_map_base.htm#a01d1eb8796afb51171f16b7869aac2ba">  294</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a01d1eb8796afb51171f16b7869aac2ba">plArrayMapBase&lt;KEY, VALUE&gt;::operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase&lt;KEY, VALUE&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>  Sort();</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  rhs.<a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#a3d3fb5841fa5439a867eeb78d11b08bd">Sort</a>();</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span> </div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>  <span class="keywordflow">return</span> m_Data == rhs.m_Data;</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>}</div>
</div>
</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span><a class="code hl_class" href="../../dc/d8c/classpl_array_map.htm">plArrayMap&lt;KEY, VALUE, A&gt;::plArrayMap</a>()</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>  : <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&lt;KEY, VALUE&gt;(A::GetAllocator())</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>{</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>}</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span><a class="code hl_class" href="../../dc/d8c/classpl_array_map.htm">plArrayMap&lt;KEY, VALUE, A&gt;::plArrayMap</a>(<a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>  : <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&lt;KEY, VALUE&gt;(pAllocator)</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>{</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>}</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span><a class="code hl_class" href="../../dc/d8c/classpl_array_map.htm">plArrayMap&lt;KEY, VALUE, A&gt;::plArrayMap</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d8c/classpl_array_map.htm">plArrayMap&lt;KEY, VALUE, A&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>  : <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&lt;KEY, VALUE&gt;(rhs, A::GetAllocator())</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>{</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>}</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span> </div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span><a class="code hl_class" href="../../dc/d8c/classpl_array_map.htm">plArrayMap&lt;KEY, VALUE, A&gt;::plArrayMap</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase&lt;KEY, VALUE&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>  : <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a>&lt;KEY, VALUE&gt;(rhs, A::GetAllocator())</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>{</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>}</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span> </div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../dc/d8c/classpl_array_map.htm">plArrayMap&lt;KEY, VALUE, A&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d8c/classpl_array_map.htm">plArrayMap&lt;KEY, VALUE, A&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>{</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>  <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#abd45e8f34437b687f8914b1d5ccaff2a">plArrayMapBase&lt;KEY, VALUE&gt;::operator=</a>(rhs);</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>}</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span> </div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../dc/d8c/classpl_array_map.htm">plArrayMap&lt;KEY, VALUE, A&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase&lt;KEY, VALUE&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>{</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>  <a class="code hl_function" href="../../dd/d6d/classpl_array_map_base.htm#abd45e8f34437b687f8914b1d5ccaff2a">plArrayMapBase&lt;KEY, VALUE&gt;::operator=</a>(rhs);</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>}</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="ttc" id="aclasspl_allocator_htm"><div class="ttname"><a href="../../da/df3/classpl_allocator.htm">plAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm">plArrayMapBase</a></div><div class="ttdoc">An associative container, similar to plMap, but all data is stored in a sorted contiguous array,...</div><div class="ttdef"><b>Definition</b> ArrayMap.h:14</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a01d1eb8796afb51171f16b7869aac2ba"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a01d1eb8796afb51171f16b7869aac2ba">plArrayMapBase::operator==</a></div><div class="ttdeci">bool operator==(const plArrayMapBase&lt; KEY, VALUE &gt; &amp;rhs) const</div><div class="ttdoc">Compares the two containers for equality.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:294</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a08ef654eb4aa15588b74df52970487d9"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a08ef654eb4aa15588b74df52970487d9">plArrayMapBase::plArrayMapBase</a></div><div class="ttdeci">plArrayMapBase(plAllocator *pAllocator)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:4</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a258ca4c4f48e4438d16c661b4c9507f8"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a258ca4c4f48e4438d16c661b4c9507f8">plArrayMapBase::FindOrAdd</a></div><div class="ttdeci">VALUE &amp; FindOrAdd(const CompatibleKeyType &amp;key, bool *out_pExisted=nullptr)</div><div class="ttdoc">Returns the value stored at the given key. If none exists, one is created. bExisted indicates whether...</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:195</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a3ae141bf1c5829df922ce88aa9fb1a03"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a3ae141bf1c5829df922ce88aa9fb1a03">plArrayMapBase::GetData</a></div><div class="ttdeci">plDynamicArray&lt; Pair &gt; &amp; GetData()</div><div class="ttdoc">Returns a reference to the map data array.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:181</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a3b74e7cb097472ff92bd3cb7f2b52b35"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a3b74e7cb097472ff92bd3cb7f2b52b35">plArrayMapBase::operator[]</a></div><div class="ttdeci">VALUE &amp; operator[](const CompatibleKeyType &amp;key)</div><div class="ttdoc">Same as FindOrAdd.</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a3d3fb5841fa5439a867eeb78d11b08bd"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a3d3fb5841fa5439a867eeb78d11b08bd">plArrayMapBase::Sort</a></div><div class="ttdeci">void Sort() const</div><div class="ttdoc">Ensures the internal data structure is sorted. This is done automatically every time a lookup needs t...</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:56</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a4fd665eae6bff7309938aa046c945b8f"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a4fd665eae6bff7309938aa046c945b8f">plArrayMapBase::RemoveAndCopy</a></div><div class="ttdeci">bool RemoveAndCopy(const CompatibleKeyType &amp;key, bool bKeepSorted=false)</div><div class="ttdoc">Removes one element with the given key. Returns true, if one was found and removed....</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:239</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a507d52e24d47579e95420b80dfd96233"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a507d52e24d47579e95420b80dfd96233">plArrayMapBase::GetPair</a></div><div class="ttdeci">const Pair &amp; GetPair(plUInt32 uiIndex) const</div><div class="ttdoc">Returns the key/value pair at the given index.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:218</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a530ab2931eb2f2f82bebc19589f4123b"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a530ab2931eb2f2f82bebc19589f4123b">plArrayMapBase::GetValue</a></div><div class="ttdeci">const VALUE &amp; GetValue(plUInt32 uiIndex) const</div><div class="ttdoc">Returns the value that is stored at the given index.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:169</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a69d7b12de613197128e0f2585aa2a73b"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a69d7b12de613197128e0f2585aa2a73b">plArrayMapBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Purges all elements from the map.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:38</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a929d1dbf74180a7631e38a2b4bad3bb6"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a929d1dbf74180a7631e38a2b4bad3bb6">plArrayMapBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">True if the map contains no elements.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:32</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a989d84b2e28e044a5e235a72a5a1fe38"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a989d84b2e28e044a5e235a72a5a1fe38">plArrayMapBase::Contains</a></div><div class="ttdeci">bool Contains(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns whether an element with the given key exists.</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a9982983319e38d0d892595614b4326ad"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a9982983319e38d0d892595614b4326ad">plArrayMapBase::GetKey</a></div><div class="ttdeci">const KEY &amp; GetKey(plUInt32 uiIndex) const</div><div class="ttdoc">Returns the key that is stored at the given index.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:163</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a9a18c73ebd8aa870195412f556505383"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a9a18c73ebd8aa870195412f556505383">plArrayMapBase::RemoveAtAndCopy</a></div><div class="ttdeci">void RemoveAtAndCopy(plUInt32 uiIndex, bool bKeepSorted=false)</div><div class="ttdoc">Removes the element at the given index.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:224</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_a9a8a319d6435c100b9fa7515c13e85ca"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#a9a8a319d6435c100b9fa7515c13e85ca">plArrayMapBase::Insert</a></div><div class="ttdeci">plUInt32 Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</div><div class="ttdoc">Always inserts a new value under the given key. Duplicates are allowed. Returns the index of the newl...</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:46</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_aa09470f9b7332b4542ba6fa8ecb337a3"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#aa09470f9b7332b4542ba6fa8ecb337a3">plArrayMapBase::GetCount</a></div><div class="ttdeci">plUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements stored in the map.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:26</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_aac6cf8dccb2fdb95b8dd7b7bf9c17259"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#aac6cf8dccb2fdb95b8dd7b7bf9c17259">plArrayMapBase::Find</a></div><div class="ttdeci">plUInt32 Find(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns an index to one element with the given key. If the key is inserted multiple times,...</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:67</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_abd45e8f34437b687f8914b1d5ccaff2a"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#abd45e8f34437b687f8914b1d5ccaff2a">plArrayMapBase::operator=</a></div><div class="ttdeci">void operator=(const plArrayMapBase &amp;rhs)</div><div class="ttdoc">Copy assignment operator.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:19</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_acefc92b751ffb5fd5271c80b58216d60"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#acefc92b751ffb5fd5271c80b58216d60">plArrayMapBase::Reserve</a></div><div class="ttdeci">void Reserve(plUInt32 uiSize)</div><div class="ttdoc">Reserves enough memory to store size elements.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:282</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_ad3a4eb5145e295f070449425ed888053"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#ad3a4eb5145e295f070449425ed888053">plArrayMapBase::Compact</a></div><div class="ttdeci">void Compact()</div><div class="ttdoc">Compacts the internal memory to not waste any space.</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:288</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_ae3c98dabaf9b7b7ee15c0a81eadb627b"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#ae3c98dabaf9b7b7ee15c0a81eadb627b">plArrayMapBase::UpperBound</a></div><div class="ttdeci">plUInt32 UpperBound(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns the index to the first element with a key that is LARGER than the given key....</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:132</div></div>
<div class="ttc" id="aclasspl_array_map_base_htm_aec0791850dada82f635bd3a14635f9b3"><div class="ttname"><a href="../../dd/d6d/classpl_array_map_base.htm#aec0791850dada82f635bd3a14635f9b3">plArrayMapBase::LowerBound</a></div><div class="ttdeci">plUInt32 LowerBound(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns the index to the first element with a key equal or larger than the given key....</div><div class="ttdef"><b>Definition</b> ArrayMap_inl.h:100</div></div>
<div class="ttc" id="aclasspl_array_map_htm"><div class="ttname"><a href="../../dc/d8c/classpl_array_map.htm">plArrayMap</a></div><div class="ttdoc">See plArrayMapBase for details.</div><div class="ttdef"><b>Definition</b> ArrayMap.h:149</div></div>
<div class="ttc" id="aclasspl_dynamic_array_htm"><div class="ttname"><a href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="astructpl_array_map_base_1_1_pair_htm"><div class="ttname"><a href="../../d1/d76/structpl_array_map_base_1_1_pair.htm">plArrayMapBase::Pair</a></div><div class="ttdef"><b>Definition</b> ArrayMap.h:19</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_3416883c1320ec68c4d0694befd114fc.htm">Containers</a></li><li class="navelem"><a class="el" href="../../dir_f032078016c44376fe34ead7fd8ff37e.htm">Implementation</a></li><li class="navelem"><b>ArrayMap_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
