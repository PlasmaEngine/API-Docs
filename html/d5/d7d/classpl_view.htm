<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plView Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d5/d7d/classpl_view.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d7/d47/classpl_view-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plView Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Encapsulates a view on the given world through the given camera and rendered with the specified RenderPipeline into the given render target setup.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/d1f/_view_8h_source.htm">View.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plView:</div>
<div class="dyncontent">
<div class="center"><img src="../../de/d36/classpl_view__inherit__graph.png" border="0" usemap="#apl_view_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_view_inherit__map" id="apl_view_inherit__map">
<area shape="rect" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende..." alt="" coords="50,229,109,256"/>
<area shape="rect" href="../../df/db6/classpl_render_pipeline_node.htm" title=" " alt="" coords="5,155,154,181"/>
<area shape="poly" title=" " alt="" coords="82,197,82,229,77,229,77,197"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="20,80,139,107"/>
<area shape="poly" title=" " alt="" coords="82,122,82,154,77,154,77,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="41,5,118,32"/>
<area shape="poly" title=" " alt="" coords="82,48,82,80,77,80,77,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5c6e295328e7dedec6c3ea735a1f3b6e" id="r_a5c6e295328e7dedec6c3ea735a1f3b6e"><td class="memItemLeft" align="right" valign="top"><a id="a5c6e295328e7dedec6c3ea735a1f3b6e" name="a5c6e295328e7dedec6c3ea735a1f3b6e"></a>
<a class="el" href="../../d7/d9c/classpl_view_handle.htm">plViewHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetHandle</b> () const</td></tr>
<tr class="separator:a5c6e295328e7dedec6c3ea735a1f3b6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4de287303a7d94f544bd2edb964a259" id="r_aa4de287303a7d94f544bd2edb964a259"><td class="memItemLeft" align="right" valign="top"><a id="aa4de287303a7d94f544bd2edb964a259" name="aa4de287303a7d94f544bd2edb964a259"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetName</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName)</td></tr>
<tr class="separator:aa4de287303a7d94f544bd2edb964a259"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc6fbf4a4fdf07e096710a67c173f7d2" id="r_adc6fbf4a4fdf07e096710a67c173f7d2"><td class="memItemLeft" align="right" valign="top"><a id="adc6fbf4a4fdf07e096710a67c173f7d2" name="adc6fbf4a4fdf07e096710a67c173f7d2"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="separator:adc6fbf4a4fdf07e096710a67c173f7d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41a7b4118e0e5203c39f40c6240d4f68" id="r_a41a7b4118e0e5203c39f40c6240d4f68"><td class="memItemLeft" align="right" valign="top"><a id="a41a7b4118e0e5203c39f40c6240d4f68" name="a41a7b4118e0e5203c39f40c6240d4f68"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetWorld</b> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld)</td></tr>
<tr class="separator:a41a7b4118e0e5203c39f40c6240d4f68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6ea57931e2af1926a5be39e372ccae1" id="r_ac6ea57931e2af1926a5be39e372ccae1"><td class="memItemLeft" align="right" valign="top"><a id="ac6ea57931e2af1926a5be39e372ccae1" name="ac6ea57931e2af1926a5be39e372ccae1"></a>
<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> ()</td></tr>
<tr class="separator:ac6ea57931e2af1926a5be39e372ccae1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a699bf75ca58e36e0a0fcb9f17d7f0f77" id="r_a699bf75ca58e36e0a0fcb9f17d7f0f77"><td class="memItemLeft" align="right" valign="top"><a id="a699bf75ca58e36e0a0fcb9f17d7f0f77" name="a699bf75ca58e36e0a0fcb9f17d7f0f77"></a>
const <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> () const</td></tr>
<tr class="separator:a699bf75ca58e36e0a0fcb9f17d7f0f77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab67245a27ceaa8ced9ec201d14917740" id="r_ab67245a27ceaa8ced9ec201d14917740"><td class="memItemLeft" align="right" valign="top"><a id="ab67245a27ceaa8ced9ec201d14917740" name="ab67245a27ceaa8ced9ec201d14917740"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetSwapChain</b> (<a class="el" href="../../d6/d88/classpl_g_a_l_swap_chain_handle.htm">plGALSwapChainHandle</a> hSwapChain)</td></tr>
<tr class="memdesc:ab67245a27ceaa8ced9ec201d14917740"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the swapchain that this view will be rendering into. Can be invalid in case the render target is an off-screen buffer in which case SetRenderTargets needs to be called. Setting the swap-chain is necessary in order to acquire and present the image to the window. SetSwapChain and SetRenderTargets are mutually exclusive. Calling this function will reset the render targets. <br /></td></tr>
<tr class="separator:ab67245a27ceaa8ced9ec201d14917740"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cc2301acc11788ee48f8d2d2233a765" id="r_a0cc2301acc11788ee48f8d2d2233a765"><td class="memItemLeft" align="right" valign="top"><a id="a0cc2301acc11788ee48f8d2d2233a765" name="a0cc2301acc11788ee48f8d2d2233a765"></a>
<a class="el" href="../../d6/d88/classpl_g_a_l_swap_chain_handle.htm">plGALSwapChainHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetSwapChain</b> () const</td></tr>
<tr class="separator:a0cc2301acc11788ee48f8d2d2233a765"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a235bd24f20eded506fd4fbf292081c4b" id="r_a235bd24f20eded506fd4fbf292081c4b"><td class="memItemLeft" align="right" valign="top"><a id="a235bd24f20eded506fd4fbf292081c4b" name="a235bd24f20eded506fd4fbf292081c4b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetRenderTargets</b> (const <a class="el" href="../../d9/d70/structpl_g_a_l_render_targets.htm">plGALRenderTargets</a> &amp;renderTargets)</td></tr>
<tr class="memdesc:a235bd24f20eded506fd4fbf292081c4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the off-screen render targets. Use SetSwapChain if rendering to a window. SetSwapChain and SetRenderTargets are mutually exclusive. Calling this function will reset the swap chain. <br /></td></tr>
<tr class="separator:a235bd24f20eded506fd4fbf292081c4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5a13a159db558f80584da3776ec2d3f" id="r_aa5a13a159db558f80584da3776ec2d3f"><td class="memItemLeft" align="right" valign="top"><a id="aa5a13a159db558f80584da3776ec2d3f" name="aa5a13a159db558f80584da3776ec2d3f"></a>
const <a class="el" href="../../d9/d70/structpl_g_a_l_render_targets.htm">plGALRenderTargets</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetRenderTargets</b> () const</td></tr>
<tr class="separator:aa5a13a159db558f80584da3776ec2d3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae400f4c62f8ad5c0b7a7a03bdd8bb28a" id="r_ae400f4c62f8ad5c0b7a7a03bdd8bb28a"><td class="memItemLeft" align="right" valign="top"><a id="ae400f4c62f8ad5c0b7a7a03bdd8bb28a" name="ae400f4c62f8ad5c0b7a7a03bdd8bb28a"></a>
const <a class="el" href="../../d9/d70/structpl_g_a_l_render_targets.htm">plGALRenderTargets</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetActiveRenderTargets</b> () const</td></tr>
<tr class="memdesc:ae400f4c62f8ad5c0b7a7a03bdd8bb28a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the render targets that were either set via the swapchain or via the manually set render targets. <br /></td></tr>
<tr class="separator:ae400f4c62f8ad5c0b7a7a03bdd8bb28a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89c2f60e82928592d0f16dee81d4b8cf" id="r_a89c2f60e82928592d0f16dee81d4b8cf"><td class="memItemLeft" align="right" valign="top"><a id="a89c2f60e82928592d0f16dee81d4b8cf" name="a89c2f60e82928592d0f16dee81d4b8cf"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetRenderPipelineResource</b> (<a class="el" href="../../d4/db4/classpl_typed_resource_handle.htm">plRenderPipelineResourceHandle</a> hPipeline)</td></tr>
<tr class="separator:a89c2f60e82928592d0f16dee81d4b8cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2462f8ad24eab563814a27cc3998388f" id="r_a2462f8ad24eab563814a27cc3998388f"><td class="memItemLeft" align="right" valign="top"><a id="a2462f8ad24eab563814a27cc3998388f" name="a2462f8ad24eab563814a27cc3998388f"></a>
<a class="el" href="../../d4/db4/classpl_typed_resource_handle.htm">plRenderPipelineResourceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetRenderPipelineResource</b> () const</td></tr>
<tr class="separator:a2462f8ad24eab563814a27cc3998388f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bc50135ed728beb214216eec7890571" id="r_a6bc50135ed728beb214216eec7890571"><td class="memItemLeft" align="right" valign="top"><a id="a6bc50135ed728beb214216eec7890571" name="a6bc50135ed728beb214216eec7890571"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCamera</b> (<a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *pCamera)</td></tr>
<tr class="separator:a6bc50135ed728beb214216eec7890571"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a047d812baae6001283bea7253305692b" id="r_a047d812baae6001283bea7253305692b"><td class="memItemLeft" align="right" valign="top"><a id="a047d812baae6001283bea7253305692b" name="a047d812baae6001283bea7253305692b"></a>
<a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetCamera</b> ()</td></tr>
<tr class="separator:a047d812baae6001283bea7253305692b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af35d88ae25e84ca4e1de3a50d9c21f85" id="r_af35d88ae25e84ca4e1de3a50d9c21f85"><td class="memItemLeft" align="right" valign="top"><a id="af35d88ae25e84ca4e1de3a50d9c21f85" name="af35d88ae25e84ca4e1de3a50d9c21f85"></a>
const <a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetCamera</b> () const</td></tr>
<tr class="separator:af35d88ae25e84ca4e1de3a50d9c21f85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9e0cb9720a5dd4dd2eeb5e5dd3017a6" id="r_aa9e0cb9720a5dd4dd2eeb5e5dd3017a6"><td class="memItemLeft" align="right" valign="top"><a id="aa9e0cb9720a5dd4dd2eeb5e5dd3017a6" name="aa9e0cb9720a5dd4dd2eeb5e5dd3017a6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCullingCamera</b> (const <a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *pCamera)</td></tr>
<tr class="separator:aa9e0cb9720a5dd4dd2eeb5e5dd3017a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c3c075defdd05761b1968845da82d3e" id="r_a9c3c075defdd05761b1968845da82d3e"><td class="memItemLeft" align="right" valign="top"><a id="a9c3c075defdd05761b1968845da82d3e" name="a9c3c075defdd05761b1968845da82d3e"></a>
const <a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetCullingCamera</b> () const</td></tr>
<tr class="separator:a9c3c075defdd05761b1968845da82d3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc0979c22618457512788677021bfff5" id="r_acc0979c22618457512788677021bfff5"><td class="memItemLeft" align="right" valign="top"><a id="acc0979c22618457512788677021bfff5" name="acc0979c22618457512788677021bfff5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetLodCamera</b> (const <a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *pCamera)</td></tr>
<tr class="separator:acc0979c22618457512788677021bfff5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd8b22397c753a8b210731ca6d24a5d" id="r_aadd8b22397c753a8b210731ca6d24a5d"><td class="memItemLeft" align="right" valign="top"><a id="aadd8b22397c753a8b210731ca6d24a5d" name="aadd8b22397c753a8b210731ca6d24a5d"></a>
const <a class="el" href="../../db/d7e/classpl_camera.htm">plCamera</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetLodCamera</b> () const</td></tr>
<tr class="separator:aadd8b22397c753a8b210731ca6d24a5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f0439cf688a0bb17e508461f5ff50cb" id="r_a6f0439cf688a0bb17e508461f5ff50cb"><td class="memItemLeft" align="right" valign="top"><a id="a6f0439cf688a0bb17e508461f5ff50cb" name="a6f0439cf688a0bb17e508461f5ff50cb"></a>
<a class="el" href="../../dd/d09/structpl_enum.htm">plEnum</a>&lt; <a class="el" href="../../d2/dd5/structpl_camera_usage_hint.htm">plCameraUsageHint</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetCameraUsageHint</b> () const</td></tr>
<tr class="memdesc:a6f0439cf688a0bb17e508461f5ff50cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the camera usage hint for the view. <br /></td></tr>
<tr class="separator:a6f0439cf688a0bb17e508461f5ff50cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc6c8531182eb19d43a231dff5151050" id="r_afc6c8531182eb19d43a231dff5151050"><td class="memItemLeft" align="right" valign="top"><a id="afc6c8531182eb19d43a231dff5151050" name="afc6c8531182eb19d43a231dff5151050"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCameraUsageHint</b> (<a class="el" href="../../dd/d09/structpl_enum.htm">plEnum</a>&lt; <a class="el" href="../../d2/dd5/structpl_camera_usage_hint.htm">plCameraUsageHint</a> &gt; val)</td></tr>
<tr class="memdesc:afc6c8531182eb19d43a231dff5151050"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the camera usage hint for the view. If not 'None', the camera component of the same usage will be auto-connected to this view. <br /></td></tr>
<tr class="separator:afc6c8531182eb19d43a231dff5151050"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa970617b82707eb07f0725cedb7dbf37" id="r_aa970617b82707eb07f0725cedb7dbf37"><td class="memItemLeft" align="right" valign="top"><a id="aa970617b82707eb07f0725cedb7dbf37" name="aa970617b82707eb07f0725cedb7dbf37"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetViewRenderMode</b> (<a class="el" href="../../dd/d09/structpl_enum.htm">plEnum</a>&lt; <a class="el" href="../../d6/d53/structpl_view_render_mode.htm">plViewRenderMode</a> &gt; value)</td></tr>
<tr class="separator:aa970617b82707eb07f0725cedb7dbf37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee5602478a85b0c08ee42f31e2b63049" id="r_aee5602478a85b0c08ee42f31e2b63049"><td class="memItemLeft" align="right" valign="top"><a id="aee5602478a85b0c08ee42f31e2b63049" name="aee5602478a85b0c08ee42f31e2b63049"></a>
<a class="el" href="../../dd/d09/structpl_enum.htm">plEnum</a>&lt; <a class="el" href="../../d6/d53/structpl_view_render_mode.htm">plViewRenderMode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetViewRenderMode</b> () const</td></tr>
<tr class="separator:aee5602478a85b0c08ee42f31e2b63049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b32c520b0dfe476677a6fe3adad2b25" id="r_a4b32c520b0dfe476677a6fe3adad2b25"><td class="memItemLeft" align="right" valign="top"><a id="a4b32c520b0dfe476677a6fe3adad2b25" name="a4b32c520b0dfe476677a6fe3adad2b25"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetViewport</b> (const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectFloat</a> &amp;viewport)</td></tr>
<tr class="separator:a4b32c520b0dfe476677a6fe3adad2b25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27251a74fb1dc323959de0a2fdffb115" id="r_a27251a74fb1dc323959de0a2fdffb115"><td class="memItemLeft" align="right" valign="top"><a id="a27251a74fb1dc323959de0a2fdffb115" name="a27251a74fb1dc323959de0a2fdffb115"></a>
const <a class="el" href="../../df/dd8/classpl_rect_template.htm">plRectFloat</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetViewport</b> () const</td></tr>
<tr class="separator:a27251a74fb1dc323959de0a2fdffb115"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae850864a5141422a7813df0cb30a30c5" id="r_ae850864a5141422a7813df0cb30a30c5"><td class="memItemLeft" align="right" valign="top"><a id="ae850864a5141422a7813df0cb30a30c5" name="ae850864a5141422a7813df0cb30a30c5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ForceUpdate</b> ()</td></tr>
<tr class="memdesc:ae850864a5141422a7813df0cb30a30c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forces the render pipeline to be rebuilt. <br /></td></tr>
<tr class="separator:ae850864a5141422a7813df0cb30a30c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90bf162eedb6a63daea7834435e56f54" id="r_a90bf162eedb6a63daea7834435e56f54"><td class="memItemLeft" align="right" valign="top"><a id="a90bf162eedb6a63daea7834435e56f54" name="a90bf162eedb6a63daea7834435e56f54"></a>
const <a class="el" href="../../d9/dce/structpl_view_data.htm">plViewData</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="separator:a90bf162eedb6a63daea7834435e56f54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affe8444f3ab91db7eaa22c7b9b42036a" id="r_affe8444f3ab91db7eaa22c7b9b42036a"><td class="memItemLeft" align="right" valign="top"><a id="affe8444f3ab91db7eaa22c7b9b42036a" name="affe8444f3ab91db7eaa22c7b9b42036a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValid</b> () const</td></tr>
<tr class="separator:affe8444f3ab91db7eaa22c7b9b42036a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5b9174d3e90ea553b7faebd711d2b43" id="r_ad5b9174d3e90ea553b7faebd711d2b43"><td class="memItemLeft" align="right" valign="top"><a id="ad5b9174d3e90ea553b7faebd711d2b43" name="ad5b9174d3e90ea553b7faebd711d2b43"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ExtractData</b> ()</td></tr>
<tr class="memdesc:ad5b9174d3e90ea553b7faebd711d2b43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts all relevant data from the world to render the view. <br /></td></tr>
<tr class="separator:ad5b9174d3e90ea553b7faebd711d2b43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71933301815f5db96680db43f59a1b7f" id="r_a71933301815f5db96680db43f59a1b7f"><td class="memItemLeft" align="right" valign="top"><a id="a71933301815f5db96680db43f59a1b7f" name="a71933301815f5db96680db43f59a1b7f"></a>
const <a class="el" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>&lt; <a class="el" href="../../d9/db9/classpl_task.htm">plTask</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetExtractTask</b> ()</td></tr>
<tr class="memdesc:a71933301815f5db96680db43f59a1b7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a task implementation that calls ExtractData on this view. <br /></td></tr>
<tr class="separator:a71933301815f5db96680db43f59a1b7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c55fa0cd4bb8f337a5d8c18cccaceac" id="r_a6c55fa0cd4bb8f337a5d8c18cccaceac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6c55fa0cd4bb8f337a5d8c18cccaceac">ComputePickingRay</a> (float fScreenPosX, float fScreenPosY, <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;out_vRayStartPos, <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;out_vRayDir) const</td></tr>
<tr class="memdesc:a6c55fa0cd4bb8f337a5d8c18cccaceac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the start position and direction (in world space) of the picking ray through the screen position in this view.  <br /></td></tr>
<tr class="separator:a6c55fa0cd4bb8f337a5d8c18cccaceac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25844da73e8480b5778b2ae7afa96c59" id="r_a25844da73e8480b5778b2ae7afa96c59"><td class="memItemLeft" align="right" valign="top"><a id="a25844da73e8480b5778b2ae7afa96c59" name="a25844da73e8480b5778b2ae7afa96c59"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ComputeScreenSpacePos</b> (const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vPoint, <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;out_vScreenPos) const</td></tr>
<tr class="separator:a25844da73e8480b5778b2ae7afa96c59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acee91f8e96d3342cdc5b4cff2d5cd975" id="r_acee91f8e96d3342cdc5b4cff2d5cd975"><td class="memItemLeft" align="right" valign="top"><a id="acee91f8e96d3342cdc5b4cff2d5cd975" name="acee91f8e96d3342cdc5b4cff2d5cd975"></a>
const <a class="el" href="../../d4/dbd/classpl_mat4_template.htm">plMat4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetProjectionMatrix</b> (plCameraEye eye) const</td></tr>
<tr class="memdesc:acee91f8e96d3342cdc5b4cff2d5cd975"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current projection matrix. <br /></td></tr>
<tr class="separator:acee91f8e96d3342cdc5b4cff2d5cd975"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58c4f828aebea5f99419a5c78ade572e" id="r_a58c4f828aebea5f99419a5c78ade572e"><td class="memItemLeft" align="right" valign="top"><a id="a58c4f828aebea5f99419a5c78ade572e" name="a58c4f828aebea5f99419a5c78ade572e"></a>
const <a class="el" href="../../d4/dbd/classpl_mat4_template.htm">plMat4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInverseProjectionMatrix</b> (plCameraEye eye) const</td></tr>
<tr class="memdesc:a58c4f828aebea5f99419a5c78ade572e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current inverse projection matrix. <br /></td></tr>
<tr class="separator:a58c4f828aebea5f99419a5c78ade572e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1a746393d1b6e13712aa3b3d199791d" id="r_ab1a746393d1b6e13712aa3b3d199791d"><td class="memItemLeft" align="right" valign="top"><a id="ab1a746393d1b6e13712aa3b3d199791d" name="ab1a746393d1b6e13712aa3b3d199791d"></a>
const <a class="el" href="../../d4/dbd/classpl_mat4_template.htm">plMat4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetViewMatrix</b> (plCameraEye eye) const</td></tr>
<tr class="memdesc:ab1a746393d1b6e13712aa3b3d199791d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current view matrix (camera orientation). <br /></td></tr>
<tr class="separator:ab1a746393d1b6e13712aa3b3d199791d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e9a45907c7802364a10dbf210682396" id="r_a8e9a45907c7802364a10dbf210682396"><td class="memItemLeft" align="right" valign="top"><a id="a8e9a45907c7802364a10dbf210682396" name="a8e9a45907c7802364a10dbf210682396"></a>
const <a class="el" href="../../d4/dbd/classpl_mat4_template.htm">plMat4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInverseViewMatrix</b> (plCameraEye eye) const</td></tr>
<tr class="memdesc:a8e9a45907c7802364a10dbf210682396"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current inverse view matrix (inverse camera orientation). <br /></td></tr>
<tr class="separator:a8e9a45907c7802364a10dbf210682396"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2049cf2590e07d628f03ad6d2bc98ce3" id="r_a2049cf2590e07d628f03ad6d2bc98ce3"><td class="memItemLeft" align="right" valign="top"><a id="a2049cf2590e07d628f03ad6d2bc98ce3" name="a2049cf2590e07d628f03ad6d2bc98ce3"></a>
const <a class="el" href="../../d4/dbd/classpl_mat4_template.htm">plMat4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetViewProjectionMatrix</b> (plCameraEye eye) const</td></tr>
<tr class="memdesc:a2049cf2590e07d628f03ad6d2bc98ce3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current view-projection matrix. <br /></td></tr>
<tr class="separator:a2049cf2590e07d628f03ad6d2bc98ce3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a051d20b043e83c392d485563ecbb1534" id="r_a051d20b043e83c392d485563ecbb1534"><td class="memItemLeft" align="right" valign="top"><a id="a051d20b043e83c392d485563ecbb1534" name="a051d20b043e83c392d485563ecbb1534"></a>
const <a class="el" href="../../d4/dbd/classpl_mat4_template.htm">plMat4</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInverseViewProjectionMatrix</b> (plCameraEye eye) const</td></tr>
<tr class="memdesc:a051d20b043e83c392d485563ecbb1534"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current inverse view-projection matrix. <br /></td></tr>
<tr class="separator:a051d20b043e83c392d485563ecbb1534"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e62b93cacdd1d679beb0826a1661b9f" id="r_a3e62b93cacdd1d679beb0826a1661b9f"><td class="memItemLeft" align="right" valign="top"><a id="a3e62b93cacdd1d679beb0826a1661b9f" name="a3e62b93cacdd1d679beb0826a1661b9f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ComputeCullingFrustum</b> (<a class="el" href="../../da/d67/classpl_frustum.htm">plFrustum</a> &amp;out_frustum) const</td></tr>
<tr class="memdesc:a3e62b93cacdd1d679beb0826a1661b9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the frustum that should be used for determine visible objects for this view. <br /></td></tr>
<tr class="separator:a3e62b93cacdd1d679beb0826a1661b9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d3ff0ded442121b251c6d54c4195c15" id="r_a7d3ff0ded442121b251c6d54c4195c15"><td class="memItemLeft" align="right" valign="top"><a id="a7d3ff0ded442121b251c6d54c4195c15" name="a7d3ff0ded442121b251c6d54c4195c15"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetShaderPermutationVariable</b> (const char *szName, const char *szValue)</td></tr>
<tr class="separator:a7d3ff0ded442121b251c6d54c4195c15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad779ff6de5f83d0df8fc05de60a2cf68" id="r_ad779ff6de5f83d0df8fc05de60a2cf68"><td class="memItemLeft" align="right" valign="top"><a id="ad779ff6de5f83d0df8fc05de60a2cf68" name="ad779ff6de5f83d0df8fc05de60a2cf68"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetRenderPassProperty</b> (const char *szPassName, const char *szPropertyName, const <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;value)</td></tr>
<tr class="separator:ad779ff6de5f83d0df8fc05de60a2cf68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee653f126b3d0f1d77f10c4bac8aee7d" id="r_aee653f126b3d0f1d77f10c4bac8aee7d"><td class="memItemLeft" align="right" valign="top"><a id="aee653f126b3d0f1d77f10c4bac8aee7d" name="aee653f126b3d0f1d77f10c4bac8aee7d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetExtractorProperty</b> (const char *szPassName, const char *szPropertyName, const <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;value)</td></tr>
<tr class="separator:aee653f126b3d0f1d77f10c4bac8aee7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d672ddf6cec176d5dd460f4cb5ad775" id="r_a4d672ddf6cec176d5dd460f4cb5ad775"><td class="memItemLeft" align="right" valign="top"><a id="a4d672ddf6cec176d5dd460f4cb5ad775" name="a4d672ddf6cec176d5dd460f4cb5ad775"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ResetRenderPassProperties</b> ()</td></tr>
<tr class="separator:a4d672ddf6cec176d5dd460f4cb5ad775"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90465f3fca6b2a9f5c81803ff1989bb4" id="r_a90465f3fca6b2a9f5c81803ff1989bb4"><td class="memItemLeft" align="right" valign="top"><a id="a90465f3fca6b2a9f5c81803ff1989bb4" name="a90465f3fca6b2a9f5c81803ff1989bb4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ResetExtractorProperties</b> ()</td></tr>
<tr class="separator:a90465f3fca6b2a9f5c81803ff1989bb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78863e9b6da0a13802766ccb7d109d18" id="r_a78863e9b6da0a13802766ccb7d109d18"><td class="memItemLeft" align="right" valign="top"><a id="a78863e9b6da0a13802766ccb7d109d18" name="a78863e9b6da0a13802766ccb7d109d18"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetRenderPassReadBackProperty</b> (const char *szPassName, const char *szPropertyName, const <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;value)</td></tr>
<tr class="separator:a78863e9b6da0a13802766ccb7d109d18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f410f1ba714368dc9528bffaaf16c9f" id="r_a1f410f1ba714368dc9528bffaaf16c9f"><td class="memItemLeft" align="right" valign="top"><a id="a1f410f1ba714368dc9528bffaaf16c9f" name="a1f410f1ba714368dc9528bffaaf16c9f"></a>
<a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetRenderPassReadBackProperty</b> (const char *szPassName, const char *szPropertyName)</td></tr>
<tr class="separator:a1f410f1ba714368dc9528bffaaf16c9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba42967d285d764c7b22de55f86b116d" id="r_aba42967d285d764c7b22de55f86b116d"><td class="memItemLeft" align="right" valign="top"><a id="aba42967d285d764c7b22de55f86b116d" name="aba42967d285d764c7b22de55f86b116d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsRenderPassReadBackPropertyExisting</b> (const char *szPassName, const char *szPropertyName) const</td></tr>
<tr class="separator:aba42967d285d764c7b22de55f86b116d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6d17a3c770d761e89bdb3f1114a73fe" id="r_af6d17a3c770d761e89bdb3f1114a73fe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af6d17a3c770d761e89bdb3f1114a73fe">UpdateViewData</a> (plUInt32 uiDataIndex)</td></tr>
<tr class="memdesc:af6d17a3c770d761e89bdb3f1114a73fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes the view and camera data into the extracted data of the pipeline.  <br /></td></tr>
<tr class="separator:af6d17a3c770d761e89bdb3f1114a73fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_render_pipeline_node"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_render_pipeline_node')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a></td></tr>
<tr class="memitem:af4e0ff1f11b514ad62a39778cd841202 inherit pub_methods_classpl_render_pipeline_node" id="r_af4e0ff1f11b514ad62a39778cd841202"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InitializePins</b> ()</td></tr>
<tr class="separator:af4e0ff1f11b514ad62a39778cd841202 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4e37109bde78bda2e197351c301979 inherit pub_methods_classpl_render_pipeline_node" id="r_aed4e37109bde78bda2e197351c301979"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinName</b> (const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *pPin) const</td></tr>
<tr class="separator:aed4e37109bde78bda2e197351c301979 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07cc899d36529c5602bb5f37c47b01ff inherit pub_methods_classpl_render_pipeline_node" id="r_a07cc899d36529c5602bb5f37c47b01ff"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (const char *szName) const</td></tr>
<tr class="separator:a07cc899d36529c5602bb5f37c47b01ff inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631d4aae4d9689d4da14bcbece9d7969 inherit pub_methods_classpl_render_pipeline_node" id="r_a631d4aae4d9689d4da14bcbece9d7969"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (<a class="el" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> sName) const</td></tr>
<tr class="separator:a631d4aae4d9689d4da14bcbece9d7969 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c53266f359cf29e7ab5a367517eda73 inherit pub_methods_classpl_render_pipeline_node" id="r_a5c53266f359cf29e7ab5a367517eda73"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputPins</b> () const</td></tr>
<tr class="separator:a5c53266f359cf29e7ab5a367517eda73 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae681612860ed7b6b3babfa5f71ecdc33 inherit pub_methods_classpl_render_pipeline_node" id="r_ae681612860ed7b6b3babfa5f71ecdc33"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetOutputPins</b> () const</td></tr>
<tr class="separator:ae681612860ed7b6b3babfa5f71ecdc33 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ab2578b8af2be47665b4d4044500b4761" id="r_ab2578b8af2be47665b4d4044500b4761"><td class="memItemLeft" align="right" valign="top"><a id="ab2578b8af2be47665b4d4044500b4761" name="ab2578b8af2be47665b4d4044500b4761"></a>
<a class="el" href="../../df/d99/classpl_tag_set_template.htm">plTagSet</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_IncludeTags</b></td></tr>
<tr class="separator:ab2578b8af2be47665b4d4044500b4761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4edb0d53d178b83aca7431b423ed5313" id="r_a4edb0d53d178b83aca7431b423ed5313"><td class="memItemLeft" align="right" valign="top"><a id="a4edb0d53d178b83aca7431b423ed5313" name="a4edb0d53d178b83aca7431b423ed5313"></a>
<a class="el" href="../../df/d99/classpl_tag_set_template.htm">plTagSet</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ExcludeTags</b></td></tr>
<tr class="separator:a4edb0d53d178b83aca7431b423ed5313"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:af0309f7a4a05086b65b29fb3687c3b72" id="r_af0309f7a4a05086b65b29fb3687c3b72"><td class="memItemLeft" align="right" valign="top"><a id="af0309f7a4a05086b65b29fb3687c3b72" name="af0309f7a4a05086b65b29fb3687c3b72"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plRenderWorld</b></td></tr>
<tr class="separator:af0309f7a4a05086b65b29fb3687c3b72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a353406aeb9ecb448fedc9473cc3d9b5a" id="r_a353406aeb9ecb448fedc9473cc3d9b5a"><td class="memItemLeft" align="right" valign="top"><a id="a353406aeb9ecb448fedc9473cc3d9b5a" name="a353406aeb9ecb448fedc9473cc3d9b5a"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plMemoryUtils</b></td></tr>
<tr class="separator:a353406aeb9ecb448fedc9473cc3d9b5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Encapsulates a view on the given world through the given camera and rendered with the specified RenderPipeline into the given render target setup. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a6c55fa0cd4bb8f337a5d8c18cccaceac" name="a6c55fa0cd4bb8f337a5d8c18cccaceac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6c55fa0cd4bb8f337a5d8c18cccaceac">&#9670;&#160;</a></span>ComputePickingRay()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">PL_FORCE_INLINE <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plView::ComputePickingRay </td>
          <td>(</td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fScreenPosX</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fScreenPosY</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_vRayStartPos</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_vRayDir</em></span>&#160;) const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the start position and direction (in world space) of the picking ray through the screen position in this view. </p>
<p>fScreenPosX and fScreenPosY are expected to be in [0; 1] range (normalized pixel coordinates). If no ray can be computed, PL_FAILURE is returned. </p>

</div>
</div>
<a id="af6d17a3c770d761e89bdb3f1114a73fe" name="af6d17a3c770d761e89bdb3f1114a73fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6d17a3c770d761e89bdb3f1114a73fe">&#9670;&#160;</a></span>UpdateViewData()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plView::UpdateViewData </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiDataIndex</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pushes the view and camera data into the extracted data of the pipeline. </p>
<p>Use plRenderWorld::GetDataIndexForExtraction() to update the data from the extraction thread. Can't be used if this view is currently extracted. Use plRenderWorld::GetDataIndexForRendering() to update the data from the render thread. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/RendererCore/Pipeline/<a class="el" href="../../d1/d1f/_view_8h_source.htm">View.h</a></li>
<li>Code/Engine/RendererCore/Pipeline/Implementation/<b>View.cpp</b></li>
<li>Code/Engine/RendererCore/Pipeline/Implementation/<a class="el" href="../../d7/d4a/_view__inl_8h_source.htm">View_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/d7d/classpl_view.htm">plView</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
