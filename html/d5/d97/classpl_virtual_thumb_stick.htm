<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plVirtualThumbStick Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d5/d97/classpl_virtual_thumb_stick.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pro-static-attribs">Static Protected Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="../../df/dcd/classpl_virtual_thumb_stick-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plVirtualThumbStick Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>A Virtual Thumb-stick is an input device that transforms certain types of input (mouse / touch) into input similar to a thumb-stick on a controller.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d4/d22/_virtual_thumb_stick_8h_source.htm">VirtualThumbStick.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plVirtualThumbStick:</div>
<div class="dyncontent">
<div class="center"><img src="../../d2/d66/classpl_virtual_thumb_stick__inherit__graph.png" border="0" usemap="#apl_virtual_thumb_stick_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_virtual_thumb_stick_inherit__map" id="apl_virtual_thumb_stick_inherit__map">
<area shape="rect" title="A Virtual Thumb&#45;stick is an input device that transforms certain types of input (mouse / touch) into ..." alt="" coords="33,320,170,347"/>
<area shape="rect" href="../../d8/d58/classpl_input_device.htm" title="The base class for all input device types." alt="" coords="53,245,150,272"/>
<area shape="poly" title=" " alt="" coords="104,288,104,320,99,320,99,288"/>
<area shape="rect" href="../../db/d85/classpl_enumerable.htm" title=" " alt="" coords="5,155,198,197"/>
<area shape="poly" title=" " alt="" coords="104,213,104,245,99,245,99,213"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="42,80,161,107"/>
<area shape="poly" title=" " alt="" coords="104,122,104,154,99,154,99,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="63,5,140,32"/>
<area shape="poly" title=" " alt="" coords="104,48,104,80,99,80,99,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/df3/structpl_virtual_thumb_stick_1_1_center_mode.htm">CenterMode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines whether the thumb-stick center position is locked or relative to where the user started touching it.  <a href="../../d5/df3/structpl_virtual_thumb_stick_1_1_center_mode.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d1a/structpl_virtual_thumb_stick_1_1_input.htm">Input</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum allows to select either some default input mapping or to select 'Custom'.  <a href="../../dd/d1a/structpl_virtual_thumb_stick_1_1_input.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/dcf/structpl_virtual_thumb_stick_1_1_output.htm">Output</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which type of output the thumb-stick shall generate.  <a href="../../d4/dcf/structpl_virtual_thumb_stick_1_1_output.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a26a27409dc02bab207031ce012342a07" id="r_a26a27409dc02bab207031ce012342a07"><td class="memItemLeft" align="right" valign="top"><a id="a26a27409dc02bab207031ce012342a07" name="a26a27409dc02bab207031ce012342a07"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plVirtualThumbStick</b> ()</td></tr>
<tr class="memdesc:a26a27409dc02bab207031ce012342a07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:a26a27409dc02bab207031ce012342a07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8304bda5950327f8c50002fa77f37e94" id="r_a8304bda5950327f8c50002fa77f37e94"><td class="memItemLeft" align="right" valign="top"><a id="a8304bda5950327f8c50002fa77f37e94" name="a8304bda5950327f8c50002fa77f37e94"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>~plVirtualThumbStick</b> ()</td></tr>
<tr class="memdesc:a8304bda5950327f8c50002fa77f37e94"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a8304bda5950327f8c50002fa77f37e94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88d5b7e9714b9a362efaed84746267c3" id="r_a88d5b7e9714b9a362efaed84746267c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a88d5b7e9714b9a362efaed84746267c3">SetInputArea</a> (const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a> &amp;vLowerLeft, const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a> &amp;vUpperRight, float fThumbstickRadius, float fPriority, <a class="el" href="../../d5/df3/structpl_virtual_thumb_stick_1_1_center_mode.htm#a0f7b7f872440ad6806c961c211eb58e9">CenterMode::Enum</a> center=<a class="el" href="../../d5/df3/structpl_virtual_thumb_stick_1_1_center_mode.htm#a0f7b7f872440ad6806c961c211eb58e9a38120c9cf445db6ad67a4a0d86fdc098">CenterMode::ActivationPoint</a>)</td></tr>
<tr class="memdesc:a88d5b7e9714b9a362efaed84746267c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the area on screen where the thumb-stick is located and accepts input.  <br /></td></tr>
<tr class="separator:a88d5b7e9714b9a362efaed84746267c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2ccda2e37ca4b648f0c29b448c87e54" id="r_ad2ccda2e37ca4b648f0c29b448c87e54"><td class="memItemLeft" align="right" valign="top"><a id="ad2ccda2e37ca4b648f0c29b448c87e54" name="ad2ccda2e37ca4b648f0c29b448c87e54"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputArea</b> (<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a> &amp;out_vLowerLeft, <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a> &amp;out_vUpperRight)</td></tr>
<tr class="memdesc:ad2ccda2e37ca4b648f0c29b448c87e54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the input area of the virtual thumb-stick. <br /></td></tr>
<tr class="separator:ad2ccda2e37ca4b648f0c29b448c87e54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae67325d85eb4168947beb89ecdfebecc" id="r_ae67325d85eb4168947beb89ecdfebecc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae67325d85eb4168947beb89ecdfebecc">SetTriggerInputSlot</a> (<a class="el" href="../../dd/d1a/structpl_virtual_thumb_stick_1_1_input.htm#a24cf9f4fbfa8a0bd4c30dd2202eddc45">Input::Enum</a> input, const <a class="el" href="../../d6/dc7/structpl_input_action_config.htm">plInputActionConfig</a> *pCustomConfig=nullptr)</td></tr>
<tr class="memdesc:ae67325d85eb4168947beb89ecdfebecc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies from which input slots the thumb-stick is activated.  <br /></td></tr>
<tr class="separator:ae67325d85eb4168947beb89ecdfebecc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94940a46a8798faf9135a59e53f46d45" id="r_a94940a46a8798faf9135a59e53f46d45"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a94940a46a8798faf9135a59e53f46d45">SetThumbstickOutput</a> (<a class="el" href="../../d4/dcf/structpl_virtual_thumb_stick_1_1_output.htm#a96331ac2eef369fe1c48daa94ab7ab83">Output::Enum</a> output, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOutputLeft={}, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOutputRight={}, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOutputUp={}, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOutputDown={})</td></tr>
<tr class="memdesc:a94940a46a8798faf9135a59e53f46d45"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which output the thumb-stick generates.  <br /></td></tr>
<tr class="separator:a94940a46a8798faf9135a59e53f46d45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9afa1be42b974091699eafb7117ca389" id="r_a9afa1be42b974091699eafb7117ca389"><td class="memItemLeft" align="right" valign="top"><a id="a9afa1be42b974091699eafb7117ca389" name="a9afa1be42b974091699eafb7117ca389"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAreaFocusMode</b> (<a class="el" href="../../d6/dc7/structpl_input_action_config.htm#a8cede044d43a7bedfbb2776fdb83c86b">plInputActionConfig::OnEnterArea</a> onEnter, <a class="el" href="../../d6/dc7/structpl_input_action_config.htm#ac0d7b87024ac912bf3fa48172f7a5bd6">plInputActionConfig::OnLeaveArea</a> onLeave)</td></tr>
<tr class="memdesc:a9afa1be42b974091699eafb7117ca389"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies what happens when the input slots that trigger the thumb-stick are active while entering or leaving the input area. <br /></td></tr>
<tr class="separator:a9afa1be42b974091699eafb7117ca389"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62db1bfd374190935d2f1a8ebd3b656a" id="r_a62db1bfd374190935d2f1a8ebd3b656a"><td class="memItemLeft" align="right" valign="top"><a id="a62db1bfd374190935d2f1a8ebd3b656a" name="a62db1bfd374190935d2f1a8ebd3b656a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetEnabled</b> (bool bEnabled)</td></tr>
<tr class="memdesc:a62db1bfd374190935d2f1a8ebd3b656a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to enable or disable the entire thumb-stick temporarily. <br /></td></tr>
<tr class="separator:a62db1bfd374190935d2f1a8ebd3b656a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4120be992fa0752985610e1629efe212" id="r_a4120be992fa0752985610e1629efe212"><td class="memItemLeft" align="right" valign="top"><a id="a4120be992fa0752985610e1629efe212" name="a4120be992fa0752985610e1629efe212"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEnabled</b> () const</td></tr>
<tr class="memdesc:a4120be992fa0752985610e1629efe212"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the thumb-stick is currently enabled. <br /></td></tr>
<tr class="separator:a4120be992fa0752985610e1629efe212"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72a1c331a66b3a93c98c70ff5a286625" id="r_a72a1c331a66b3a93c98c70ff5a286625"><td class="memItemLeft" align="right" valign="top"><a id="a72a1c331a66b3a93c98c70ff5a286625" name="a72a1c331a66b3a93c98c70ff5a286625"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsActive</b> () const</td></tr>
<tr class="memdesc:a72a1c331a66b3a93c98c70ff5a286625"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the thumb-stick is currently active (ie. triggered) and generates output. <br /></td></tr>
<tr class="separator:a72a1c331a66b3a93c98c70ff5a286625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_input_device"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_input_device')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d8/d58/classpl_input_device.htm">plInputDevice</a></td></tr>
<tr class="memitem:af57c1b46b6f442cca14a7ff4625db140 inherit pub_methods_classpl_input_device" id="r_af57c1b46b6f442cca14a7ff4625db140"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plInputDevice</b> ()</td></tr>
<tr class="memdesc:af57c1b46b6f442cca14a7ff4625db140 inherit pub_methods_classpl_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor. <br /></td></tr>
<tr class="separator:af57c1b46b6f442cca14a7ff4625db140 inherit pub_methods_classpl_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae131b9527d9c4fa711fb8d46651ae51 inherit pub_methods_classpl_input_device" id="r_aae131b9527d9c4fa711fb8d46651ae51"><td class="memItemLeft" align="right" valign="top">
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputSlotState</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSlot) const</td></tr>
<tr class="memdesc:aae131b9527d9c4fa711fb8d46651ae51 inherit pub_methods_classpl_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to query current input values for the given slot. <br /></td></tr>
<tr class="separator:aae131b9527d9c4fa711fb8d46651ae51 inherit pub_methods_classpl_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f6616572a2308f59c78944a8fe4c291 inherit pub_methods_classpl_input_device" id="r_a6f6616572a2308f59c78944a8fe4c291"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d58/classpl_input_device.htm#a6f6616572a2308f59c78944a8fe4c291">HasDeviceBeenUsedLastFrame</a> () const</td></tr>
<tr class="memdesc:a6f6616572a2308f59c78944a8fe4c291 inherit pub_methods_classpl_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the device was 'used' during the last frame, ie. when it generated input due to some user interaction.  <br /></td></tr>
<tr class="separator:a6f6616572a2308f59c78944a8fe4c291 inherit pub_methods_classpl_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a3324d17880056458aab87438fdeec3da" id="r_a3324d17880056458aab87438fdeec3da"><td class="memItemLeft" align="right" valign="top"><a id="a3324d17880056458aab87438fdeec3da" name="a3324d17880056458aab87438fdeec3da"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateActionMapping</b> ()</td></tr>
<tr class="separator:a3324d17880056458aab87438fdeec3da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_input_device"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d8/d58/classpl_input_device.htm">plInputDevice</a></td></tr>
<tr class="memitem:a94fc5982ebae3db958cb6ff01548229c inherit pro_methods_classpl_input_device" id="r_a94fc5982ebae3db958cb6ff01548229c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d58/classpl_input_device.htm#a94fc5982ebae3db958cb6ff01548229c">ResetInputSlotValues</a> ()</td></tr>
<tr class="memdesc:a94fc5982ebae3db958cb6ff01548229c inherit pro_methods_classpl_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to reset certain input slot values to zero, after the <a class="el" href="../../d7/d6c/classpl_input_manager.htm" title="The central class to set up and query the state of all input.">plInputManager</a> is finished with the current frame update.  <br /></td></tr>
<tr class="separator:a94fc5982ebae3db958cb6ff01548229c inherit pro_methods_classpl_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a511af7ad1f755af01367218302bbc3ba inherit pro_methods_classpl_input_device" id="r_a511af7ad1f755af01367218302bbc3ba"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d58/classpl_input_device.htm#a511af7ad1f755af01367218302bbc3ba">UpdateHardwareState</a> (<a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> tTimeDifference)</td></tr>
<tr class="memdesc:a511af7ad1f755af01367218302bbc3ba inherit pro_methods_classpl_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called once after <a class="el" href="../../d7/d6c/classpl_input_manager.htm#a99266a2977ca6f1430823992e7520bb7" title="Updates the state of the input manager. This should be called exactly once each frame.">plInputManager::Update</a> with the same time delta value. It allows to update hardware state, such as the vibration of gamepad motors.  <br /></td></tr>
<tr class="separator:a511af7ad1f755af01367218302bbc3ba inherit pro_methods_classpl_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a5d9da8cbb594d2298dc38f74a877a0fc" id="r_a5d9da8cbb594d2298dc38f74a877a0fc"><td class="memItemLeft" align="right" valign="top"><a id="a5d9da8cbb594d2298dc38f74a877a0fc" name="a5d9da8cbb594d2298dc38f74a877a0fc"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vLowerLeft</b></td></tr>
<tr class="separator:a5d9da8cbb594d2298dc38f74a877a0fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d7a147d55deef2f2e101161f9d7d4c2" id="r_a3d7a147d55deef2f2e101161f9d7d4c2"><td class="memItemLeft" align="right" valign="top"><a id="a3d7a147d55deef2f2e101161f9d7d4c2" name="a3d7a147d55deef2f2e101161f9d7d4c2"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vUpperRight</b></td></tr>
<tr class="separator:a3d7a147d55deef2f2e101161f9d7d4c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69cf9fea1fd7b112c23a1a6bf80d8431" id="r_a69cf9fea1fd7b112c23a1a6bf80d8431"><td class="memItemLeft" align="right" valign="top"><a id="a69cf9fea1fd7b112c23a1a6bf80d8431" name="a69cf9fea1fd7b112c23a1a6bf80d8431"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fRadius</b></td></tr>
<tr class="separator:a69cf9fea1fd7b112c23a1a6bf80d8431"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4a15593f690448c9ba54db7e773e3ff" id="r_af4a15593f690448c9ba54db7e773e3ff"><td class="memItemLeft" align="right" valign="top"><a id="af4a15593f690448c9ba54db7e773e3ff" name="af4a15593f690448c9ba54db7e773e3ff"></a>
<a class="el" href="../../d6/dc7/structpl_input_action_config.htm">plInputActionConfig</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ActionConfig</b></td></tr>
<tr class="separator:af4a15593f690448c9ba54db7e773e3ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1f441f6f9f39b88ceade80b95d0f046" id="r_ac1f441f6f9f39b88ceade80b95d0f046"><td class="memItemLeft" align="right" valign="top"><a id="ac1f441f6f9f39b88ceade80b95d0f046" name="ac1f441f6f9f39b88ceade80b95d0f046"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sOutputLeft</b></td></tr>
<tr class="separator:ac1f441f6f9f39b88ceade80b95d0f046"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c7813bc7111e6b99217372c0b075b4d" id="r_a5c7813bc7111e6b99217372c0b075b4d"><td class="memItemLeft" align="right" valign="top"><a id="a5c7813bc7111e6b99217372c0b075b4d" name="a5c7813bc7111e6b99217372c0b075b4d"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sOutputRight</b></td></tr>
<tr class="separator:a5c7813bc7111e6b99217372c0b075b4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90716fba78f538a1c188503ba418aad1" id="r_a90716fba78f538a1c188503ba418aad1"><td class="memItemLeft" align="right" valign="top"><a id="a90716fba78f538a1c188503ba418aad1" name="a90716fba78f538a1c188503ba418aad1"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sOutputUp</b></td></tr>
<tr class="separator:a90716fba78f538a1c188503ba418aad1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7850db1dd8966167c36ae6ec5fe731f" id="r_af7850db1dd8966167c36ae6ec5fe731f"><td class="memItemLeft" align="right" valign="top"><a id="af7850db1dd8966167c36ae6ec5fe731f" name="af7850db1dd8966167c36ae6ec5fe731f"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sOutputDown</b></td></tr>
<tr class="separator:af7850db1dd8966167c36ae6ec5fe731f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7146f6e60b432f94c2708a10ac89770" id="r_ac7146f6e60b432f94c2708a10ac89770"><td class="memItemLeft" align="right" valign="top"><a id="ac7146f6e60b432f94c2708a10ac89770" name="ac7146f6e60b432f94c2708a10ac89770"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bEnabled</b></td></tr>
<tr class="separator:ac7146f6e60b432f94c2708a10ac89770"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a124205e6154343b3db6d19b83d99866c" id="r_a124205e6154343b3db6d19b83d99866c"><td class="memItemLeft" align="right" valign="top"><a id="a124205e6154343b3db6d19b83d99866c" name="a124205e6154343b3db6d19b83d99866c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bConfigChanged</b></td></tr>
<tr class="separator:a124205e6154343b3db6d19b83d99866c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af46a628957a59156939832d2949ec5e8" id="r_af46a628957a59156939832d2949ec5e8"><td class="memItemLeft" align="right" valign="top"><a id="af46a628957a59156939832d2949ec5e8" name="af46a628957a59156939832d2949ec5e8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bIsActive</b></td></tr>
<tr class="separator:af46a628957a59156939832d2949ec5e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6608ab543f224b268ac6fb3ad93bbac" id="r_ae6608ab543f224b268ac6fb3ad93bbac"><td class="memItemLeft" align="right" valign="top"><a id="ae6608ab543f224b268ac6fb3ad93bbac" name="ae6608ab543f224b268ac6fb3ad93bbac"></a>
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sName</b></td></tr>
<tr class="separator:ae6608ab543f224b268ac6fb3ad93bbac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f76a08b1af62aef453ab8f3e9e8bef5" id="r_a1f76a08b1af62aef453ab8f3e9e8bef5"><td class="memItemLeft" align="right" valign="top"><a id="a1f76a08b1af62aef453ab8f3e9e8bef5" name="a1f76a08b1af62aef453ab8f3e9e8bef5"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vCenter</b></td></tr>
<tr class="separator:a1f76a08b1af62aef453ab8f3e9e8bef5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf210305286ecf623caff86e01b60f39" id="r_abf210305286ecf623caff86e01b60f39"><td class="memItemLeft" align="right" valign="top"><a id="abf210305286ecf623caff86e01b60f39" name="abf210305286ecf623caff86e01b60f39"></a>
<a class="el" href="../../d5/df3/structpl_virtual_thumb_stick_1_1_center_mode.htm#a0f7b7f872440ad6806c961c211eb58e9">CenterMode::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_CenterMode</b></td></tr>
<tr class="separator:abf210305286ecf623caff86e01b60f39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_input_device"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d8/d58/classpl_input_device.htm">plInputDevice</a></td></tr>
<tr class="memitem:a58a57c044af26a2471aa7bb6b4ff6c88 inherit pro_attribs_classpl_input_device" id="r_a58a57c044af26a2471aa7bb6b4ff6c88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d50/classpl_map.htm">plMap</a>&lt; <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d58/classpl_input_device.htm#a58a57c044af26a2471aa7bb6b4ff6c88">m_InputSlotValues</a></td></tr>
<tr class="memdesc:a58a57c044af26a2471aa7bb6b4ff6c88 inherit pro_attribs_classpl_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores all the values for all input slots that this device handles.  <br /></td></tr>
<tr class="separator:a58a57c044af26a2471aa7bb6b4ff6c88 inherit pro_attribs_classpl_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e053200fc30e3efae873031f2f8b5fb inherit pro_attribs_classpl_input_device" id="r_a8e053200fc30e3efae873031f2f8b5fb"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiLastCharacter</b></td></tr>
<tr class="memdesc:a8e053200fc30e3efae873031f2f8b5fb inherit pro_attribs_classpl_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this input device type handles character input, it should write the last typed character into this variable. The <a class="el" href="../../d7/d6c/classpl_input_manager.htm" title="The central class to set up and query the state of all input.">plInputManager</a> calls RetrieveLastCharacter() to query what the user typed last. <br /></td></tr>
<tr class="separator:a8e053200fc30e3efae873031f2f8b5fb inherit pro_attribs_classpl_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_enumerable"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../db/d85/classpl_enumerable.htm">plEnumerable&lt; plInputDevice, plReflectedClass &gt;</a></td></tr>
<tr class="memitem:aa4eba5b9c96dbe89638a952ae66077dc inherit pro_attribs_classpl_enumerable" id="r_aa4eba5b9c96dbe89638a952ae66077dc"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d85/classpl_enumerable.htm">plEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:aa4eba5b9c96dbe89638a952ae66077dc inherit pro_attribs_classpl_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-static-attribs" name="pro-static-attribs"></a>
Static Protected Attributes</h2></td></tr>
<tr class="memitem:a39412ceabe385d1f8a856ccee7ddda16" id="r_a39412ceabe385d1f8a856ccee7ddda16"><td class="memItemLeft" align="right" valign="top"><a id="a39412ceabe385d1f8a856ccee7ddda16" name="a39412ceabe385d1f8a856ccee7ddda16"></a>
static plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>s_iThumbsticks</b> = 0</td></tr>
<tr class="separator:a39412ceabe385d1f8a856ccee7ddda16"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a5285ebbbbb75dff3d45d69fcb89dc011" id="r_a5285ebbbbb75dff3d45d69fcb89dc011"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5285ebbbbb75dff3d45d69fcb89dc011">InitializeDevice</a> () override</td></tr>
<tr class="memdesc:a5285ebbbbb75dff3d45d69fcb89dc011"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this if you need to do device specific initialization before the first use.  <br /></td></tr>
<tr class="separator:a5285ebbbbb75dff3d45d69fcb89dc011"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc9b3632de37b61a19f9ba7cef275a0e" id="r_adc9b3632de37b61a19f9ba7cef275a0e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adc9b3632de37b61a19f9ba7cef275a0e">UpdateInputSlotValues</a> () override</td></tr>
<tr class="memdesc:adc9b3632de37b61a19f9ba7cef275a0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to query the state of the hardware to update the input slots.  <br /></td></tr>
<tr class="separator:adc9b3632de37b61a19f9ba7cef275a0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeca5b8d9ce81f6a70a5c9379f4d3e530" id="r_aeca5b8d9ce81f6a70a5c9379f4d3e530"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeca5b8d9ce81f6a70a5c9379f4d3e530">RegisterInputSlots</a> () override</td></tr>
<tr class="memdesc:aeca5b8d9ce81f6a70a5c9379f4d3e530"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to register all the input slots that this device exposes.  <br /></td></tr>
<tr class="separator:aeca5b8d9ce81f6a70a5c9379f4d3e530"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_methods_classpl_input_device"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_static_methods_classpl_input_device')"><img src="../../closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="../../d8/d58/classpl_input_device.htm">plInputDevice</a></td></tr>
<tr class="memitem:af24f5f5d425517bf14ef293c6d63e3bd inherit pro_static_methods_classpl_input_device" id="r_af24f5f5d425517bf14ef293c6d63e3bd"><td class="memItemLeft" align="right" valign="top">
static void&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterInputSlot</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sDefaultDisplayName, <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../d5/d35/structpl_input_slot_flags.htm">plInputSlotFlags</a> &gt; SlotFlags)</td></tr>
<tr class="memdesc:af24f5f5d425517bf14ef293c6d63e3bd inherit pro_static_methods_classpl_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls <a class="el" href="../../d8/d58/classpl_input_device.htm#af24f5f5d425517bf14ef293c6d63e3bd" title="Calls RegisterInputSlot() on the plInputManager and passes the parameters through.">RegisterInputSlot()</a> on the <a class="el" href="../../d7/d6c/classpl_input_manager.htm" title="The central class to set up and query the state of all input.">plInputManager</a> and passes the parameters through. <br /></td></tr>
<tr class="separator:af24f5f5d425517bf14ef293c6d63e3bd inherit pro_static_methods_classpl_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A Virtual Thumb-stick is an input device that transforms certain types of input (mouse / touch) into input similar to a thumb-stick on a controller. </p>
<p>A virtual thumb-stick can be used to provide an 'input device' on a touch screen, that acts like a controller thumb-stick and thus allows easier control over a game. The virtual thumb-stick takes input inside a certain screen area. It tracks the users finger movements inside this area and translates those into input from a controller thumb-stick, which it then feeds back into the input system. That makes it then possible to be mapped to input actions again. This way a game controller type of input is emulated. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a5285ebbbbb75dff3d45d69fcb89dc011" name="a5285ebbbbb75dff3d45d69fcb89dc011"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5285ebbbbb75dff3d45d69fcb89dc011">&#9670;&#160;</a></span>InitializeDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plVirtualThumbStick::InitializeDevice </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this if you need to do device specific initialization before the first use. </p>

<p>Implements <a class="el" href="../../d8/d58/classpl_input_device.htm#ae979467dda16cc0b8d3f557dac50c3a2">plInputDevice</a>.</p>

</div>
</div>
<a id="aeca5b8d9ce81f6a70a5c9379f4d3e530" name="aeca5b8d9ce81f6a70a5c9379f4d3e530"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeca5b8d9ce81f6a70a5c9379f4d3e530">&#9670;&#160;</a></span>RegisterInputSlots()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plVirtualThumbStick::RegisterInputSlots </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to register all the input slots that this device exposes. </p>
<p>This is called once during initialization. It needs to call <a class="el" href="../../d8/d58/classpl_input_device.htm#af24f5f5d425517bf14ef293c6d63e3bd" title="Calls RegisterInputSlot() on the plInputManager and passes the parameters through.">RegisterInputSlot()</a> once for every input slot that this device exposes to the system. </p>

<p>Implements <a class="el" href="../../d8/d58/classpl_input_device.htm#affc9a06096720f741b0a347003de785c">plInputDevice</a>.</p>

</div>
</div>
<a id="a88d5b7e9714b9a362efaed84746267c3" name="a88d5b7e9714b9a362efaed84746267c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88d5b7e9714b9a362efaed84746267c3">&#9670;&#160;</a></span>SetInputArea()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plVirtualThumbStick::SetInputArea </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vLowerLeft</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vUpperRight</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fThumbstickRadius</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fPriority</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d5/df3/structpl_virtual_thumb_stick_1_1_center_mode.htm#a0f7b7f872440ad6806c961c211eb58e9">CenterMode::Enum</a></td>          <td class="paramname"><span class="paramname"><em>center</em></span><span class="paramdefsep"> = </span><span class="paramdefval"><a class="el" href="../../d5/df3/structpl_virtual_thumb_stick_1_1_center_mode.htm#a0f7b7f872440ad6806c961c211eb58e9a38120c9cf445db6ad67a4a0d86fdc098">CenterMode::ActivationPoint</a></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the area on screen where the thumb-stick is located and accepts input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vLowerLeft</td><td>The lower left corner of the input area. Coordinates are in [0; 1] range.</td></tr>
    <tr><td class="paramname">vUpperRight</td><td>The upper right corner of the input area. Coordinates are in [0; 1] range.</td></tr>
    <tr><td class="paramname">fPriority</td><td>The priority of the input area. Defines which thumb-stick or other input action gets priority, if they overlap.</td></tr>
    <tr><td class="paramname">center</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d5/df3/structpl_virtual_thumb_stick_1_1_center_mode.htm" title="Defines whether the thumb-stick center position is locked or relative to where the user started touch...">CenterMode</a>. </dd></dl>

</div>
</div>
<a id="a94940a46a8798faf9135a59e53f46d45" name="a94940a46a8798faf9135a59e53f46d45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94940a46a8798faf9135a59e53f46d45">&#9670;&#160;</a></span>SetThumbstickOutput()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plVirtualThumbStick::SetThumbstickOutput </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dcf/structpl_virtual_thumb_stick_1_1_output.htm#a96331ac2eef369fe1c48daa94ab7ab83">Output::Enum</a></td>          <td class="paramname"><span class="paramname"><em>output</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sOutputLeft</em></span><span class="paramdefsep"> = </span><span class="paramdefval">{}</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sOutputRight</em></span><span class="paramdefsep"> = </span><span class="paramdefval">{}</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sOutputUp</em></span><span class="paramdefsep"> = </span><span class="paramdefval">{}</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sOutputDown</em></span><span class="paramdefsep"> = </span><span class="paramdefval">{}</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifies which output the thumb-stick generates. </p>
<p>If <em><a class="el" href="../../d4/dcf/structpl_virtual_thumb_stick_1_1_output.htm" title="Specifies which type of output the thumb-stick shall generate.">Output</a></em> is 'Custom' the remaining parameters define which input slots the thumb-stick triggers for which direction. Otherwise the remaining parameters are ignored. </p>

</div>
</div>
<a id="ae67325d85eb4168947beb89ecdfebecc" name="ae67325d85eb4168947beb89ecdfebecc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae67325d85eb4168947beb89ecdfebecc">&#9670;&#160;</a></span>SetTriggerInputSlot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plVirtualThumbStick::SetTriggerInputSlot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dd/d1a/structpl_virtual_thumb_stick_1_1_input.htm#a24cf9f4fbfa8a0bd4c30dd2202eddc45">Input::Enum</a></td>          <td class="paramname"><span class="paramname"><em>input</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/dc7/structpl_input_action_config.htm">plInputActionConfig</a> *</td>          <td class="paramname"><span class="paramname"><em>pCustomConfig</em></span><span class="paramdefsep"> = </span><span class="paramdefval">nullptr</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifies from which input slots the thumb-stick is activated. </p>
<p>If <em><a class="el" href="../../dd/d1a/structpl_virtual_thumb_stick_1_1_input.htm" title="This enum allows to select either some default input mapping or to select &#39;Custom&#39;.">Input</a></em> is 'Custom' the remaining parameters define the filter axes and up to three input slots that trigger the thumb-stick. Otherwise the remaining parameters are ignored. </p>

</div>
</div>
<a id="adc9b3632de37b61a19f9ba7cef275a0e" name="adc9b3632de37b61a19f9ba7cef275a0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc9b3632de37b61a19f9ba7cef275a0e">&#9670;&#160;</a></span>UpdateInputSlotValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plVirtualThumbStick::UpdateInputSlotValues </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this, if you need to query the state of the hardware to update the input slots. </p>
<dl class="section note"><dt>Note</dt><dd>This function might be called multiple times before <a class="el" href="../../d8/d58/classpl_input_device.htm#a94fc5982ebae3db958cb6ff01548229c" title="Override this, if you need to reset certain input slot values to zero, after the plInputManager is fi...">ResetInputSlotValues()</a> is called. This will be the case when <a class="el" href="../../d7/d6c/classpl_input_manager.htm#af6d9ee3bc636777a20828ab44e00e95c" title="Makes sure that hardware input is processed at this moment, which allows to do this more often than U...">plInputManager::PollHardware</a> is used to make more frequent hardware updates than input is actually processed. Just make sure to always accumulate delta values (such as mouse move values) and don't expect <a class="el" href="../../d8/d58/classpl_input_device.htm#a94fc5982ebae3db958cb6ff01548229c" title="Override this, if you need to reset certain input slot values to zero, after the plInputManager is fi...">ResetInputSlotValues()</a> to be called in tandem with this function and it will be fine. </dd></dl>

<p>Implements <a class="el" href="../../d8/d58/classpl_input_device.htm#aaa323572aca9aaacef148e3136fcbd25">plInputDevice</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Core/Input/<a class="el" href="../../d4/d22/_virtual_thumb_stick_8h_source.htm">VirtualThumbStick.h</a></li>
<li>Code/Engine/Core/Input/Implementation/<b>VirtualThumbStick.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/d97/classpl_virtual_thumb_stick.htm">plVirtualThumbStick</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
