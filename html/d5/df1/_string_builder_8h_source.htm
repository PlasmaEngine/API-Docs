<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/Strings/StringBuilder.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d5/df1/_string_builder_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">StringBuilder.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/ThirdParty/utf8/utf8.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Memory/MemoryUtils.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/Strings/FormatString.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBase.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;Foundation/Strings/PathUtils.h&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;Foundation/Strings/StringUtils.h&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="preprocessor">#include &lt;Foundation/Strings/StringView.h&gt;</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">template</span> &lt;plUInt16 Size&gt;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a>;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">template</span> &lt;plUInt16 Size, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a>;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="keyword">class </span><a class="code hl_class" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a>;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="keyword">class </span><a class="code hl_class" href="../../d6/d9a/classpl_format_string.htm">plFormatString</a>;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="};">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm">   34</a></span><span class="keyword">class </span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../de/d73/structpl_string_base.htm">plStringBase</a>&lt;plStringBuilder&gt;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>{</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator = <a class="code hl_function" href="../../d8/d6f/classpl_foundation.htm#a2f9bc4a5e090e2d6173ff861d532b021">plFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp;&amp; rhs) <span class="keyword">noexcept</span>;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keyword">template</span> &lt;plUInt16 Size&gt;</div>
<div class="foldopen" id="foldopen00048" data-start="{" data-end="}">
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#a6c5d036483b34cd56f305e003f5d0a51">   48</a></span>  <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#a6c5d036483b34cd56f305e003f5d0a51">plStringBuilder</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt;Size&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    : m_Data(rhs.m_Data)</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  {</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  }</div>
</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <span class="keyword">template</span> &lt;plUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#ae08dbba46899662cba06fbc2b40dc599">   55</a></span>  <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#ae08dbba46899662cba06fbc2b40dc599">plStringBuilder</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt;Size, A&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    : m_Data(rhs.m_Data)</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  {</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  }</div>
</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">template</span> &lt;plUInt16 Size&gt;</div>
<div class="foldopen" id="foldopen00063" data-start="{" data-end="}">
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#ade94bb5f0337259bd95d973a65d631e3">   63</a></span>  <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#ade94bb5f0337259bd95d973a65d631e3">plStringBuilder</a>(<a class="code hl_struct" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt;Size&gt;</a>&amp;&amp; rhs)</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    : m_Data(std::move(rhs.m_Data))</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  {</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  }</div>
</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keyword">template</span> &lt;plUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="foldopen" id="foldopen00070" data-start="{" data-end="}">
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#a58152c1c5728d387f5b81883c7fab678">   70</a></span>  <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#a58152c1c5728d387f5b81883c7fab678">plStringBuilder</a>(<a class="code hl_struct" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt;Size, A&gt;</a>&amp;&amp; rhs)</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    : m_Data(std::move(rhs.m_Data))</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  }</div>
</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3 = {}, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData4 = {},</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData5 = {}, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData6 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="comment">/* implicit */</span> <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator = <a class="code hl_function" href="../../d8/d6f/classpl_foundation.htm#a2f9bc4a5e090e2d6173ff861d532b021">plFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="comment">/* implicit */</span> <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator = <a class="code hl_function" href="../../d8/d6f/classpl_foundation.htm#a2f9bc4a5e090e2d6173ff861d532b021">plFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="comment">/* implicit */</span> <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> rhs, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator = <a class="code hl_function" href="../../d8/d6f/classpl_foundation.htm#a2f9bc4a5e090e2d6173ff861d532b021">plFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp;&amp; rhs) <span class="keyword">noexcept</span>;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keyword">template</span> &lt;plUInt16 Size&gt;</div>
<div class="foldopen" id="foldopen00105" data-start="{" data-end="}">
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#ae0e4310def5b31ca716026574e221ea8">  105</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#ae0e4310def5b31ca716026574e221ea8">operator=</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt;Size&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  {</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    m_Data = rhs.m_Data;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  }</div>
</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keyword">template</span> &lt;plUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="foldopen" id="foldopen00112" data-start="{" data-end="}">
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#ac7c9fee23418a6dab9c554ff5aea4c47">  112</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#ac7c9fee23418a6dab9c554ff5aea4c47">operator=</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt;Size, A&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    m_Data = rhs.m_Data;</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  }</div>
</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keyword">template</span> &lt;plUInt16 Size&gt;</div>
<div class="foldopen" id="foldopen00119" data-start="{" data-end="}">
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#a527367494d124b3d8d51fec271ce4351">  119</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#a527367494d124b3d8d51fec271ce4351">operator=</a>(<a class="code hl_struct" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt;Size&gt;</a>&amp;&amp; rhs)</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  {</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    m_Data = std::move(rhs.m_Data);</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  }</div>
</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  <span class="keyword">template</span> &lt;plUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="foldopen" id="foldopen00126" data-start="{" data-end="}">
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#acdbc74b5f4c4354590787563c7464281">  126</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#acdbc74b5f4c4354590787563c7464281">operator=</a>(<a class="code hl_struct" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt;Size, A&gt;</a>&amp;&amp; rhs) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  {</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    m_Data = std::move(rhs.m_Data);</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  }</div>
</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* GetAllocator() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keywordtype">void</span> Clear(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* GetData() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  plUInt32 GetElementCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  plUInt32 GetCharacterCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keywordtype">void</span> ToUpper(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <span class="keywordtype">void</span> ToLower(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <span class="keywordtype">void</span> ChangeCharacter(iterator&amp; ref_it, plUInt32 uiCharacter); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  <span class="keywordtype">void</span> Set(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  <span class="keywordtype">void</span> Set(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  <span class="keywordtype">void</span> Set(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keywordtype">void</span> Set(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData4); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  <span class="keywordtype">void</span> Set(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData4, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData5, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData6 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="keywordtype">void</span> SetPath(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3 = {}, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData4 = {});</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  <span class="keywordtype">void</span> SetSubString_FromTo(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="keywordtype">void</span> SetSubString_ElementCount(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, plUInt32 uiElementCount);</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <span class="keywordtype">void</span> SetSubString_CharacterCount(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, plUInt32 uiCharacterCount);</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  <span class="keywordtype">void</span> Append(plUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  <span class="keywordtype">void</span> Append(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  <span class="keywordtype">void</span> Append(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <span class="keywordtype">void</span> Append(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  <span class="keywordtype">void</span> Append(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  <span class="keywordtype">void</span> Append(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData4); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <span class="keywordtype">void</span> Append(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData4, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData5, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData6 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  <span class="keywordtype">void</span> Prepend(plUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>  <span class="keywordtype">void</span> Prepend(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  <span class="keywordtype">void</span> Prepend(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData2 = {}, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData3 = {}, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData4 = {},</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData5 = {}, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sData6 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>  <span class="keywordtype">void</span> SetPrintf(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Format, ...); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  <span class="keywordtype">void</span> SetPrintfArgs(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Format, va_list szArgs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <span class="keywordtype">void</span> SetFormat(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d9a/classpl_format_string.htm">plFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="foldopen" id="foldopen00230" data-start="{" data-end="}">
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#a93dbafe891d836256a1599be35a1c223">  230</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#a93dbafe891d836256a1599be35a1c223">SetFormat</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  {</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    SetFormat(<a class="code hl_class" href="../../d2/d7f/classpl_format_string_impl.htm">plFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  }</div>
</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>  <span class="keywordtype">void</span> AppendFormat(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d9a/classpl_format_string.htm">plFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="foldopen" id="foldopen00240" data-start="{" data-end="}">
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#ae554ecb996fda0112664ff7bfbede389">  240</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#ae554ecb996fda0112664ff7bfbede389">AppendFormat</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  {</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>    AppendFormat(<a class="code hl_class" href="../../d2/d7f/classpl_format_string_impl.htm">plFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  }</div>
</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>  <span class="keywordtype">void</span> PrependFormat(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d9a/classpl_format_string.htm">plFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span> </div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="foldopen" id="foldopen00250" data-start="{" data-end="}">
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#a6ab837704e6392c4e48250d9ed864f1f">  250</a></span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#a6ab837704e6392c4e48250d9ed864f1f">PrependFormat</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  {</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>    PrependFormat(<a class="code hl_class" href="../../d2/d7f/classpl_format_string_impl.htm">plFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  }</div>
</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  <span class="keywordtype">void</span> Shrink(plUInt32 uiShrinkCharsFront, plUInt32 uiShrinkCharsBack); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span> </div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>  <span class="keywordtype">void</span> Reserve(plUInt32 uiNumElements); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span> </div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  <span class="keywordtype">void</span> ReplaceSubString(<span class="keyword">const</span> <span class="keywordtype">char</span>* szStartPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szEndPos, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplaceWith); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>  <span class="keywordtype">void</span> Insert(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInsertAtPos, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sTextToInsert); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span> </div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  <span class="keywordtype">void</span> Remove(<span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveFromPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveToPos); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceFirst(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceFirst_NoCase(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceLast(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceLast_NoCase(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span> </div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  plUInt32 ReplaceAll(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplacement); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>  plUInt32 ReplaceAll_NoCase(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplacement); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceWholeWord(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplaceWith, <a class="code hl_typedef" href="../../de/d4d/classpl_string_utils.htm#a8bc7e3a526fc09382eaa1276895f3266">plStringUtils::PL_CHARACTER_FILTER</a> isDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span> </div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceWholeWord_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplaceWith, <a class="code hl_typedef" href="../../de/d4d/classpl_string_utils.htm#a8bc7e3a526fc09382eaa1276895f3266">plStringUtils::PL_CHARACTER_FILTER</a> isDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span> </div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>  plUInt32 ReplaceWholeWordAll(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplaceWith, <a class="code hl_typedef" href="../../de/d4d/classpl_string_utils.htm#a8bc7e3a526fc09382eaa1276895f3266">plStringUtils::PL_CHARACTER_FILTER</a> isDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>  plUInt32 ReplaceWholeWordAll_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sReplaceWith, <a class="code hl_typedef" href="../../de/d4d/classpl_string_utils.htm#a8bc7e3a526fc09382eaa1276895f3266">plStringUtils::PL_CHARACTER_FILTER</a> isDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span> </div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>  <span class="keywordtype">void</span> ReadAll(<a class="code hl_class" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a>&amp; inout_stream);</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>  <span class="comment">// ******* Path Functions ********</span></div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>  <span class="keywordtype">void</span> MakeCleanPath(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span> </div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>  <span class="keywordtype">void</span> PathParentDirectory(plUInt32 uiLevelsUp = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span> </div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>  <span class="keywordtype">void</span> AppendPath(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath2 = {}, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath3 = {}, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sPath4 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span> </div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>  <span class="keywordtype">void</span> AppendWithSeparator(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sSeparator, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sText1, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sText2 = <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>(), <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sText3 = <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>(), <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sText4 = <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>(), <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sText5 = <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>(), <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sText6 = <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a>());</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span> </div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>  <span class="keywordtype">void</span> ChangeFileName(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sNewFileName); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span> </div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>  <span class="keywordtype">void</span> ChangeFileNameAndExtension(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sNewFileNameWithExtension); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span> </div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>  <span class="keywordtype">void</span> ChangeFileExtension(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sNewExtension, <span class="keywordtype">bool</span> bFullExtension = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> </div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>  <span class="keywordtype">void</span> RemoveFileExtension(<span class="keywordtype">bool</span> bFullExtension = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span> </div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> MakeRelativeTo(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sAbsolutePathToMakeThisRelativeTo); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span> </div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>  <span class="keywordtype">void</span> MakePathSeparatorsNative(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span> </div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>  <span class="keywordtype">bool</span> IsPathBelowFolder(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPathToFolder); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span> </div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno"><a class="line" href="../../d3/d2d/classpl_string_builder.htm#aa5dd0d0d0031bb7bfe144c28a45db449">  394</a></span>  plUInt64 <a class="code hl_function" href="../../d3/d2d/classpl_string_builder.htm#aa5dd0d0d0031bb7bfe144c28a45db449">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data.GetHeapMemoryUsage(); }</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span> </div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>  <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimChars = <span class="stringliteral">&quot; \f\n\r\t\v&quot;</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span> </div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>  <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsEnd); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>  <span class="keywordtype">void</span> TrimLeft(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimChars = <span class="stringliteral">&quot; \f\n\r\t\v&quot;</span>);</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>  <span class="keywordtype">void</span> TrimRight(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimChars = <span class="stringliteral">&quot; \f\n\r\t\v&quot;</span>);</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span> </div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>  <span class="keywordtype">bool</span> TrimWordStart(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sWord); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span> </div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>  <span class="keywordtype">bool</span> TrimWordEnd(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sWord); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span> </div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span><span class="preprocessor">#if PL_ENABLED(PL_INTEROP_STL_STRINGS)</span></div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>  <span class="comment">/* implicit */</span> <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<span class="keyword">const</span> std::string_view&amp; rhs, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator = <a class="code hl_function" href="../../d8/d6f/classpl_foundation.htm#a2f9bc4a5e090e2d6173ff861d532b021">plFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span> </div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>  <span class="comment">/* implicit */</span> <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>(<span class="keyword">const</span> std::string&amp; rhs, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator = <a class="code hl_function" href="../../d8/d6f/classpl_foundation.htm#a2f9bc4a5e090e2d6173ff861d532b021">plFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span> </div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> std::string_view&amp; rhs);</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span> </div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> std::string&amp; rhs);</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span> </div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  <span class="keywordtype">void</span> RemoveDoubleSlashesInPath(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span> </div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>  <span class="keywordtype">void</span> ChangeCharacterNonASCII(iterator&amp; it, plUInt32 uiCharacter);</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span>  <span class="keywordtype">void</span> AppendTerminator();</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span> </div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>  <span class="comment">// needed for better copy construction</span></div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>  <span class="keyword">template</span> &lt;plUInt16 T&gt;</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>  <span class="keyword">friend</span> <span class="keyword">struct </span><a class="code hl_struct" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a>;</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span> </div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>  <span class="keyword">friend</span> <a class="code hl_class" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a>;</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span> </div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span>  <a class="code hl_class" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray&lt;char, 128&gt;</a> m_Data;</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>};</div>
</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span> </div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span><span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBuilder_inl.h&gt;</span></div>
<div class="ttc" id="aclasspl_allocator_htm"><div class="ttname"><a href="../../da/df3/classpl_allocator.htm">plAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclasspl_format_string_htm"><div class="ttname"><a href="../../d6/d9a/classpl_format_string.htm">plFormatString</a></div><div class="ttdoc">Implements formating of strings with placeholders and formatting options.</div><div class="ttdef"><b>Definition</b> FormatString.h:59</div></div>
<div class="ttc" id="aclasspl_format_string_impl_htm"><div class="ttname"><a href="../../d2/d7f/classpl_format_string_impl.htm">plFormatStringImpl</a></div><div class="ttdef"><b>Definition</b> FormatStringImpl.h:9</div></div>
<div class="ttc" id="aclasspl_foundation_htm_a2f9bc4a5e090e2d6173ff861d532b021"><div class="ttname"><a href="../../d8/d6f/classpl_foundation.htm#a2f9bc4a5e090e2d6173ff861d532b021">plFoundation::GetDefaultAllocator</a></div><div class="ttdeci">static PL_ALWAYS_INLINE plAllocator * GetDefaultAllocator()</div><div class="ttdoc">The default allocator can be used for any kind of allocation if no alignment is required.</div><div class="ttdef"><b>Definition</b> Basics.h:82</div></div>
<div class="ttc" id="aclasspl_hybrid_array_htm"><div class="ttname"><a href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclasspl_stream_reader_htm"><div class="ttname"><a href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclasspl_string_builder_htm"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></div><div class="ttdoc">plStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_a527367494d124b3d8d51fec271ce4351"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#a527367494d124b3d8d51fec271ce4351">plStringBuilder::operator=</a></div><div class="ttdeci">void operator=(plHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:119</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_a58152c1c5728d387f5b81883c7fab678"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#a58152c1c5728d387f5b81883c7fab678">plStringBuilder::plStringBuilder</a></div><div class="ttdeci">plStringBuilder(plHybridString&lt; Size, A &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:70</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_a6ab837704e6392c4e48250d9ed864f1f"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#a6ab837704e6392c4e48250d9ed864f1f">plStringBuilder::PrependFormat</a></div><div class="ttdeci">void PrependFormat(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Prepends a formatted string. Uses '{}' formatting placeholders, see plFormatString for details.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:250</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_a6c5d036483b34cd56f305e003f5d0a51"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#a6c5d036483b34cd56f305e003f5d0a51">plStringBuilder::plStringBuilder</a></div><div class="ttdeci">plStringBuilder(const plHybridStringBase&lt; Size &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:48</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_a93dbafe891d836256a1599be35a1c223"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#a93dbafe891d836256a1599be35a1c223">plStringBuilder::SetFormat</a></div><div class="ttdeci">void SetFormat(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Replaces this with a formatted string. Uses '{}' formatting placeholders, see plFormatString for deta...</div><div class="ttdef"><b>Definition</b> StringBuilder.h:230</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_aa5dd0d0d0031bb7bfe144c28a45db449"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#aa5dd0d0d0031bb7bfe144c28a45db449">plStringBuilder::GetHeapMemoryUsage</a></div><div class="ttdeci">plUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:394</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_ac7c9fee23418a6dab9c554ff5aea4c47"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#ac7c9fee23418a6dab9c554ff5aea4c47">plStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const plHybridString&lt; Size, A &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:112</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_acdbc74b5f4c4354590787563c7464281"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#acdbc74b5f4c4354590787563c7464281">plStringBuilder::operator=</a></div><div class="ttdeci">void operator=(plHybridString&lt; Size, A &gt; &amp;&amp;rhs) noexcept</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:126</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_ade94bb5f0337259bd95d973a65d631e3"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#ade94bb5f0337259bd95d973a65d631e3">plStringBuilder::plStringBuilder</a></div><div class="ttdeci">plStringBuilder(plHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:63</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_ae08dbba46899662cba06fbc2b40dc599"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#ae08dbba46899662cba06fbc2b40dc599">plStringBuilder::plStringBuilder</a></div><div class="ttdeci">plStringBuilder(const plHybridString&lt; Size, A &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:55</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_ae0e4310def5b31ca716026574e221ea8"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#ae0e4310def5b31ca716026574e221ea8">plStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const plHybridStringBase&lt; Size &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:105</div></div>
<div class="ttc" id="aclasspl_string_builder_htm_ae554ecb996fda0112664ff7bfbede389"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm#ae554ecb996fda0112664ff7bfbede389">plStringBuilder::AppendFormat</a></div><div class="ttdeci">void AppendFormat(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Appends a formatted string. Uses '{}' formatting placeholders, see plFormatString for details.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:240</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a8bc7e3a526fc09382eaa1276895f3266"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a8bc7e3a526fc09382eaa1276895f3266">plStringUtils::PL_CHARACTER_FILTER</a></div><div class="ttdeci">bool(*)(plUInt32 uiChar) PL_CHARACTER_FILTER</div><div class="ttdoc">Function Definition for a function that determines whether a (Utf32) character belongs to a certain c...</div><div class="ttdef"><b>Definition</b> StringUtils.h:209</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="astructpl_hybrid_string_base_htm"><div class="ttname"><a href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a></div><div class="ttdoc">A string class for storing and passing around strings.</div><div class="ttdef"><b>Definition</b> String.h:28</div></div>
<div class="ttc" id="astructpl_hybrid_string_htm"><div class="ttname"><a href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a></div><div class="ttdef"><b>Definition</b> String.h:146</div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructpl_string_base_htm"><div class="ttname"><a href="../../de/d73/structpl_string_base.htm">plStringBase</a></div><div class="ttdoc">Base class for strings, which implements all read-only string functions.</div><div class="ttdef"><b>Definition</b> StringBase.h:14</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_93f3a51c0220f51fc2c286c08d531e1e.htm">Strings</a></li><li class="navelem"><b>StringBuilder.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
