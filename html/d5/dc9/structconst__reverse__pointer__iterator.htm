<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: const_reverse_pointer_iterator&lt; T &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d5/dc9/structconst__reverse__pointer__iterator.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../dc/d90/structconst__reverse__pointer__iterator-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">const_reverse_pointer_iterator&lt; T &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Base class for Pointer like reverse iterators.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/d5d/_array_iterator_8h_source.htm">ArrayIterator.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for const_reverse_pointer_iterator&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../dd/dda/structconst__reverse__pointer__iterator__inherit__graph.png" border="0" usemap="#aconst__reverse__pointer__iterator_3_01_t_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="aconst__reverse__pointer__iterator_3_01_t_01_4_inherit__map" id="aconst__reverse__pointer__iterator_3_01_t_01_4_inherit__map">
<area shape="rect" title="Base class for Pointer like reverse iterators." alt="" coords="25,5,172,48"/>
<area shape="rect" href="../../d3/df2/structreverse__pointer__iterator.htm" title="Non&#45;Const class for Pointer like reverse iterators." alt="" coords="5,96,192,123"/>
<area shape="poly" title=" " alt="" coords="101,64,101,95,96,95,96,64"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afd08d732427c5fb7284b00b78a8a74a5" id="r_afd08d732427c5fb7284b00b78a8a74a5"><td class="memItemLeft" align="right" valign="top"><a id="afd08d732427c5fb7284b00b78a8a74a5" name="afd08d732427c5fb7284b00b78a8a74a5"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator_category</b> = std::random_access_iterator_tag</td></tr>
<tr class="separator:afd08d732427c5fb7284b00b78a8a74a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04efa127f7af22bfe3e22292c3315527" id="r_a04efa127f7af22bfe3e22292c3315527"><td class="memItemLeft" align="right" valign="top"><a id="a04efa127f7af22bfe3e22292c3315527" name="a04efa127f7af22bfe3e22292c3315527"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = T</td></tr>
<tr class="separator:a04efa127f7af22bfe3e22292c3315527"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae14bc237ba27a418776a734364efbbc1" id="r_ae14bc237ba27a418776a734364efbbc1"><td class="memItemLeft" align="right" valign="top"><a id="ae14bc237ba27a418776a734364efbbc1" name="ae14bc237ba27a418776a734364efbbc1"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>difference_type</b> = std::ptrdiff_t</td></tr>
<tr class="separator:ae14bc237ba27a418776a734364efbbc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59ccf0058483a7ffd51585bfdb892926" id="r_a59ccf0058483a7ffd51585bfdb892926"><td class="memItemLeft" align="right" valign="top"><a id="a59ccf0058483a7ffd51585bfdb892926" name="a59ccf0058483a7ffd51585bfdb892926"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>pointer</b> = T*</td></tr>
<tr class="separator:a59ccf0058483a7ffd51585bfdb892926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc93ba9121f3a5184d905ca2d761a5d0" id="r_acc93ba9121f3a5184d905ca2d761a5d0"><td class="memItemLeft" align="right" valign="top"><a id="acc93ba9121f3a5184d905ca2d761a5d0" name="acc93ba9121f3a5184d905ca2d761a5d0"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reference</b> = T&amp;</td></tr>
<tr class="separator:acc93ba9121f3a5184d905ca2d761a5d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af11b2a4f05ee33a8a720974d4b6c23eb" id="r_af11b2a4f05ee33a8a720974d4b6c23eb"><td class="memItemLeft" align="right" valign="top"><a id="af11b2a4f05ee33a8a720974d4b6c23eb" name="af11b2a4f05ee33a8a720974d4b6c23eb"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_pointer_iterator</b> (T const *pPtr)</td></tr>
<tr class="separator:af11b2a4f05ee33a8a720974d4b6c23eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19607344eef431438123155e92069217" id="r_a19607344eef431438123155e92069217"><td class="memItemLeft" align="right" valign="top"><a id="a19607344eef431438123155e92069217" name="a19607344eef431438123155e92069217"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator++</b> ()</td></tr>
<tr class="separator:a19607344eef431438123155e92069217"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ecc3e01504e711e096860633f31083d" id="r_a1ecc3e01504e711e096860633f31083d"><td class="memItemLeft" align="right" valign="top"><a id="a1ecc3e01504e711e096860633f31083d" name="a1ecc3e01504e711e096860633f31083d"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator--</b> ()</td></tr>
<tr class="separator:a1ecc3e01504e711e096860633f31083d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab569a25fd6ced834c3fca687795d9d95" id="r_ab569a25fd6ced834c3fca687795d9d95"><td class="memItemLeft" align="right" valign="top"><a id="ab569a25fd6ced834c3fca687795d9d95" name="ab569a25fd6ced834c3fca687795d9d95"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator++</b> (int)</td></tr>
<tr class="separator:ab569a25fd6ced834c3fca687795d9d95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a839d815ce6450a5524a70780276a07d8" id="r_a839d815ce6450a5524a70780276a07d8"><td class="memItemLeft" align="right" valign="top"><a id="a839d815ce6450a5524a70780276a07d8" name="a839d815ce6450a5524a70780276a07d8"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator--</b> (int)</td></tr>
<tr class="separator:a839d815ce6450a5524a70780276a07d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a596101400e1d3cedd96f31103a7c4059" id="r_a596101400e1d3cedd96f31103a7c4059"><td class="memItemLeft" align="right" valign="top"><a id="a596101400e1d3cedd96f31103a7c4059" name="a596101400e1d3cedd96f31103a7c4059"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a596101400e1d3cedd96f31103a7c4059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98a39c233352accb094534a91722cd51" id="r_a98a39c233352accb094534a91722cd51"><td class="memItemLeft" align="right" valign="top"><a id="a98a39c233352accb094534a91722cd51" name="a98a39c233352accb094534a91722cd51"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a98a39c233352accb094534a91722cd51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc9cef22110bffbb846bc87afc3f0251" id="r_acc9cef22110bffbb846bc87afc3f0251"><td class="memItemLeft" align="right" valign="top"><a id="acc9cef22110bffbb846bc87afc3f0251" name="acc9cef22110bffbb846bc87afc3f0251"></a>
PL_ALWAYS_INLINE std::ptrdiff_t&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:acc9cef22110bffbb846bc87afc3f0251"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a591ba9327713b994bb248c479c3a4e9b" id="r_a591ba9327713b994bb248c479c3a4e9b"><td class="memItemLeft" align="right" valign="top"><a id="a591ba9327713b994bb248c479c3a4e9b" name="a591ba9327713b994bb248c479c3a4e9b"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (std::ptrdiff_t rhs) const</td></tr>
<tr class="separator:a591ba9327713b994bb248c479c3a4e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7087b552d27ae103fc0d117c42268245" id="r_a7087b552d27ae103fc0d117c42268245"><td class="memItemLeft" align="right" valign="top"><a id="a7087b552d27ae103fc0d117c42268245" name="a7087b552d27ae103fc0d117c42268245"></a>
PL_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (std::ptrdiff_t rhs) const</td></tr>
<tr class="separator:a7087b552d27ae103fc0d117c42268245"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfc8f463b8763bd66fcf4908d5a540d7" id="r_adfc8f463b8763bd66fcf4908d5a540d7"><td class="memItemLeft" align="right" valign="top"><a id="adfc8f463b8763bd66fcf4908d5a540d7" name="adfc8f463b8763bd66fcf4908d5a540d7"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (std::ptrdiff_t rhs)</td></tr>
<tr class="separator:adfc8f463b8763bd66fcf4908d5a540d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35deed20f72cba3f9076410c0e548e07" id="r_a35deed20f72cba3f9076410c0e548e07"><td class="memItemLeft" align="right" valign="top"><a id="a35deed20f72cba3f9076410c0e548e07" name="a35deed20f72cba3f9076410c0e548e07"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (std::ptrdiff_t rhs)</td></tr>
<tr class="separator:a35deed20f72cba3f9076410c0e548e07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a133bcba801e49ca76d912b2d2d869" id="r_a64a133bcba801e49ca76d912b2d2d869"><td class="memItemLeft" align="right" valign="top"><a id="a64a133bcba801e49ca76d912b2d2d869" name="a64a133bcba801e49ca76d912b2d2d869"></a>
PL_ALWAYS_INLINE const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> () const</td></tr>
<tr class="separator:a64a133bcba801e49ca76d912b2d2d869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f708c081a85de2196f4156339ecb783" id="r_a8f708c081a85de2196f4156339ecb783"><td class="memItemLeft" align="right" valign="top"><a id="a8f708c081a85de2196f4156339ecb783" name="a8f708c081a85de2196f4156339ecb783"></a>
PL_ALWAYS_INLINE const T *&#160;</td><td class="memItemRight" valign="bottom"><b>operator-&gt;</b> () const</td></tr>
<tr class="separator:a8f708c081a85de2196f4156339ecb783"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3ba74a7173e26f22325b28d11b91e67" id="r_aa3ba74a7173e26f22325b28d11b91e67"><td class="memItemLeft" align="right" valign="top"><a id="aa3ba74a7173e26f22325b28d11b91e67" name="aa3ba74a7173e26f22325b28d11b91e67"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:aa3ba74a7173e26f22325b28d11b91e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc5180aa808f9f909839c3c459b1556f" id="r_afc5180aa808f9f909839c3c459b1556f"><td class="memItemLeft" align="right" valign="top"><a id="afc5180aa808f9f909839c3c459b1556f" name="afc5180aa808f9f909839c3c459b1556f"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:afc5180aa808f9f909839c3c459b1556f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0efda4a56da64e4c198d010a1f7bc2f7" id="r_a0efda4a56da64e4c198d010a1f7bc2f7"><td class="memItemLeft" align="right" valign="top"><a id="a0efda4a56da64e4c198d010a1f7bc2f7" name="a0efda4a56da64e4c198d010a1f7bc2f7"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a0efda4a56da64e4c198d010a1f7bc2f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada6d96eb07f859a1aa076e77d497a047" id="r_ada6d96eb07f859a1aa076e77d497a047"><td class="memItemLeft" align="right" valign="top"><a id="ada6d96eb07f859a1aa076e77d497a047" name="ada6d96eb07f859a1aa076e77d497a047"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:ada6d96eb07f859a1aa076e77d497a047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0c5cf857f054d72a11633c06718e3c5" id="r_aa0c5cf857f054d72a11633c06718e3c5"><td class="memItemLeft" align="right" valign="top"><a id="aa0c5cf857f054d72a11633c06718e3c5" name="aa0c5cf857f054d72a11633c06718e3c5"></a>
PL_ALWAYS_INLINE const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (std::ptrdiff_t index) const</td></tr>
<tr class="separator:aa0c5cf857f054d72a11633c06718e3c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a728fb43dd50fcb3ed2eb9f99845474fa" id="r_a728fb43dd50fcb3ed2eb9f99845474fa"><td class="memItemLeft" align="right" valign="top"><a id="a728fb43dd50fcb3ed2eb9f99845474fa" name="a728fb43dd50fcb3ed2eb9f99845474fa"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pPtr</b></td></tr>
<tr class="separator:a728fb43dd50fcb3ed2eb9f99845474fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;class T&gt;<br />
struct const_reverse_pointer_iterator&lt; T &gt;</div><p>Base class for Pointer like reverse iterators. </p>
</div><hr/>The documentation for this struct was generated from the following file:<ul>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../db/d5d/_array_iterator_8h_source.htm">ArrayIterator.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
