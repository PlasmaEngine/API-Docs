<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plPickingRenderPass Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/d4f/classpl_picking_render_pass.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d6/d31/classpl_picking_render_pass-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plPickingRenderPass Class Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for plPickingRenderPass:</div>
<div class="dyncontent">
<div class="center"><img src="../../d1/d3c/classpl_picking_render_pass__inherit__graph.png" border="0" usemap="#apl_picking_render_pass_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_picking_render_pass_inherit__map" id="apl_picking_render_pass_inherit__map">
<area shape="rect" title=" " alt="" coords="7,304,152,331"/>
<area shape="rect" href="../../d8/da4/classpl_render_pipeline_pass.htm" title=" " alt="" coords="5,229,154,256"/>
<area shape="poly" title=" " alt="" coords="82,272,82,304,77,304,77,272"/>
<area shape="rect" href="../../df/db6/classpl_render_pipeline_node.htm" title=" " alt="" coords="5,155,154,181"/>
<area shape="poly" title=" " alt="" coords="82,197,82,229,77,229,77,197"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="20,80,139,107"/>
<area shape="poly" title=" " alt="" coords="82,122,82,154,77,154,77,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="41,5,118,32"/>
<area shape="poly" title=" " alt="" coords="82,48,82,80,77,80,77,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5c952c4ba192e5a960d5e12845e89ee2" id="r_a5c952c4ba192e5a960d5e12845e89ee2"><td class="memItemLeft" align="right" valign="top"><a id="a5c952c4ba192e5a960d5e12845e89ee2" name="a5c952c4ba192e5a960d5e12845e89ee2"></a>
<a class="el" href="../../dc/de5/classpl_g_a_l_texture_handle.htm">plGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPickingIdRT</b> () const</td></tr>
<tr class="separator:a5c952c4ba192e5a960d5e12845e89ee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aa1136011a38effdc8b719afc92f8bb" id="r_a2aa1136011a38effdc8b719afc92f8bb"><td class="memItemLeft" align="right" valign="top"><a id="a2aa1136011a38effdc8b719afc92f8bb" name="a2aa1136011a38effdc8b719afc92f8bb"></a>
<a class="el" href="../../dc/de5/classpl_g_a_l_texture_handle.htm">plGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPickingDepthRT</b> () const</td></tr>
<tr class="separator:a2aa1136011a38effdc8b719afc92f8bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7a3ee235d1c9dda32bd26324f79eb8a" id="r_ad7a3ee235d1c9dda32bd26324f79eb8a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad7a3ee235d1c9dda32bd26324f79eb8a">GetRenderTargetDescriptions</a> (const <a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> &amp;view, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> *const &gt; inputs, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &gt; outputs) override</td></tr>
<tr class="memdesc:ad7a3ee235d1c9dda32bd26324f79eb8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins.  <br /></td></tr>
<tr class="separator:ad7a3ee235d1c9dda32bd26324f79eb8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42948785fe85686e41f62a0e901e93b5" id="r_a42948785fe85686e41f62a0e901e93b5"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a42948785fe85686e41f62a0e901e93b5">InitRenderPipelinePass</a> (const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="memdesc:a42948785fe85686e41f62a0e901e93b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer.  <br /></td></tr>
<tr class="separator:a42948785fe85686e41f62a0e901e93b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2fd8ace12bd0dbafd34aa3c30fceef6" id="r_ad2fd8ace12bd0dbafd34aa3c30fceef6"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad2fd8ace12bd0dbafd34aa3c30fceef6">Execute</a> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="memdesc:ad2fd8ace12bd0dbafd34aa3c30fceef6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data.  <br /></td></tr>
<tr class="separator:ad2fd8ace12bd0dbafd34aa3c30fceef6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec3ee8e938f3733a2af4f52c1f064346" id="r_aec3ee8e938f3733a2af4f52c1f064346"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aec3ee8e938f3733a2af4f52c1f064346">ReadBackProperties</a> (<a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *pView) override</td></tr>
<tr class="memdesc:aec3ee8e938f3733a2af4f52c1f064346"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows for the pass to write data back using plView::SetRenderPassReadBackProperty. E.g. picking results etc.  <br /></td></tr>
<tr class="separator:aec3ee8e938f3733a2af4f52c1f064346"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_render_pipeline_pass"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_render_pipeline_pass')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm">plRenderPipelinePass</a></td></tr>
<tr class="memitem:ab2ea6a9ffdd7fbc5491adcf4fa5e8f89 inherit pub_methods_classpl_render_pipeline_pass" id="r_ab2ea6a9ffdd7fbc5491adcf4fa5e8f89"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plRenderPipelinePass</b> (const char *szName, bool bIsStereoAware=false)</td></tr>
<tr class="separator:ab2ea6a9ffdd7fbc5491adcf4fa5e8f89 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcaba0f06de6de84e30e5d3f6696adf9 inherit pub_methods_classpl_render_pipeline_pass" id="r_adcaba0f06de6de84e30e5d3f6696adf9"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetName</b> (const char *szName)</td></tr>
<tr class="memdesc:adcaba0f06de6de84e30e5d3f6696adf9 inherit pub_methods_classpl_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the pass. <br /></td></tr>
<tr class="separator:adcaba0f06de6de84e30e5d3f6696adf9 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eb1431a92264d223132de89f1bc7247 inherit pub_methods_classpl_render_pipeline_pass" id="r_a2eb1431a92264d223132de89f1bc7247"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="memdesc:a2eb1431a92264d223132de89f1bc7247 inherit pub_methods_classpl_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the name of the pass. <br /></td></tr>
<tr class="separator:a2eb1431a92264d223132de89f1bc7247 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bf57bfc210229eb46fb1b2e478e933e inherit pub_methods_classpl_render_pipeline_pass" id="r_a3bf57bfc210229eb46fb1b2e478e933e"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsStereoAware</b> () const</td></tr>
<tr class="memdesc:a3bf57bfc210229eb46fb1b2e478e933e inherit pub_methods_classpl_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">True if the render pipeline pass can handle stereo cameras correctly. <br /></td></tr>
<tr class="separator:a3bf57bfc210229eb46fb1b2e478e933e inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad327da9e098bd64f650d827e8f255e77 inherit pub_methods_classpl_render_pipeline_pass" id="r_ad327da9e098bd64f650d827e8f255e77"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dc/de5/classpl_g_a_l_texture_handle.htm">plGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#ad327da9e098bd64f650d827e8f255e77">QueryTextureProvider</a> (const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *pPin, const <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &amp;desc)</td></tr>
<tr class="separator:ad327da9e098bd64f650d827e8f255e77 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a282a6754cefa086cac427fcbba561abb inherit pub_methods_classpl_render_pipeline_pass" id="r_a282a6754cefa086cac427fcbba561abb"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ExecuteInactive</b> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt; outputs)</td></tr>
<tr class="separator:a282a6754cefa086cac427fcbba561abb inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e3ee80a7e02e514cf4eb5cb41fe4311 inherit pub_methods_classpl_render_pipeline_pass" id="r_a2e3ee80a7e02e514cf4eb5cb41fe4311"><td class="memItemLeft" align="right" valign="top">
virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Serialize</b> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_stream) const</td></tr>
<tr class="separator:a2e3ee80a7e02e514cf4eb5cb41fe4311 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a783ffa6b47bee73e96df22c620ffe6b9 inherit pub_methods_classpl_render_pipeline_pass" id="r_a783ffa6b47bee73e96df22c620ffe6b9"><td class="memItemLeft" align="right" valign="top">
virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Deserialize</b> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &amp;inout_stream)</td></tr>
<tr class="separator:a783ffa6b47bee73e96df22c620ffe6b9 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adafff9984ae9b103ebea9e09ad0150fa inherit pub_methods_classpl_render_pipeline_pass" id="r_adafff9984ae9b103ebea9e09ad0150fa"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RenderDataWithCategory</b> (const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;renderViewContext, <a class="el" href="../../d7/d4c/structpl_render_data_1_1_category.htm">plRenderData::Category</a> category, <a class="el" href="../../dd/d63/classpl_render_data_batch.htm#a6f40beec8fc9f38ae41fdee67974aaec">plRenderDataBatch::Filter</a> filter=<a class="el" href="../../dd/d63/classpl_render_data_batch.htm#a6f40beec8fc9f38ae41fdee67974aaec">plRenderDataBatch::Filter</a>())</td></tr>
<tr class="separator:adafff9984ae9b103ebea9e09ad0150fa inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09fed82adf3a76148e63b05d63782b19 inherit pub_methods_classpl_render_pipeline_pass" id="r_a09fed82adf3a76148e63b05d63782b19"><td class="memItemLeft" align="right" valign="top">
PL_ALWAYS_INLINE <a class="el" href="../../d5/d68/classpl_render_pipeline.htm">plRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> ()</td></tr>
<tr class="separator:a09fed82adf3a76148e63b05d63782b19 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b8bac1b9fcd90e56174acfb4ab399b0 inherit pub_methods_classpl_render_pipeline_pass" id="r_a0b8bac1b9fcd90e56174acfb4ab399b0"><td class="memItemLeft" align="right" valign="top">
PL_ALWAYS_INLINE const <a class="el" href="../../d5/d68/classpl_render_pipeline.htm">plRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> () const</td></tr>
<tr class="separator:a0b8bac1b9fcd90e56174acfb4ab399b0 inherit pub_methods_classpl_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_render_pipeline_node"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_render_pipeline_node')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a></td></tr>
<tr class="memitem:af4e0ff1f11b514ad62a39778cd841202 inherit pub_methods_classpl_render_pipeline_node" id="r_af4e0ff1f11b514ad62a39778cd841202"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InitializePins</b> ()</td></tr>
<tr class="separator:af4e0ff1f11b514ad62a39778cd841202 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4e37109bde78bda2e197351c301979 inherit pub_methods_classpl_render_pipeline_node" id="r_aed4e37109bde78bda2e197351c301979"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinName</b> (const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *pPin) const</td></tr>
<tr class="separator:aed4e37109bde78bda2e197351c301979 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07cc899d36529c5602bb5f37c47b01ff inherit pub_methods_classpl_render_pipeline_node" id="r_a07cc899d36529c5602bb5f37c47b01ff"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (const char *szName) const</td></tr>
<tr class="separator:a07cc899d36529c5602bb5f37c47b01ff inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631d4aae4d9689d4da14bcbece9d7969 inherit pub_methods_classpl_render_pipeline_node" id="r_a631d4aae4d9689d4da14bcbece9d7969"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (<a class="el" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> sName) const</td></tr>
<tr class="separator:a631d4aae4d9689d4da14bcbece9d7969 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c53266f359cf29e7ab5a367517eda73 inherit pub_methods_classpl_render_pipeline_node" id="r_a5c53266f359cf29e7ab5a367517eda73"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputPins</b> () const</td></tr>
<tr class="separator:a5c53266f359cf29e7ab5a367517eda73 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae681612860ed7b6b3babfa5f71ecdc33 inherit pub_methods_classpl_render_pipeline_node" id="r_ae681612860ed7b6b3babfa5f71ecdc33"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetOutputPins</b> () const</td></tr>
<tr class="separator:ae681612860ed7b6b3babfa5f71ecdc33 inherit pub_methods_classpl_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a460a93336257e0f897cb39393cddbdd4" id="r_a460a93336257e0f897cb39393cddbdd4"><td class="memItemLeft" align="right" valign="top"><a id="a460a93336257e0f897cb39393cddbdd4" name="a460a93336257e0f897cb39393cddbdd4"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bPickSelected</b> = true</td></tr>
<tr class="separator:a460a93336257e0f897cb39393cddbdd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a291cc9314af6a757507939636c0f8303" id="r_a291cc9314af6a757507939636c0f8303"><td class="memItemLeft" align="right" valign="top"><a id="a291cc9314af6a757507939636c0f8303" name="a291cc9314af6a757507939636c0f8303"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bPickTransparent</b> = true</td></tr>
<tr class="separator:a291cc9314af6a757507939636c0f8303"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d267a88a9a2c2faea5bb04b2897d086" id="r_a0d267a88a9a2c2faea5bb04b2897d086"><td class="memItemLeft" align="right" valign="top"><a id="a0d267a88a9a2c2faea5bb04b2897d086" name="a0d267a88a9a2c2faea5bb04b2897d086"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_PickingPosition</b> = <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>(-1)</td></tr>
<tr class="separator:a0d267a88a9a2c2faea5bb04b2897d086"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30b1801bc3cd1c2964be58974f84ec50" id="r_a30b1801bc3cd1c2964be58974f84ec50"><td class="memItemLeft" align="right" valign="top"><a id="a30b1801bc3cd1c2964be58974f84ec50" name="a30b1801bc3cd1c2964be58974f84ec50"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_PickingIdOut</b> = 0</td></tr>
<tr class="separator:a30b1801bc3cd1c2964be58974f84ec50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44f2702501725183c428c29f57633828" id="r_a44f2702501725183c428c29f57633828"><td class="memItemLeft" align="right" valign="top"><a id="a44f2702501725183c428c29f57633828" name="a44f2702501725183c428c29f57633828"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_PickingDepthOut</b> = 0.0f</td></tr>
<tr class="separator:a44f2702501725183c428c29f57633828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b2a48e3349cb2796f8ce1502182ad8b" id="r_a7b2a48e3349cb2796f8ce1502182ad8b"><td class="memItemLeft" align="right" valign="top"><a id="a7b2a48e3349cb2796f8ce1502182ad8b" name="a7b2a48e3349cb2796f8ce1502182ad8b"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_MarqueePickPosition0</b> = <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>(-1)</td></tr>
<tr class="separator:a7b2a48e3349cb2796f8ce1502182ad8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7669957d634fd038453d1ef7a29a751" id="r_ab7669957d634fd038453d1ef7a29a751"><td class="memItemLeft" align="right" valign="top"><a id="ab7669957d634fd038453d1ef7a29a751" name="ab7669957d634fd038453d1ef7a29a751"></a>
<a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_MarqueePickPosition1</b> = <a class="el" href="../../d1/dd1/classpl_vec2_template.htm">plVec2</a>(-1)</td></tr>
<tr class="separator:ab7669957d634fd038453d1ef7a29a751"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f5ba76d2ed7e9a6180f03d3937b85fe" id="r_a5f5ba76d2ed7e9a6180f03d3937b85fe"><td class="memItemLeft" align="right" valign="top"><a id="a5f5ba76d2ed7e9a6180f03d3937b85fe" name="a5f5ba76d2ed7e9a6180f03d3937b85fe"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiMarqueeActionID</b> = 0xFFFFFFFF</td></tr>
<tr class="separator:a5f5ba76d2ed7e9a6180f03d3937b85fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a430b9854667beeb3dd4fa49c64f27e8f" id="r_a430b9854667beeb3dd4fa49c64f27e8f"><td class="memItemLeft" align="right" valign="top"><a id="a430b9854667beeb3dd4fa49c64f27e8f" name="a430b9854667beeb3dd4fa49c64f27e8f"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiWindowWidth</b> = 0</td></tr>
<tr class="separator:a430b9854667beeb3dd4fa49c64f27e8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c1bbba2b86786f256bf6098cefe2fcc" id="r_a5c1bbba2b86786f256bf6098cefe2fcc"><td class="memItemLeft" align="right" valign="top"><a id="a5c1bbba2b86786f256bf6098cefe2fcc" name="a5c1bbba2b86786f256bf6098cefe2fcc"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiWindowHeight</b> = 0</td></tr>
<tr class="separator:a5c1bbba2b86786f256bf6098cefe2fcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ad2fd8ace12bd0dbafd34aa3c30fceef6" name="ad2fd8ace12bd0dbafd34aa3c30fceef6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad2fd8ace12bd0dbafd34aa3c30fceef6">&#9670;&#160;</a></span>Execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPickingRenderPass::Execute </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d0/dac/structpl_render_view_context.htm">plRenderViewContext</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>renderViewContext</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data. </p>

<p>Implements <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#a77f066867e0b0ce045317520d7083d8d">plRenderPipelinePass</a>.</p>

</div>
</div>
<a id="ad7a3ee235d1c9dda32bd26324f79eb8a" name="ad7a3ee235d1c9dda32bd26324f79eb8a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad7a3ee235d1c9dda32bd26324f79eb8a">&#9670;&#160;</a></span>GetRenderTargetDescriptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plPickingRenderPass::GetRenderTargetDescriptions </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>view</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/de7/structpl_g_a_l_texture_creation_description.htm">plGALTextureCreationDescription</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins. </p>

<p>Implements <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#aef04db804311bd7ad00cb5b42230cef2">plRenderPipelinePass</a>.</p>

</div>
</div>
<a id="a42948785fe85686e41f62a0e901e93b5" name="a42948785fe85686e41f62a0e901e93b5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a42948785fe85686e41f62a0e901e93b5">&#9670;&#160;</a></span>InitRenderPipelinePass()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPickingRenderPass::InitRenderPipelinePass </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>inputs</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../db/d86/structpl_render_pipeline_pass_connection.htm">plRenderPipelinePassConnection</a> *const &gt;</td>          <td class="paramname"><span class="paramname"><em>outputs</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer. </p>

<p>Reimplemented from <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#a72e182c70f3b83e9ba377ff9bb5178b3">plRenderPipelinePass</a>.</p>

</div>
</div>
<a id="aec3ee8e938f3733a2af4f52c1f064346" name="aec3ee8e938f3733a2af4f52c1f064346"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aec3ee8e938f3733a2af4f52c1f064346">&#9670;&#160;</a></span>ReadBackProperties()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPickingRenderPass::ReadBackProperties </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/d7d/classpl_view.htm">plView</a> *</td>          <td class="paramname"><span class="paramname"><em>pView</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allows for the pass to write data back using plView::SetRenderPassReadBackProperty. E.g. picking results etc. </p>

<p>Reimplemented from <a class="el" href="../../d8/da4/classpl_render_pipeline_pass.htm#ae149ec39db8045806742a934e5adf72b">plRenderPipelinePass</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Editor/EditorEngineProcessFramework/PickingRenderPass/<a class="el" href="../../d7/da9/_picking_render_pass_8h_source.htm">PickingRenderPass.h</a></li>
<li>Code/Editor/EditorEngineProcessFramework/PickingRenderPass/<b>PickingRenderPass.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d4f/classpl_picking_render_pass.htm">plPickingRenderPass</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
