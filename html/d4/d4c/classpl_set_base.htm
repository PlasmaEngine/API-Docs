<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plSetBase&lt; KeyType, Comparer &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/d4c/classpl_set_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../d4/df8/classpl_set_base-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plSetBase&lt; KeyType, Comparer &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A set container that only stores whether an element resides in it or not. Similar to STL::set.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dc/d09/_set_8h_source.htm">Set.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plSetBase&lt; KeyType, Comparer &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../df/d88/classpl_set_base__inherit__graph.png" border="0" usemap="#apl_set_base_3_01_key_type_00_01_comparer_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_set_base_3_01_key_type_00_01_comparer_01_4_inherit__map" id="apl_set_base_3_01_key_type_00_01_comparer_01_4_inherit__map">
<area shape="rect" title="A set container that only stores whether an element resides in it or not. Similar to STL::set." alt="" coords="5,435,154,477"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="237,5,394,32"/>
<area shape="poly" title=" " alt="" coords="77,419,81,341,98,239,113,185,135,133,163,84,200,42,217,30,236,22,238,27,219,35,203,46,168,88,139,135,118,187,103,240,87,341,83,419"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="231,56,400,99"/>
<area shape="poly" title=" " alt="" coords="80,419,89,353,109,269,124,226,144,183,169,144,200,109,229,90,232,94,203,113,173,147,149,186,129,228,114,271,94,353,86,419"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="260,123,371,149"/>
<area shape="poly" title=" " alt="" coords="82,419,93,361,114,291,130,255,149,220,172,187,200,159,228,143,258,135,260,141,230,148,203,163,176,191,153,223,135,257,119,293,98,363,88,420"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="232,173,399,200"/>
<area shape="poly" title=" " alt="" coords="86,418,100,371,122,314,155,258,176,232,200,210,230,194,233,199,203,214,180,236,160,261,127,316,105,372,91,420"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="237,224,394,251"/>
<area shape="poly" title=" " alt="" coords="91,419,107,381,131,338,162,296,200,260,236,244,238,249,203,265,166,299,136,341,112,383,96,421"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="202,275,429,301"/>
<area shape="poly" title=" " alt="" coords="99,420,141,363,169,335,200,311,225,300,227,304,203,316,172,339,145,367,103,423"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="246,325,384,368"/>
<area shape="poly" title=" " alt="" coords="121,423,159,399,201,378,245,361,247,366,203,382,162,404,124,428"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="218,392,412,419"/>
<area shape="poly" title=" " alt="" coords="168,434,249,417,250,422,169,440"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="223,443,408,469"/>
<area shape="poly" title=" " alt="" coords="169,453,223,453,223,459,169,459"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="228,493,403,536"/>
<area shape="poly" title=" " alt="" coords="169,475,228,490,227,495,168,481"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="206,560,425,587"/>
<area shape="poly" title=" " alt="" coords="116,486,156,518,203,546,234,557,232,562,201,550,153,522,113,490"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="220,611,411,637"/>
<area shape="poly" title=" " alt="" coords="103,489,145,545,172,573,203,596,227,608,225,612,200,601,169,577,141,549,99,492"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="218,661,413,688"/>
<area shape="poly" title=" " alt="" coords="96,491,112,529,136,571,166,613,203,647,224,659,222,663,200,652,162,616,131,574,107,531,91,493"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="254,712,377,739"/>
<area shape="poly" title=" " alt="" coords="91,492,105,540,127,596,160,651,180,676,203,698,227,711,254,719,252,724,225,716,200,702,176,680,155,654,122,598,100,541,86,494"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="215,763,416,805"/>
<area shape="poly" title=" " alt="" coords="88,492,100,549,121,618,155,688,177,720,203,749,219,760,216,764,200,753,173,724,150,691,116,620,95,550,83,493"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="216,829,414,856"/>
<area shape="poly" title=" " alt="" coords="84,493,91,562,110,649,125,695,145,739,171,780,203,815,220,827,217,831,200,819,167,783,141,742,120,697,105,651,86,563,79,493"/>
<area shape="rect" href="../../d5/da6/classpl_set.htm" title=" " alt="" coords="224,880,406,923"/>
<area shape="poly" title=" " alt="" coords="83,493,88,570,105,670,120,723,141,775,169,824,203,866,226,882,222,886,200,870,164,827,136,777,115,725,100,672,83,571,78,493"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for all iterators.  <a href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ac1b31146e7b0fca47589a4ae0c85366f" id="r_ac1b31146e7b0fca47589a4ae0c85366f"><td class="memItemLeft" align="right" valign="top"><a id="ac1b31146e7b0fca47589a4ae0c85366f" name="ac1b31146e7b0fca47589a4ae0c85366f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>Iterator</b> = <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a>&lt;false&gt;</td></tr>
<tr class="separator:ac1b31146e7b0fca47589a4ae0c85366f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3086287ae97f2789d8ba63526739e042" id="r_a3086287ae97f2789d8ba63526739e042"><td class="memItemLeft" align="right" valign="top"><a id="a3086287ae97f2789d8ba63526739e042" name="a3086287ae97f2789d8ba63526739e042"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ReverseIterator</b> = <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a>&lt;true&gt;</td></tr>
<tr class="separator:a3086287ae97f2789d8ba63526739e042"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac647cd290962b3ba9edd236c8b386896" id="r_ac647cd290962b3ba9edd236c8b386896"><td class="memItemLeft" align="right" valign="top"><a id="ac647cd290962b3ba9edd236c8b386896" name="ac647cd290962b3ba9edd236c8b386896"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:ac647cd290962b3ba9edd236c8b386896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether there are no elements in the set. O(1) operation. <br /></td></tr>
<tr class="separator:ac647cd290962b3ba9edd236c8b386896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac75970c39e9220e6476a83e031ee8fc" id="r_aac75970c39e9220e6476a83e031ee8fc"><td class="memItemLeft" align="right" valign="top"><a id="aac75970c39e9220e6476a83e031ee8fc" name="aac75970c39e9220e6476a83e031ee8fc"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:aac75970c39e9220e6476a83e031ee8fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements currently stored in the set. O(1) operation. <br /></td></tr>
<tr class="separator:aac75970c39e9220e6476a83e031ee8fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20118e03f5400825607dbe985311bd50" id="r_a20118e03f5400825607dbe985311bd50"><td class="memItemLeft" align="right" valign="top"><a id="a20118e03f5400825607dbe985311bd50" name="a20118e03f5400825607dbe985311bd50"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a20118e03f5400825607dbe985311bd50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the set and resets its size to zero. <br /></td></tr>
<tr class="separator:a20118e03f5400825607dbe985311bd50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1acd8ad3ad4fb4f2d5426ab8b4ae9370" id="r_a1acd8ad3ad4fb4f2d5426ab8b4ae9370"><td class="memItemLeft" align="right" valign="top"><a id="a1acd8ad3ad4fb4f2d5426ab8b4ae9370" name="a1acd8ad3ad4fb4f2d5426ab8b4ae9370"></a>
<a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:a1acd8ad3ad4fb4f2d5426ab8b4ae9370"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the very first element. <br /></td></tr>
<tr class="separator:a1acd8ad3ad4fb4f2d5426ab8b4ae9370"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab02cfc8019dc55b41a18c13344886980" id="r_ab02cfc8019dc55b41a18c13344886980"><td class="memItemLeft" align="right" valign="top"><a id="ab02cfc8019dc55b41a18c13344886980" name="ab02cfc8019dc55b41a18c13344886980"></a>
<a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">ReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetReverseIterator</b> () const</td></tr>
<tr class="memdesc:ab02cfc8019dc55b41a18c13344886980"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant ReverseIterator to the very last element. <br /></td></tr>
<tr class="separator:ab02cfc8019dc55b41a18c13344886980"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa30fff0f0fc6ef086be6250b9dc5ac97" id="r_aa30fff0f0fc6ef086be6250b9dc5ac97"><td class="memTemplParams" colspan="2"><a id="aa30fff0f0fc6ef086be6250b9dc5ac97" name="aa30fff0f0fc6ef086be6250b9dc5ac97"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aa30fff0f0fc6ef086be6250b9dc5ac97"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Insert</b> (CompatibleKeyType &amp;&amp;key)</td></tr>
<tr class="memdesc:aa30fff0f0fc6ef086be6250b9dc5ac97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key into the tree and returns an Iterator to it. O(log n) operation. <br /></td></tr>
<tr class="separator:aa30fff0f0fc6ef086be6250b9dc5ac97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab316f32494031a88388d301eabfcb293" id="r_ab316f32494031a88388d301eabfcb293"><td class="memTemplParams" colspan="2"><a id="ab316f32494031a88388d301eabfcb293" name="ab316f32494031a88388d301eabfcb293"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ab316f32494031a88388d301eabfcb293"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Remove</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:ab316f32494031a88388d301eabfcb293"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the element with the given key, if it exists. O(log n) operation. <br /></td></tr>
<tr class="separator:ab316f32494031a88388d301eabfcb293"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6c57161311deed922b177123f809e1" id="r_a8e6c57161311deed922b177123f809e1"><td class="memItemLeft" align="right" valign="top"><a id="a8e6c57161311deed922b177123f809e1" name="a8e6c57161311deed922b177123f809e1"></a>
<a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Remove</b> (const <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a> &amp;pos)</td></tr>
<tr class="memdesc:a8e6c57161311deed922b177123f809e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the element at the given Iterator. O(log n) operation. <br /></td></tr>
<tr class="separator:a8e6c57161311deed922b177123f809e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedb7778252456da1a4c0093f71611667" id="r_aedb7778252456da1a4c0093f71611667"><td class="memTemplParams" colspan="2"><a id="aedb7778252456da1a4c0093f71611667" name="aedb7778252456da1a4c0093f71611667"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aedb7778252456da1a4c0093f71611667"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:aedb7778252456da1a4c0093f71611667"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:aedb7778252456da1a4c0093f71611667"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac90c49a36acee2b7e2a1ee1b592df38f" id="r_ac90c49a36acee2b7e2a1ee1b592df38f"><td class="memTemplParams" colspan="2"><a id="ac90c49a36acee2b7e2a1ee1b592df38f" name="ac90c49a36acee2b7e2a1ee1b592df38f"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac90c49a36acee2b7e2a1ee1b592df38f"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ac90c49a36acee2b7e2a1ee1b592df38f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given key is in the container. <br /></td></tr>
<tr class="separator:ac90c49a36acee2b7e2a1ee1b592df38f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a6c2e294eee1a84a8ded33b84331419" id="r_a0a6c2e294eee1a84a8ded33b84331419"><td class="memItemLeft" align="right" valign="top"><a id="a0a6c2e294eee1a84a8ded33b84331419" name="a0a6c2e294eee1a84a8ded33b84331419"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>ContainsSet</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;operand) const</td></tr>
<tr class="memdesc:a0a6c2e294eee1a84a8ded33b84331419"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all keys of the given set are in the container. <br /></td></tr>
<tr class="separator:a0a6c2e294eee1a84a8ded33b84331419"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af64dbcba530924a7dcc32029d510af56" id="r_af64dbcba530924a7dcc32029d510af56"><td class="memTemplParams" colspan="2"><a id="af64dbcba530924a7dcc32029d510af56" name="af64dbcba530924a7dcc32029d510af56"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:af64dbcba530924a7dcc32029d510af56"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:af64dbcba530924a7dcc32029d510af56"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:af64dbcba530924a7dcc32029d510af56"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9cd9980d0aa92bc9303a02e20f7b684" id="r_ae9cd9980d0aa92bc9303a02e20f7b684"><td class="memTemplParams" colspan="2"><a id="ae9cd9980d0aa92bc9303a02e20f7b684" name="ae9cd9980d0aa92bc9303a02e20f7b684"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ae9cd9980d0aa92bc9303a02e20f7b684"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ae9cd9980d0aa92bc9303a02e20f7b684"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:ae9cd9980d0aa92bc9303a02e20f7b684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33a2e83975eeb8caeb365f79f3004996" id="r_a33a2e83975eeb8caeb365f79f3004996"><td class="memItemLeft" align="right" valign="top"><a id="a33a2e83975eeb8caeb365f79f3004996" name="a33a2e83975eeb8caeb365f79f3004996"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Union</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;operand)</td></tr>
<tr class="memdesc:a33a2e83975eeb8caeb365f79f3004996"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the union of itself and the operand. <br /></td></tr>
<tr class="separator:a33a2e83975eeb8caeb365f79f3004996"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6047c06a2b4177844182c7964bccd59" id="r_aa6047c06a2b4177844182c7964bccd59"><td class="memItemLeft" align="right" valign="top"><a id="aa6047c06a2b4177844182c7964bccd59" name="aa6047c06a2b4177844182c7964bccd59"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Difference</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;operand)</td></tr>
<tr class="memdesc:aa6047c06a2b4177844182c7964bccd59"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the difference of itself and the operand, i.e. subtracts operand. <br /></td></tr>
<tr class="separator:aa6047c06a2b4177844182c7964bccd59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d094bef68c1227553443f04cb2fb159" id="r_a0d094bef68c1227553443f04cb2fb159"><td class="memItemLeft" align="right" valign="top"><a id="a0d094bef68c1227553443f04cb2fb159" name="a0d094bef68c1227553443f04cb2fb159"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Intersection</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;operand)</td></tr>
<tr class="memdesc:a0d094bef68c1227553443f04cb2fb159"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the intersection of itself and the operand. <br /></td></tr>
<tr class="separator:a0d094bef68c1227553443f04cb2fb159"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2e442f88e2e95d36a32514109e6400b" id="r_ae2e442f88e2e95d36a32514109e6400b"><td class="memItemLeft" align="right" valign="top"><a id="ae2e442f88e2e95d36a32514109e6400b" name="ae2e442f88e2e95d36a32514109e6400b"></a>
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:ae2e442f88e2e95d36a32514109e6400b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:ae2e442f88e2e95d36a32514109e6400b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4016affc50b9eb1bfe096389b3cd3f0" id="r_ab4016affc50b9eb1bfe096389b3cd3f0"><td class="memItemLeft" align="right" valign="top"><a id="ab4016affc50b9eb1bfe096389b3cd3f0" name="ab4016affc50b9eb1bfe096389b3cd3f0"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ab4016affc50b9eb1bfe096389b3cd3f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator. <br /></td></tr>
<tr class="separator:ab4016affc50b9eb1bfe096389b3cd3f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1601e1f4208685ac8da55e7869228ab" id="r_ae1601e1f4208685ac8da55e7869228ab"><td class="memItemLeft" align="right" valign="top"><a id="ae1601e1f4208685ac8da55e7869228ab" name="ae1601e1f4208685ac8da55e7869228ab"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;)</td></tr>
<tr class="separator:ae1601e1f4208685ac8da55e7869228ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a872eb9e8ec23215beb934c9960204048" id="r_a872eb9e8ec23215beb934c9960204048"><td class="memItemLeft" align="right" valign="top"><a id="a872eb9e8ec23215beb934c9960204048" name="a872eb9e8ec23215beb934c9960204048"></a>
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:a872eb9e8ec23215beb934c9960204048"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a872eb9e8ec23215beb934c9960204048"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e436f86f6421cb6c605ebee0b817d8e" id="r_a8e436f86f6421cb6c605ebee0b817d8e"><td class="memItemLeft" align="right" valign="top"><a id="a8e436f86f6421cb6c605ebee0b817d8e" name="a8e436f86f6421cb6c605ebee0b817d8e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;other)</td></tr>
<tr class="memdesc:a8e436f86f6421cb6c605ebee0b817d8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:a8e436f86f6421cb6c605ebee0b817d8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9058fcb445c92ce9db85542b6307be61" id="r_a9058fcb445c92ce9db85542b6307be61"><td class="memTemplParams" colspan="2"><a id="a9058fcb445c92ce9db85542b6307be61" name="a9058fcb445c92ce9db85542b6307be61"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a9058fcb445c92ce9db85542b6307be61"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a9058fcb445c92ce9db85542b6307be61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0da9b621793ec476276dbb7aae9d495" id="r_ae0da9b621793ec476276dbb7aae9d495"><td class="memTemplParams" colspan="2"><a id="ae0da9b621793ec476276dbb7aae9d495" name="ae0da9b621793ec476276dbb7aae9d495"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ae0da9b621793ec476276dbb7aae9d495"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:ae0da9b621793ec476276dbb7aae9d495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a219781f6352668f83ccbebd80178e46c" id="r_a219781f6352668f83ccbebd80178e46c"><td class="memTemplParams" colspan="2"><a id="a219781f6352668f83ccbebd80178e46c" name="a219781f6352668f83ccbebd80178e46c"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a219781f6352668f83ccbebd80178e46c"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a219781f6352668f83ccbebd80178e46c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13c2869be69eb04f4d3ad8bb4a2d716e" id="r_a13c2869be69eb04f4d3ad8bb4a2d716e"><td class="memTemplParams" colspan="2"><a id="a13c2869be69eb04f4d3ad8bb4a2d716e" name="a13c2869be69eb04f4d3ad8bb4a2d716e"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a13c2869be69eb04f4d3ad8bb4a2d716e"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a13c2869be69eb04f4d3ad8bb4a2d716e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a7da5a3aae2a0ec183e67656887287532" id="r_a7da5a3aae2a0ec183e67656887287532"><td class="memItemLeft" align="right" valign="top"><a id="a7da5a3aae2a0ec183e67656887287532" name="a7da5a3aae2a0ec183e67656887287532"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSetBase</b> (const Comparer &amp;comparer, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a7da5a3aae2a0ec183e67656887287532"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the set to be empty. <br /></td></tr>
<tr class="separator:a7da5a3aae2a0ec183e67656887287532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6311217effdc7ff2f728eb4324120a29" id="r_a6311217effdc7ff2f728eb4324120a29"><td class="memItemLeft" align="right" valign="top"><a id="a6311217effdc7ff2f728eb4324120a29" name="a6311217effdc7ff2f728eb4324120a29"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSetBase</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;cc, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a6311217effdc7ff2f728eb4324120a29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all keys from the given set into this one. <br /></td></tr>
<tr class="separator:a6311217effdc7ff2f728eb4324120a29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affba493e90896b90c5c4698fc18629a5" id="r_affba493e90896b90c5c4698fc18629a5"><td class="memItemLeft" align="right" valign="top"><a id="affba493e90896b90c5c4698fc18629a5" name="affba493e90896b90c5c4698fc18629a5"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>~plSetBase</b> ()</td></tr>
<tr class="memdesc:affba493e90896b90c5c4698fc18629a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the set. <br /></td></tr>
<tr class="separator:affba493e90896b90c5c4698fc18629a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a619dc8ac9ef97e475c82cb6cbaa4aff3" id="r_a619dc8ac9ef97e475c82cb6cbaa4aff3"><td class="memItemLeft" align="right" valign="top"><a id="a619dc8ac9ef97e475c82cb6cbaa4aff3" name="a619dc8ac9ef97e475c82cb6cbaa4aff3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a619dc8ac9ef97e475c82cb6cbaa4aff3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all keys from the given set into this one. <br /></td></tr>
<tr class="separator:a619dc8ac9ef97e475c82cb6cbaa4aff3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename KeyType, typename Comparer&gt;<br />
class plSetBase&lt; KeyType, Comparer &gt;</div><p>A set container that only stores whether an element resides in it or not. Similar to STL::set. </p>
<p>Sets are similar to maps that do not store a value (or only a bool that is always true). Sets can be used to reduce an unordered number of elements to only those that are unique. Insertion/erasure/lookup in sets is quite fast (O (log n)). This container is implemented with a red-black tree, so it will always be a balanced tree. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../dc/d09/_set_8h_source.htm">Set.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../db/dc1/_set__inl_8h_source.htm">Set_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
