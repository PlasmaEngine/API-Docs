<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plConsoleFunctionBase Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/db0/classpl_console_function_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d2/de9/classpl_console_function_base-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plConsoleFunctionBase Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>Base class for all types of <a class="el" href="../../d2/dac/classpl_console_function.htm" title="Implements the functionality of plConsoleFunctionBase for functions with different parameter types....">plConsoleFunction</a>, represents functions to be exposed to <a class="el" href="../../d2/d9c/classpl_console.htm">plConsole</a>.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/dcf/_console_function_8h_source.htm">ConsoleFunction.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plConsoleFunctionBase:</div>
<div class="dyncontent">
<div class="center"><img src="../../de/d73/classpl_console_function_base__inherit__graph.png" border="0" usemap="#apl_console_function_base_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_console_function_base_inherit__map" id="apl_console_function_base_inherit__map">
<area shape="rect" title="Base class for all types of plConsoleFunction, represents functions to be exposed to plConsole." alt="" coords="398,97,556,124"/>
<area shape="rect" href="../../d2/dac/classpl_console_function.htm" title=" " alt="" coords="638,5,774,48"/>
<area shape="poly" title=" " alt="" coords="524,89,603,58,637,46,638,51,605,62,526,94"/>
<area shape="rect" title=" " alt="" coords="650,72,762,99"/>
<area shape="poly" title=" " alt="" coords="572,98,650,89,650,94,572,103"/>
<area shape="rect" href="../../d2/dac/classpl_console_function.htm" title="Implements the functionality of plConsoleFunctionBase for functions with different parameter types...." alt="" coords="625,123,787,149"/>
<area shape="poly" title=" " alt="" coords="572,119,625,124,625,130,572,124"/>
<area shape="rect" href="../../d3/d83/classpl_console_function_3_01_r_07_p_l___l_i_s_t_07_p_00_01_a_r_g___c_o_u_n_t_08_08_4.htm" title=" " alt="" coords="604,173,808,216"/>
<area shape="poly" title=" " alt="" coords="526,128,605,159,638,170,636,175,603,164,524,133"/>
<area shape="rect" href="../../db/d85/classpl_enumerable.htm" title=" " alt="" coords="131,89,350,132"/>
<area shape="poly" title=" " alt="" coords="366,108,398,108,398,113,366,113"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="5,97,83,124"/>
<area shape="poly" title=" " alt="" coords="98,108,130,108,130,113,98,113"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abae059d980a412f9c1daec06e7e70a99" id="r_abae059d980a412f9c1daec06e7e70a99"><td class="memItemLeft" align="right" valign="top"><a id="abae059d980a412f9c1daec06e7e70a99" name="abae059d980a412f9c1daec06e7e70a99"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plConsoleFunctionBase</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFunctionName, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sDescription)</td></tr>
<tr class="memdesc:abae059d980a412f9c1daec06e7e70a99"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor takes the function name and description as it should appear in the console. <br /></td></tr>
<tr class="separator:abae059d980a412f9c1daec06e7e70a99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aecd00d8498fb5f9222bb14905d1d3c67" id="r_aecd00d8498fb5f9222bb14905d1d3c67"><td class="memItemLeft" align="right" valign="top"><a id="aecd00d8498fb5f9222bb14905d1d3c67" name="aecd00d8498fb5f9222bb14905d1d3c67"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="memdesc:aecd00d8498fb5f9222bb14905d1d3c67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the function as it should be exposed in the console. <br /></td></tr>
<tr class="separator:aecd00d8498fb5f9222bb14905d1d3c67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5820779f3568cbe65582534f09ed8b7e" id="r_a5820779f3568cbe65582534f09ed8b7e"><td class="memItemLeft" align="right" valign="top"><a id="a5820779f3568cbe65582534f09ed8b7e" name="a5820779f3568cbe65582534f09ed8b7e"></a>
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetDescription</b> () const</td></tr>
<tr class="memdesc:a5820779f3568cbe65582534f09ed8b7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the description of the function as it should appear in the console. <br /></td></tr>
<tr class="separator:a5820779f3568cbe65582534f09ed8b7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46b674d0068088a94cb492686fd11ee3" id="r_a46b674d0068088a94cb492686fd11ee3"><td class="memItemLeft" align="right" valign="top">virtual plUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a46b674d0068088a94cb492686fd11ee3">GetNumParameters</a> () const =0</td></tr>
<tr class="memdesc:a46b674d0068088a94cb492686fd11ee3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of parameters that this function takes.  <br /></td></tr>
<tr class="separator:a46b674d0068088a94cb492686fd11ee3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f63e4191425c61bbd5e12eb486d0229" id="r_a2f63e4191425c61bbd5e12eb486d0229"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d6/d1e/structpl_variant_type.htm#a4d10a99c083abdf7283ab1f48565de12">plVariant::Type::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2f63e4191425c61bbd5e12eb486d0229">GetParameterType</a> (plUInt32 uiParam) const =0</td></tr>
<tr class="memdesc:a2f63e4191425c61bbd5e12eb486d0229"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the n-th parameter.  <br /></td></tr>
<tr class="separator:a2f63e4191425c61bbd5e12eb486d0229"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1a4e13a71f4ede8c6f38116c597b2a2" id="r_af1a4e13a71f4ede8c6f38116c597b2a2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af1a4e13a71f4ede8c6f38116c597b2a2">Call</a> (<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &gt; params)=0</td></tr>
<tr class="memdesc:af1a4e13a71f4ede8c6f38116c597b2a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls the function. Each parameter must be put into an <a class="el" href="../../da/d4c/classpl_variant.htm" title="plVariant is a class that can store different types of variables, which is useful in situations where...">plVariant</a> and all of them are passed along as an array.  <br /></td></tr>
<tr class="separator:af1a4e13a71f4ede8c6f38116c597b2a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_enumerable"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../db/d85/classpl_enumerable.htm">plEnumerable&lt; plConsoleFunctionBase &gt;</a></td></tr>
<tr class="memitem:aa4eba5b9c96dbe89638a952ae66077dc inherit pro_attribs_classpl_enumerable" id="r_aa4eba5b9c96dbe89638a952ae66077dc"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d85/classpl_enumerable.htm">plEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:aa4eba5b9c96dbe89638a952ae66077dc inherit pro_attribs_classpl_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Base class for all types of <a class="el" href="../../d2/dac/classpl_console_function.htm" title="Implements the functionality of plConsoleFunctionBase for functions with different parameter types....">plConsoleFunction</a>, represents functions to be exposed to <a class="el" href="../../d2/d9c/classpl_console.htm">plConsole</a>. </p>
<p>Console functions are similar to <a class="el" href="../../d8/d67/classpl_c_var.htm" title="CVars are global variables that are used for configuring the engine.">plCVar</a>'s in that they can be executed from the <a class="el" href="../../d2/d9c/classpl_console.htm">plConsole</a>. A console function can wrap many different types of functions with differing number and types of parameters. <a class="el" href="../../d2/dac/classpl_console_function.htm" title="Implements the functionality of plConsoleFunctionBase for functions with different parameter types....">plConsoleFunction</a> uses an <a class="el" href="../../df/df1/structpl_delegate.htm" title="A generic delegate class which supports static functions and member functions.">plDelegate</a> internally to store the function reference, so even member functions would be possible.</p>
<p>All console functions are enumerable, as their base class <a class="el" href="../../d4/db0/classpl_console_function_base.htm" title="Base class for all types of plConsoleFunction, represents functions to be exposed to plConsole.">plConsoleFunctionBase</a> is an <a class="el" href="../../db/d85/classpl_enumerable.htm" title="Base class to add the ability to another class to enumerate all active instance of it,...">plEnumerable</a> class.</p>
<p>Console functions can have between zero and six parameters. The LuaInterpreter for <a class="el" href="../../d2/d9c/classpl_console.htm">plConsole</a> only supports parameter types (unsigned) int, float/double, bool and string and uses the conversion feature of <a class="el" href="../../da/d4c/classpl_variant.htm" title="plVariant is a class that can store different types of variables, which is useful in situations where...">plVariant</a> to map the lua input to the final function.</p>
<p>To make a function available as a console function, create a global variable of type <a class="el" href="../../d2/dac/classpl_console_function.htm" title="Implements the functionality of plConsoleFunctionBase for functions with different parameter types....">plConsoleFunction</a> with the proper template arguments to mirror its parameters and return type. Note that although functions with return types are accepted, the return value is currently always ignored.</p>
<div class="fragment"><div class="line"><span class="keywordtype">void</span> MyConsoleFunc1(<span class="keywordtype">int</span> a, <span class="keywordtype">float</span> b, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sz) { ... }</div>
<div class="line"><a class="code hl_class" href="../../d2/dac/classpl_console_function.htm">plConsoleFunction</a>&lt;void ()&gt; ConFunc_MyConsoleFunc1(<span class="stringliteral">&quot;MyConsoleFunc1&quot;</span>, <span class="stringliteral">&quot;()&quot;</span>, MyConsoleFunc1);</div>
<div class="line"> </div>
<div class="line"><span class="keywordtype">int</span> MyConsoleFunc2(<span class="keywordtype">int</span> a, <span class="keywordtype">float</span> b, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sz) { ... }</div>
<div class="line"><a class="code hl_class" href="../../d2/dac/classpl_console_function.htm">plConsoleFunction</a>&lt;int (<span class="keywordtype">int</span>, <span class="keywordtype">float</span>, <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>)&gt; ConFunc_MyConsoleFunc2(<span class="stringliteral">&quot;MyConsoleFunc2&quot;</span>, <span class="stringliteral">&quot;(int a, float b, string c)&quot;</span>, MyConsoleFunc2);</div>
<div class="ttc" id="aclasspl_console_function_htm"><div class="ttname"><a href="../../d2/dac/classpl_console_function.htm">plConsoleFunction</a></div><div class="ttdoc">Implements the functionality of plConsoleFunctionBase for functions with different parameter types....</div><div class="ttdef"><b>Definition</b> ConsoleFunction.h:76</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="astructpl_hybrid_string_htm"><div class="ttname"><a href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt; 32, plDefaultAllocatorWrapper &gt;</a></div></div>
</div><!-- fragment --><p>Here the global function MyConsoleFunc2 is exposed to the console. The return value type and parameter types are passed as template arguments. ConFunc_MyConsoleFunc2 is now the global variable that represents the function for the console. The first string is the name with which the function is exposed, which is also used for auto-completion. The second string is the description of the function. Here we inserted the parameter list with types, so that the user knows how to use it. Finally the last parameter is the actual function to expose. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af1a4e13a71f4ede8c6f38116c597b2a2" name="af1a4e13a71f4ede8c6f38116c597b2a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1a4e13a71f4ede8c6f38116c597b2a2">&#9670;&#160;</a></span>Call()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plConsoleFunctionBase::Call </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>params</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calls the function. Each parameter must be put into an <a class="el" href="../../da/d4c/classpl_variant.htm" title="plVariant is a class that can store different types of variables, which is useful in situations where...">plVariant</a> and all of them are passed along as an array. </p>
<p>Returns PL_FAILURE, if the number of parameters did not match, or any parameter was not convertible to the actual type that the function expects. </p>

<p>Implemented in <a class="el" href="../../d3/d83/classpl_console_function_3_01_r_07_p_l___l_i_s_t_07_p_00_01_a_r_g___c_o_u_n_t_08_08_4.htm#a07cdcb430f3a1c55ee2ef5d115a8e77c">plConsoleFunction&lt; R(PL_LIST(P, ARG_COUNT))&gt;</a>.</p>

</div>
</div>
<a id="a46b674d0068088a94cb492686fd11ee3" name="a46b674d0068088a94cb492686fd11ee3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a46b674d0068088a94cb492686fd11ee3">&#9670;&#160;</a></span>GetNumParameters()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual plUInt32 plConsoleFunctionBase::GetNumParameters </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of parameters that this function takes. </p>

<p>Implemented in <a class="el" href="../../d3/d83/classpl_console_function_3_01_r_07_p_l___l_i_s_t_07_p_00_01_a_r_g___c_o_u_n_t_08_08_4.htm#a29e8120be38a9dc4dc2627b7f6f35070">plConsoleFunction&lt; R(PL_LIST(P, ARG_COUNT))&gt;</a>.</p>

</div>
</div>
<a id="a2f63e4191425c61bbd5e12eb486d0229" name="a2f63e4191425c61bbd5e12eb486d0229"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2f63e4191425c61bbd5e12eb486d0229">&#9670;&#160;</a></span>GetParameterType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d6/d1e/structpl_variant_type.htm#a4d10a99c083abdf7283ab1f48565de12">plVariant::Type::Enum</a> plConsoleFunctionBase::GetParameterType </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiParam</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of the n-th parameter. </p>

<p>Implemented in <a class="el" href="../../d3/d83/classpl_console_function_3_01_r_07_p_l___l_i_s_t_07_p_00_01_a_r_g___c_o_u_n_t_08_08_4.htm#abab0b59ff1c1a04faeb5b8d651a3e4a4">plConsoleFunction&lt; R(PL_LIST(P, ARG_COUNT))&gt;</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Core/Console/<a class="el" href="../../d1/dcf/_console_function_8h_source.htm">ConsoleFunction.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/db0/classpl_console_function_base.htm">plConsoleFunctionBase</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
