<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/Strings/Implementation/StringUtils_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/d13/_string_utils__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">StringUtils_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="foldopen" id="foldopen00003" data-start="{" data-end="}">
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#a4ccac70b4088fb22a1672c0b218b521c">    3</a></span>PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a4ccac70b4088fb22a1672c0b218b521c">plStringUtils::CompareChars</a>(plUInt32 uiCharacter1, plUInt32 uiCharacter2)</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span>{</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>  <span class="keywordflow">return</span> (plInt32)uiCharacter1 - (plInt32)uiCharacter2;</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>}</div>
</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="foldopen" id="foldopen00008" data-start="{" data-end="}">
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#a22210caae00b66f1f02b4affe722fd6d">    8</a></span><span class="keyword">inline</span> plInt32 <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a22210caae00b66f1f02b4affe722fd6d">plStringUtils::CompareChars_NoCase</a>(plUInt32 uiCharacter1, plUInt32 uiCharacter2)</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  <span class="keywordflow">return</span> (plInt32)<a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#ad738a4f07b1860528fe3bea806dc4ed1">ToUpperChar</a>(uiCharacter1) - (plInt32)<a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#ad738a4f07b1860528fe3bea806dc4ed1">ToUpperChar</a>(uiCharacter2);</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>}</div>
</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="}">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#ae6e3115137a813c8e4600c6110fac599">   13</a></span><span class="keyword">inline</span> plInt32 <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a4ccac70b4088fb22a1672c0b218b521c">plStringUtils::CompareChars</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char2)</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a4ccac70b4088fb22a1672c0b218b521c">CompareChars</a>(<a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#a74ff648b078866556ae3b3fd1718a73b">plUnicodeUtils::ConvertUtf8ToUtf32</a>(szUtf8Char1), <a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#a74ff648b078866556ae3b3fd1718a73b">plUnicodeUtils::ConvertUtf8ToUtf32</a>(szUtf8Char2));</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>}</div>
</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="}">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#ac4ebe92d8c561fb3921350a35cbaf9dc">   18</a></span><span class="keyword">inline</span> plInt32 <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a22210caae00b66f1f02b4affe722fd6d">plStringUtils::CompareChars_NoCase</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char2)</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>{</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a22210caae00b66f1f02b4affe722fd6d">CompareChars_NoCase</a>(<a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#a74ff648b078866556ae3b3fd1718a73b">plUnicodeUtils::ConvertUtf8ToUtf32</a>(szUtf8Char1), <a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#a74ff648b078866556ae3b3fd1718a73b">plUnicodeUtils::ConvertUtf8ToUtf32</a>(szUtf8Char2));</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>}</div>
</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#af3e32769f27383ebd20d9cb1d581be91">plStringUtils::IsNullOrEmpty</a>(<span class="keyword">const</span> T* pString)</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>{</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <span class="keywordflow">return</span> (pString == <span class="keyword">nullptr</span>) || (pString[0] == <span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>}</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#af3e32769f27383ebd20d9cb1d581be91">plStringUtils::IsNullOrEmpty</a>(<span class="keyword">const</span> T* pString, <span class="keyword">const</span> T* pStringEnd)</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>{</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keywordflow">return</span> (pString == <span class="keyword">nullptr</span>) || (pString[0] == <span class="charliteral">&#39;\0&#39;</span>) || pString == pStringEnd;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>}</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a4a534d013b4c7d0572c8315dbf22d25b">plStringUtils::UpdateStringEnd</a>(<span class="keyword">const</span> T* pStringStart, <span class="keyword">const</span> T*&amp; ref_pStringEnd)</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>{</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keywordflow">if</span> (ref_pStringEnd != <a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#a547a15418df6b0b46b539814fa426c69">plUnicodeUtils::GetMaxStringEnd&lt;T&gt;</a>())</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  ref_pStringEnd = pStringStart + <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#ab5a530c871d242106cf46b9bd5b676a2">GetStringElementCount</a>(pStringStart, <a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#a547a15418df6b0b46b539814fa426c69">plUnicodeUtils::GetMaxStringEnd&lt;T&gt;</a>());</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>}</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00045" data-start="{" data-end="}">
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#ab5a530c871d242106cf46b9bd5b676a2">   45</a></span><span class="keyword">constexpr</span> plUInt32 <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#ab5a530c871d242106cf46b9bd5b676a2">plStringUtils::GetStringElementCount</a>(<span class="keyword">const</span> T* pString)</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>{</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="comment">// can&#39;t use strlen here as long as it&#39;s not constexpr (C++ 23)</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <span class="keywordflow">if</span> (pString == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  plUInt32 uiCount = 0;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keywordflow">while</span> (*pString != <span class="charliteral">&#39;\0&#39;</span>)</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  {</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    ++pString;</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    ++uiCount;</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  }</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keywordflow">return</span> uiCount;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>}</div>
</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00063" data-start="{" data-end="}">
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#a18a0908335cf5e1664be2957309e0f41">   63</a></span>plUInt32 <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#ab5a530c871d242106cf46b9bd5b676a2">plStringUtils::GetStringElementCount</a>(<span class="keyword">const</span> T* pString, <span class="keyword">const</span> T* pStringEnd)</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>{</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#af3e32769f27383ebd20d9cb1d581be91">IsNullOrEmpty</a>(pString))</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keywordflow">if</span> (pStringEnd != <a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#a547a15418df6b0b46b539814fa426c69">plUnicodeUtils::GetMaxStringEnd&lt;T&gt;</a>())</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    <span class="keywordflow">return</span> (plUInt32)(pStringEnd - pString);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  plUInt32 uiCount = 0;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keywordflow">while</span> ((*pString != <span class="charliteral">&#39;\0&#39;</span>) &amp;&amp; (pString &lt; pStringEnd))</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    ++pString;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    ++uiCount;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  }</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keywordflow">return</span> uiCount;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>}</div>
</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="foldopen" id="foldopen00081" data-start="{" data-end="}">
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#ad62540cef4e31838952f7cfc846ef9f2">   81</a></span><span class="keyword">inline</span> plUInt32 <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#ad62540cef4e31838952f7cfc846ef9f2">plStringUtils::GetCharacterCount</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd)</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>{</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#af3e32769f27383ebd20d9cb1d581be91">IsNullOrEmpty</a>(szUtf8))</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  plUInt32 uiCharacters = 0;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keywordflow">while</span> ((*szUtf8 != <span class="charliteral">&#39;\0&#39;</span>) &amp;&amp; (szUtf8 &lt; pStringEnd))</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  {</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <span class="comment">// skip all the Utf8 continuation bytes</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#acb19dff6fb330079cc79279a73d85d7b">plUnicodeUtils::IsUtf8ContinuationByte</a>(*szUtf8))</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>      ++uiCharacters;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    ++szUtf8;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keywordflow">return</span> uiCharacters;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>}</div>
</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="foldopen" id="foldopen00100" data-start="{" data-end="}">
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#ae7b21398e9e2ebf75f9f501accb2c7e3">  100</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#ae7b21398e9e2ebf75f9f501accb2c7e3">plStringUtils::GetCharacterAndElementCount</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, plUInt32&amp; ref_uiCharacterCount, plUInt32&amp; ref_uiElementCount, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>{</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  ref_uiCharacterCount = 0;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  ref_uiElementCount = 0;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#af3e32769f27383ebd20d9cb1d581be91">IsNullOrEmpty</a>(szUtf8))</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keywordflow">while</span> (szUtf8 &lt; pStringEnd)</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  {</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    <span class="keywordtype">char</span> uiByte = *szUtf8;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    <span class="keywordflow">if</span> (uiByte == <span class="charliteral">&#39;\0&#39;</span>)</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    }</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="comment">// skip all the Utf8 continuation bytes</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    <span class="keywordflow">if</span> (!<a class="code hl_function" href="../../d5/de1/classpl_unicode_utils.htm#acb19dff6fb330079cc79279a73d85d7b">plUnicodeUtils::IsUtf8ContinuationByte</a>(uiByte))</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>      ++ref_uiCharacterCount;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    ++szUtf8;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    ++ref_uiElementCount;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  }</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>}</div>
</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="foldopen" id="foldopen00125" data-start="{" data-end="}">
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#a078ffb499352fde674181a35aebd1f2d">  125</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a078ffb499352fde674181a35aebd1f2d">plStringUtils::IsEqual</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End)</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>{</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a7b21ecc35f92bff6ff21d0822077eaa6">plStringUtils::Compare</a>(pString1, pString2, pString1End, pString2End) == 0;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>}</div>
</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="foldopen" id="foldopen00130" data-start="{" data-end="}">
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#aba00c3c3256411a9f615f03aaa6caca7">  130</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#aba00c3c3256411a9f615f03aaa6caca7">plStringUtils::IsEqualN</a>(</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, plUInt32 uiCharsToCompare, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End)</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>{</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a22aeb4d20b7672aea4e05fa163244cca">plStringUtils::CompareN</a>(pString1, pString2, uiCharsToCompare, pString1End, pString2End) == 0;</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>}</div>
</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="foldopen" id="foldopen00136" data-start="{" data-end="}">
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#a27a5be3ff9db439a31a48affe41ddc52">  136</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a27a5be3ff9db439a31a48affe41ddc52">plStringUtils::IsEqual_NoCase</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End)</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>{</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a07ab9e86704a1d319a455456d2d8ab94">plStringUtils::Compare_NoCase</a>(pString1, pString2, pString1End, pString2End) == 0;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>}</div>
</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="foldopen" id="foldopen00141" data-start="{" data-end="}">
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#ab090c9d993e98ea7a05e581932146ad1">  141</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#ab090c9d993e98ea7a05e581932146ad1">plStringUtils::IsEqualN_NoCase</a>(</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, plUInt32 uiCharsToCompare, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End)</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>{</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a267c56a514681d441d714a70e12f3d0a">plStringUtils::CompareN_NoCase</a>(pString1, pString2, uiCharsToCompare, pString1End, pString2End) == 0;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>}</div>
</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="foldopen" id="foldopen00147" data-start="{" data-end="}">
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#a71a5213e2eaffcc132054da990814753">  147</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a71a5213e2eaffcc132054da990814753">plStringUtils::IsDecimalDigit</a>(plUInt32 uiChar)</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>{</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <span class="keywordflow">return</span> (uiChar &gt;= <span class="charliteral">&#39;0&#39;</span> &amp;&amp; uiChar &lt;= <span class="charliteral">&#39;9&#39;</span>);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>}</div>
</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="foldopen" id="foldopen00152" data-start="{" data-end="}">
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="../../de/d4d/classpl_string_utils.htm#a7f929e7c423259efcfae8fca1b9c4ba0">  152</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a7f929e7c423259efcfae8fca1b9c4ba0">plStringUtils::IsHexDigit</a>(plUInt32 uiChar)</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>{</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d4d/classpl_string_utils.htm#a71a5213e2eaffcc132054da990814753">IsDecimalDigit</a>(uiChar) || (uiChar &gt;= <span class="charliteral">&#39;A&#39;</span> &amp;&amp; uiChar &lt;= <span class="charliteral">&#39;F&#39;</span>) || (uiChar &gt;= <span class="charliteral">&#39;a&#39;</span> &amp;&amp; uiChar &lt;= <span class="charliteral">&#39;f&#39;</span>);</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>}</div>
</div>
<div class="ttc" id="aclasspl_string_utils_htm_a078ffb499352fde674181a35aebd1f2d"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a078ffb499352fde674181a35aebd1f2d">plStringUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const char *pString1, const char *pString2, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise).</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:125</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a07ab9e86704a1d319a455456d2d8ab94"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a07ab9e86704a1d319a455456d2d8ab94">plStringUtils::Compare_NoCase</a></div><div class="ttdeci">static plInt32 Compare_NoCase(const char *pString1, const char *pString2, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality, case-insensitive.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:286</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a22210caae00b66f1f02b4affe722fd6d"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a22210caae00b66f1f02b4affe722fd6d">plStringUtils::CompareChars_NoCase</a></div><div class="ttdeci">static plInt32 CompareChars_NoCase(plUInt32 uiCharacter1, plUInt32 uiCharacter2)</div><div class="ttdoc">Compares the two code points for equality, case-insensitive.</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:8</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a22aeb4d20b7672aea4e05fa163244cca"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a22aeb4d20b7672aea4e05fa163244cca">plStringUtils::CompareN</a></div><div class="ttdeci">static plInt32 CompareN(const char *pString1, const char *pString2, plUInt32 uiCharsToCompare, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares the first uiCharsToCompare characters of the two strings for equality.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:247</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a267c56a514681d441d714a70e12f3d0a"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a267c56a514681d441d714a70e12f3d0a">plStringUtils::CompareN_NoCase</a></div><div class="ttdeci">static plInt32 CompareN_NoCase(const char *pString1, const char *pString2, plUInt32 uiCharsToCompare, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares the first uiCharsToCompare characters of the two strings for equality, case-insensitive.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:320</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a27a5be3ff9db439a31a48affe41ddc52"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a27a5be3ff9db439a31a48affe41ddc52">plStringUtils::IsEqual_NoCase</a></div><div class="ttdeci">static bool IsEqual_NoCase(const char *pString1, const char *pString2, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (case-insensitive).</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:136</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a4a534d013b4c7d0572c8315dbf22d25b"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a4a534d013b4c7d0572c8315dbf22d25b">plStringUtils::UpdateStringEnd</a></div><div class="ttdeci">static void UpdateStringEnd(const T *pStringStart, const T *&amp;ref_pStringEnd)</div><div class="ttdoc">Recomputes the end pointer of a string (szStringEnd), if that is currently set to plMaxStringEnd....</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a4ccac70b4088fb22a1672c0b218b521c"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a4ccac70b4088fb22a1672c0b218b521c">plStringUtils::CompareChars</a></div><div class="ttdeci">static plInt32 CompareChars(plUInt32 uiCharacter1, plUInt32 uiCharacter2)</div><div class="ttdoc">Compares the two code points for equality.</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:3</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a71a5213e2eaffcc132054da990814753"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a71a5213e2eaffcc132054da990814753">plStringUtils::IsDecimalDigit</a></div><div class="ttdeci">static bool IsDecimalDigit(plUInt32 uiChar)</div><div class="ttdoc">A decimal digit from 0..9.</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:147</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a7b21ecc35f92bff6ff21d0822077eaa6"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a7b21ecc35f92bff6ff21d0822077eaa6">plStringUtils::Compare</a></div><div class="ttdeci">static plInt32 Compare(const char *pString1, const char *pString2, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:218</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_a7f929e7c423259efcfae8fca1b9c4ba0"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#a7f929e7c423259efcfae8fca1b9c4ba0">plStringUtils::IsHexDigit</a></div><div class="ttdeci">static bool IsHexDigit(plUInt32 uiChar)</div><div class="ttdoc">A hexadecimal digit from 0..F.</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:152</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_ab090c9d993e98ea7a05e581932146ad1"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#ab090c9d993e98ea7a05e581932146ad1">plStringUtils::IsEqualN_NoCase</a></div><div class="ttdeci">static bool IsEqualN_NoCase(const char *pString1, const char *pString2, plUInt32 uiCharsToCompare, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (case-insensitive) up to the n-th character.</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:141</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_ab5a530c871d242106cf46b9bd5b676a2"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#ab5a530c871d242106cf46b9bd5b676a2">plStringUtils::GetStringElementCount</a></div><div class="ttdeci">static constexpr plUInt32 GetStringElementCount(const T *pString)</div><div class="ttdoc">Returns the number of elements of type T that the string contains, until it hits an element that is z...</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:45</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_aba00c3c3256411a9f615f03aaa6caca7"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#aba00c3c3256411a9f615f03aaa6caca7">plStringUtils::IsEqualN</a></div><div class="ttdeci">static bool IsEqualN(const char *pString1, const char *pString2, plUInt32 uiCharsToCompare, const char *pString1End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise) up to the n-th character.</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:130</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_ad62540cef4e31838952f7cfc846ef9f2"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#ad62540cef4e31838952f7cfc846ef9f2">plStringUtils::GetCharacterCount</a></div><div class="ttdeci">static plUInt32 GetCharacterCount(const char *szUtf8, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns the number of characters (not Bytes!) in a Utf8 string (excluding the zero terminator),...</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:81</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_ad738a4f07b1860528fe3bea806dc4ed1"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#ad738a4f07b1860528fe3bea806dc4ed1">plStringUtils::ToUpperChar</a></div><div class="ttdeci">static plUInt32 ToUpperChar(plUInt32 uiChar)</div><div class="ttdoc">Returns the upper case code point for uiChar.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:10</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_ae7b21398e9e2ebf75f9f501accb2c7e3"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#ae7b21398e9e2ebf75f9f501accb2c7e3">plStringUtils::GetCharacterAndElementCount</a></div><div class="ttdeci">static void GetCharacterAndElementCount(const char *szUtf8, plUInt32 &amp;ref_uiCharacterCount, plUInt32 &amp;ref_uiElementCount, const char *pStringEnd=plUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns both the number of characters and the number of bytes in a Utf8 string, until it hits zero or...</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:100</div></div>
<div class="ttc" id="aclasspl_string_utils_htm_af3e32769f27383ebd20d9cb1d581be91"><div class="ttname"><a href="../../de/d4d/classpl_string_utils.htm#af3e32769f27383ebd20d9cb1d581be91">plStringUtils::IsNullOrEmpty</a></div><div class="ttdeci">static constexpr bool IsNullOrEmpty(const T *pString)</div><div class="ttdoc">Returns true, if the given string is a nullptr pointer or a string that immediately terminates with a...</div></div>
<div class="ttc" id="aclasspl_unicode_utils_htm_a547a15418df6b0b46b539814fa426c69"><div class="ttname"><a href="../../d5/de1/classpl_unicode_utils.htm#a547a15418df6b0b46b539814fa426c69">plUnicodeUtils::GetMaxStringEnd</a></div><div class="ttdeci">static constexpr T * GetMaxStringEnd()</div><div class="ttdoc">[internal] Returns the max string end pointer for the given type</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:261</div></div>
<div class="ttc" id="aclasspl_unicode_utils_htm_a74ff648b078866556ae3b3fd1718a73b"><div class="ttname"><a href="../../d5/de1/classpl_unicode_utils.htm#a74ff648b078866556ae3b3fd1718a73b">plUnicodeUtils::ConvertUtf8ToUtf32</a></div><div class="ttdeci">static plUInt32 ConvertUtf8ToUtf32(const char *pFirstChar)</div><div class="ttdoc">Converts the UTF-8 character that starts at pFirstChar into a UTF-32 character.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:124</div></div>
<div class="ttc" id="aclasspl_unicode_utils_htm_acb19dff6fb330079cc79279a73d85d7b"><div class="ttname"><a href="../../d5/de1/classpl_unicode_utils.htm#acb19dff6fb330079cc79279a73d85d7b">plUnicodeUtils::IsUtf8ContinuationByte</a></div><div class="ttdeci">static bool IsUtf8ContinuationByte(char iByte)</div><div class="ttdoc">Checks whether the given byte is a byte in a UTF-8 multi-byte sequence.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:17</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_93f3a51c0220f51fc2c286c08d531e1e.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_fec2b21556ce2cf7e27237dfb4edc8a6.htm">Implementation</a></li><li class="navelem"><b>StringUtils_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
