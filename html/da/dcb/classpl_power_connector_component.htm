<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plPowerConnectorComponent Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('da/dcb/classpl_power_connector_component.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d4/d4d/classpl_power_connector_component-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plPowerConnectorComponent Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>This component is for propagating the flow of power in cables or fluid in pipes and determine whether it arrives at a receiver.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d2/d00/_power_connector_component_8h_source.htm">PowerConnectorComponent.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plPowerConnectorComponent:</div>
<div class="dyncontent">
<div class="center"><img src="../../d4/d56/classpl_power_connector_component__inherit__graph.png" border="0" usemap="#apl_power_connector_component_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_power_connector_component_inherit__map" id="apl_power_connector_component_inherit__map">
<area shape="rect" title="This component is for propagating the flow of power in cables or fluid in pipes and determine whether..." alt="" coords="5,229,198,256"/>
<area shape="rect" href="../../d1/d81/classpl_component.htm" title="Base class of all component types." alt="" coords="53,155,150,181"/>
<area shape="poly" title=" " alt="" coords="104,197,104,229,99,229,99,197"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="42,80,161,107"/>
<area shape="poly" title=" " alt="" coords="104,122,104,154,99,154,99,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="63,5,140,32"/>
<area shape="poly" title=" " alt="" coords="104,48,104,80,99,80,99,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abed9c927424d30e71a1ad0cb3a6d026c" id="r_abed9c927424d30e71a1ad0cb3a6d026c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abed9c927424d30e71a1ad0cb3a6d026c">SerializeComponent</a> (<a class="el" href="../../dc/dd6/classpl_world_writer.htm">plWorldWriter</a> &amp;inout_stream) const override</td></tr>
<tr class="memdesc:abed9c927424d30e71a1ad0cb3a6d026c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to save the current state of the component to the given stream.  <br /></td></tr>
<tr class="separator:abed9c927424d30e71a1ad0cb3a6d026c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58327be2c0b5690ce1267329de93d743" id="r_a58327be2c0b5690ce1267329de93d743"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a58327be2c0b5690ce1267329de93d743">DeserializeComponent</a> (<a class="el" href="../../d3/d63/classpl_world_reader.htm">plWorldReader</a> &amp;inout_stream) override</td></tr>
<tr class="memdesc:a58327be2c0b5690ce1267329de93d743"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to load the current state of the component from the given stream.  <br /></td></tr>
<tr class="separator:a58327be2c0b5690ce1267329de93d743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18037b980fad0d1de2507e27c6b7574e" id="r_a18037b980fad0d1de2507e27c6b7574e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18037b980fad0d1de2507e27c6b7574e">SetOutput</a> (plUInt16 value)</td></tr>
<tr class="memdesc:a18037b980fad0d1de2507e27c6b7574e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets how much output (of whatever kind) this connector produces.  <br /></td></tr>
<tr class="separator:a18037b980fad0d1de2507e27c6b7574e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae44b6e9592aa519a4fc53139dd7271cf" id="r_ae44b6e9592aa519a4fc53139dd7271cf"><td class="memItemLeft" align="right" valign="top"><a id="ae44b6e9592aa519a4fc53139dd7271cf" name="ae44b6e9592aa519a4fc53139dd7271cf"></a>
plUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>GetOutput</b> () const</td></tr>
<tr class="separator:ae44b6e9592aa519a4fc53139dd7271cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7999b3a44c171b664334d5764686928" id="r_aa7999b3a44c171b664334d5764686928"><td class="memItemLeft" align="right" valign="top"><a id="aa7999b3a44c171b664334d5764686928" name="aa7999b3a44c171b664334d5764686928"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBuddy</b> (<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> hObject)</td></tr>
<tr class="separator:aa7999b3a44c171b664334d5764686928"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29e2e1a576ef6de0514f869cb6b5b42c" id="r_a29e2e1a576ef6de0514f869cb6b5b42c"><td class="memItemLeft" align="right" valign="top"><a id="a29e2e1a576ef6de0514f869cb6b5b42c" name="a29e2e1a576ef6de0514f869cb6b5b42c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetConnectedTo</b> (<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> hObject)</td></tr>
<tr class="separator:a29e2e1a576ef6de0514f869cb6b5b42c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9386079a09bc7d50afbf9db7cc73b3ad" id="r_a9386079a09bc7d50afbf9db7cc73b3ad"><td class="memItemLeft" align="right" valign="top"><a id="a9386079a09bc7d50afbf9db7cc73b3ad" name="a9386079a09bc7d50afbf9db7cc73b3ad"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsConnected</b> () const</td></tr>
<tr class="memdesc:a9386079a09bc7d50afbf9db7cc73b3ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the connector is currently connected to another connector. <br /></td></tr>
<tr class="separator:a9386079a09bc7d50afbf9db7cc73b3ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab2555646ef99a40fcf2edd14e6f92de" id="r_aab2555646ef99a40fcf2edd14e6f92de"><td class="memItemLeft" align="right" valign="top"><a id="aab2555646ef99a40fcf2edd14e6f92de" name="aab2555646ef99a40fcf2edd14e6f92de"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsAttached</b> () const</td></tr>
<tr class="memdesc:aab2555646ef99a40fcf2edd14e6f92de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the connector is physically attached to another connector. <br /></td></tr>
<tr class="separator:aab2555646ef99a40fcf2edd14e6f92de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b2ab517abfda5ff3723a4d40f097183" id="r_a6b2ab517abfda5ff3723a4d40f097183"><td class="memItemLeft" align="right" valign="top"><a id="a6b2ab517abfda5ff3723a4d40f097183" name="a6b2ab517abfda5ff3723a4d40f097183"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Detach</b> ()</td></tr>
<tr class="separator:a6b2ab517abfda5ff3723a4d40f097183"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c706328ac3c6aa567202891d685f049" id="r_a1c706328ac3c6aa567202891d685f049"><td class="memItemLeft" align="right" valign="top"><a id="a1c706328ac3c6aa567202891d685f049" name="a1c706328ac3c6aa567202891d685f049"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Attach</b> (<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> hObject)</td></tr>
<tr class="separator:a1c706328ac3c6aa567202891d685f049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_component"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_component')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d1/d81/classpl_component.htm">plComponent</a></td></tr>
<tr class="memitem:a705a8aac8daabbdfd517f152c824457f inherit pub_methods_classpl_component" id="r_a705a8aac8daabbdfd517f152c824457f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#a705a8aac8daabbdfd517f152c824457f">SetActiveFlag</a> (bool bEnabled)</td></tr>
<tr class="memdesc:a705a8aac8daabbdfd517f152c824457f inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the active flag of the component, which affects its active state.  <br /></td></tr>
<tr class="separator:a705a8aac8daabbdfd517f152c824457f inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d63d25bf53a95bcde35a3f8988eef44 inherit pub_methods_classpl_component" id="r_a0d63d25bf53a95bcde35a3f8988eef44"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#a0d63d25bf53a95bcde35a3f8988eef44">GetActiveFlag</a> () const</td></tr>
<tr class="memdesc:a0d63d25bf53a95bcde35a3f8988eef44 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the 'active flag' is set on this component. Note that this does not mean that the component is also 'active'.  <br /></td></tr>
<tr class="separator:a0d63d25bf53a95bcde35a3f8988eef44 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a772ab4db4df4e64f224ebf5478bac3b7 inherit pub_methods_classpl_component" id="r_a772ab4db4df4e64f224ebf5478bac3b7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#a772ab4db4df4e64f224ebf5478bac3b7">IsActive</a> () const</td></tr>
<tr class="memdesc:a772ab4db4df4e64f224ebf5478bac3b7 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether this component is in an active state.  <br /></td></tr>
<tr class="separator:a772ab4db4df4e64f224ebf5478bac3b7 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addc29bc0b56aa0fdc0161238bf5dea7d inherit pub_methods_classpl_component" id="r_addc29bc0b56aa0fdc0161238bf5dea7d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#addc29bc0b56aa0fdc0161238bf5dea7d">IsActiveAndInitialized</a> () const</td></tr>
<tr class="memdesc:addc29bc0b56aa0fdc0161238bf5dea7d inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this component is active and initialized.  <br /></td></tr>
<tr class="separator:addc29bc0b56aa0fdc0161238bf5dea7d inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b52490701fd55597a91bbdc84761e08 inherit pub_methods_classpl_component" id="r_a4b52490701fd55597a91bbdc84761e08"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#a4b52490701fd55597a91bbdc84761e08">IsActiveAndSimulating</a> () const</td></tr>
<tr class="memdesc:a4b52490701fd55597a91bbdc84761e08 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the component is currently active and simulation has been started as well.  <br /></td></tr>
<tr class="separator:a4b52490701fd55597a91bbdc84761e08 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a903bd52296af50164853eaa2e33f452f inherit pub_methods_classpl_component" id="r_a903bd52296af50164853eaa2e33f452f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/db6/classpl_component_manager_base.htm">plComponentManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetOwningManager</b> ()</td></tr>
<tr class="memdesc:a903bd52296af50164853eaa2e33f452f inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding manager for this component. <br /></td></tr>
<tr class="separator:a903bd52296af50164853eaa2e33f452f inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f27c03873939fb7bc64301f5ddff71c inherit pub_methods_classpl_component" id="r_a8f27c03873939fb7bc64301f5ddff71c"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d2/db6/classpl_component_manager_base.htm">plComponentManagerBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetOwningManager</b> () const</td></tr>
<tr class="memdesc:a8f27c03873939fb7bc64301f5ddff71c inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding manager for this component. <br /></td></tr>
<tr class="separator:a8f27c03873939fb7bc64301f5ddff71c inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af49a8b898be5eceed4d8a15a9549a15f inherit pub_methods_classpl_component" id="r_af49a8b898be5eceed4d8a15a9549a15f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetOwner</b> ()</td></tr>
<tr class="memdesc:af49a8b898be5eceed4d8a15a9549a15f inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the owner game object if the component is attached to one or nullptr. <br /></td></tr>
<tr class="separator:af49a8b898be5eceed4d8a15a9549a15f inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ae8039cab69f5641013169d2090cfa7 inherit pub_methods_classpl_component" id="r_a1ae8039cab69f5641013169d2090cfa7"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetOwner</b> () const</td></tr>
<tr class="memdesc:a1ae8039cab69f5641013169d2090cfa7 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the owner game object if the component is attached to one or nullptr. <br /></td></tr>
<tr class="separator:a1ae8039cab69f5641013169d2090cfa7 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a905d6cd59c46d6257d07d0501ea40a52 inherit pub_methods_classpl_component" id="r_a905d6cd59c46d6257d07d0501ea40a52"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> ()</td></tr>
<tr class="memdesc:a905d6cd59c46d6257d07d0501ea40a52 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding world for this component. <br /></td></tr>
<tr class="separator:a905d6cd59c46d6257d07d0501ea40a52 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd9649421b35956c12e08f879d230540 inherit pub_methods_classpl_component" id="r_abd9649421b35956c12e08f879d230540"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> () const</td></tr>
<tr class="memdesc:abd9649421b35956c12e08f879d230540 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding world for this component. <br /></td></tr>
<tr class="separator:abd9649421b35956c12e08f879d230540 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a454f7bb0d554020851abacee2cf91ef6 inherit pub_methods_classpl_component" id="r_a454f7bb0d554020851abacee2cf91ef6"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetHandle</b> () const</td></tr>
<tr class="memdesc:a454f7bb0d554020851abacee2cf91ef6 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a handle to this component. <br /></td></tr>
<tr class="separator:a454f7bb0d554020851abacee2cf91ef6 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6bb9d0ffefb9d981d4453513b7a08d5 inherit pub_methods_classpl_component" id="r_ab6bb9d0ffefb9d981d4453513b7a08d5"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetUniqueID</b> () const</td></tr>
<tr class="memdesc:ab6bb9d0ffefb9d981d4453513b7a08d5 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the unique id for this component. <br /></td></tr>
<tr class="separator:ab6bb9d0ffefb9d981d4453513b7a08d5 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff1ea68fa1e675be5e8410c42e97d0b5 inherit pub_methods_classpl_component" id="r_aff1ea68fa1e675be5e8410c42e97d0b5"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetUniqueID</b> (plUInt32 uiUniqueID)</td></tr>
<tr class="memdesc:aff1ea68fa1e675be5e8410c42e97d0b5 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the unique id for this component. <br /></td></tr>
<tr class="separator:aff1ea68fa1e675be5e8410c42e97d0b5 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f63c363b76cfdf2f391d566af2f4569 inherit pub_methods_classpl_component" id="r_a7f63c363b76cfdf2f391d566af2f4569"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureInitialized</b> ()</td></tr>
<tr class="memdesc:a7f63c363b76cfdf2f391d566af2f4569 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures that the component is initialized. Must only be called from another component's Initialize callback. <br /></td></tr>
<tr class="separator:a7f63c363b76cfdf2f391d566af2f4569 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a134a5c4e9085fffb9a13fee1737d6faf inherit pub_methods_classpl_component" id="r_a134a5c4e9085fffb9a13fee1737d6faf"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureSimulationStarted</b> ()</td></tr>
<tr class="memdesc:a134a5c4e9085fffb9a13fee1737d6faf inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures that the OnSimulationStarted method has been called. Must only be called from another component's OnSimulationStarted callback. <br /></td></tr>
<tr class="separator:a134a5c4e9085fffb9a13fee1737d6faf inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72d16828092c9b039b3c4b765032f0c3 inherit pub_methods_classpl_component" id="r_a72d16828092c9b039b3c4b765032f0c3"><td class="memItemLeft" align="right" valign="top">
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>SendMessage</b> (<a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;ref_msg)</td></tr>
<tr class="memdesc:a72d16828092c9b039b3c4b765032f0c3 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message to this component. <br /></td></tr>
<tr class="separator:a72d16828092c9b039b3c4b765032f0c3 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a210388704ffa2b9490969018c4f39fee inherit pub_methods_classpl_component" id="r_a210388704ffa2b9490969018c4f39fee"><td class="memItemLeft" align="right" valign="top">
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>SendMessage</b> (<a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;ref_msg) const</td></tr>
<tr class="separator:a210388704ffa2b9490969018c4f39fee inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c1551daefaabde76dfbbb19f4059da9 inherit pub_methods_classpl_component" id="r_a3c1551daefaabde76dfbbb19f4059da9"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PostMessage</b> (const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg, <a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> delay=<a class="el" href="../../d1/df6/structpl_time.htm#a48cd39d05bfa55f8504cc3c056576c9e">plTime::MakeZero</a>(), <a class="el" href="../../d5/d06/structpl_object_msg_queue_type.htm#a17fe916fa4e797a7186aed5f0d795c30">plObjectMsgQueueType::Enum</a> queueType=<a class="el" href="../../d5/d06/structpl_object_msg_queue_type.htm#a17fe916fa4e797a7186aed5f0d795c30a2404b64a3633334367c032b2ea935c1a">plObjectMsgQueueType::NextFrame</a>) const</td></tr>
<tr class="memdesc:a3c1551daefaabde76dfbbb19f4059da9 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queues the message for the given phase. The message is processed after the given delay in the corresponding phase. <br /></td></tr>
<tr class="separator:a3c1551daefaabde76dfbbb19f4059da9 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa024f2be3bc18309d9b9ebb40c855588 inherit pub_methods_classpl_component" id="r_aa024f2be3bc18309d9b9ebb40c855588"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#aa024f2be3bc18309d9b9ebb40c855588">HandlesMessage</a> (const <a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg) const</td></tr>
<tr class="memdesc:aa024f2be3bc18309d9b9ebb40c855588 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the given Message is handled by this component.  <br /></td></tr>
<tr class="separator:aa024f2be3bc18309d9b9ebb40c855588 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade4780ed0d2872272c3cfe8029b358e0 inherit pub_methods_classpl_component" id="r_ade4780ed0d2872272c3cfe8029b358e0"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetUserFlag</b> (plUInt8 uiFlagIndex, bool bSet)</td></tr>
<tr class="memdesc:ade4780ed0d2872272c3cfe8029b358e0 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Be careful to check which flags may already be in use by base classes. <br /></td></tr>
<tr class="separator:ade4780ed0d2872272c3cfe8029b358e0 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7bd2c9eb96fd9a1c0ebdb26ca7ac9a8 inherit pub_methods_classpl_component" id="r_ac7bd2c9eb96fd9a1c0ebdb26ca7ac9a8"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>GetUserFlag</b> (plUInt8 uiFlagIndex) const</td></tr>
<tr class="memdesc:ac7bd2c9eb96fd9a1c0ebdb26ca7ac9a8 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Retrieves a custom flag. Index must be between 0 and 7. <br /></td></tr>
<tr class="separator:ac7bd2c9eb96fd9a1c0ebdb26ca7ac9a8 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8460d025c4558232c9dfe1fc5255fe44 inherit pub_methods_classpl_component" id="r_a8460d025c4558232c9dfe1fc5255fe44"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCreatedByPrefab</b> ()</td></tr>
<tr class="memdesc:a8460d025c4558232c9dfe1fc5255fe44 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds <a class="el" href="../../da/d5a/structpl_object_flags.htm#a204835e2b603739b341f847120a8cd7da00958bc56c4c626b7c5fa35887be39ad" title="Such flagged objects and components are ignored during scene export (see plWorldWriter) and will be r...">plObjectFlags::CreatedByPrefab</a> to the component. See the flag for details. <br /></td></tr>
<tr class="separator:a8460d025c4558232c9dfe1fc5255fe44 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35e955206b96cfb15cedbaaea9d61690 inherit pub_methods_classpl_component" id="r_a35e955206b96cfb15cedbaaea9d61690"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>WasCreatedByPrefab</b> () const</td></tr>
<tr class="memdesc:a35e955206b96cfb15cedbaaea9d61690 inherit pub_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the <a class="el" href="../../da/d5a/structpl_object_flags.htm#a204835e2b603739b341f847120a8cd7da00958bc56c4c626b7c5fa35887be39ad" title="Such flagged objects and components are ignored during scene export (see plWorldWriter) and will be r...">plObjectFlags::CreatedByPrefab</a> flag is set on this component. <br /></td></tr>
<tr class="separator:a35e955206b96cfb15cedbaaea9d61690 inherit pub_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a4e08cdb6f850072dfd0c268c177f2e44" id="r_a4e08cdb6f850072dfd0c268c177f2e44"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4e08cdb6f850072dfd0c268c177f2e44">OnDeactivated</a> () override</td></tr>
<tr class="memdesc:a4e08cdb6f850072dfd0c268c177f2e44"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called when the component gets deactivated.  <br /></td></tr>
<tr class="separator:a4e08cdb6f850072dfd0c268c177f2e44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afea4f1dbbbe6aa5b3c38fd1c868f8189" id="r_afea4f1dbbbe6aa5b3c38fd1c868f8189"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#afea4f1dbbbe6aa5b3c38fd1c868f8189">OnSimulationStarted</a> () override</td></tr>
<tr class="memdesc:afea4f1dbbbe6aa5b3c38fd1c868f8189"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called once for active components, at the start of the next world update, but only when the world is simulated.  <br /></td></tr>
<tr class="separator:afea4f1dbbbe6aa5b3c38fd1c868f8189"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8b4f01bd36d33c4b4f68602756593f5" id="r_aa8b4f01bd36d33c4b4f68602756593f5"><td class="memItemLeft" align="right" valign="top"><a id="aa8b4f01bd36d33c4b4f68602756593f5" name="aa8b4f01bd36d33c4b4f68602756593f5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBuddyReference</b> (const char *szReference)</td></tr>
<tr class="separator:aa8b4f01bd36d33c4b4f68602756593f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad78ea7802f1a2f61f75bbcf17260122b" id="r_ad78ea7802f1a2f61f75bbcf17260122b"><td class="memItemLeft" align="right" valign="top"><a id="ad78ea7802f1a2f61f75bbcf17260122b" name="ad78ea7802f1a2f61f75bbcf17260122b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetConnectedToReference</b> (const char *szReference)</td></tr>
<tr class="separator:ad78ea7802f1a2f61f75bbcf17260122b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4237ddf7c89ee93990b20919df8397d9" id="r_a4237ddf7c89ee93990b20919df8397d9"><td class="memItemLeft" align="right" valign="top"><a id="a4237ddf7c89ee93990b20919df8397d9" name="a4237ddf7c89ee93990b20919df8397d9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ConnectToSocket</b> (<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a> hSocket)</td></tr>
<tr class="separator:a4237ddf7c89ee93990b20919df8397d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28d90fde2084c7cd56abe712996faef2" id="r_a28d90fde2084c7cd56abe712996faef2"><td class="memItemLeft" align="right" valign="top"><a id="a28d90fde2084c7cd56abe712996faef2" name="a28d90fde2084c7cd56abe712996faef2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetInput</b> (plUInt16 value)</td></tr>
<tr class="separator:a28d90fde2084c7cd56abe712996faef2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff251221a1decff22133511260ef812" id="r_aeff251221a1decff22133511260ef812"><td class="memItemLeft" align="right" valign="top"><a id="aeff251221a1decff22133511260ef812" name="aeff251221a1decff22133511260ef812"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OnMsgSensorDetectedObjectsChanged</b> (<a class="el" href="../../de/da3/structpl_msg_sensor_detected_objects_changed.htm">plMsgSensorDetectedObjectsChanged</a> &amp;msg)</td></tr>
<tr class="memdesc:aeff251221a1decff22133511260ef812"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whenever a <a class="el" href="../../de/da3/structpl_msg_sensor_detected_objects_changed.htm">plMsgSensorDetectedObjectsChanged</a> arrives, the connector attempts to connect to the reported object. <br /></td></tr>
<tr class="separator:aeff251221a1decff22133511260ef812"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac60e7582bbf54846508b46079f41a07a" id="r_ac60e7582bbf54846508b46079f41a07a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac60e7582bbf54846508b46079f41a07a">OnMsgObjectGrabbed</a> (<a class="el" href="../../d1/da1/structpl_msg_object_grabbed.htm">plMsgObjectGrabbed</a> &amp;msg)</td></tr>
<tr class="memdesc:ac60e7582bbf54846508b46079f41a07a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whenever the connector gets grabbed, it detaches from its current connection.  <br /></td></tr>
<tr class="separator:ac60e7582bbf54846508b46079f41a07a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3fea9bf7b16a7500975641a51495839" id="r_ab3fea9bf7b16a7500975641a51495839"><td class="memItemLeft" align="right" valign="top"><a id="ab3fea9bf7b16a7500975641a51495839" name="ab3fea9bf7b16a7500975641a51495839"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InputChanged</b> (plUInt16 uiPrevInput, plUInt16 uiInput)</td></tr>
<tr class="separator:ab3fea9bf7b16a7500975641a51495839"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65cab9367f15079fceceefec341a6a04" id="r_a65cab9367f15079fceceefec341a6a04"><td class="memItemLeft" align="right" valign="top"><a id="a65cab9367f15079fceceefec341a6a04" name="a65cab9367f15079fceceefec341a6a04"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputChanged</b> (plUInt16 uiOutput)</td></tr>
<tr class="separator:a65cab9367f15079fceceefec341a6a04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_component"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_component')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d1/d81/classpl_component.htm">plComponent</a></td></tr>
<tr class="memitem:a87964bb877271bf63fd2f731f60bf938 inherit pro_methods_classpl_component" id="r_a87964bb877271bf63fd2f731f60bf938"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plComponent</b> ()</td></tr>
<tr class="memdesc:a87964bb877271bf63fd2f731f60bf938 inherit pro_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Keep the constructor private or protected in derived classes, so it cannot be called manually. <br /></td></tr>
<tr class="separator:a87964bb877271bf63fd2f731f60bf938 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1a1c29b47c514aa7935766621eadd89 inherit pro_methods_classpl_component" id="r_ab1a1c29b47c514aa7935766621eadd89"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsDynamic</b> () const</td></tr>
<tr class="memdesc:ab1a1c29b47c514aa7935766621eadd89 inherit pro_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this component is dynamic and thus can only be attached to dynamic game objects. <br /></td></tr>
<tr class="separator:ab1a1c29b47c514aa7935766621eadd89 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f27b35a04bc477bb323dcdf7241e5cf inherit pro_methods_classpl_component" id="r_a5f27b35a04bc477bb323dcdf7241e5cf"><td class="memItemLeft" align="right" valign="top">
virtual plWorldModuleTypeId&#160;</td><td class="memItemRight" valign="bottom"><b>GetTypeId</b> () const =0</td></tr>
<tr class="separator:a5f27b35a04bc477bb323dcdf7241e5cf inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afccee654244ac9b963753f0a59253988 inherit pro_methods_classpl_component" id="r_afccee654244ac9b963753f0a59253988"><td class="memItemLeft" align="right" valign="top">
virtual plComponentMode::Enum&#160;</td><td class="memItemRight" valign="bottom"><b>GetMode</b> () const =0</td></tr>
<tr class="separator:afccee654244ac9b963753f0a59253988 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dbf922683e28fab0c4c18cac736e7fc inherit pro_methods_classpl_component" id="r_a9dbf922683e28fab0c4c18cac736e7fc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#a9dbf922683e28fab0c4c18cac736e7fc">Initialize</a> ()</td></tr>
<tr class="memdesc:a9dbf922683e28fab0c4c18cac736e7fc inherit pro_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be overridden for basic initialization that depends on a valid hierarchy and position.  <br /></td></tr>
<tr class="separator:a9dbf922683e28fab0c4c18cac736e7fc inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a264bf60654aa3ca836e2040d639308a4 inherit pro_methods_classpl_component" id="r_a264bf60654aa3ca836e2040d639308a4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#a264bf60654aa3ca836e2040d639308a4">Deinitialize</a> ()</td></tr>
<tr class="memdesc:a264bf60654aa3ca836e2040d639308a4 inherit pro_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called before the component is destroyed. A derived type can override this method to do common de-initialization work.  <br /></td></tr>
<tr class="separator:a264bf60654aa3ca836e2040d639308a4 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd1bb5b4ed2d6e98a5e9aed2bcba7b98 inherit pro_methods_classpl_component" id="r_acd1bb5b4ed2d6e98a5e9aed2bcba7b98"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#acd1bb5b4ed2d6e98a5e9aed2bcba7b98">OnActivated</a> ()</td></tr>
<tr class="memdesc:acd1bb5b4ed2d6e98a5e9aed2bcba7b98 inherit pro_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called when the component gets activated.  <br /></td></tr>
<tr class="separator:acd1bb5b4ed2d6e98a5e9aed2bcba7b98 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad56bdbbefadfd6bde373e3a7920feb18 inherit pro_methods_classpl_component" id="r_ad56bdbbefadfd6bde373e3a7920feb18"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnableUnhandledMessageHandler</b> (bool enable)</td></tr>
<tr class="memdesc:ad56bdbbefadfd6bde373e3a7920feb18 inherit pro_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">By default disabled. Enable to have <a class="el" href="../../d1/d81/classpl_component.htm#a206f18497232d95227119c001e86d7a6" title="When EnableUnhandledMessageHandler() was activated, this is called for all messages for which there i...">OnUnhandledMessage()</a> called for every unhandled message. <br /></td></tr>
<tr class="separator:ad56bdbbefadfd6bde373e3a7920feb18 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a206f18497232d95227119c001e86d7a6 inherit pro_methods_classpl_component" id="r_a206f18497232d95227119c001e86d7a6"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#a206f18497232d95227119c001e86d7a6">OnUnhandledMessage</a> (<a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg, bool bWasPostedMsg)</td></tr>
<tr class="memdesc:a206f18497232d95227119c001e86d7a6 inherit pro_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">When <a class="el" href="../../d1/d81/classpl_component.htm#ad56bdbbefadfd6bde373e3a7920feb18" title="By default disabled. Enable to have OnUnhandledMessage() called for every unhandled message.">EnableUnhandledMessageHandler()</a> was activated, this is called for all messages for which there is no dedicated message handler.  <br /></td></tr>
<tr class="separator:a206f18497232d95227119c001e86d7a6 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b8104e109e76ac2a4042ef598db59e7 inherit pro_methods_classpl_component" id="r_a2b8104e109e76ac2a4042ef598db59e7"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d81/classpl_component.htm#a2b8104e109e76ac2a4042ef598db59e7">OnUnhandledMessage</a> (<a class="el" href="../../d0/dde/classpl_message.htm">plMessage</a> &amp;msg, bool bWasPostedMsg) const</td></tr>
<tr class="memdesc:a2b8104e109e76ac2a4042ef598db59e7 inherit pro_methods_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">When <a class="el" href="../../d1/d81/classpl_component.htm#ad56bdbbefadfd6bde373e3a7920feb18" title="By default disabled. Enable to have OnUnhandledMessage() called for every unhandled message.">EnableUnhandledMessageHandler()</a> was activated, this is called for all messages for which there is no dedicated message handler.  <br /></td></tr>
<tr class="separator:a2b8104e109e76ac2a4042ef598db59e7 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6b8f74ace1a1f0f20e016d0ad26c9ee inherit pro_methods_classpl_component" id="r_ad6b8f74ace1a1f0f20e016d0ad26c9ee"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInitialized</b> () const</td></tr>
<tr class="separator:ad6b8f74ace1a1f0f20e016d0ad26c9ee inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89723afe5caad6e5eebe586ff70b394a inherit pro_methods_classpl_component" id="r_a89723afe5caad6e5eebe586ff70b394a"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInitializing</b> () const</td></tr>
<tr class="separator:a89723afe5caad6e5eebe586ff70b394a inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ae1b81425640d8a281da5831e145334 inherit pro_methods_classpl_component" id="r_a4ae1b81425640d8a281da5831e145334"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsSimulationStarted</b> () const</td></tr>
<tr class="separator:a4ae1b81425640d8a281da5831e145334 inherit pro_methods_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ab4ffae52ed04449fd644f70847e5cdc7" id="r_ab4ffae52ed04449fd644f70847e5cdc7"><td class="memItemLeft" align="right" valign="top"><a id="ab4ffae52ed04449fd644f70847e5cdc7" name="ab4ffae52ed04449fd644f70847e5cdc7"></a>
<a class="el" href="../../d1/df6/structpl_time.htm">plTime</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_DetachTime</b></td></tr>
<tr class="separator:ab4ffae52ed04449fd644f70847e5cdc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47df272fbe83f86806adf5513408e32a" id="r_a47df272fbe83f86806adf5513408e32a"><td class="memItemLeft" align="right" valign="top"><a id="a47df272fbe83f86806adf5513408e32a" name="a47df272fbe83f86806adf5513408e32a"></a>
<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hAttachPoint</b></td></tr>
<tr class="separator:a47df272fbe83f86806adf5513408e32a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5921f6110e0c0417ca3cfb4e06eab28b" id="r_a5921f6110e0c0417ca3cfb4e06eab28b"><td class="memItemLeft" align="right" valign="top"><a id="a5921f6110e0c0417ca3cfb4e06eab28b" name="a5921f6110e0c0417ca3cfb4e06eab28b"></a>
<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hGrabbedBy</b></td></tr>
<tr class="separator:a5921f6110e0c0417ca3cfb4e06eab28b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3cbc4cf57b4c4ebd168530fca2cff24" id="r_af3cbc4cf57b4c4ebd168530fca2cff24"><td class="memItemLeft" align="right" valign="top"><a id="af3cbc4cf57b4c4ebd168530fca2cff24" name="af3cbc4cf57b4c4ebd168530fca2cff24"></a>
plUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiOutput</b> = 0</td></tr>
<tr class="separator:af3cbc4cf57b4c4ebd168530fca2cff24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a640a59618ca6e70f6022561e31446872" id="r_a640a59618ca6e70f6022561e31446872"><td class="memItemLeft" align="right" valign="top"><a id="a640a59618ca6e70f6022561e31446872" name="a640a59618ca6e70f6022561e31446872"></a>
plUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiInput</b> = 0</td></tr>
<tr class="separator:a640a59618ca6e70f6022561e31446872"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd319b6887a68591b3aafee1db0b6938" id="r_afd319b6887a68591b3aafee1db0b6938"><td class="memItemLeft" align="right" valign="top"><a id="afd319b6887a68591b3aafee1db0b6938" name="afd319b6887a68591b3aafee1db0b6938"></a>
<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hBuddy</b></td></tr>
<tr class="separator:afd319b6887a68591b3aafee1db0b6938"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77a2036b207cc1c40ad4f7bbf20a656e" id="r_a77a2036b207cc1c40ad4f7bbf20a656e"><td class="memItemLeft" align="right" valign="top"><a id="a77a2036b207cc1c40ad4f7bbf20a656e" name="a77a2036b207cc1c40ad4f7bbf20a656e"></a>
<a class="el" href="../../d2/d49/structpl_game_object_handle.htm">plGameObjectHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hConnectedTo</b></td></tr>
<tr class="separator:a77a2036b207cc1c40ad4f7bbf20a656e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_component"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_component')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d1/d81/classpl_component.htm">plComponent</a></td></tr>
<tr class="memitem:a007b5d682ee89be0b136dd97b90c557d inherit pro_attribs_classpl_component" id="r_a007b5d682ee89be0b136dd97b90c557d"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pMessageDispatchType</b> = nullptr</td></tr>
<tr class="memdesc:a007b5d682ee89be0b136dd97b90c557d inherit pro_attribs_classpl_component"><td class="mdescLeft">&#160;</td><td class="mdescRight">Messages will be dispatched to this type. Default is what GetDynamicRTTI() returns, can be redirected if necessary. <br /></td></tr>
<tr class="separator:a007b5d682ee89be0b136dd97b90c557d inherit pro_attribs_classpl_component"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This component is for propagating the flow of power in cables or fluid in pipes and determine whether it arrives at a receiver. </p>
<p>This component is meant for building puzzles where you have to connect the right objects to power something. It uses physics constraints to physically connect two pieces and have them snap together. It also reacts to being grabbed (<a class="el" href="../../d1/da1/structpl_msg_object_grabbed.htm" title="Sent by components such as plJoltGrabObjectComponent to indicate that the object has been grabbed or ...">plMsgObjectGrabbed</a>) to disconnect.</p>
<p>On its own this component doesn't do anything. However, it can be set to be 'connected' to another object with an <a class="el" href="../../da/dcb/classpl_power_connector_component.htm" title="This component is for propagating the flow of power in cables or fluid in pipes and determine whether...">plPowerConnectorComponent</a>, in which case it would propagate its own 'output' as the 'input' on that component. If its output is non-zero and thus the input on the connected component is also non-zero, the other component will post <a class="el" href="../../da/d81/classpl_event_msg_set_power_input.htm" title="This event is posted by plPowerConnectorComponent whenever the power input on a connector changes.">plEventMsgSetPowerInput</a>, to which a script can react and for example switch a light on.</p>
<p>Connectors are bi-directional ("full duplex"), so they can have both an input and an output and the two values are independent of each other. That means power can flow in both or just one direction and therefore it is not important with which end a cable gets connected to something.</p>
<p>To enable building things like cables, each <a class="el" href="../../da/dcb/classpl_power_connector_component.htm" title="This component is for propagating the flow of power in cables or fluid in pipes and determine whether...">plPowerConnectorComponent</a> can also have a 'buddy', which is an object on which another <a class="el" href="../../da/dcb/classpl_power_connector_component.htm" title="This component is for propagating the flow of power in cables or fluid in pipes and determine whether...">plPowerConnectorComponent</a> exists. If a connector gets input, that input value is propagated to the buddy as its output value. Thus when a cable gets input on one end, the other end (if it is properly set as the buddy) will output that value. So if that end is also 'connected' to something, the output will be further propagated as the 'input' on that object. This can go through many hops until the value reaches the final connector (if you build a circular chain it will stop when it reaches the starting point).</p>
<p>The component automatically connects to another object when it receives a <a class="el" href="../../de/da3/structpl_msg_sensor_detected_objects_changed.htm">plMsgSensorDetectedObjectsChanged</a>, so it should have a child object with a sensor. The sensor should use a dedicated spatial category to search for markers where it can connect.</p>
<p>To have a sensor (or other effects) only active when the connector is grabbed, put them in a child object with the name "ActiveWhenGrabbed" and disable the object by default. The parent <a class="el" href="../../da/dcb/classpl_power_connector_component.htm" title="This component is for propagating the flow of power in cables or fluid in pipes and determine whether...">plPowerConnectorComponent</a> will toggle the active flag of that object when it gets grabbed or let go.</p>
<p>To build a cable, don't forget to set each end as the 'buddy' of the other end. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a58327be2c0b5690ce1267329de93d743" name="a58327be2c0b5690ce1267329de93d743"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a58327be2c0b5690ce1267329de93d743">&#9670;&#160;</a></span>DeserializeComponent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPowerConnectorComponent::DeserializeComponent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/d63/classpl_world_reader.htm">plWorldReader</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>inout_stream</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to load the current state of the component from the given stream. </p>
<p>The active state will be automatically serialized. The 'initialized' state is not serialized, all components will be initialized after creation, even if they were already in an initialized state when they were serialized. </p>

<p>Reimplemented from <a class="el" href="../../d1/d81/classpl_component.htm#a6c7681d97d6c018c397f475eb95117e7">plComponent</a>.</p>

</div>
</div>
<a id="a4e08cdb6f850072dfd0c268c177f2e44" name="a4e08cdb6f850072dfd0c268c177f2e44"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e08cdb6f850072dfd0c268c177f2e44">&#9670;&#160;</a></span>OnDeactivated()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPowerConnectorComponent::OnDeactivated </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called when the component gets deactivated. </p>
<p>Upon destruction, a component that is active first gets deactivated. Therefore <a class="el" href="#a4e08cdb6f850072dfd0c268c177f2e44" title="This method is called when the component gets deactivated.">OnDeactivated()</a> should be used for typical game code cleanup.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d1/d81/classpl_component.htm#acd1bb5b4ed2d6e98a5e9aed2bcba7b98" title="This method is called when the component gets activated.">OnActivated()</a>, <a class="el" href="#a4e08cdb6f850072dfd0c268c177f2e44" title="This method is called when the component gets deactivated.">OnDeactivated()</a>, <a class="el" href="../../d1/d81/classpl_component.htm#a9dbf922683e28fab0c4c18cac736e7fc" title="Can be overridden for basic initialization that depends on a valid hierarchy and position.">Initialize()</a>, <a class="el" href="../../d1/d81/classpl_component.htm#a264bf60654aa3ca836e2040d639308a4" title="This method is called before the component is destroyed. A derived type can override this method to d...">Deinitialize()</a>, <a class="el" href="#afea4f1dbbbe6aa5b3c38fd1c868f8189" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="../../d1/d81/classpl_component.htm#a1d53d5dc2dd73dc637a7c73d0fbc7ed0">plComponent</a>.</p>

</div>
</div>
<a id="ac60e7582bbf54846508b46079f41a07a" name="ac60e7582bbf54846508b46079f41a07a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac60e7582bbf54846508b46079f41a07a">&#9670;&#160;</a></span>OnMsgObjectGrabbed()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPowerConnectorComponent::OnMsgObjectGrabbed </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d1/da1/structpl_msg_object_grabbed.htm">plMsgObjectGrabbed</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>msg</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Whenever the connector gets grabbed, it detaches from its current connection. </p>
<p>It also toggles the active flag of the child object with the name "ActiveWhenGrabbed". So to only have it connect to other connectors when grabbed, put the sensor component into such a child object. </p>

</div>
</div>
<a id="afea4f1dbbbe6aa5b3c38fd1c868f8189" name="afea4f1dbbbe6aa5b3c38fd1c868f8189"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afea4f1dbbbe6aa5b3c38fd1c868f8189">&#9670;&#160;</a></span>OnSimulationStarted()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPowerConnectorComponent::OnSimulationStarted </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called once for active components, at the start of the next world update, but only when the world is simulated. </p>
<p>This is the one preferred method to setup typical game logic. In a pure game environment there is no practical difference between <a class="el" href="../../d1/d81/classpl_component.htm#acd1bb5b4ed2d6e98a5e9aed2bcba7b98" title="This method is called when the component gets activated.">OnActivated()</a> and <a class="el" href="#afea4f1dbbbe6aa5b3c38fd1c868f8189" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a>, as <a class="el" href="#afea4f1dbbbe6aa5b3c38fd1c868f8189" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> will be called right after <a class="el" href="../../d1/d81/classpl_component.htm#acd1bb5b4ed2d6e98a5e9aed2bcba7b98" title="This method is called when the component gets activated.">OnActivated()</a>.</p>
<p>However, when a scene is open inside the editor, there is an important difference: <a class="el" href="../../d1/d81/classpl_component.htm#acd1bb5b4ed2d6e98a5e9aed2bcba7b98" title="This method is called when the component gets activated.">OnActivated()</a> is called once the component was created. <a class="el" href="#afea4f1dbbbe6aa5b3c38fd1c868f8189" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> is only called once the game simulation is started inside the editor. As an example, if a component starts a sound in <a class="el" href="../../d1/d81/classpl_component.htm#acd1bb5b4ed2d6e98a5e9aed2bcba7b98" title="This method is called when the component gets activated.">OnActivated()</a>, that sound will play right after the scene has been loaded into the editor. If instead the sound gets started in <a class="el" href="#afea4f1dbbbe6aa5b3c38fd1c868f8189" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a>, it will only play once the user starts the game mode inside the editor.</p>
<p>Additionally, <a class="el" href="#afea4f1dbbbe6aa5b3c38fd1c868f8189" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> is only ever executed once on a component, even if the <a class="el" href="../../d2/d12/classpl_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">plWorld</a> pauses and resumes world simulation multiple times. Thus components that should only execute a thing exactly once, will work correctly. In contrast <a class="el" href="../../d1/d81/classpl_component.htm#acd1bb5b4ed2d6e98a5e9aed2bcba7b98" title="This method is called when the component gets activated.">OnActivated()</a> and <a class="el" href="#a4e08cdb6f850072dfd0c268c177f2e44" title="This method is called when the component gets deactivated.">OnDeactivated()</a> will be executed every time the component's active state is toggled, which could re-execute the same behavior multiple times.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d1/d81/classpl_component.htm#acd1bb5b4ed2d6e98a5e9aed2bcba7b98" title="This method is called when the component gets activated.">OnActivated()</a>, <a class="el" href="#a4e08cdb6f850072dfd0c268c177f2e44" title="This method is called when the component gets deactivated.">OnDeactivated()</a>, <a class="el" href="../../d1/d81/classpl_component.htm#a9dbf922683e28fab0c4c18cac736e7fc" title="Can be overridden for basic initialization that depends on a valid hierarchy and position.">Initialize()</a>, <a class="el" href="../../d1/d81/classpl_component.htm#a264bf60654aa3ca836e2040d639308a4" title="This method is called before the component is destroyed. A derived type can override this method to d...">Deinitialize()</a>, <a class="el" href="#afea4f1dbbbe6aa5b3c38fd1c868f8189" title="This method is called once for active components, at the start of the next world update,...">OnSimulationStarted()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="../../d1/d81/classpl_component.htm#a3d4a93e5a11265d7694238598b274959">plComponent</a>.</p>

</div>
</div>
<a id="abed9c927424d30e71a1ad0cb3a6d026c" name="abed9c927424d30e71a1ad0cb3a6d026c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abed9c927424d30e71a1ad0cb3a6d026c">&#9670;&#160;</a></span>SerializeComponent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plPowerConnectorComponent::SerializeComponent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dd6/classpl_world_writer.htm">plWorldWriter</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>inout_stream</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to save the current state of the component to the given stream. </p>

<p>Reimplemented from <a class="el" href="../../d1/d81/classpl_component.htm#a0c8a6e95bf5d804fdcef888e6c5c971b">plComponent</a>.</p>

</div>
</div>
<a id="a18037b980fad0d1de2507e27c6b7574e" name="a18037b980fad0d1de2507e27c6b7574e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18037b980fad0d1de2507e27c6b7574e">&#9670;&#160;</a></span>SetOutput()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plPowerConnectorComponent::SetOutput </td>
          <td>(</td>
          <td class="paramtype">plUInt16</td>          <td class="paramname"><span class="paramname"><em>value</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets how much output (of whatever kind) this connector produces. </p>
<p>If this is zero, it is either a receiver, or a pass-through connector, e.g. a cable, or just currently inactive. If this is non-zero, it acts like a source, and when another connector gets connected to it, that output will be propagated through the connection/buddy chain. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/EnginePlugins/GameComponentsPlugin/Gameplay/<a class="el" href="../../d2/d00/_power_connector_component_8h_source.htm">PowerConnectorComponent.h</a></li>
<li>Code/EnginePlugins/GameComponentsPlugin/Gameplay/Implementation/<b>PowerConnectorComponent.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/dcb/classpl_power_connector_component.htm">plPowerConnectorComponent</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
