<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/Math/Math.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('da/db8/_math_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Math.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Math/Angle.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Math/Constants.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Math/Declarations.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">namespace </span><a class="code hl_namespace" href="../../d1/dbc/namespacepl_math.htm">plMath</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> IsNaN(Type value)</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  {</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  }</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> <span class="keywordtype">bool</span> IsFinite(Type value)</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  {</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  }</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a3c10f39a9283445ab6001096104bb153">Sin</a>(<a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> a); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ac9493ece7e4354a37df97ed08bb26eac">Cos</a>(<a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> a); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9642f34bcdd7dae2a75a3b5cd9f944fc">Tan</a>(<a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> a); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  [[nodiscard]] <a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a16c2c579293ffd5ccb95e7c1521560d7">ASin</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  [[nodiscard]] <a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a319a0edc79181e926ee0f6b451407bb6">ACos</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  [[nodiscard]] <a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a236fdd2f75e9643f8c318023a20ee05e">ATan</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  [[nodiscard]] <a class="code hl_class" href="../../d4/dfd/classpl_angle.htm">plAngle</a> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a4d360762da80a2b08e7e3de053d1d839">ATan2</a>(<span class="keywordtype">float</span> y, <span class="keywordtype">float</span> x); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  [[nodiscard]] <span class="keywordtype">float</span> Exp(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  [[nodiscard]] <span class="keywordtype">float</span> Ln(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  [[nodiscard]] <span class="keywordtype">float</span> Log2(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ada25e7495cb20e9d0d07f58c735a9115">Log2i</a>(plUInt32 uiVal); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  [[nodiscard]] <span class="keywordtype">float</span> Log10(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  [[nodiscard]] <span class="keywordtype">float</span> Log(<span class="keywordtype">float</span> fBase, <span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  [[nodiscard]] <span class="keywordtype">float</span> Pow2(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  [[nodiscard]] <span class="keywordtype">float</span> Pow(<span class="keywordtype">float</span> fBase, <span class="keywordtype">float</span> fExp); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="../../d1/dbc/namespacepl_math.htm#a65512a9459c3eeea3350b71c5cb61aa4">   77</a></span>  [[nodiscard]] <span class="keyword">constexpr</span> plInt32 Pow2(plInt32 i); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="../../d1/dbc/namespacepl_math.htm#a666d662a4dbf416f9543d4a21ab501b9">   80</a></span>  [[nodiscard]] plInt32 Pow(plInt32 iBase, plInt32 iExp); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a25ddcfae0bd88d04d015b266a236065f">Square</a>(T f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#aae02023b382e3990f9ebf91f40473310">Sqrt</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  [[nodiscard]] <span class="keywordtype">double</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#aae02023b382e3990f9ebf91f40473310">Sqrt</a>(<span class="keywordtype">double</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  [[nodiscard]] <span class="keywordtype">float</span> Root(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fNthRoot); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ab3b08ed7dc553561de9b2d8635cc44db">Sign</a>(T f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#abd0ef20e6710b240c9833acdf6f2f8d7">Abs</a>(T f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">Min</a>(T f1, T f2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">Min</a>(T f1, T f2, ARGS... f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ad724a3f51a1faa9bcc3e6a53fd6b9a4f">Max</a>(T f1, T f2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">Min</a>(T f1, T f2, ARGS... f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a5e64f45bae1fb8ddbe02e2f5bdf18767">Clamp</a>(T value, T min_val, T max_val); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#acf3240988b12047baffaee141fc8cffb">Saturate</a>(T value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  [[nodiscard]] <span class="keywordtype">float</span> Floor(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  [[nodiscard]] <span class="keywordtype">float</span> Ceil(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a104680f37ede9a20239d5aaf56e41eb3">RoundDown</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  [[nodiscard]] <span class="keywordtype">double</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a104680f37ede9a20239d5aaf56e41eb3">RoundDown</a>(<span class="keywordtype">double</span> f, <span class="keywordtype">double</span> fMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a5e8f52b1accac321d1f66662a07edc5e">RoundUp</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  [[nodiscard]] <span class="keywordtype">double</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a5e8f52b1accac321d1f66662a07edc5e">RoundUp</a>(<span class="keywordtype">double</span> f, <span class="keywordtype">double</span> fMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  [[nodiscard]] Type <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ab7dd8470053b49d34d72fe1eb0d2ab61">Trunc</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  [[nodiscard]] <span class="keyword">constexpr</span> plInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a14dcb5c08839e1246369028c1547434f">FloatToInt</a>(<span class="keywordtype">float</span> value);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="comment">// There is a compiler bug in VS 2019 targeting 32-bit that causes an internal compiler error when casting double to long long.</span></div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="comment">// FloatToInt(double) is not available on these version of the MSVC compiler.</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span><span class="preprocessor">#if PL_DISABLED(PL_PLATFORM_ARCH_X86) || (_MSC_VER &lt;= 1916)</span></div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  [[nodiscard]] <span class="keyword">constexpr</span> plInt64 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a14dcb5c08839e1246369028c1547434f">FloatToInt</a>(<span class="keywordtype">double</span> value);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a376dececaac1fe979ae20f82fec9018d">Round</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  [[nodiscard]] <span class="keywordtype">double</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a376dececaac1fe979ae20f82fec9018d">Round</a>(<span class="keywordtype">double</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a33330db7ba8967ecd07361e20e7c2b1c">RoundToMultiple</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple);</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  [[nodiscard]] <span class="keywordtype">double</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a33330db7ba8967ecd07361e20e7c2b1c">RoundToMultiple</a>(<span class="keywordtype">double</span> f, <span class="keywordtype">double</span> fMultiple);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  [[nodiscard]] Type <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a56d77e019b9b7dcc6c27ef6a5714851d">Fraction</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  [[nodiscard]] <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a884e26ab20e8aec516126913215a7e18">Mod</a>(<span class="keywordtype">float</span> value, <span class="keywordtype">float</span> fDiv); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  [[nodiscard]] <span class="keywordtype">double</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a884e26ab20e8aec516126913215a7e18">Mod</a>(<span class="keywordtype">double</span> f, <span class="keywordtype">double</span> fDiv); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  [[nodiscard]] <span class="keyword">constexpr</span> Type <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a5e363339c8dfc76221563df0bf2302b3">Invert</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  [[nodiscard]] <span class="keyword">constexpr</span> plInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a5e8f52b1accac321d1f66662a07edc5e">RoundUp</a>(plInt32 value, plUInt16 uiMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  [[nodiscard]] <span class="keyword">constexpr</span> plInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a104680f37ede9a20239d5aaf56e41eb3">RoundDown</a>(plInt32 value, plUInt16 uiMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  [[nodiscard]] <span class="keyword">constexpr</span> plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a5e8f52b1accac321d1f66662a07edc5e">RoundUp</a>(plUInt32 value, plUInt16 uiMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  [[nodiscard]] <span class="keyword">constexpr</span> plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a104680f37ede9a20239d5aaf56e41eb3">RoundDown</a>(plUInt32 value, plUInt16 uiMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a71f396768b6397dc004eefd47302b79f">IsOdd</a>(plInt32 i); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a72a91c11fb31412fdc5cc4d8b474e548">IsEven</a>(plInt32 i); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a77a11d9b4e7665621cad426a72f7dca0">FirstBitLow</a>(plUInt32 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a77a11d9b4e7665621cad426a72f7dca0">FirstBitLow</a>(plUInt64 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a4daf0d43b398a7ff4083833b579bb2fc">FirstBitHigh</a>(plUInt32 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a4daf0d43b398a7ff4083833b579bb2fc">FirstBitHigh</a>(plUInt64 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#add691d49a4f270dc22fb918d8ba1ca4f">CountTrailingZeros</a>(plUInt32 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#add691d49a4f270dc22fb918d8ba1ca4f">CountTrailingZeros</a>(plUInt64 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#aa6141bbf80704bdc6ba5a0df73d6e25d">CountLeadingZeros</a>(plUInt32 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span> </div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9c8b8683756df9047c6a5e4a44f4752f">CountBits</a>(plUInt32 value);</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>  [[nodiscard]] plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9c8b8683756df9047c6a5e4a44f4752f">CountBits</a>(plUInt64 value);</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>  [[nodiscard]] Type <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#aa3bba00206eaca76b20bb1e131f27138">Bitmask_LowN</a>(plUInt32 uiNumBitsToSet);</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span> </div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>  [[nodiscard]] Type <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ae9a3bfad84627afef5616665eecd65e4">Bitmask_HighN</a>(plUInt32 uiNumBitsToSet);</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#abcac254119b9da320b0617b93e40ec9f">Swap</a>(T&amp; ref_f1, T&amp; ref_f2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  [[nodiscard]] T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a2898309268211acdbebb498a1f03ce01">Lerp</a>(T f1, T f2, <span class="keywordtype">float</span> fFactor); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>  [[nodiscard]] T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a2898309268211acdbebb498a1f03ce01">Lerp</a>(T f1, T f2, <span class="keywordtype">double</span> fFactor); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a1b11d14648656b3bfb3529db712169af">Unlerp</a>(T fMin, T fMax, T fValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>  [[nodiscard]] <span class="keyword">constexpr</span> T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#afe93e6c96ee4da7fff1ddcdbc81bff31">Step</a>(T value, T edge); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  [[nodiscard]] Type <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ae27db066f56ce11ea3b96f8cede4a867">SmoothStep</a>(Type value, Type edge1, Type edge2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  [[nodiscard]] Type <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a8e7571124eabadd0fa57cffa70b00172">SmootherStep</a>(Type value, Type edge1, Type edge2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span> </div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>  [[nodiscard]] PL_FOUNDATION_DLL <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a4cab8eac68ab0cf7f621d8beefbee6d6">IsPowerOf</a>(plInt32 value, plInt32 iBase); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ae727cfa25d979e734284dc70e1ebca60">IsPowerOf2</a>(plInt32 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span> </div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ae727cfa25d979e734284dc70e1ebca60">IsPowerOf2</a>(plUInt32 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span> </div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ae727cfa25d979e734284dc70e1ebca60">IsPowerOf2</a>(plUInt64 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span> </div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>  [[nodiscard]] PL_FOUNDATION_DLL plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9250e48f91873561d8126090d7b66ee9">PowerOfTwo_Floor</a>(plUInt32 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>  [[nodiscard]] PL_FOUNDATION_DLL plUInt64 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9250e48f91873561d8126090d7b66ee9">PowerOfTwo_Floor</a>(plUInt64 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>  [[nodiscard]] PL_FOUNDATION_DLL plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ae161b5862a17d95f7cc0011351ffe798">PowerOfTwo_Ceil</a>(plUInt32 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span> </div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>  [[nodiscard]] PL_FOUNDATION_DLL plUInt64 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ae161b5862a17d95f7cc0011351ffe798">PowerOfTwo_Ceil</a>(plUInt64 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>  [[nodiscard]] PL_FOUNDATION_DLL plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a2525000156b1f0d071e7cb46808a94e0">GreatestCommonDivisor</a>(plUInt32 a, plUInt32 b); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span> </div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ab5afdf4907a0a61a687be8a9e1e1f81c">IsEqual</a>(Type lhs, Type rhs, Type fEpsilon);</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a8422d1228952cb6d6b061ecb513569ac">IsInRange</a>(T value, T minVal, T maxVal); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span> </div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>  [[nodiscard]] <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ab41c015ef2ef7ea68f915082545755ae">IsZero</a>(Type f, Type fEpsilon); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span> </div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>  [[nodiscard]] plUInt8 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a6d59d967853711101adff06ccb2e0dd5">ColorFloatToByte</a>(<span class="keywordtype">float</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span> </div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>  [[nodiscard]] plUInt16 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a8859fe4bf482080605dec864a470da45">ColorFloatToShort</a>(<span class="keywordtype">float</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span> </div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>  [[nodiscard]] plInt8 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a0805dbc625c3f1ca235f566b20826dba">ColorFloatToSignedByte</a>(<span class="keywordtype">float</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span> </div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>  [[nodiscard]] plInt16 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a8147d5ad32b1503e1393c7258e90c3a8">ColorFloatToSignedShort</a>(<span class="keywordtype">float</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span> </div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a8b7409f69c51e9b37fd1af282dba5a5f">ColorByteToFloat</a>(plUInt8 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span> </div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#aed0425c9e1f58761cf91e3315d33e139">ColorShortToFloat</a>(plUInt16 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a7e0493d1a4477c91c0cfc260b348dc86">ColorSignedByteToFloat</a>(plInt8 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span> </div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a8d8fd6ec30ad540237d46f0dc619b261">ColorSignedShortToFloat</a>(plInt16 value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span> </div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> T2&gt;</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>  [[nodiscard]] T <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a1c1d1ad70715890caa923b8c1df701d3">EvaluateBezierCurve</a>(T2 t, <span class="keyword">const</span> T&amp; startPoint, <span class="keyword">const</span> T&amp; controlPoint1, <span class="keyword">const</span> T&amp; controlPoint2, <span class="keyword">const</span> T&amp; endPoint);</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span> </div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  PL_FOUNDATION_DLL <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a03c7d2cff6b57d914e5bf082bf8fad98">TryMultiply32</a>(plUInt32&amp; out_uiResult, plUInt32 a, plUInt32 b, plUInt32 c = 1, plUInt32 d = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span> </div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>  [[nodiscard]] PL_FOUNDATION_DLL plUInt32 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#af6a0264a015d3aa5c4fe8cfdafb0791a">SafeMultiply32</a>(plUInt32 a, plUInt32 b, plUInt32 c = 1, plUInt32 d = 1);</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span> </div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>  PL_FOUNDATION_DLL <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a5117cb9b4940f721a3446111953cd43d">TryMultiply64</a>(plUInt64&amp; out_uiResult, plUInt64 a, plUInt64 b, plUInt64 c = 1, plUInt64 d = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span> </div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>  [[nodiscard]] PL_FOUNDATION_DLL plUInt64 <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a00334dd03f3d352cf3b0a617e0a40016">SafeMultiply64</a>(plUInt64 a, plUInt64 b, plUInt64 c = 1, plUInt64 d = 1);</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span> </div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ac4d40297dae8b10147595d88400a785e">TryConvertToSizeT</a>(<span class="keywordtype">size_t</span>&amp; out_uiResult, plUInt64 uiValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span> </div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno"><a class="line" href="../../d1/dbc/namespacepl_math.htm#a80257a94c132df487cfdc93fefa72644">  383</a></span>  [[nodiscard]] PL_FOUNDATION_DLL <span class="keywordtype">size_t</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a80257a94c132df487cfdc93fefa72644">SafeConvertToSizeT</a>(plUInt64 uiValue);</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span> </div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>  [[nodiscard]] PL_FOUNDATION_DLL <span class="keywordtype">float</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a039e0900027555ec0dc4aeb59d47da4e">ReplaceNaN</a>(<span class="keywordtype">float</span> fValue, <span class="keywordtype">float</span> fFallback); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span> </div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>  [[nodiscard]] PL_FOUNDATION_DLL <span class="keywordtype">double</span> <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a039e0900027555ec0dc4aeb59d47da4e">ReplaceNaN</a>(<span class="keywordtype">double</span> fValue, <span class="keywordtype">double</span> fFallback); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span> </div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>} <span class="comment">// namespace plMath</span></div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span> </div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/MathDouble_inl.h&gt;</span></div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/MathFixedPoint_inl.h&gt;</span></div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/MathFloat_inl.h&gt;</span></div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/MathInt32_inl.h&gt;</span></div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/Math_inl.h&gt;</span></div>
<div class="ttc" id="aclasspl_angle_htm"><div class="ttname"><a href="../../d4/dfd/classpl_angle.htm">plAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition</b> Angle.h:10</div></div>
<div class="ttc" id="anamespacepl_math_htm"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm">plMath</a></div><div class="ttdoc">This namespace provides common math-functionality as functions.</div><div class="ttdef"><b>Definition</b> Constants.h:6</div></div>
<div class="ttc" id="anamespacepl_math_htm_a00334dd03f3d352cf3b0a617e0a40016"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a00334dd03f3d352cf3b0a617e0a40016">plMath::SafeMultiply64</a></div><div class="ttdeci">PL_FOUNDATION_DLL plUInt64 SafeMultiply64(plUInt64 a, plUInt64 b, plUInt64 c=1, plUInt64 d=1)</div><div class="ttdoc">returns a * b. If an overflow happens, the program is terminated.</div><div class="ttdef"><b>Definition</b> Math.cpp:200</div></div>
<div class="ttc" id="anamespacepl_math_htm_a039e0900027555ec0dc4aeb59d47da4e"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a039e0900027555ec0dc4aeb59d47da4e">plMath::ReplaceNaN</a></div><div class="ttdeci">PL_FOUNDATION_DLL float ReplaceNaN(float fValue, float fFallback)</div><div class="ttdoc">If 'value' is not-a-number (NaN) 'fallback' is returned, otherwise 'value' is passed through unmodifi...</div><div class="ttdef"><b>Definition</b> Math.cpp:247</div></div>
<div class="ttc" id="anamespacepl_math_htm_a03c7d2cff6b57d914e5bf082bf8fad98"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a03c7d2cff6b57d914e5bf082bf8fad98">plMath::TryMultiply32</a></div><div class="ttdeci">PL_FOUNDATION_DLL plResult TryMultiply32(plUInt32 &amp;out_uiResult, plUInt32 a, plUInt32 b, plUInt32 c=1, plUInt32 d=1)</div><div class="ttdoc">out_Result = a * b. If an overflow happens, PL_FAILURE is returned.</div><div class="ttdef"><b>Definition</b> Math.cpp:105</div></div>
<div class="ttc" id="anamespacepl_math_htm_a0805dbc625c3f1ca235f566b20826dba"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a0805dbc625c3f1ca235f566b20826dba">plMath::ColorFloatToSignedByte</a></div><div class="ttdeci">plInt8 ColorFloatToSignedByte(float value)</div><div class="ttdoc">Converts a color value from float [-1;1] range to signed byte [-127;127] range, with proper rounding.</div><div class="ttdef"><b>Definition</b> Math_inl.h:368</div></div>
<div class="ttc" id="anamespacepl_math_htm_a104680f37ede9a20239d5aaf56e41eb3"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a104680f37ede9a20239d5aaf56e41eb3">plMath::RoundDown</a></div><div class="ttdeci">double RoundDown(double f, double fMultiple)</div><div class="ttdoc">Returns a multiple of fMultiple that is smaller than f.</div><div class="ttdef"><b>Definition</b> MathDouble_inl.h:40</div></div>
<div class="ttc" id="anamespacepl_math_htm_a14dcb5c08839e1246369028c1547434f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a14dcb5c08839e1246369028c1547434f">plMath::FloatToInt</a></div><div class="ttdeci">constexpr plInt32 FloatToInt(float value)</div><div class="ttdoc">Casts the float to an integer, removes the fractional part.</div><div class="ttdef"><b>Definition</b> Math_inl.h:462</div></div>
<div class="ttc" id="anamespacepl_math_htm_a16c2c579293ffd5ccb95e7c1521560d7"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a16c2c579293ffd5ccb95e7c1521560d7">plMath::ASin</a></div><div class="ttdeci">PL_ALWAYS_INLINE plAngle ASin(float f)</div><div class="ttdoc">Returns the arcus sinus of f.</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:77</div></div>
<div class="ttc" id="anamespacepl_math_htm_a1b11d14648656b3bfb3529db712169af"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a1b11d14648656b3bfb3529db712169af">plMath::Unlerp</a></div><div class="ttdeci">PL_FORCE_INLINE constexpr float Unlerp(T fMin, T fMax, T fValue)</div><div class="ttdoc">Returns the interpolation factor such that Lerp(fMin, fMax, factor) == fValue.</div><div class="ttdef"><b>Definition</b> Math_inl.h:248</div></div>
<div class="ttc" id="anamespacepl_math_htm_a1c1d1ad70715890caa923b8c1df701d3"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a1c1d1ad70715890caa923b8c1df701d3">plMath::EvaluateBezierCurve</a></div><div class="ttdeci">T EvaluateBezierCurve(T2 t, const T &amp;startPoint, const T &amp;controlPoint1, const T &amp;controlPoint2, const T &amp;endPoint)</div><div class="ttdoc">Evaluates the cubic spline defined by four control points at time t and returns the interpolated resu...</div><div class="ttdef"><b>Definition</b> Math_inl.h:443</div></div>
<div class="ttc" id="anamespacepl_math_htm_a236fdd2f75e9643f8c318023a20ee05e"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a236fdd2f75e9643f8c318023a20ee05e">plMath::ATan</a></div><div class="ttdeci">PL_ALWAYS_INLINE plAngle ATan(float f)</div><div class="ttdoc">Returns the arcus tangent of f.</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:87</div></div>
<div class="ttc" id="anamespacepl_math_htm_a2525000156b1f0d071e7cb46808a94e0"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a2525000156b1f0d071e7cb46808a94e0">plMath::GreatestCommonDivisor</a></div><div class="ttdeci">PL_FOUNDATION_DLL plUInt32 GreatestCommonDivisor(plUInt32 a, plUInt32 b)</div><div class="ttdoc">Returns the greatest common divisor.</div><div class="ttdef"><b>Definition</b> Math.cpp:79</div></div>
<div class="ttc" id="anamespacepl_math_htm_a25ddcfae0bd88d04d015b266a236065f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a25ddcfae0bd88d04d015b266a236065f">plMath::Square</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Square(T f)</div><div class="ttdoc">Returns f * f.</div><div class="ttdef"><b>Definition</b> Math_inl.h:8</div></div>
<div class="ttc" id="anamespacepl_math_htm_a2898309268211acdbebb498a1f03ce01"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a2898309268211acdbebb498a1f03ce01">plMath::Lerp</a></div><div class="ttdeci">PL_FORCE_INLINE T Lerp(T f1, T f2, float fFactor)</div><div class="ttdoc">Returns the linear interpolation of f1 and f2. factor is a value between 0 and 1.</div><div class="ttdef"><b>Definition</b> Math_inl.h:230</div></div>
<div class="ttc" id="anamespacepl_math_htm_a314b24989122e22968ae0a11cc872e28"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">plMath::Min</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:27</div></div>
<div class="ttc" id="anamespacepl_math_htm_a319a0edc79181e926ee0f6b451407bb6"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a319a0edc79181e926ee0f6b451407bb6">plMath::ACos</a></div><div class="ttdeci">PL_ALWAYS_INLINE plAngle ACos(float f)</div><div class="ttdoc">Returns the arcus cosinus of f.</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:82</div></div>
<div class="ttc" id="anamespacepl_math_htm_a33330db7ba8967ecd07361e20e7c2b1c"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a33330db7ba8967ecd07361e20e7c2b1c">plMath::RoundToMultiple</a></div><div class="ttdeci">PL_ALWAYS_INLINE double RoundToMultiple(double f, double fMultiple)</div><div class="ttdoc">Rounds f to the closest value of multiple.</div><div class="ttdef"><b>Definition</b> MathDouble_inl.h:54</div></div>
<div class="ttc" id="anamespacepl_math_htm_a376dececaac1fe979ae20f82fec9018d"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a376dececaac1fe979ae20f82fec9018d">plMath::Round</a></div><div class="ttdeci">PL_ALWAYS_INLINE double Round(double f)</div><div class="ttdoc">Rounds f to the next integer.</div><div class="ttdef"><b>Definition</b> MathDouble_inl.h:35</div></div>
<div class="ttc" id="anamespacepl_math_htm_a3c10f39a9283445ab6001096104bb153"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a3c10f39a9283445ab6001096104bb153">plMath::Sin</a></div><div class="ttdeci">PL_ALWAYS_INLINE float Sin(plAngle a)</div><div class="ttdoc">***** Trigonometric Functions *****</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:62</div></div>
<div class="ttc" id="anamespacepl_math_htm_a4cab8eac68ab0cf7f621d8beefbee6d6"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a4cab8eac68ab0cf7f621d8beefbee6d6">plMath::IsPowerOf</a></div><div class="ttdeci">PL_FOUNDATION_DLL bool IsPowerOf(plInt32 value, plInt32 iBase)</div><div class="ttdoc">Returns true, if there exists some x with base^x == value.</div><div class="ttdef"><b>Definition</b> Math.cpp:16</div></div>
<div class="ttc" id="anamespacepl_math_htm_a4d360762da80a2b08e7e3de053d1d839"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a4d360762da80a2b08e7e3de053d1d839">plMath::ATan2</a></div><div class="ttdeci">PL_ALWAYS_INLINE plAngle ATan2(float y, float x)</div><div class="ttdoc">Returns the atan2 of x and y.</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:92</div></div>
<div class="ttc" id="anamespacepl_math_htm_a4daf0d43b398a7ff4083833b579bb2fc"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a4daf0d43b398a7ff4083833b579bb2fc">plMath::FirstBitHigh</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt32 FirstBitHigh(plUInt32 value)</div><div class="ttdoc">Returns the index of the most significant bit set.</div><div class="ttdef"><b>Definition</b> Math_inl.h:119</div></div>
<div class="ttc" id="anamespacepl_math_htm_a5117cb9b4940f721a3446111953cd43d"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a5117cb9b4940f721a3446111953cd43d">plMath::TryMultiply64</a></div><div class="ttdeci">PL_FOUNDATION_DLL plResult TryMultiply64(plUInt64 &amp;out_uiResult, plUInt64 a, plUInt64 b, plUInt64 c=1, plUInt64 d=1)</div><div class="ttdoc">out_Result = a * b. If an overflow happens, PL_FAILURE is returned.</div><div class="ttdef"><b>Definition</b> Math.cpp:144</div></div>
<div class="ttc" id="anamespacepl_math_htm_a56d77e019b9b7dcc6c27ef6a5714851d"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a56d77e019b9b7dcc6c27ef6a5714851d">plMath::Fraction</a></div><div class="ttdeci">PL_ALWAYS_INLINE Type Fraction(Type f)</div><div class="ttdoc">Returns the fraction-part of f.</div><div class="ttdef"><b>Definition</b> Math_inl.h:305</div></div>
<div class="ttc" id="anamespacepl_math_htm_a5e363339c8dfc76221563df0bf2302b3"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a5e363339c8dfc76221563df0bf2302b3">plMath::Invert</a></div><div class="ttdeci">constexpr Type Invert(Type f)</div><div class="ttdoc">Returns 1 / f.</div><div class="ttdef"><b>Definition</b> Math_inl.h:63</div></div>
<div class="ttc" id="anamespacepl_math_htm_a5e64f45bae1fb8ddbe02e2f5bdf18767"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a5e64f45bae1fb8ddbe02e2f5bdf18767">plMath::Clamp</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Clamp(T value, T min_val, T max_val)</div><div class="ttdoc">Clamps &quot;value&quot; to the range [min; max]. Returns &quot;value&quot;, if it is inside the range already.</div><div class="ttdef"><b>Definition</b> Math_inl.h:51</div></div>
<div class="ttc" id="anamespacepl_math_htm_a5e8f52b1accac321d1f66662a07edc5e"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a5e8f52b1accac321d1f66662a07edc5e">plMath::RoundUp</a></div><div class="ttdeci">double RoundUp(double f, double fMultiple)</div><div class="ttdoc">Returns a multiple of fMultiple that is larger than f.</div><div class="ttdef"><b>Definition</b> MathDouble_inl.h:47</div></div>
<div class="ttc" id="anamespacepl_math_htm_a6d59d967853711101adff06ccb2e0dd5"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a6d59d967853711101adff06ccb2e0dd5">plMath::ColorFloatToByte</a></div><div class="ttdeci">plUInt8 ColorFloatToByte(float value)</div><div class="ttdoc">Converts a color value from float [0;1] range to unsigned byte [0;255] range, with proper rounding.</div><div class="ttdef"><b>Definition</b> Math_inl.h:340</div></div>
<div class="ttc" id="anamespacepl_math_htm_a71f396768b6397dc004eefd47302b79f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a71f396768b6397dc004eefd47302b79f">plMath::IsOdd</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE bool IsOdd(plInt32 i)</div><div class="ttdoc">Returns true, if i is an odd number.</div><div class="ttdef"><b>Definition</b> MathInt32_inl.h:29</div></div>
<div class="ttc" id="anamespacepl_math_htm_a72a91c11fb31412fdc5cc4d8b474e548"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a72a91c11fb31412fdc5cc4d8b474e548">plMath::IsEven</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE bool IsEven(plInt32 i)</div><div class="ttdoc">Returns true, if i is an even number.</div><div class="ttdef"><b>Definition</b> MathInt32_inl.h:35</div></div>
<div class="ttc" id="anamespacepl_math_htm_a77a11d9b4e7665621cad426a72f7dca0"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a77a11d9b4e7665621cad426a72f7dca0">plMath::FirstBitLow</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt32 FirstBitLow(plUInt32 value)</div><div class="ttdoc">Returns the index of the least significant bit set.</div><div class="ttdef"><b>Definition</b> Math_inl.h:70</div></div>
<div class="ttc" id="anamespacepl_math_htm_a7e0493d1a4477c91c0cfc260b348dc86"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a7e0493d1a4477c91c0cfc260b348dc86">plMath::ColorSignedByteToFloat</a></div><div class="ttdeci">constexpr float ColorSignedByteToFloat(plInt8 value)</div><div class="ttdoc">Converts a color value from signed byte [-128;127] range to float [-1;1] range, with proper rounding.</div><div class="ttdef"><b>Definition</b> Math_inl.h:428</div></div>
<div class="ttc" id="anamespacepl_math_htm_a80257a94c132df487cfdc93fefa72644"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a80257a94c132df487cfdc93fefa72644">plMath::SafeConvertToSizeT</a></div><div class="ttdeci">PL_FOUNDATION_DLL size_t SafeConvertToSizeT(plUInt64 uiValue)</div><div class="ttdoc">Checks whether the given 64bit value actually fits into size_t, If it doesn't the program is terminat...</div></div>
<div class="ttc" id="anamespacepl_math_htm_a8147d5ad32b1503e1393c7258e90c3a8"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a8147d5ad32b1503e1393c7258e90c3a8">plMath::ColorFloatToSignedShort</a></div><div class="ttdeci">plInt16 ColorFloatToSignedShort(float value)</div><div class="ttdoc">Converts a color value from float [-1;1] range to signed short [-32767;32767] range,...</div><div class="ttdef"><b>Definition</b> Math_inl.h:391</div></div>
<div class="ttc" id="anamespacepl_math_htm_a8422d1228952cb6d6b061ecb513569ac"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a8422d1228952cb6d6b061ecb513569ac">plMath::IsInRange</a></div><div class="ttdeci">constexpr bool IsInRange(T value, T minVal, T maxVal)</div><div class="ttdoc">Checks whether the value of the first parameter lies between the value of the second and third.</div><div class="ttdef"><b>Definition</b> Math_inl.h:282</div></div>
<div class="ttc" id="anamespacepl_math_htm_a884e26ab20e8aec516126913215a7e18"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a884e26ab20e8aec516126913215a7e18">plMath::Mod</a></div><div class="ttdeci">PL_ALWAYS_INLINE double Mod(double f, double fDiv)</div><div class="ttdoc">Returns &quot;value mod div&quot; for doubles. This also works with negative numbers, both for value and for di...</div><div class="ttdef"><b>Definition</b> MathDouble_inl.h:104</div></div>
<div class="ttc" id="anamespacepl_math_htm_a8859fe4bf482080605dec864a470da45"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a8859fe4bf482080605dec864a470da45">plMath::ColorFloatToShort</a></div><div class="ttdeci">plUInt16 ColorFloatToShort(float value)</div><div class="ttdoc">Converts a color value from float [0;1] range to unsigned short [0;65535] range, with proper rounding...</div><div class="ttdef"><b>Definition</b> Math_inl.h:354</div></div>
<div class="ttc" id="anamespacepl_math_htm_a8b7409f69c51e9b37fd1af282dba5a5f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a8b7409f69c51e9b37fd1af282dba5a5f">plMath::ColorByteToFloat</a></div><div class="ttdeci">constexpr float ColorByteToFloat(plUInt8 value)</div><div class="ttdoc">Converts a color value from unsigned byte [0;255] range to float [0;1] range, with proper rounding.</div><div class="ttdef"><b>Definition</b> Math_inl.h:414</div></div>
<div class="ttc" id="anamespacepl_math_htm_a8d8fd6ec30ad540237d46f0dc619b261"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a8d8fd6ec30ad540237d46f0dc619b261">plMath::ColorSignedShortToFloat</a></div><div class="ttdeci">constexpr float ColorSignedShortToFloat(plInt16 value)</div><div class="ttdoc">Converts a color value from signed short [-32768;32767] range to float [0;1] range,...</div><div class="ttdef"><b>Definition</b> Math_inl.h:435</div></div>
<div class="ttc" id="anamespacepl_math_htm_a8e7571124eabadd0fa57cffa70b00172"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a8e7571124eabadd0fa57cffa70b00172">plMath::SmootherStep</a></div><div class="ttdeci">Type SmootherStep(Type x, Type edge1, Type edge2)</div><div class="ttdoc">Returns 0, if value is &lt;= edge1, 1 if value &gt;= edge2 and the second order hermite interpolation in be...</div><div class="ttdef"><b>Definition</b> Math_inl.h:326</div></div>
<div class="ttc" id="anamespacepl_math_htm_a9250e48f91873561d8126090d7b66ee9"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a9250e48f91873561d8126090d7b66ee9">plMath::PowerOfTwo_Floor</a></div><div class="ttdeci">PL_FOUNDATION_DLL plUInt32 PowerOfTwo_Floor(plUInt32 value)</div><div class="ttdoc">Returns the next power-of-two that is &lt;= value.</div><div class="ttdef"><b>Definition</b> Math.cpp:32</div></div>
<div class="ttc" id="anamespacepl_math_htm_a9642f34bcdd7dae2a75a3b5cd9f944fc"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a9642f34bcdd7dae2a75a3b5cd9f944fc">plMath::Tan</a></div><div class="ttdeci">PL_ALWAYS_INLINE float Tan(plAngle a)</div><div class="ttdoc">Takes an angle, returns its tangent.</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:72</div></div>
<div class="ttc" id="anamespacepl_math_htm_a9c8b8683756df9047c6a5e4a44f4752f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a9c8b8683756df9047c6a5e4a44f4752f">plMath::CountBits</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt32 CountBits(plUInt32 value)</div><div class="ttdoc">Returns the number of bits set.</div><div class="ttdef"><b>Definition</b> Math_inl.h:186</div></div>
<div class="ttc" id="anamespacepl_math_htm_aa3bba00206eaca76b20bb1e131f27138"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#aa3bba00206eaca76b20bb1e131f27138">plMath::Bitmask_LowN</a></div><div class="ttdeci">PL_ALWAYS_INLINE Type Bitmask_LowN(plUInt32 uiNumBitsToSet)</div><div class="ttdoc">Creates a bitmask in which the low N bits are set. For example for N=5, this would be '0000 ....</div><div class="ttdef"><b>Definition</b> Math_inl.h:212</div></div>
<div class="ttc" id="anamespacepl_math_htm_aa6141bbf80704bdc6ba5a0df73d6e25d"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#aa6141bbf80704bdc6ba5a0df73d6e25d">plMath::CountLeadingZeros</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt32 CountLeadingZeros(plUInt32 uiBitmask)</div><div class="ttdef"><b>Definition</b> Math_inl.h:180</div></div>
<div class="ttc" id="anamespacepl_math_htm_aae02023b382e3990f9ebf91f40473310"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#aae02023b382e3990f9ebf91f40473310">plMath::Sqrt</a></div><div class="ttdeci">PL_ALWAYS_INLINE double Sqrt(double f)</div><div class="ttdoc">Returns the square root of f.</div><div class="ttdef"><b>Definition</b> MathDouble_inl.h:99</div></div>
<div class="ttc" id="anamespacepl_math_htm_ab3b08ed7dc553561de9b2d8635cc44db"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ab3b08ed7dc553561de9b2d8635cc44db">plMath::Sign</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Sign(T f)</div><div class="ttdoc">Returns the sign of f (i.e: -1, 1 or 0)</div><div class="ttdef"><b>Definition</b> Math_inl.h:14</div></div>
<div class="ttc" id="anamespacepl_math_htm_ab41c015ef2ef7ea68f915082545755ae"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ab41c015ef2ef7ea68f915082545755ae">plMath::IsZero</a></div><div class="ttdeci">bool IsZero(Type f, Type fEpsilon)</div><div class="ttdoc">Checks whether the given number is close to zero.</div><div class="ttdef"><b>Definition</b> Math_inl.h:288</div></div>
<div class="ttc" id="anamespacepl_math_htm_ab5afdf4907a0a61a687be8a9e1e1f81c"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ab5afdf4907a0a61a687be8a9e1e1f81c">plMath::IsEqual</a></div><div class="ttdeci">constexpr bool IsEqual(Type lhs, Type rhs, Type fEpsilon)</div><div class="ttdoc">Checks, whether fValue is in the range [fDesired - fMaxImprecision; fDesired + fMaxImprecision].</div><div class="ttdef"><b>Definition</b> Math_inl.h:276</div></div>
<div class="ttc" id="anamespacepl_math_htm_ab7dd8470053b49d34d72fe1eb0d2ab61"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ab7dd8470053b49d34d72fe1eb0d2ab61">plMath::Trunc</a></div><div class="ttdeci">PL_ALWAYS_INLINE Type Trunc(Type f)</div><div class="ttdoc">Returns the integer-part of f (removes the fraction).</div><div class="ttdef"><b>Definition</b> Math_inl.h:296</div></div>
<div class="ttc" id="anamespacepl_math_htm_abcac254119b9da320b0617b93e40ec9f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#abcac254119b9da320b0617b93e40ec9f">plMath::Swap</a></div><div class="ttdeci">PL_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:224</div></div>
<div class="ttc" id="anamespacepl_math_htm_abd0ef20e6710b240c9833acdf6f2f8d7"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#abd0ef20e6710b240c9833acdf6f2f8d7">plMath::Abs</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Abs(T f)</div><div class="ttdoc">Returns the absolute value of f.</div><div class="ttdef"><b>Definition</b> Math_inl.h:21</div></div>
<div class="ttc" id="anamespacepl_math_htm_ac4d40297dae8b10147595d88400a785e"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ac4d40297dae8b10147595d88400a785e">plMath::TryConvertToSizeT</a></div><div class="ttdeci">plResult TryConvertToSizeT(size_t &amp;out_uiResult, plUInt64 uiValue)</div><div class="ttdoc">Checks whether the given 64bit value actually fits into size_t, If it doesn't PL_FAILURE is returned.</div><div class="ttdef"><b>Definition</b> Math_inl.h:474</div></div>
<div class="ttc" id="anamespacepl_math_htm_ac9493ece7e4354a37df97ed08bb26eac"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ac9493ece7e4354a37df97ed08bb26eac">plMath::Cos</a></div><div class="ttdeci">PL_ALWAYS_INLINE float Cos(plAngle a)</div><div class="ttdoc">Takes an angle, returns its cosine.</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:67</div></div>
<div class="ttc" id="anamespacepl_math_htm_acf3240988b12047baffaee141fc8cffb"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#acf3240988b12047baffaee141fc8cffb">plMath::Saturate</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Saturate(T value)</div><div class="ttdoc">Clamps &quot;value&quot; to the range [0; 1]. Returns &quot;value&quot;, if it is inside the range already.</div><div class="ttdef"><b>Definition</b> Math_inl.h:57</div></div>
<div class="ttc" id="anamespacepl_math_htm_ad724a3f51a1faa9bcc3e6a53fd6b9a4f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ad724a3f51a1faa9bcc3e6a53fd6b9a4f">plMath::Max</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:39</div></div>
<div class="ttc" id="anamespacepl_math_htm_ada25e7495cb20e9d0d07f58c735a9115"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ada25e7495cb20e9d0d07f58c735a9115">plMath::Log2i</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt32 Log2i(plUInt32 uiVal)</div><div class="ttdoc">Returns the integral logarithm to the base 2, that comes closest to the given integer.</div><div class="ttdef"><b>Definition</b> MathInt32_inl.h:41</div></div>
<div class="ttc" id="anamespacepl_math_htm_add691d49a4f270dc22fb918d8ba1ca4f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#add691d49a4f270dc22fb918d8ba1ca4f">plMath::CountTrailingZeros</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt32 CountTrailingZeros(plUInt32 uiBitmask)</div><div class="ttdef"><b>Definition</b> Math_inl.h:167</div></div>
<div class="ttc" id="anamespacepl_math_htm_ae161b5862a17d95f7cc0011351ffe798"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ae161b5862a17d95f7cc0011351ffe798">plMath::PowerOfTwo_Ceil</a></div><div class="ttdeci">PL_FOUNDATION_DLL plUInt32 PowerOfTwo_Ceil(plUInt32 value)</div><div class="ttdoc">Returns the next power-of-two that is &gt;= value.</div><div class="ttdef"><b>Definition</b> Math.cpp:53</div></div>
<div class="ttc" id="anamespacepl_math_htm_ae27db066f56ce11ea3b96f8cede4a867"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ae27db066f56ce11ea3b96f8cede4a867">plMath::SmoothStep</a></div><div class="ttdeci">Type SmoothStep(Type x, Type edge1, Type edge2)</div><div class="ttdoc">Returns 0, if value is &lt;= edge1, 1 if value &gt;= edge2 and the hermite interpolation in between.</div><div class="ttdef"><b>Definition</b> Math_inl.h:311</div></div>
<div class="ttc" id="anamespacepl_math_htm_ae727cfa25d979e734284dc70e1ebca60"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ae727cfa25d979e734284dc70e1ebca60">plMath::IsPowerOf2</a></div><div class="ttdeci">constexpr PL_FORCE_INLINE bool IsPowerOf2(plInt32 value)</div><div class="ttdoc">Returns true, if there exists some x with 2^x == value.</div><div class="ttdef"><b>Definition</b> Math_inl.h:260</div></div>
<div class="ttc" id="anamespacepl_math_htm_ae9a3bfad84627afef5616665eecd65e4"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ae9a3bfad84627afef5616665eecd65e4">plMath::Bitmask_HighN</a></div><div class="ttdeci">PL_ALWAYS_INLINE Type Bitmask_HighN(plUInt32 uiNumBitsToSet)</div><div class="ttdoc">Creates a bitmask in which the high N bits are set. For example for N=5, this would be '1111 1000 ....</div><div class="ttdef"><b>Definition</b> Math_inl.h:218</div></div>
<div class="ttc" id="anamespacepl_math_htm_aed0425c9e1f58761cf91e3315d33e139"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#aed0425c9e1f58761cf91e3315d33e139">plMath::ColorShortToFloat</a></div><div class="ttdeci">constexpr float ColorShortToFloat(plUInt16 value)</div><div class="ttdoc">Converts a color value from unsigned short [0;65535] range to float [0;1] range, with proper rounding...</div><div class="ttdef"><b>Definition</b> Math_inl.h:421</div></div>
<div class="ttc" id="anamespacepl_math_htm_af6a0264a015d3aa5c4fe8cfdafb0791a"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#af6a0264a015d3aa5c4fe8cfdafb0791a">plMath::SafeMultiply32</a></div><div class="ttdeci">PL_FOUNDATION_DLL plUInt32 SafeMultiply32(plUInt32 a, plUInt32 b, plUInt32 c=1, plUInt32 d=1)</div><div class="ttdoc">returns a * b. If an overflow happens, the program is terminated.</div><div class="ttdef"><b>Definition</b> Math.cpp:132</div></div>
<div class="ttc" id="anamespacepl_math_htm_afe93e6c96ee4da7fff1ddcdbc81bff31"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#afe93e6c96ee4da7fff1ddcdbc81bff31">plMath::Step</a></div><div class="ttdeci">constexpr PL_FORCE_INLINE T Step(T value, T edge)</div><div class="ttdoc">Returns 0, if value &lt; edge, and 1, if value &gt;= edge.</div><div class="ttdef"><b>Definition</b> Math_inl.h:255</div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b421fc8dbee4bf114051d293564697bb.htm">Math</a></li><li class="navelem"><b>Math.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
