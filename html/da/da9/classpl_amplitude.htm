<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plAmplitude Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('da/da9/classpl_amplitude.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d3/dc9/classpl_amplitude-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAmplitude Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>The Amplitude Audio Middleware.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/d6e/_amplitude_audio_singleton_8h_source.htm">AmplitudeAudioSingleton.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plAmplitude:</div>
<div class="dyncontent">
<div class="center"><img src="../../d5/dc6/classpl_amplitude__inherit__graph.png" border="0" usemap="#apl_amplitude_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_amplitude_inherit__map" id="apl_amplitude_inherit__map">
<area shape="rect" title="The Amplitude Audio Middleware." alt="" coords="25,80,115,107"/>
<area shape="rect" href="../../db/d7c/classpl_audio_middleware.htm" title="The Audio Middleware Interface. This interface should be implemented by the ATL middleware to communi..." alt="" coords="5,5,135,32"/>
<area shape="poly" title=" " alt="" coords="73,48,73,80,67,80,67,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4a97e4fbf5b445fe5bf450d9a8f08b0f" id="r_a4a97e4fbf5b445fe5bf450d9a8f08b0f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4a97e4fbf5b445fe5bf450d9a8f08b0f">LoadConfiguration</a> (const <a class="el" href="../../d2/d5d/classpl_open_ddl_reader_element.htm">plOpenDdlReaderElement</a> &amp;reader) override</td></tr>
<tr class="memdesc:a4a97e4fbf5b445fe5bf450d9a8f08b0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads the middleware-specif configuration from the ATL config file.  <br /></td></tr>
<tr class="separator:a4a97e4fbf5b445fe5bf450d9a8f08b0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1ba4d560ef1d84c1ed06752fffebe4e" id="r_aa1ba4d560ef1d84c1ed06752fffebe4e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa1ba4d560ef1d84c1ed06752fffebe4e">Startup</a> () override</td></tr>
<tr class="memdesc:aa1ba4d560ef1d84c1ed06752fffebe4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the audio middleware.  <br /></td></tr>
<tr class="separator:aa1ba4d560ef1d84c1ed06752fffebe4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af69cec2aae939e8cfb9d701cac6a5a54" id="r_af69cec2aae939e8cfb9d701cac6a5a54"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af69cec2aae939e8cfb9d701cac6a5a54">Update</a> (<a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> delta) override</td></tr>
<tr class="memdesc:af69cec2aae939e8cfb9d701cac6a5a54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates the audio middleware.  <br /></td></tr>
<tr class="separator:af69cec2aae939e8cfb9d701cac6a5a54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2300bbf538da50c54e8f7d97988c53e9" id="r_a2300bbf538da50c54e8f7d97988c53e9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2300bbf538da50c54e8f7d97988c53e9">Shutdown</a> () override</td></tr>
<tr class="memdesc:a2300bbf538da50c54e8f7d97988c53e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deinitializes and stop the audio middleware.  <br /></td></tr>
<tr class="separator:a2300bbf538da50c54e8f7d97988c53e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade4dde613ea9e735da8d3dbe8da522fe" id="r_ade4dde613ea9e735da8d3dbe8da522fe"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ade4dde613ea9e735da8d3dbe8da522fe">Release</a> () override</td></tr>
<tr class="memdesc:ade4dde613ea9e735da8d3dbe8da522fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all the resources allocated by the audio middleware. This is usually called after Shutdown.  <br /></td></tr>
<tr class="separator:ade4dde613ea9e735da8d3dbe8da522fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c04b7f39c323a359cbcc1ca376a1197" id="r_a2c04b7f39c323a359cbcc1ca376a1197"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2c04b7f39c323a359cbcc1ca376a1197">StopAllSounds</a> () override</td></tr>
<tr class="memdesc:a2c04b7f39c323a359cbcc1ca376a1197"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops all the sounds actually played by the audio middleware.  <br /></td></tr>
<tr class="separator:a2c04b7f39c323a359cbcc1ca376a1197"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbd2d0193d9b8749a8ae305ee331bdad" id="r_abbd2d0193d9b8749a8ae305ee331bdad"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abbd2d0193d9b8749a8ae305ee331bdad">AddEntity</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const char *szEntityName) override</td></tr>
<tr class="memdesc:abbd2d0193d9b8749a8ae305ee331bdad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add/register an entity in the audio middleware. This is needed in order to provide transformation values (position and orientation), execute triggers (play sounds), and set real-time parameters or switches.  <br /></td></tr>
<tr class="separator:abbd2d0193d9b8749a8ae305ee331bdad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a341ebd6e30ffcb1b487c1b66fb53323e" id="r_a341ebd6e30ffcb1b487c1b66fb53323e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a341ebd6e30ffcb1b487c1b66fb53323e">ResetEntity</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData) override</td></tr>
<tr class="memdesc:a341ebd6e30ffcb1b487c1b66fb53323e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets an entity state.  <br /></td></tr>
<tr class="separator:a341ebd6e30ffcb1b487c1b66fb53323e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2d743af616c38e0d6f1537fa6d30031" id="r_aa2d743af616c38e0d6f1537fa6d30031"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa2d743af616c38e0d6f1537fa6d30031">UpdateEntity</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData) override</td></tr>
<tr class="memdesc:aa2d743af616c38e0d6f1537fa6d30031"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates an entity state.  <br /></td></tr>
<tr class="separator:aa2d743af616c38e0d6f1537fa6d30031"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc25e56875ca8ba71f9419e8d3119565" id="r_adc25e56875ca8ba71f9419e8d3119565"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adc25e56875ca8ba71f9419e8d3119565">RemoveEntity</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData) override</td></tr>
<tr class="memdesc:adc25e56875ca8ba71f9419e8d3119565"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove/unregister an entity from the audio middleware. This action disable the possibility to execute triggers, set real-time parameters or switches, and update the position of the entity.  <br /></td></tr>
<tr class="separator:adc25e56875ca8ba71f9419e8d3119565"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75bfd92931ef2019d7b306167a554fc0" id="r_a75bfd92931ef2019d7b306167a554fc0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a75bfd92931ef2019d7b306167a554fc0">SetEntityTransform</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d1/da2/structpl_audio_system_transform.htm">plAudioSystemTransform</a> &amp;Transform) override</td></tr>
<tr class="memdesc:a75bfd92931ef2019d7b306167a554fc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the global position (world position) of an entity.  <br /></td></tr>
<tr class="separator:a75bfd92931ef2019d7b306167a554fc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4ed845ae8a50acc1daf5a862beaa95f" id="r_ae4ed845ae8a50acc1daf5a862beaa95f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae4ed845ae8a50acc1daf5a862beaa95f">LoadTrigger</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *pTriggerData, <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData) override</td></tr>
<tr class="memdesc:ae4ed845ae8a50acc1daf5a862beaa95f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a trigger for a further activation. All the data and media needed by the trigger will be loaded. Once done, the trigger status will change to Ready.  <br /></td></tr>
<tr class="separator:ae4ed845ae8a50acc1daf5a862beaa95f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac112a4d2f3d9a5e879cff4d39b6dac6b" id="r_ac112a4d2f3d9a5e879cff4d39b6dac6b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac112a4d2f3d9a5e879cff4d39b6dac6b">ActivateTrigger</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *pTriggerData, <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData) override</td></tr>
<tr class="memdesc:ac112a4d2f3d9a5e879cff4d39b6dac6b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Triggers an event on an entity. A trigger is everything which can affect the state of an event.  <br /></td></tr>
<tr class="separator:ac112a4d2f3d9a5e879cff4d39b6dac6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac28a54f2d41f0d3ac0f0d109f06db23d" id="r_ac28a54f2d41f0d3ac0f0d109f06db23d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac28a54f2d41f0d3ac0f0d109f06db23d">UnloadTrigger</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *pTriggerData) override</td></tr>
<tr class="memdesc:ac28a54f2d41f0d3ac0f0d109f06db23d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unload the trigger. This is called when the trigger and all data loaded during LoadTrigger need to be disposed.  <br /></td></tr>
<tr class="separator:ac28a54f2d41f0d3ac0f0d109f06db23d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab73ad881e9dec31159e837fe2c258b1e" id="r_ab73ad881e9dec31159e837fe2c258b1e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab73ad881e9dec31159e837fe2c258b1e">StopEvent</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData) override</td></tr>
<tr class="memdesc:ab73ad881e9dec31159e837fe2c258b1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops an event on the given entity.  <br /></td></tr>
<tr class="separator:ab73ad881e9dec31159e837fe2c258b1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ac57d31ab0dd0009ad9c2d2a751a1ac" id="r_a5ac57d31ab0dd0009ad9c2d2a751a1ac"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5ac57d31ab0dd0009ad9c2d2a751a1ac">StopAllEvents</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData) override</td></tr>
<tr class="memdesc:a5ac57d31ab0dd0009ad9c2d2a751a1ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stops all events active on the given entity.  <br /></td></tr>
<tr class="separator:a5ac57d31ab0dd0009ad9c2d2a751a1ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8069d7b301be0f9ce48eeab32306248d" id="r_a8069d7b301be0f9ce48eeab32306248d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8069d7b301be0f9ce48eeab32306248d">SetRtpc</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *pRtpcData, float fValue) override</td></tr>
<tr class="memdesc:a8069d7b301be0f9ce48eeab32306248d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an audio RTPC to the specified value on an entity.  <br /></td></tr>
<tr class="separator:a8069d7b301be0f9ce48eeab32306248d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b070f043a0463c90374cad762ed8698" id="r_a2b070f043a0463c90374cad762ed8698"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2b070f043a0463c90374cad762ed8698">ResetRtpc</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *pRtpcData) override</td></tr>
<tr class="memdesc:a2b070f043a0463c90374cad762ed8698"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets an audio RTPC to the default value on an entity.  <br /></td></tr>
<tr class="separator:a2b070f043a0463c90374cad762ed8698"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a126fa7d3260946dbbe4e501e5e292d0e" id="r_a126fa7d3260946dbbe4e501e5e292d0e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a126fa7d3260946dbbe4e501e5e292d0e">SetSwitchState</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *pSwitchStateData) override</td></tr>
<tr class="memdesc:a126fa7d3260946dbbe4e501e5e292d0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets an audio switch to the specified state on an entity.  <br /></td></tr>
<tr class="separator:a126fa7d3260946dbbe4e501e5e292d0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a718454e116e210426e4b4c3e4f53d1d5" id="r_a718454e116e210426e4b4c3e4f53d1d5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a718454e116e210426e4b4c3e4f53d1d5">SetObstructionAndOcclusion</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, float fObstruction, float fOcclusion) override</td></tr>
<tr class="memdesc:a718454e116e210426e4b4c3e4f53d1d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the obstruction and occlusion values on an entity.  <br /></td></tr>
<tr class="separator:a718454e116e210426e4b4c3e4f53d1d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52fd28b025bf49b360ca2513efa83141" id="r_a52fd28b025bf49b360ca2513efa83141"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a52fd28b025bf49b360ca2513efa83141">SetEnvironmentAmount</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData, const <a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *pEnvironmentData, float fAmount) override</td></tr>
<tr class="memdesc:a52fd28b025bf49b360ca2513efa83141"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the amount of an audio environment effect associated on an entity.  <br /></td></tr>
<tr class="separator:a52fd28b025bf49b360ca2513efa83141"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3c45202af1ed9653411ef0f0cebf29f" id="r_ae3c45202af1ed9653411ef0f0cebf29f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae3c45202af1ed9653411ef0f0cebf29f">AddListener</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData, const char *szListenerName) override</td></tr>
<tr class="memdesc:ae3c45202af1ed9653411ef0f0cebf29f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add/register a listener in the audio middleware. This is needed to let the middleware know where to render audio, and to provide transformation values (position and orientation).  <br /></td></tr>
<tr class="separator:ae3c45202af1ed9653411ef0f0cebf29f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6f9ce9e69f71b65413b3b605023f7b0" id="r_ad6f9ce9e69f71b65413b3b605023f7b0"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad6f9ce9e69f71b65413b3b605023f7b0">ResetListener</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData) override</td></tr>
<tr class="memdesc:ad6f9ce9e69f71b65413b3b605023f7b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets a listener state.  <br /></td></tr>
<tr class="separator:ad6f9ce9e69f71b65413b3b605023f7b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a230a959bcf5f286105c8db7c9fb8a33a" id="r_a230a959bcf5f286105c8db7c9fb8a33a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a230a959bcf5f286105c8db7c9fb8a33a">RemoveListener</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData) override</td></tr>
<tr class="memdesc:a230a959bcf5f286105c8db7c9fb8a33a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove/unregister a listener from the audio middleware. This action disable the possibility to update the position of the listener.  <br /></td></tr>
<tr class="separator:a230a959bcf5f286105c8db7c9fb8a33a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31e5ad70c3b9f2360c313feb779885de" id="r_a31e5ad70c3b9f2360c313feb779885de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a31e5ad70c3b9f2360c313feb779885de">SetListenerTransform</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData, const <a class="el" href="../../d1/da2/structpl_audio_system_transform.htm">plAudioSystemTransform</a> &amp;Transform) override</td></tr>
<tr class="memdesc:a31e5ad70c3b9f2360c313feb779885de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the global transform (wold position and orientation) of a listener.  <br /></td></tr>
<tr class="separator:a31e5ad70c3b9f2360c313feb779885de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f6b8dcb08c35bc819039831b5219cf2" id="r_a3f6b8dcb08c35bc819039831b5219cf2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3f6b8dcb08c35bc819039831b5219cf2">LoadBank</a> (<a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *pBankData) override</td></tr>
<tr class="memdesc:a3f6b8dcb08c35bc819039831b5219cf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Loads a bank file.  <br /></td></tr>
<tr class="separator:a3f6b8dcb08c35bc819039831b5219cf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a779ef00676824eef1c5d90fa25661a03" id="r_a779ef00676824eef1c5d90fa25661a03"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a779ef00676824eef1c5d90fa25661a03">UnloadBank</a> (<a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *pBankData) override</td></tr>
<tr class="memdesc:a779ef00676824eef1c5d90fa25661a03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Unloads a bank file.  <br /></td></tr>
<tr class="separator:a779ef00676824eef1c5d90fa25661a03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8be6887231a161507a07e8a5b3890adb" id="r_a8be6887231a161507a07e8a5b3890adb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8be6887231a161507a07e8a5b3890adb">CreateWorldEntity</a> (plAudioSystemDataID uiEntityId) override</td></tr>
<tr class="memdesc:a8be6887231a161507a07e8a5b3890adb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a world entity. This is a special entity used by non-spatial sounds. The engine will take care to create a game object at position (0,0,0) and orientation (0,0,0,1), and pass the game object ID as parameter to this function. The game object is ensured to never move nor rotate.  <br /></td></tr>
<tr class="separator:a8be6887231a161507a07e8a5b3890adb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb124811b1fc7f4257197f8a007237f1" id="r_acb124811b1fc7f4257197f8a007237f1"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acb124811b1fc7f4257197f8a007237f1">CreateEntityData</a> (plAudioSystemDataID uiEntityId) override</td></tr>
<tr class="memdesc:acb124811b1fc7f4257197f8a007237f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an audio entity that is attached to a game object.  <br /></td></tr>
<tr class="separator:acb124811b1fc7f4257197f8a007237f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa69a3830ac9cb1a304b7d43003c2a846" id="r_aa69a3830ac9cb1a304b7d43003c2a846"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa69a3830ac9cb1a304b7d43003c2a846">DestroyEntityData</a> (<a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *pEntityData) override</td></tr>
<tr class="memdesc:aa69a3830ac9cb1a304b7d43003c2a846"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio entity and release memory.  <br /></td></tr>
<tr class="separator:aa69a3830ac9cb1a304b7d43003c2a846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefa98d6c5de6aa806ddcd84778325630" id="r_aefa98d6c5de6aa806ddcd84778325630"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aefa98d6c5de6aa806ddcd84778325630">CreateListenerData</a> (plAudioSystemDataID uiListenerId) override</td></tr>
<tr class="memdesc:aefa98d6c5de6aa806ddcd84778325630"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an audio listener that is attached to a game object.  <br /></td></tr>
<tr class="separator:aefa98d6c5de6aa806ddcd84778325630"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1421b30b4115e7b87808556a083fd913" id="r_a1421b30b4115e7b87808556a083fd913"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1421b30b4115e7b87808556a083fd913">DestroyListenerData</a> (<a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *pListenerData) override</td></tr>
<tr class="memdesc:a1421b30b4115e7b87808556a083fd913"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio listener and release memory.  <br /></td></tr>
<tr class="separator:a1421b30b4115e7b87808556a083fd913"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81e08f497339255e8ce647a0bbdd5365" id="r_a81e08f497339255e8ce647a0bbdd5365"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a81e08f497339255e8ce647a0bbdd5365">CreateEventData</a> (plAudioSystemDataID uiEventId) override</td></tr>
<tr class="memdesc:a81e08f497339255e8ce647a0bbdd5365"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an audio event that is attached to a game object.  <br /></td></tr>
<tr class="separator:a81e08f497339255e8ce647a0bbdd5365"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6ba9e6d5fd5860cb046b030135fbd7f" id="r_ab6ba9e6d5fd5860cb046b030135fbd7f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab6ba9e6d5fd5860cb046b030135fbd7f">ResetEventData</a> (<a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData) override</td></tr>
<tr class="memdesc:ab6ba9e6d5fd5860cb046b030135fbd7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets the audio event state, so it can safely recycled in the pool.  <br /></td></tr>
<tr class="separator:ab6ba9e6d5fd5860cb046b030135fbd7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab22720d53b0f153c091dad21a337db96" id="r_ab22720d53b0f153c091dad21a337db96"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab22720d53b0f153c091dad21a337db96">DestroyEventData</a> (<a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *pEventData) override</td></tr>
<tr class="memdesc:ab22720d53b0f153c091dad21a337db96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio event and release memory.  <br /></td></tr>
<tr class="separator:ab22720d53b0f153c091dad21a337db96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22153a99e31c5a31cc0e2072597312ab" id="r_a22153a99e31c5a31cc0e2072597312ab"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a22153a99e31c5a31cc0e2072597312ab">DestroyBank</a> (<a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *pBankData) override</td></tr>
<tr class="memdesc:a22153a99e31c5a31cc0e2072597312ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio bank and release memory.  <br /></td></tr>
<tr class="separator:a22153a99e31c5a31cc0e2072597312ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4296c6e0ded5f969767ecaa23fd41564" id="r_a4296c6e0ded5f969767ecaa23fd41564"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4296c6e0ded5f969767ecaa23fd41564">DestroyTriggerData</a> (<a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *pTriggerData) override</td></tr>
<tr class="memdesc:a4296c6e0ded5f969767ecaa23fd41564"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio trigger and release memory.  <br /></td></tr>
<tr class="separator:a4296c6e0ded5f969767ecaa23fd41564"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a605c319840c84b7532ae2b14cd91a9ca" id="r_a605c319840c84b7532ae2b14cd91a9ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a605c319840c84b7532ae2b14cd91a9ca">DestroyRtpcData</a> (<a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *pRtpcData) override</td></tr>
<tr class="memdesc:a605c319840c84b7532ae2b14cd91a9ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio rtpc and release memory.  <br /></td></tr>
<tr class="separator:a605c319840c84b7532ae2b14cd91a9ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99b77241076a1fb43c1fe60fe478ef65" id="r_a99b77241076a1fb43c1fe60fe478ef65"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a99b77241076a1fb43c1fe60fe478ef65">DestroySwitchStateData</a> (<a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *pSwitchStateData) override</td></tr>
<tr class="memdesc:a99b77241076a1fb43c1fe60fe478ef65"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio switch state and release memory.  <br /></td></tr>
<tr class="separator:a99b77241076a1fb43c1fe60fe478ef65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c853d5424c4bdfd48f3328914036a25" id="r_a3c853d5424c4bdfd48f3328914036a25"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3c853d5424c4bdfd48f3328914036a25">DestroyEnvironmentData</a> (<a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *pEnvironmentData) override</td></tr>
<tr class="memdesc:a3c853d5424c4bdfd48f3328914036a25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys an audio environment effect and release memory.  <br /></td></tr>
<tr class="separator:a3c853d5424c4bdfd48f3328914036a25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad5aa8367dbd3a8d0796e1439c1b278a" id="r_aad5aa8367dbd3a8d0796e1439c1b278a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aad5aa8367dbd3a8d0796e1439c1b278a">SetLanguage</a> (const char *szLanguage) override</td></tr>
<tr class="memdesc:aad5aa8367dbd3a8d0796e1439c1b278a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the language used by the audio middleware.  <br /></td></tr>
<tr class="separator:aad5aa8367dbd3a8d0796e1439c1b278a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d771a3e8bbd64a71fbcd29d7dcc87c" id="r_aa1d771a3e8bbd64a71fbcd29d7dcc87c"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa1d771a3e8bbd64a71fbcd29d7dcc87c">GetMiddlewareName</a> () const override</td></tr>
<tr class="memdesc:aa1d771a3e8bbd64a71fbcd29d7dcc87c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the audio middleware implementation name. e.g. "FMOD", "Wwise", "Amplitude", etc.  <br /></td></tr>
<tr class="separator:aa1d771a3e8bbd64a71fbcd29d7dcc87c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a8cf2539599bb0d39997dcba37362c8" id="r_a2a8cf2539599bb0d39997dcba37362c8"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2a8cf2539599bb0d39997dcba37362c8">GetMasterGain</a> () const override</td></tr>
<tr class="memdesc:a2a8cf2539599bb0d39997dcba37362c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the audio middleware's master gain.  <br /></td></tr>
<tr class="separator:a2a8cf2539599bb0d39997dcba37362c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7febdfb63cbddfff8fd1b2a8c3a6764" id="r_aa7febdfb63cbddfff8fd1b2a8c3a6764"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa7febdfb63cbddfff8fd1b2a8c3a6764">GetMute</a> () const override</td></tr>
<tr class="memdesc:aa7febdfb63cbddfff8fd1b2a8c3a6764"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets the audio middleware's muted state.  <br /></td></tr>
<tr class="separator:aa7febdfb63cbddfff8fd1b2a8c3a6764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5259f763be0269dc2a2ae8c59c184ee" id="r_aa5259f763be0269dc2a2ae8c59c184ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa5259f763be0269dc2a2ae8c59c184ee">OnMasterGainChange</a> (float fGain) override</td></tr>
<tr class="memdesc:aa5259f763be0269dc2a2ae8c59c184ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called each time the master gain value change.  <br /></td></tr>
<tr class="separator:aa5259f763be0269dc2a2ae8c59c184ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a582d207135ed64fc2a87c67599c1512b" id="r_a582d207135ed64fc2a87c67599c1512b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a582d207135ed64fc2a87c67599c1512b">OnMuteChange</a> (bool bMute) override</td></tr>
<tr class="memdesc:a582d207135ed64fc2a87c67599c1512b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called when the audio middleware should toggle the muted state. \paarm bMute The muted state.  <br /></td></tr>
<tr class="separator:a582d207135ed64fc2a87c67599c1512b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6cb573adf42c70d381ee810848ae4a7" id="r_af6cb573adf42c70d381ee810848ae4a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af6cb573adf42c70d381ee810848ae4a7">OnLoseFocus</a> () override</td></tr>
<tr class="memdesc:af6cb573adf42c70d381ee810848ae4a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called each time the game application window loses focus.  <br /></td></tr>
<tr class="separator:af6cb573adf42c70d381ee810848ae4a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8eacde4cc5901ccf585671a3385f7a61" id="r_a8eacde4cc5901ccf585671a3385f7a61"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8eacde4cc5901ccf585671a3385f7a61">OnGainFocus</a> () override</td></tr>
<tr class="memdesc:a8eacde4cc5901ccf585671a3385f7a61"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called each time the game application window gains focus.  <br /></td></tr>
<tr class="separator:a8eacde4cc5901ccf585671a3385f7a61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa384b036344c286f39f13861cffd43b5" id="r_aa384b036344c286f39f13861cffd43b5"><td class="memItemLeft" align="right" valign="top"><a id="aa384b036344c286f39f13861cffd43b5" name="aa384b036344c286f39f13861cffd43b5"></a>
SparkyStudios::Audio::Amplitude::Engine *&#160;</td><td class="memItemRight" valign="bottom"><b>GetEngine</b> () const</td></tr>
<tr class="separator:aa384b036344c286f39f13861cffd43b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a820a85c8c3be5ab47f5bb3af163194" id="r_a7a820a85c8c3be5ab47f5bb3af163194"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7a820a85c8c3be5ab47f5bb3af163194">DeserializeBankEntry</a> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *pBankEntry)</td></tr>
<tr class="memdesc:a7a820a85c8c3be5ab47f5bb3af163194"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the entry in the controls collection that represent a bank.  <br /></td></tr>
<tr class="separator:a7a820a85c8c3be5ab47f5bb3af163194"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6a463a4b3df8fe15dd471a2000924b6" id="r_ab6a463a4b3df8fe15dd471a2000924b6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab6a463a4b3df8fe15dd471a2000924b6">DeserializeTriggerEntry</a> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *pTriggerEntry) const</td></tr>
<tr class="memdesc:ab6a463a4b3df8fe15dd471a2000924b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the entry in the controls collection that represent a trigger.  <br /></td></tr>
<tr class="separator:ab6a463a4b3df8fe15dd471a2000924b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3a3f982f46dbaa617e8e2b6a187f51c" id="r_ad3a3f982f46dbaa617e8e2b6a187f51c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad3a3f982f46dbaa617e8e2b6a187f51c">DeserializeRtpcEntry</a> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *pRtpcEntry) const</td></tr>
<tr class="memdesc:ad3a3f982f46dbaa617e8e2b6a187f51c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the entry in the controls collection that represent a rtpc.  <br /></td></tr>
<tr class="separator:ad3a3f982f46dbaa617e8e2b6a187f51c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab25b4bea7353ccd2e2cea82a2a84f50b" id="r_ab25b4bea7353ccd2e2cea82a2a84f50b"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab25b4bea7353ccd2e2cea82a2a84f50b">DeserializeSwitchStateEntry</a> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *pSwitchStateEntry) const</td></tr>
<tr class="memdesc:ab25b4bea7353ccd2e2cea82a2a84f50b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the entry in the controls collection that represent a switch state.  <br /></td></tr>
<tr class="separator:ab25b4bea7353ccd2e2cea82a2a84f50b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9af87cac6cf8c861f1b831f406b933f" id="r_ac9af87cac6cf8c861f1b831f406b933f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac9af87cac6cf8c861f1b831f406b933f">DeserializeEnvironmentEntry</a> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *pEnvironmentEntry) const</td></tr>
<tr class="memdesc:ac9af87cac6cf8c861f1b831f406b933f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses the entry in the controls collection that represent a environment effect.  <br /></td></tr>
<tr class="separator:ac9af87cac6cf8c861f1b831f406b933f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a90e4c5ef4bb30a18125d73fcaa7bdf3d" id="r_a90e4c5ef4bb30a18125d73fcaa7bdf3d"><td class="memItemLeft" align="right" valign="top"><a id="a90e4c5ef4bb30a18125d73fcaa7bdf3d" name="a90e4c5ef4bb30a18125d73fcaa7bdf3d"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>GameApplicationEventHandler</b> (const <a class="el" href="../../de/d5f/structpl_game_application_execution_event.htm">plGameApplicationExecutionEvent</a> &amp;e)</td></tr>
<tr class="separator:a90e4c5ef4bb30a18125d73fcaa7bdf3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The Amplitude Audio Middleware. </p>
<p>This class implements the <a class="el" href="../../db/d7c/classpl_audio_middleware.htm" title="The Audio Middleware Interface. This interface should be implemented by the ATL middleware to communi...">plAudioMiddleware</a> interface of the Audio System and allows the audio system to execute audio requests through Amplitude Audio. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ac112a4d2f3d9a5e879cff4d39b6dac6b" name="ac112a4d2f3d9a5e879cff4d39b6dac6b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac112a4d2f3d9a5e879cff4d39b6dac6b">&#9670;&#160;</a></span>ActivateTrigger()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::ActivateTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Triggers an event on an entity. A trigger is everything which can affect the state of an event. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which trigger the event. </td></tr>
    <tr><td class="paramname">pTriggerData</td><td>The event trigger. Can't be modified here. </td></tr>
    <tr><td class="paramname">pEventData</td><td>The triggered event. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#aa507654df5c071e628134767b67e138f">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="abbd2d0193d9b8749a8ae305ee331bdad" name="abbd2d0193d9b8749a8ae305ee331bdad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbd2d0193d9b8749a8ae305ee331bdad">&#9670;&#160;</a></span>AddEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::AddEntity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szEntityName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add/register an entity in the audio middleware. This is needed in order to provide transformation values (position and orientation), execute triggers (play sounds), and set real-time parameters or switches. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity that should be added in the audio middleware. </td></tr>
    <tr><td class="paramname">szEntityName</td><td>The name of the game object representing that entity. (Can be used for debug purposes) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#abcccc60b9af2f55129b0f8707e7da50e">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="ae3c45202af1ed9653411ef0f0cebf29f" name="ae3c45202af1ed9653411ef0f0cebf29f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3c45202af1ed9653411ef0f0cebf29f">&#9670;&#160;</a></span>AddListener()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::AddListener </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szListenerName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Add/register a listener in the audio middleware. This is needed to let the middleware know where to render audio, and to provide transformation values (position and orientation). </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener that should be added in the audio middleware. </td></tr>
    <tr><td class="paramname">szListenerName</td><td>The name of the game object representing that listener. (Can be used for debug purposes) </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a96fcf2caa535941a381d8b22f1b16090">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="acb124811b1fc7f4257197f8a007237f1" name="acb124811b1fc7f4257197f8a007237f1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acb124811b1fc7f4257197f8a007237f1">&#9670;&#160;</a></span>CreateEntityData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> * plAmplitude::CreateEntityData </td>
          <td>(</td>
          <td class="paramtype">plAudioSystemDataID</td>          <td class="paramname"><span class="paramname"><em>uiEntityId</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an audio entity that is attached to a game object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiEntityId</td><td>The game object ID referencing the new audio entity. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created entity data, or nullptr if it was not created. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a4900a2a276deb4a5c56e77f08c52f4f4">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a81e08f497339255e8ce647a0bbdd5365" name="a81e08f497339255e8ce647a0bbdd5365"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81e08f497339255e8ce647a0bbdd5365">&#9670;&#160;</a></span>CreateEventData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> * plAmplitude::CreateEventData </td>
          <td>(</td>
          <td class="paramtype">plAudioSystemDataID</td>          <td class="paramname"><span class="paramname"><em>uiEventId</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an audio event that is attached to a game object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiEventId</td><td>The game object ID referencing the new audio event. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created event data, or nullptr if it was not created. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a5acc9b8ba70ef65f9bc7eb936b1134d9">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="aefa98d6c5de6aa806ddcd84778325630" name="aefa98d6c5de6aa806ddcd84778325630"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefa98d6c5de6aa806ddcd84778325630">&#9670;&#160;</a></span>CreateListenerData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> * plAmplitude::CreateListenerData </td>
          <td>(</td>
          <td class="paramtype">plAudioSystemDataID</td>          <td class="paramname"><span class="paramname"><em>uiListenerId</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an audio listener that is attached to a game object. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiListenerId</td><td>The game object ID referencing the new audio listener. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created listener data, or nullptr if it was not created. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a2175fc29dfad62985aaabe8fadec6e5f">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a8be6887231a161507a07e8a5b3890adb" name="a8be6887231a161507a07e8a5b3890adb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8be6887231a161507a07e8a5b3890adb">&#9670;&#160;</a></span>CreateWorldEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> * plAmplitude::CreateWorldEntity </td>
          <td>(</td>
          <td class="paramtype">plAudioSystemDataID</td>          <td class="paramname"><span class="paramname"><em>uiEntityId</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a world entity. This is a special entity used by non-spatial sounds. The engine will take care to create a game object at position (0,0,0) and orientation (0,0,0,1), and pass the game object ID as parameter to this function. The game object is ensured to never move nor rotate. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiEntityId</td><td>The game object ID referencing the new audio entity. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created entity data, or nullptr if it was not created. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a841b7c9f9ce9232bb0465c369fe70db8">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a7a820a85c8c3be5ab47f5bb3af163194" name="a7a820a85c8c3be5ab47f5bb3af163194"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7a820a85c8c3be5ab47f5bb3af163194">&#9670;&#160;</a></span>DeserializeBankEntry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> * plAmplitude::DeserializeBankEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *</td>          <td class="paramname"><span class="paramname"><em>pBankEntry</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses the entry in the controls collection that represent a bank. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBankEntry</td><td>The stream storing the bank entry. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created bank data, or nullptr if no bank was created. </dd></dl>

</div>
</div>
<a id="ac9af87cac6cf8c861f1b831f406b933f" name="ac9af87cac6cf8c861f1b831f406b933f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac9af87cac6cf8c861f1b831f406b933f">&#9670;&#160;</a></span>DeserializeEnvironmentEntry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> * plAmplitude::DeserializeEnvironmentEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *</td>          <td class="paramname"><span class="paramname"><em>pEnvironmentEntry</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses the entry in the controls collection that represent a environment effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEnvironmentEntry</td><td>The stream storing the environment effect entry. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created environment effect data, or nullptr if no environment effect was created. </dd></dl>

</div>
</div>
<a id="ad3a3f982f46dbaa617e8e2b6a187f51c" name="ad3a3f982f46dbaa617e8e2b6a187f51c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad3a3f982f46dbaa617e8e2b6a187f51c">&#9670;&#160;</a></span>DeserializeRtpcEntry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> * plAmplitude::DeserializeRtpcEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *</td>          <td class="paramname"><span class="paramname"><em>pRtpcEntry</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses the entry in the controls collection that represent a rtpc. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pRtpcEntry</td><td>The stream storing the rtpc entry. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created rtpc data, or nullptr if no rtpc was created. </dd></dl>

</div>
</div>
<a id="ab25b4bea7353ccd2e2cea82a2a84f50b" name="ab25b4bea7353ccd2e2cea82a2a84f50b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab25b4bea7353ccd2e2cea82a2a84f50b">&#9670;&#160;</a></span>DeserializeSwitchStateEntry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> * plAmplitude::DeserializeSwitchStateEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *</td>          <td class="paramname"><span class="paramname"><em>pSwitchStateEntry</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses the entry in the controls collection that represent a switch state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pSwitchStateEntry</td><td>The stream storing the switch state entry. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created switch state data, or nullptr if no switch state was created. </dd></dl>

</div>
</div>
<a id="ab6a463a4b3df8fe15dd471a2000924b6" name="ab6a463a4b3df8fe15dd471a2000924b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6a463a4b3df8fe15dd471a2000924b6">&#9670;&#160;</a></span>DeserializeTriggerEntry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> * plAmplitude::DeserializeTriggerEntry </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerEntry</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Parses the entry in the controls collection that represent a trigger. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTriggerEntry</td><td>The stream storing the event entry. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The created trigger data, or nullptr if no trigger was created. </dd></dl>

</div>
</div>
<a id="a22153a99e31c5a31cc0e2072597312ab" name="a22153a99e31c5a31cc0e2072597312ab"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a22153a99e31c5a31cc0e2072597312ab">&#9670;&#160;</a></span>DestroyBank()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::DestroyBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *</td>          <td class="paramname"><span class="paramname"><em>pBankData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio bank and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBankData</td><td>The bank data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#ae4493c93d4d4eae056b84e951b21a70a">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="aa69a3830ac9cb1a304b7d43003c2a846" name="aa69a3830ac9cb1a304b7d43003c2a846"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa69a3830ac9cb1a304b7d43003c2a846">&#9670;&#160;</a></span>DestroyEntityData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::DestroyEntityData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio entity and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a3e3abef1b99ec304fdd25e5db4c907e2">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a3c853d5424c4bdfd48f3328914036a25" name="a3c853d5424c4bdfd48f3328914036a25"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3c853d5424c4bdfd48f3328914036a25">&#9670;&#160;</a></span>DestroyEnvironmentData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::DestroyEnvironmentData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEnvironmentData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio environment effect and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEnvironmentData</td><td>The environment effect data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#ad8c469aa892ef6ccaeb9ff68e0c51f10">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="ab22720d53b0f153c091dad21a337db96" name="ab22720d53b0f153c091dad21a337db96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab22720d53b0f153c091dad21a337db96">&#9670;&#160;</a></span>DestroyEventData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::DestroyEventData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio event and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEventData</td><td>The event data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a1a25ebb8f3a23809de4b9d908db28762">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a1421b30b4115e7b87808556a083fd913" name="a1421b30b4115e7b87808556a083fd913"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1421b30b4115e7b87808556a083fd913">&#9670;&#160;</a></span>DestroyListenerData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::DestroyListenerData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio listener and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a760abb29cd7b4ca18dfc092ec1fa6137">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a605c319840c84b7532ae2b14cd91a9ca" name="a605c319840c84b7532ae2b14cd91a9ca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a605c319840c84b7532ae2b14cd91a9ca">&#9670;&#160;</a></span>DestroyRtpcData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::DestroyRtpcData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *</td>          <td class="paramname"><span class="paramname"><em>pRtpcData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio rtpc and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pRtpcData</td><td>The rtpc data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a4de2a28872f7035a910e26ec468bf8c6">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a99b77241076a1fb43c1fe60fe478ef65" name="a99b77241076a1fb43c1fe60fe478ef65"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a99b77241076a1fb43c1fe60fe478ef65">&#9670;&#160;</a></span>DestroySwitchStateData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::DestroySwitchStateData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *</td>          <td class="paramname"><span class="paramname"><em>pSwitchStateData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio switch state and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pSwitchStateData</td><td>The switch state data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a03c95391ba15232ad9f4841295e18348">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a4296c6e0ded5f969767ecaa23fd41564" name="a4296c6e0ded5f969767ecaa23fd41564"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4296c6e0ded5f969767ecaa23fd41564">&#9670;&#160;</a></span>DestroyTriggerData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::DestroyTriggerData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys an audio trigger and release memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTriggerData</td><td>The trigger data to destroy. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#ae93f0941de83ad84215554603f6d7883">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a2a8cf2539599bb0d39997dcba37362c8" name="a2a8cf2539599bb0d39997dcba37362c8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a8cf2539599bb0d39997dcba37362c8">&#9670;&#160;</a></span>GetMasterGain()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float plAmplitude::GetMasterGain </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the audio middleware's master gain. </p>
<dl class="section return"><dt>Returns</dt><dd>The master gain. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#acf1bf309a723a17c5dd8a1ab13aed19f">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="aa1d771a3e8bbd64a71fbcd29d7dcc87c" name="aa1d771a3e8bbd64a71fbcd29d7dcc87c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1d771a3e8bbd64a71fbcd29d7dcc87c">&#9670;&#160;</a></span>GetMiddlewareName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * plAmplitude::GetMiddlewareName </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the audio middleware implementation name. e.g. "FMOD", "Wwise", "Amplitude", etc. </p>
<dl class="section return"><dt>Returns</dt><dd>The name of the audio middleware. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#acf09d7a496e00a69be69d4be40f9030f">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="aa7febdfb63cbddfff8fd1b2a8c3a6764" name="aa7febdfb63cbddfff8fd1b2a8c3a6764"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa7febdfb63cbddfff8fd1b2a8c3a6764">&#9670;&#160;</a></span>GetMute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plAmplitude::GetMute </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">nodiscard</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets the audio middleware's muted state. </p>
<dl class="section return"><dt>Returns</dt><dd>The muted state. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a425870198e62a874d5216706309ce1ab">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a3f6b8dcb08c35bc819039831b5219cf2" name="a3f6b8dcb08c35bc819039831b5219cf2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f6b8dcb08c35bc819039831b5219cf2">&#9670;&#160;</a></span>LoadBank()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::LoadBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *</td>          <td class="paramname"><span class="paramname"><em>pBankData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads a bank file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBankData</td><td>The bank data used for loading. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#aec884f690053de2ea41e30e149c3d889">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a4a97e4fbf5b445fe5bf450d9a8f08b0f" name="a4a97e4fbf5b445fe5bf450d9a8f08b0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a97e4fbf5b445fe5bf450d9a8f08b0f">&#9670;&#160;</a></span>LoadConfiguration()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::LoadConfiguration </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d5d/classpl_open_ddl_reader_element.htm">plOpenDdlReaderElement</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>reader</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads the middleware-specif configuration from the ATL config file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">reader</td><td>The DDL file reader. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#af5442701bfd93d59c22027a9474edeb6">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="ae4ed845ae8a50acc1daf5a862beaa95f" name="ae4ed845ae8a50acc1daf5a862beaa95f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae4ed845ae8a50acc1daf5a862beaa95f">&#9670;&#160;</a></span>LoadTrigger()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::LoadTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Loads a trigger for a further activation. All the data and media needed by the trigger will be loaded. Once done, the trigger status will change to Ready. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a9778cf524045f178abf923c2c71a9b59">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a8eacde4cc5901ccf585671a3385f7a61" name="a8eacde4cc5901ccf585671a3385f7a61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8eacde4cc5901ccf585671a3385f7a61">&#9670;&#160;</a></span>OnGainFocus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plAmplitude::OnGainFocus </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called each time the game application window gains focus. </p>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#aba586ceb244af2b090e5509fd6d66fd0">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="af6cb573adf42c70d381ee810848ae4a7" name="af6cb573adf42c70d381ee810848ae4a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af6cb573adf42c70d381ee810848ae4a7">&#9670;&#160;</a></span>OnLoseFocus()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plAmplitude::OnLoseFocus </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called each time the game application window loses focus. </p>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a6b4a85b8e3a22199defd06cc916a64d5">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="aa5259f763be0269dc2a2ae8c59c184ee" name="aa5259f763be0269dc2a2ae8c59c184ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa5259f763be0269dc2a2ae8c59c184ee">&#9670;&#160;</a></span>OnMasterGainChange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plAmplitude::OnMasterGainChange </td>
          <td>(</td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fGain</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called each time the master gain value change. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fGain</td><td>The master gain value. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#abf3e1154f54207a02c1e085b743a96c0">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a582d207135ed64fc2a87c67599c1512b" name="a582d207135ed64fc2a87c67599c1512b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a582d207135ed64fc2a87c67599c1512b">&#9670;&#160;</a></span>OnMuteChange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plAmplitude::OnMuteChange </td>
          <td>(</td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bMute</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Called when the audio middleware should toggle the muted state. \paarm bMute The muted state. </p>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a7685c7df3227edbab85542a540af7e67">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="ade4dde613ea9e735da8d3dbe8da522fe" name="ade4dde613ea9e735da8d3dbe8da522fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ade4dde613ea9e735da8d3dbe8da522fe">&#9670;&#160;</a></span>Release()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::Release </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destroys all the resources allocated by the audio middleware. This is usually called after Shutdown. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when audio middleware resources was successfully released, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#ad8c8b8ac298009a931634e6eb835af58">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="adc25e56875ca8ba71f9419e8d3119565" name="adc25e56875ca8ba71f9419e8d3119565"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc25e56875ca8ba71f9419e8d3119565">&#9670;&#160;</a></span>RemoveEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::RemoveEntity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove/unregister an entity from the audio middleware. This action disable the possibility to execute triggers, set real-time parameters or switches, and update the position of the entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity that should be removed from the audio middleware. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#af0e1ac91c05bc0a8dd5acbfc96160049">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a230a959bcf5f286105c8db7c9fb8a33a" name="a230a959bcf5f286105c8db7c9fb8a33a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a230a959bcf5f286105c8db7c9fb8a33a">&#9670;&#160;</a></span>RemoveListener()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::RemoveListener </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Remove/unregister a listener from the audio middleware. This action disable the possibility to update the position of the listener. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener that should be removed from the audio middleware. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a1c8d5db394307cc692aebb80e21eea6e">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a341ebd6e30ffcb1b487c1b66fb53323e" name="a341ebd6e30ffcb1b487c1b66fb53323e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a341ebd6e30ffcb1b487c1b66fb53323e">&#9670;&#160;</a></span>ResetEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::ResetEntity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets an entity state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity that should be reset. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a48262d59bd2e529d6547954e3c893c40">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="ab6ba9e6d5fd5860cb046b030135fbd7f" name="ab6ba9e6d5fd5860cb046b030135fbd7f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab6ba9e6d5fd5860cb046b030135fbd7f">&#9670;&#160;</a></span>ResetEventData()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::ResetEventData </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets the audio event state, so it can safely recycled in the pool. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEventData</td><td>The event data to reset. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a23007efa87b0fef1a1c05cf878038752">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="ad6f9ce9e69f71b65413b3b605023f7b0" name="ad6f9ce9e69f71b65413b3b605023f7b0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad6f9ce9e69f71b65413b3b605023f7b0">&#9670;&#160;</a></span>ResetListener()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::ResetListener </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets a listener state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener that should be reset. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a9c1305b79e60fbf45f9cbbf37f3abf93">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a2b070f043a0463c90374cad762ed8698" name="a2b070f043a0463c90374cad762ed8698"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2b070f043a0463c90374cad762ed8698">&#9670;&#160;</a></span>ResetRtpc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::ResetRtpc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *</td>          <td class="paramname"><span class="paramname"><em>pRtpcData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Resets an audio RTPC to the default value on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which reset the rtpc value. </td></tr>
    <tr><td class="paramname">pRtpcData</td><td>The rtpc data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a5d78a0c441e4d23f7b2b163e7209dfba">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a75bfd92931ef2019d7b306167a554fc0" name="a75bfd92931ef2019d7b306167a554fc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75bfd92931ef2019d7b306167a554fc0">&#9670;&#160;</a></span>SetEntityTransform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::SetEntityTransform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d1/da2/structpl_audio_system_transform.htm">plAudioSystemTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>Transform</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the global position (world position) of an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the global position. </td></tr>
    <tr><td class="paramname">Transform</td><td>The global transform of the entity. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a1d187fae7e703bf3236838df701cddde">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a52fd28b025bf49b360ca2513efa83141" name="a52fd28b025bf49b360ca2513efa83141"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a52fd28b025bf49b360ca2513efa83141">&#9670;&#160;</a></span>SetEnvironmentAmount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::SetEnvironmentAmount </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/d99/classpl_audio_system_environment_data.htm">plAudioSystemEnvironmentData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEnvironmentData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fAmount</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the amount of an audio environment effect associated on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the environment effect value. </td></tr>
    <tr><td class="paramname">pEnvironmentData</td><td>The environment effect data. </td></tr>
    <tr><td class="paramname">fAmount</td><td>The environment effect value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a1651c0dc0cead700fda81d9623d92540">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="aad5aa8367dbd3a8d0796e1439c1b278a" name="aad5aa8367dbd3a8d0796e1439c1b278a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad5aa8367dbd3a8d0796e1439c1b278a">&#9670;&#160;</a></span>SetLanguage()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::SetLanguage </td>
          <td>(</td>
          <td class="paramtype">const char *</td>          <td class="paramname"><span class="paramname"><em>szLanguage</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the language used by the audio middleware. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szLanguage</td><td>The language to use. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a22194d840c9e6468748d33e7bbbc5c79">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a31e5ad70c3b9f2360c313feb779885de" name="a31e5ad70c3b9f2360c313feb779885de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a31e5ad70c3b9f2360c313feb779885de">&#9670;&#160;</a></span>SetListenerTransform()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::SetListenerTransform </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/df7/classpl_audio_system_listener_data.htm">plAudioSystemListenerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pListenerData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d1/da2/structpl_audio_system_transform.htm">plAudioSystemTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>Transform</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the global transform (wold position and orientation) of a listener. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pListenerData</td><td>The listener data. </td></tr>
    <tr><td class="paramname">Transform</td><td>The global transformation of the listener. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a3368f0eef9687b9045f4336a7d7738f0">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a718454e116e210426e4b4c3e4f53d1d5" name="a718454e116e210426e4b4c3e4f53d1d5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a718454e116e210426e4b4c3e4f53d1d5">&#9670;&#160;</a></span>SetObstructionAndOcclusion()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::SetObstructionAndOcclusion </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fObstruction</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fOcclusion</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets the obstruction and occlusion values on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the obstruction and occlusion values. </td></tr>
    <tr><td class="paramname">fObstruction</td><td>The obstruction value. </td></tr>
    <tr><td class="paramname">fOcclusion</td><td>The occlusion value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a0e7cef636b70fb0c8f15fec63605b796">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a8069d7b301be0f9ce48eeab32306248d" name="a8069d7b301be0f9ce48eeab32306248d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8069d7b301be0f9ce48eeab32306248d">&#9670;&#160;</a></span>SetRtpc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::SetRtpc </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d8/dc9/classpl_audio_system_rtpc_data.htm">plAudioSystemRtpcData</a> *</td>          <td class="paramname"><span class="paramname"><em>pRtpcData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fValue</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets an audio RTPC to the specified value on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the rtpc value. </td></tr>
    <tr><td class="paramname">pRtpcData</td><td>The rtpc data. </td></tr>
    <tr><td class="paramname">fValue</td><td>The rtpc value. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a9ef3bce97bd11e77a9ced6436a80532b">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a126fa7d3260946dbbe4e501e5e292d0e" name="a126fa7d3260946dbbe4e501e5e292d0e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a126fa7d3260946dbbe4e501e5e292d0e">&#9670;&#160;</a></span>SetSwitchState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::SetSwitchState </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/d6a/classpl_audio_system_switch_state_data.htm">plAudioSystemSwitchStateData</a> *</td>          <td class="paramname"><span class="paramname"><em>pSwitchStateData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Sets an audio switch to the specified state on an entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which set the switch value. </td></tr>
    <tr><td class="paramname">pSwitchStateData</td><td>The switch state data. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a446fd7aa2bf694118d647db441db96a0">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a2300bbf538da50c54e8f7d97988c53e9" name="a2300bbf538da50c54e8f7d97988c53e9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2300bbf538da50c54e8f7d97988c53e9">&#9670;&#160;</a></span>Shutdown()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::Shutdown </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deinitializes and stop the audio middleware. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the audio middleware was successfully stopped, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a12639a3dcf49965f42e2335c5f1a4480">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="aa1ba4d560ef1d84c1ed06752fffebe4e" name="aa1ba4d560ef1d84c1ed06752fffebe4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa1ba4d560ef1d84c1ed06752fffebe4e">&#9670;&#160;</a></span>Startup()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::Startup </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes the audio middleware. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the audio middleware was successfully initialized, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a35e3a523a9d80e80b7f65fe11ced7af6">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a5ac57d31ab0dd0009ad9c2d2a751a1ac" name="a5ac57d31ab0dd0009ad9c2d2a751a1ac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ac57d31ab0dd0009ad9c2d2a751a1ac">&#9670;&#160;</a></span>StopAllEvents()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::StopAllEvents </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stops all events active on the given entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which stop all events. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a6dd17b60adf952e08065fae9e2b00c2a">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a2c04b7f39c323a359cbcc1ca376a1197" name="a2c04b7f39c323a359cbcc1ca376a1197"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c04b7f39c323a359cbcc1ca376a1197">&#9670;&#160;</a></span>StopAllSounds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::StopAllSounds </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stops all the sounds actually played by the audio middleware. </p>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a9c017504e91280221adc8eb65babc794">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="ab73ad881e9dec31159e837fe2c258b1e" name="ab73ad881e9dec31159e837fe2c258b1e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab73ad881e9dec31159e837fe2c258b1e">&#9670;&#160;</a></span>StopEvent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::StopEvent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/db6/classpl_audio_system_event_data.htm">plAudioSystemEventData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEventData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stops an event on the given entity. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which stop the event. </td></tr>
    <tr><td class="paramname">pEventData</td><td>The event to stop. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a886b68af0aa2c16181278b94b2e6a404">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="a779ef00676824eef1c5d90fa25661a03" name="a779ef00676824eef1c5d90fa25661a03"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a779ef00676824eef1c5d90fa25661a03">&#9670;&#160;</a></span>UnloadBank()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::UnloadBank </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d7/d10/classpl_audio_system_bank_data.htm">plAudioSystemBankData</a> *</td>          <td class="paramname"><span class="paramname"><em>pBankData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unloads a bank file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBankData</td><td>The bank data used for unloading. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#a8d0b65757a731b1626a558f77d3f39fc">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="ac28a54f2d41f0d3ac0f0d109f06db23d" name="ac28a54f2d41f0d3ac0f0d109f06db23d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac28a54f2d41f0d3ac0f0d109f06db23d">&#9670;&#160;</a></span>UnloadTrigger()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::UnloadTrigger </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/d0b/classpl_audio_system_trigger_data.htm">plAudioSystemTriggerData</a> *</td>          <td class="paramname"><span class="paramname"><em>pTriggerData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Unload the trigger. This is called when the trigger and all data loaded during LoadTrigger need to be disposed. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity on which trigger the event. </td></tr>
    <tr><td class="paramname">pTriggerData</td><td>The event trigger. Can't be modified here. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#aabf4f719f583f319437373bb4344c583">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="af69cec2aae939e8cfb9d701cac6a5a54" name="af69cec2aae939e8cfb9d701cac6a5a54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af69cec2aae939e8cfb9d701cac6a5a54">&#9670;&#160;</a></span>Update()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plAmplitude::Update </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d1/df6/structpl_time.htm">plTime</a></td>          <td class="paramname"><span class="paramname"><em>delta</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates the audio middleware. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">delta</td><td>The elapsed time since the last update. </td></tr>
  </table>
  </dd>
</dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#afefc6bcc069285f97552ca65adb411f0">plAudioMiddleware</a>.</p>

</div>
</div>
<a id="aa2d743af616c38e0d6f1537fa6d30031" name="aa2d743af616c38e0d6f1537fa6d30031"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa2d743af616c38e0d6f1537fa6d30031">&#9670;&#160;</a></span>UpdateEntity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plAmplitude::UpdateEntity </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/db2/classpl_audio_system_entity_data.htm">plAudioSystemEntityData</a> *</td>          <td class="paramname"><span class="paramname"><em>pEntityData</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Updates an entity state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pEntityData</td><td>The entity that should be updated. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>PL_SUCCESS when the operation is successful, PL_FAILURE otherwise. </dd></dl>

<p>Implements <a class="el" href="../../db/d7c/classpl_audio_middleware.htm#acee7f7fffa1019f5e9c672bdefff82e3">plAudioMiddleware</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/EnginePlugins/AudioSystem/AmplitudeAudioPlugin/<a class="el" href="../../de/d6e/_amplitude_audio_singleton_8h_source.htm">AmplitudeAudioSingleton.h</a></li>
<li>Code/EnginePlugins/AudioSystem/AmplitudeAudioPlugin/<b>AmplitudeAudioSingleton.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/da9/classpl_amplitude.htm">plAmplitude</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
