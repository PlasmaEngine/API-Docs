<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Foundation/Threading/Implementation/Posix/AtomicUtils_posix.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/d71/_atomic_utils__posix_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">AtomicUtils_posix.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifdef PL_ATOMICUTLS_POSIX_INL_H_INCLUDED</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#  error &quot;This file must not be included twice.&quot;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#define PL_ATOMICUTLS_POSIX_INL_H_INCLUDED</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="foldopen" id="foldopen00010" data-start="{" data-end="}">
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a82f21e4e3ff650724758518c4d0a0f77">   10</a></span>PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a82f21e4e3ff650724758518c4d0a0f77">plAtomicUtils::Read</a>(<span class="keyword">const</span> plInt32&amp; src)</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  <span class="keywordflow">return</span> __sync_fetch_and_or(<span class="keyword">const_cast&lt;</span>plInt32*<span class="keyword">&gt;</span>(&amp;src), 0);</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>}</div>
</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="}">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a04287ac90ee292c22ef984a9ae3e2157">   15</a></span>PL_ALWAYS_INLINE plInt64 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a82f21e4e3ff650724758518c4d0a0f77">plAtomicUtils::Read</a>(<span class="keyword">const</span> plInt64&amp; src)</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keywordflow">return</span> __sync_fetch_and_or_8(<span class="keyword">const_cast&lt;</span>plInt64*<span class="keyword">&gt;</span>(&amp;src), 0);</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>}</div>
</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="foldopen" id="foldopen00020" data-start="{" data-end="}">
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#aabb99d05a2261f37d42dfa9c3e896b89">   20</a></span>PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#aabb99d05a2261f37d42dfa9c3e896b89">plAtomicUtils::Increment</a>(plInt32&amp; dest)</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>{</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <span class="keywordflow">return</span> __sync_add_and_fetch(&amp;dest, 1);</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>}</div>
</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="foldopen" id="foldopen00025" data-start="{" data-end="}">
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a78296ee692d746e9cb116e18fb500551">   25</a></span>PL_ALWAYS_INLINE plInt64 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#aabb99d05a2261f37d42dfa9c3e896b89">plAtomicUtils::Increment</a>(plInt64&amp; dest)</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>{</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <span class="keywordflow">return</span> __sync_add_and_fetch_8(&amp;dest, 1);</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>}</div>
</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a0be0beb627aa2cf504f23b426ae14ee7">   31</a></span>PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a0be0beb627aa2cf504f23b426ae14ee7">plAtomicUtils::Decrement</a>(plInt32&amp; dest)</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>{</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="keywordflow">return</span> __sync_sub_and_fetch(&amp;dest, 1);</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>}</div>
</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="foldopen" id="foldopen00036" data-start="{" data-end="}">
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a13f07e400ca688849e3e8b4e94064462">   36</a></span>PL_ALWAYS_INLINE plInt64 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a0be0beb627aa2cf504f23b426ae14ee7">plAtomicUtils::Decrement</a>(plInt64&amp; dest)</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>{</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keywordflow">return</span> __sync_sub_and_fetch_8(&amp;dest, 1);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>}</div>
</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="foldopen" id="foldopen00041" data-start="{" data-end="}">
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a997d3f381d9cb7d9bf6099c1b7017db7">   41</a></span>PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a997d3f381d9cb7d9bf6099c1b7017db7">plAtomicUtils::PostIncrement</a>(plInt32&amp; dest)</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>{</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <span class="keywordflow">return</span> __sync_fetch_and_add(&amp;dest, 1);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>}</div>
</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a3a926e2ae1fe1dc2974be9f8e7d971d1">   46</a></span>PL_ALWAYS_INLINE plInt64 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a997d3f381d9cb7d9bf6099c1b7017db7">plAtomicUtils::PostIncrement</a>(plInt64&amp; dest)</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>{</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keywordflow">return</span> __sync_fetch_and_add_8(&amp;dest, 1);</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>}</div>
</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="foldopen" id="foldopen00052" data-start="{" data-end="}">
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#ab7e863675defb33d13975774158c6da6">   52</a></span>PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#ab7e863675defb33d13975774158c6da6">plAtomicUtils::PostDecrement</a>(plInt32&amp; dest)</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>{</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <span class="keywordflow">return</span> __sync_fetch_and_sub(&amp;dest, 1);</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>}</div>
</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="foldopen" id="foldopen00057" data-start="{" data-end="}">
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#ade0501dd9c087bf76e5caebf6c19565c">   57</a></span>PL_ALWAYS_INLINE plInt64 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#ab7e863675defb33d13975774158c6da6">plAtomicUtils::PostDecrement</a>(plInt64&amp; dest)</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>{</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keywordflow">return</span> __sync_fetch_and_sub_8(&amp;dest, 1);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>}</div>
</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="foldopen" id="foldopen00062" data-start="{" data-end="}">
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a18c08fedb2e34f06b25c107dd26f713f">   62</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a18c08fedb2e34f06b25c107dd26f713f">plAtomicUtils::Add</a>(plInt32&amp; dest, plInt32 value)</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>{</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  __sync_fetch_and_add(&amp;dest, value);</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>}</div>
</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="}">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a867d68b402c530344c48b7b95e8ec341">   67</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a18c08fedb2e34f06b25c107dd26f713f">plAtomicUtils::Add</a>(plInt64&amp; dest, plInt64 value)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>{</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  __sync_fetch_and_add_8(&amp;dest, value);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>}</div>
</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="foldopen" id="foldopen00073" data-start="{" data-end="}">
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a8a0d6f94aa469e67eef4a5fa079fdb03">   73</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a8a0d6f94aa469e67eef4a5fa079fdb03">plAtomicUtils::And</a>(plInt32&amp; dest, plInt32 value)</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>{</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  __sync_fetch_and_and(&amp;dest, value);</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>}</div>
</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="foldopen" id="foldopen00078" data-start="{" data-end="}">
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a337308d7dc8c0a0eda78655f998cc561">   78</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a8a0d6f94aa469e67eef4a5fa079fdb03">plAtomicUtils::And</a>(plInt64&amp; dest, plInt64 value)</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>{</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  __sync_fetch_and_and_8(&amp;dest, value);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>}</div>
</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="foldopen" id="foldopen00084" data-start="{" data-end="}">
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a46f99064be7e82dad94f95b15fff019a">   84</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a46f99064be7e82dad94f95b15fff019a">plAtomicUtils::Or</a>(plInt32&amp; dest, plInt32 value)</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>{</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  __sync_fetch_and_or(&amp;dest, value);</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>}</div>
</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="foldopen" id="foldopen00089" data-start="{" data-end="}">
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a0717ca540e6b94c3805c3c1eb76d6b40">   89</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a46f99064be7e82dad94f95b15fff019a">plAtomicUtils::Or</a>(plInt64&amp; dest, plInt64 value)</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>{</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  __sync_fetch_and_or_8(&amp;dest, value);</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>}</div>
</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="foldopen" id="foldopen00095" data-start="{" data-end="}">
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a92771d38752c3591245baee422f81944">   95</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a92771d38752c3591245baee422f81944">plAtomicUtils::Xor</a>(plInt32&amp; dest, plInt32 value)</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>{</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  __sync_fetch_and_xor(&amp;dest, value);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>}</div>
</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="foldopen" id="foldopen00100" data-start="{" data-end="}">
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#ac3cf1c6aaf9ee651762a1483088d7f7b">  100</a></span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a92771d38752c3591245baee422f81944">plAtomicUtils::Xor</a>(plInt64&amp; dest, plInt64 value)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>{</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  __sync_fetch_and_xor_8(&amp;dest, value);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>}</div>
</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="foldopen" id="foldopen00106" data-start="{" data-end="}">
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a849e1718797d301bba7e1e3a53b189db">  106</a></span>PL_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a849e1718797d301bba7e1e3a53b189db">plAtomicUtils::Min</a>(plInt32&amp; dest, plInt32 value)</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>{</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  {</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    plInt32 iOldValue = dest;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    plInt32 iNewValue = <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">plMath::Min</a>(iOldValue, value);</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  }</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>}</div>
</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="foldopen" id="foldopen00119" data-start="{" data-end="}">
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#acd8ea050d741532789fa8fc0fdb6afc4">  119</a></span>PL_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a849e1718797d301bba7e1e3a53b189db">plAtomicUtils::Min</a>(plInt64&amp; dest, plInt64 value)</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>{</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  {</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    plInt64 iOldValue = dest;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    plInt64 iNewValue = <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">plMath::Min</a>(iOldValue, value);</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap_8(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  }</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>}</div>
</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="}">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#aada3493cbf0ea41477378ad591653be7">  133</a></span>PL_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#aada3493cbf0ea41477378ad591653be7">plAtomicUtils::Max</a>(plInt32&amp; dest, plInt32 value)</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>{</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  {</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>    plInt32 iOldValue = dest;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    plInt32 iNewValue = <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ad724a3f51a1faa9bcc3e6a53fd6b9a4f">plMath::Max</a>(iOldValue, value);</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  }</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>}</div>
</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="foldopen" id="foldopen00146" data-start="{" data-end="}">
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a46df850830ea3dd4c8fd260bbc3b2497">  146</a></span>PL_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#aada3493cbf0ea41477378ad591653be7">plAtomicUtils::Max</a>(plInt64&amp; dest, plInt64 value)</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>{</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  {</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>    plInt64 iOldValue = dest;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>    plInt64 iNewValue = <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ad724a3f51a1faa9bcc3e6a53fd6b9a4f">plMath::Max</a>(iOldValue, value);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap_8(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  }</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>}</div>
</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="foldopen" id="foldopen00160" data-start="{" data-end="}">
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#ab93143cdde83539f48ea2bc1d82d7596">  160</a></span>PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#ab93143cdde83539f48ea2bc1d82d7596">plAtomicUtils::Set</a>(plInt32&amp; dest, plInt32 value)</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>{</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  <span class="keywordflow">return</span> __sync_lock_test_and_set(&amp;dest, value);</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>}</div>
</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="foldopen" id="foldopen00165" data-start="{" data-end="}">
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a07d3434027e9849a9f5f4146cf4755d6">  165</a></span>PL_ALWAYS_INLINE plInt64 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#ab93143cdde83539f48ea2bc1d82d7596">plAtomicUtils::Set</a>(plInt64&amp; dest, plInt64 value)</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>{</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keywordflow">return</span> __sync_lock_test_and_set_8(&amp;dest, value);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>}</div>
</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="foldopen" id="foldopen00171" data-start="{" data-end="}">
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#afefb2b9dee34119364949556ebd4d877">  171</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#afefb2b9dee34119364949556ebd4d877">plAtomicUtils::TestAndSet</a>(plInt32&amp; dest, plInt32 expected, plInt32 value)</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>{</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(&amp;dest, expected, value);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>}</div>
</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="foldopen" id="foldopen00176" data-start="{" data-end="}">
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a7bac31bfdd9b5eb69a5bebc0caf9991f">  176</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#afefb2b9dee34119364949556ebd4d877">plAtomicUtils::TestAndSet</a>(plInt64&amp; dest, plInt64 expected, plInt64 value)</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>{</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  <span class="keywordflow">return</span> __sync_bool_compare_and_swap_8(&amp;dest, expected, value);</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>}</div>
</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="foldopen" id="foldopen00181" data-start="{" data-end="}">
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a38775cc42e5a6d46d4e2f9721911a69d">  181</a></span>PL_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#afefb2b9dee34119364949556ebd4d877">plAtomicUtils::TestAndSet</a>(<span class="keywordtype">void</span>** dest, <span class="keywordtype">void</span>* expected, <span class="keywordtype">void</span>* value)</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>{</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span><span class="preprocessor">#if PL_ENABLED(PL_PLATFORM_64BIT)</span></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  plUInt64* puiTemp = <span class="keyword">reinterpret_cast&lt;</span>plUInt64*<span class="keyword">&gt;</span>(dest);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(puiTemp, <span class="keyword">reinterpret_cast&lt;</span>plUInt64<span class="keyword">&gt;</span>(expected), <span class="keyword">reinterpret_cast&lt;</span>plUInt64<span class="keyword">&gt;</span>(value));</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  plUInt32* puiTemp = <span class="keyword">reinterpret_cast&lt;</span>plUInt32*<span class="keyword">&gt;</span>(dest);</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(puiTemp, <span class="keyword">reinterpret_cast&lt;</span>plUInt32<span class="keyword">&gt;</span>(expected), <span class="keyword">reinterpret_cast&lt;</span>plUInt32<span class="keyword">&gt;</span>(value));</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>}</div>
</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="foldopen" id="foldopen00192" data-start="{" data-end="}">
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#a1d9c408a29f946114c2efdde4b795425">  192</a></span>PL_ALWAYS_INLINE plInt32 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a1d9c408a29f946114c2efdde4b795425">plAtomicUtils::CompareAndSwap</a>(plInt32&amp; dest, plInt32 expected, plInt32 value)</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>{</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="keywordflow">return</span> __sync_val_compare_and_swap(&amp;dest, expected, value);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>}</div>
</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="foldopen" id="foldopen00197" data-start="{" data-end="}">
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno"><a class="line" href="../../d1/d0a/structpl_atomic_utils.htm#afa539c3157ff5ebd89d7d1938de74fa3">  197</a></span>PL_ALWAYS_INLINE plInt64 <a class="code hl_function" href="../../d1/d0a/structpl_atomic_utils.htm#a1d9c408a29f946114c2efdde4b795425">plAtomicUtils::CompareAndSwap</a>(plInt64&amp; dest, plInt64 expected, plInt64 value)</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>{</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  <span class="keywordflow">return</span> __sync_val_compare_and_swap_8(&amp;dest, expected, value);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>}</div>
</div>
<div class="ttc" id="anamespacepl_math_htm_a314b24989122e22968ae0a11cc872e28"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a314b24989122e22968ae0a11cc872e28">plMath::Min</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:27</div></div>
<div class="ttc" id="anamespacepl_math_htm_ad724a3f51a1faa9bcc3e6a53fd6b9a4f"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ad724a3f51a1faa9bcc3e6a53fd6b9a4f">plMath::Max</a></div><div class="ttdeci">constexpr PL_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:39</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a0be0beb627aa2cf504f23b426ae14ee7"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a0be0beb627aa2cf504f23b426ae14ee7">plAtomicUtils::Decrement</a></div><div class="ttdeci">static plInt32 Decrement(plInt32 &amp;ref_iDest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:31</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a18c08fedb2e34f06b25c107dd26f713f"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a18c08fedb2e34f06b25c107dd26f713f">plAtomicUtils::Add</a></div><div class="ttdeci">static void Add(plInt32 &amp;ref_iDest, plInt32 value)</div><div class="ttdoc">Adds value to dest as an atomic operation.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:62</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a1d9c408a29f946114c2efdde4b795425"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a1d9c408a29f946114c2efdde4b795425">plAtomicUtils::CompareAndSwap</a></div><div class="ttdeci">static plInt32 CompareAndSwap(plInt32 &amp;ref_iDest, plInt32 iExpected, plInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value. Otherwise dest will not be modified....</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:192</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a46f99064be7e82dad94f95b15fff019a"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a46f99064be7e82dad94f95b15fff019a">plAtomicUtils::Or</a></div><div class="ttdeci">static void Or(plInt32 &amp;ref_iDest, plInt32 value)</div><div class="ttdoc">Performs an atomic bitwise OR on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:84</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a82f21e4e3ff650724758518c4d0a0f77"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a82f21e4e3ff650724758518c4d0a0f77">plAtomicUtils::Read</a></div><div class="ttdeci">static plInt32 Read(const plInt32 &amp;iSrc)</div><div class="ttdoc">Returns src as an atomic operation and returns its value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:10</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a849e1718797d301bba7e1e3a53b189db"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a849e1718797d301bba7e1e3a53b189db">plAtomicUtils::Min</a></div><div class="ttdeci">static void Min(plInt32 &amp;ref_iDest, plInt32 value)</div><div class="ttdoc">Performs an atomic min operation on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:106</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a8a0d6f94aa469e67eef4a5fa079fdb03"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a8a0d6f94aa469e67eef4a5fa079fdb03">plAtomicUtils::And</a></div><div class="ttdeci">static void And(plInt32 &amp;ref_iDest, plInt32 value)</div><div class="ttdoc">Performs an atomic bitwise AND on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:73</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a92771d38752c3591245baee422f81944"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a92771d38752c3591245baee422f81944">plAtomicUtils::Xor</a></div><div class="ttdeci">static void Xor(plInt32 &amp;ref_iDest, plInt32 value)</div><div class="ttdoc">Performs an atomic bitwise XOR on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:95</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_a997d3f381d9cb7d9bf6099c1b7017db7"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#a997d3f381d9cb7d9bf6099c1b7017db7">plAtomicUtils::PostIncrement</a></div><div class="ttdeci">static plInt32 PostIncrement(plInt32 &amp;ref_iDest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:41</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_aabb99d05a2261f37d42dfa9c3e896b89"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#aabb99d05a2261f37d42dfa9c3e896b89">plAtomicUtils::Increment</a></div><div class="ttdeci">static plInt32 Increment(plInt32 &amp;ref_iDest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:20</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_aada3493cbf0ea41477378ad591653be7"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#aada3493cbf0ea41477378ad591653be7">plAtomicUtils::Max</a></div><div class="ttdeci">static void Max(plInt32 &amp;ref_iDest, plInt32 value)</div><div class="ttdoc">Performs an atomic max operation on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:133</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_ab7e863675defb33d13975774158c6da6"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#ab7e863675defb33d13975774158c6da6">plAtomicUtils::PostDecrement</a></div><div class="ttdeci">static plInt32 PostDecrement(plInt32 &amp;ref_iDest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:52</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_ab93143cdde83539f48ea2bc1d82d7596"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#ab93143cdde83539f48ea2bc1d82d7596">plAtomicUtils::Set</a></div><div class="ttdeci">static plInt32 Set(plInt32 &amp;ref_iDest, plInt32 value)</div><div class="ttdoc">Sets dest to value as an atomic operation and returns the original value of dest.</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:160</div></div>
<div class="ttc" id="astructpl_atomic_utils_htm_afefb2b9dee34119364949556ebd4d877"><div class="ttname"><a href="../../d1/d0a/structpl_atomic_utils.htm#afefb2b9dee34119364949556ebd4d877">plAtomicUtils::TestAndSet</a></div><div class="ttdeci">static bool TestAndSet(plInt32 &amp;ref_iDest, plInt32 iExpected, plInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value and returns true. Otherwise dest will ...</div><div class="ttdef"><b>Definition</b> AtomicUtils_posix.h:171</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_fa1ade104661ad34fb0eac087515bd03.htm">Threading</a></li><li class="navelem"><a class="el" href="../../dir_77c2a7b3f87a959c5e2db580e09710cd.htm">Implementation</a></li><li class="navelem"><a class="el" href="../../dir_cfafb5efeafe05f14a6ee7efa3a7ce8f.htm">Posix</a></li><li class="navelem"><b>AtomicUtils_posix.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
