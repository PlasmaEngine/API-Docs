<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Foundation/IO/Implementation/DeduplicationWriteContext_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/dcf/_deduplication_write_context__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">DeduplicationWriteContext_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="keyword">namespace </span>plInternal</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>{</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>  <span class="comment">// This internal helper is needed to differentiate between reference and pointer which is not possible with regular function overloading</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  <span class="comment">// in this case.</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00009" data-start="{" data-end="};">
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="../../d3/d2d/structpl_internal_1_1_write_object_helper.htm">    9</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d3/d2d/structpl_internal_1_1_write_object_helper.htm">WriteObjectHelper</a></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  {</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>    <span class="keyword">static</span> <span class="keyword">const</span> T* GetAddress(<span class="keyword">const</span> T&amp; obj) { <span class="keywordflow">return</span> &amp;obj; }</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  };</div>
</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="};">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../d3/d32/structpl_internal_1_1_write_object_helper_3_01_t_01_5_01_4.htm">   15</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d3/d2d/structpl_internal_1_1_write_object_helper.htm">WriteObjectHelper</a>&lt;T*&gt;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  {</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    <span class="keyword">static</span> <span class="keyword">const</span> T* GetAddress(<span class="keyword">const</span> T* pObj) { <span class="keywordflow">return</span> pObj; }</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  };</div>
</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>} <span class="comment">// namespace plInternal</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>PL_ALWAYS_INLINE <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">plDeduplicationWriteContext::WriteObject</a>(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> T&amp; obj)</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>{</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keywordflow">return</span> WriteObjectInternal(inout_stream, <a class="code hl_struct" href="../../d3/d2d/structpl_internal_1_1_write_object_helper.htm">plInternal::WriteObjectHelper&lt;T&gt;::GetAddress</a>(obj));</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>}</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>PL_ALWAYS_INLINE <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">plDeduplicationWriteContext::WriteObject</a>(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; pObject)</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>{</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <span class="keywordflow">return</span> WriteObjectInternal(inout_stream, pObject.<a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a685ac2bc1c57b0f2c9f16c634378e5b3">Borrow</a>());</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>}</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>PL_ALWAYS_INLINE <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">plDeduplicationWriteContext::WriteObject</a>(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code hl_class" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr&lt;T&gt;</a>&amp; pObject)</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>{</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  <span class="keywordflow">return</span> WriteObjectInternal(inout_stream, pObject.<a class="code hl_function" href="../../df/d44/classpl_unique_ptr.htm#af096cbb9be39710bd57d7810e31059b1">Borrow</a>());</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>}</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ArrayType, <span class="keyword">typename</span> ValueType&gt;</div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="}">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../de/d99/classpl_deduplication_write_context.htm#a6500050f17bab00bc6e29f6bef54cb2b">   40</a></span><a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a6500050f17bab00bc6e29f6bef54cb2b">plDeduplicationWriteContext::WriteArray</a>(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code hl_class" href="../../d4/dc8/classpl_array_base.htm">plArrayBase&lt;ValueType, ArrayType&gt;</a>&amp; array)</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>{</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">const</span> plUInt64 uiCount = array.<a class="code hl_function" href="../../d4/dc8/classpl_array_base.htm#af1fcadea5a992d6b5d0a1788a379de65">GetCount</a>();</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  PL_SUCCEED_OR_RETURN(inout_stream.<a class="code hl_function" href="../../d6/d90/classpl_stream_writer.htm#aee781a23c364cea4a7fa56cc4c72e787">WriteQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keywordflow">for</span> (plUInt32 i = 0; i &lt; static_cast&lt;plUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  {</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    PL_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">WriteObject</a>(inout_stream, array[i]));</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  }</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <span class="keywordflow">return</span> PL_SUCCESS;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>}</div>
</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="foldopen" id="foldopen00054" data-start="{" data-end="}">
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="../../de/d99/classpl_deduplication_write_context.htm#a1c2636a253c565e58671d75005cf7e2b">   54</a></span><a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a1c2636a253c565e58671d75005cf7e2b">plDeduplicationWriteContext::WriteSet</a>(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code hl_class" href="../../d4/d4c/classpl_set_base.htm">plSetBase&lt;KeyType, Comparer&gt;</a>&amp; set)</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>{</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keyword">const</span> plUInt64 uiWriteSize = set.<a class="code hl_function" href="../../d4/d4c/classpl_set_base.htm#aac75970c39e9220e6476a83e031ee8fc">GetCount</a>();</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  PL_SUCCEED_OR_RETURN(inout_stream.<a class="code hl_function" href="../../d6/d90/classpl_stream_writer.htm#aee781a23c364cea4a7fa56cc4c72e787">WriteQWordValue</a>(&amp;uiWriteSize));</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; item : set)</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  {</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    PL_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">WriteObject</a>(inout_stream, item));</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <span class="keywordflow">return</span> PL_SUCCESS;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>}</div>
</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="foldopen" id="foldopen00068" data-start="{" data-end="}">
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno"><a class="line" href="../../de/d99/classpl_deduplication_write_context.htm#a58f6a87982902a2e816d1e37fe52bb2b">   68</a></span><a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a58f6a87982902a2e816d1e37fe52bb2b">plDeduplicationWriteContext::WriteMap</a>(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code hl_class" href="../../d9/dbe/classpl_map_base.htm">plMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; map, WriteMapMode mode)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>{</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  <span class="keyword">const</span> plUInt64 uiWriteSize = map.<a class="code hl_function" href="../../d9/dbe/classpl_map_base.htm#a7836b1f7942107dbda516f8ab84acc3c">GetCount</a>();</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  PL_SUCCEED_OR_RETURN(inout_stream.<a class="code hl_function" href="../../d6/d90/classpl_stream_writer.htm#aee781a23c364cea4a7fa56cc4c72e787">WriteQWordValue</a>(&amp;uiWriteSize));</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="keywordflow">if</span> (mode == WriteMapMode::DedupKey)</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  {</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> It = map.<a class="code hl_function" href="../../d9/dbe/classpl_map_base.htm#a8f38cc470721aee5fd73ceddfbd79064">GetIterator</a>(); It.IsValid(); ++It)</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    {</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      PL_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">WriteObject</a>(inout_stream, It.Key()));</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>      PL_SUCCEED_OR_RETURN(plStreamWriterUtil::Serialize&lt;ValueType&gt;(inout_stream, It.Value()));</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    }</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  }</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mode == WriteMapMode::DedupValue)</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  {</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> It = map.<a class="code hl_function" href="../../d9/dbe/classpl_map_base.htm#a8f38cc470721aee5fd73ceddfbd79064">GetIterator</a>(); It.IsValid(); ++It)</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    {</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>      PL_SUCCEED_OR_RETURN(plStreamWriterUtil::Serialize&lt;KeyType&gt;(inout_stream, It.Key()));</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>      PL_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">WriteObject</a>(inout_stream, It.Value()));</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  }</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  {</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <span class="keywordflow">for</span> (<span class="keyword">auto</span> It = map.<a class="code hl_function" href="../../d9/dbe/classpl_map_base.htm#a8f38cc470721aee5fd73ceddfbd79064">GetIterator</a>(); It.IsValid(); ++It)</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    {</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>      PL_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">WriteObject</a>(inout_stream, It.Key()));</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>      PL_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">WriteObject</a>(inout_stream, It.Value()));</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  }</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keywordflow">return</span> PL_SUCCESS;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>}</div>
</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> plDeduplicationWriteContext::WriteObjectInternal(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>&amp; stream, <span class="keyword">const</span> T* pObject)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>{</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  plUInt32 uiIndex = plInvalidIndex;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="keywordflow">if</span> (pObject)</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  {</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    <span class="keywordtype">bool</span> bIsRealObject = !m_Objects.<a class="code hl_function" href="../../d1/d77/classpl_hash_table_base.htm#a48353ae8728017bf107e01ba0b8b3841">TryGetValue</a>(pObject, uiIndex);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    stream &lt;&lt; bIsRealObject;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    <span class="keywordflow">if</span> (bIsRealObject)</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>      uiIndex = m_Objects.<a class="code hl_function" href="../../d1/d77/classpl_hash_table_base.htm#a3c2a07024da01255c3c0503e6d82ffcd">GetCount</a>();</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>      m_Objects.<a class="code hl_function" href="../../d1/d77/classpl_hash_table_base.htm#a907117a01c398b2cdb7e632406cd9652">Insert</a>(pObject, uiIndex);</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>      <span class="keywordflow">return</span> plStreamWriterUtil::Serialize&lt;T&gt;(stream, *pObject);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    }</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      stream &lt;&lt; uiIndex;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    }</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  }</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  {</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    stream &lt;&lt; <span class="keyword">false</span>;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    stream &lt;&lt; plInvalidIndex;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  }</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keywordflow">return</span> PL_SUCCESS;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>}</div>
<div class="ttc" id="aclasspl_array_base_htm"><div class="ttname"><a href="../../d4/dc8/classpl_array_base.htm">plArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition</b> ArrayBase.h:19</div></div>
<div class="ttc" id="aclasspl_array_base_htm_af1fcadea5a992d6b5d0a1788a379de65"><div class="ttname"><a href="../../d4/dc8/classpl_array_base.htm#af1fcadea5a992d6b5d0a1788a379de65">plArrayBase::GetCount</a></div><div class="ttdeci">plUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:172</div></div>
<div class="ttc" id="aclasspl_deduplication_write_context_htm_a1c2636a253c565e58671d75005cf7e2b"><div class="ttname"><a href="../../de/d99/classpl_deduplication_write_context.htm#a1c2636a253c565e58671d75005cf7e2b">plDeduplicationWriteContext::WriteSet</a></div><div class="ttdeci">plResult WriteSet(plStreamWriter &amp;inout_stream, const plSetBase&lt; KeyType, Comparer &gt; &amp;set)</div><div class="ttdoc">Writes a set of de-duplicated objects.</div><div class="ttdef"><b>Definition</b> DeduplicationWriteContext_inl.h:54</div></div>
<div class="ttc" id="aclasspl_deduplication_write_context_htm_a32adb6491e7f868c4a36aa56592e7b8c"><div class="ttname"><a href="../../de/d99/classpl_deduplication_write_context.htm#a32adb6491e7f868c4a36aa56592e7b8c">plDeduplicationWriteContext::WriteObject</a></div><div class="ttdeci">plResult WriteObject(plStreamWriter &amp;inout_stream, const T &amp;obj)</div><div class="ttdoc">Writes a single object to the stream. Can be either a reference or a pointer to the object.</div></div>
<div class="ttc" id="aclasspl_deduplication_write_context_htm_a58f6a87982902a2e816d1e37fe52bb2b"><div class="ttname"><a href="../../de/d99/classpl_deduplication_write_context.htm#a58f6a87982902a2e816d1e37fe52bb2b">plDeduplicationWriteContext::WriteMap</a></div><div class="ttdeci">plResult WriteMap(plStreamWriter &amp;inout_stream, const plMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;map, WriteMapMode mode)</div><div class="ttdoc">Writes a map. Mode controls whether key or value or both should de-duplicated.</div><div class="ttdef"><b>Definition</b> DeduplicationWriteContext_inl.h:68</div></div>
<div class="ttc" id="aclasspl_deduplication_write_context_htm_a6500050f17bab00bc6e29f6bef54cb2b"><div class="ttname"><a href="../../de/d99/classpl_deduplication_write_context.htm#a6500050f17bab00bc6e29f6bef54cb2b">plDeduplicationWriteContext::WriteArray</a></div><div class="ttdeci">plResult WriteArray(plStreamWriter &amp;inout_stream, const plArrayBase&lt; ValueType, ArrayType &gt; &amp;array)</div><div class="ttdoc">Writes an array of de-duplicated objects.</div><div class="ttdef"><b>Definition</b> DeduplicationWriteContext_inl.h:40</div></div>
<div class="ttc" id="aclasspl_hash_table_base_htm_a3c2a07024da01255c3c0503e6d82ffcd"><div class="ttname"><a href="../../d1/d77/classpl_hash_table_base.htm#a3c2a07024da01255c3c0503e6d82ffcd">plHashTableBase::GetCount</a></div><div class="ttdeci">plUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active entries in the table.</div><div class="ttdef"><b>Definition</b> HashTable_inl.h:343</div></div>
<div class="ttc" id="aclasspl_hash_table_base_htm_a48353ae8728017bf107e01ba0b8b3841"><div class="ttname"><a href="../../d1/d77/classpl_hash_table_base.htm#a48353ae8728017bf107e01ba0b8b3841">plHashTableBase::TryGetValue</a></div><div class="ttdeci">bool TryGetValue(const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</div><div class="ttdoc">Returns whether an entry with the given key was found and if found writes out the corresponding value...</div></div>
<div class="ttc" id="aclasspl_hash_table_base_htm_a907117a01c398b2cdb7e632406cd9652"><div class="ttname"><a href="../../d1/d77/classpl_hash_table_base.htm#a907117a01c398b2cdb7e632406cd9652">plHashTableBase::Insert</a></div><div class="ttdeci">bool Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value, ValueType *out_pOldValue=nullptr)</div><div class="ttdoc">Inserts the key value pair or replaces value if an entry with the given key already exists.</div></div>
<div class="ttc" id="aclasspl_map_base_htm"><div class="ttname"><a href="../../d9/dbe/classpl_map_base.htm">plMapBase</a></div><div class="ttdoc">An associative container. Similar to STL::map.</div><div class="ttdef"><b>Definition</b> Map.h:193</div></div>
<div class="ttc" id="aclasspl_map_base_htm_a7836b1f7942107dbda516f8ab84acc3c"><div class="ttname"><a href="../../d9/dbe/classpl_map_base.htm#a7836b1f7942107dbda516f8ab84acc3c">plMapBase::GetCount</a></div><div class="ttdeci">plUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements currently stored in the map. O(1) operation.</div><div class="ttdef"><b>Definition</b> Map_inl.h:200</div></div>
<div class="ttc" id="aclasspl_map_base_htm_a8f38cc470721aee5fd73ceddfbd79064"><div class="ttname"><a href="../../d9/dbe/classpl_map_base.htm#a8f38cc470721aee5fd73ceddfbd79064">plMapBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator()</div><div class="ttdoc">Returns an Iterator to the very first element.</div><div class="ttdef"><b>Definition</b> Map_inl.h:207</div></div>
<div class="ttc" id="aclasspl_set_base_htm"><div class="ttname"><a href="../../d4/d4c/classpl_set_base.htm">plSetBase</a></div><div class="ttdoc">A set container that only stores whether an element resides in it or not. Similar to STL::set.</div><div class="ttdef"><b>Definition</b> Set.h:13</div></div>
<div class="ttc" id="aclasspl_set_base_htm_aac75970c39e9220e6476a83e031ee8fc"><div class="ttname"><a href="../../d4/d4c/classpl_set_base.htm#aac75970c39e9220e6476a83e031ee8fc">plSetBase::GetCount</a></div><div class="ttdeci">plUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements currently stored in the set. O(1) operation.</div><div class="ttdef"><b>Definition</b> Set_inl.h:158</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a></div><div class="ttdoc">A Shared ptr manages a shared object and destroys that object when no one references it anymore....</div><div class="ttdef"><b>Definition</b> SharedPtr.h:10</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a685ac2bc1c57b0f2c9f16c634378e5b3"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a685ac2bc1c57b0f2c9f16c634378e5b3">plSharedPtr::Borrow</a></div><div class="ttdeci">T * Borrow() const</div><div class="ttdoc">Borrows the managed object. The shared ptr stays unmodified.</div><div class="ttdef"><b>Definition</b> SharedPtr_inl.h:168</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:107</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm_aee781a23c364cea4a7fa56cc4c72e787"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm#aee781a23c364cea4a7fa56cc4c72e787">plStreamWriter::WriteQWordValue</a></div><div class="ttdeci">plResult WriteQWordValue(const T *pQWordValue)</div><div class="ttdoc">Helper method to write a qword value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition</b> Stream_inl.h:134</div></div>
<div class="ttc" id="aclasspl_unique_ptr_htm"><div class="ttname"><a href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a></div><div class="ttdoc">A Unique ptr manages an object and destroys that object when it goes out of scope....</div><div class="ttdef"><b>Definition</b> UniquePtr.h:10</div></div>
<div class="ttc" id="aclasspl_unique_ptr_htm_af096cbb9be39710bd57d7810e31059b1"><div class="ttname"><a href="../../df/d44/classpl_unique_ptr.htm#af096cbb9be39710bd57d7810e31059b1">plUniquePtr::Borrow</a></div><div class="ttdeci">T * Borrow() const</div><div class="ttdoc">Borrows the managed object. The unique ptr stays unmodified.</div><div class="ttdef"><b>Definition</b> UniquePtr_inl.h:102</div></div>
<div class="ttc" id="astructpl_internal_1_1_write_object_helper_htm"><div class="ttname"><a href="../../d3/d2d/structpl_internal_1_1_write_object_helper.htm">plInternal::WriteObjectHelper</a></div><div class="ttdef"><b>Definition</b> DeduplicationWriteContext_inl.h:10</div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_53c6c6fb8a816921716f372d87aabbab.htm">IO</a></li><li class="navelem"><a class="el" href="../../dir_f1851b6e17afdd9ebc110c649302a4d3.htm">Implementation</a></li><li class="navelem"><b>DeduplicationWriteContext_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
