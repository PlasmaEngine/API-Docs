<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/RendererCore/Pipeline/RenderPipelineNode.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/d5b/_render_pipeline_node_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">RenderPipelineNode.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Strings/HashedString.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;RendererCore/Declarations.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">class </span><a class="code hl_class" href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a>;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="foldopen" id="foldopen00009" data-start="{" data-end="};">
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">    9</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>{</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="};">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm">   13</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm">Type</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  {</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>    <span class="keyword">using </span>StorageType = plUInt8;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="};">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm#adbcad6b343ef493c5f954acf6d7c482f">   17</a></span>    <span class="keyword">enum</span> <a class="code hl_enumeration" href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm#adbcad6b343ef493c5f954acf6d7c482f">Enum</a></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    {</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>      Input = PL_BIT(0),</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>      Output = PL_BIT(1),</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>      PassThrough = PL_BIT(2),</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm#adbcad6b343ef493c5f954acf6d7c482faeef6664d3750ce31b5c174b1f0bcced6">   22</a></span>      <a class="code hl_enumvalue" href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm#adbcad6b343ef493c5f954acf6d7c482faeef6664d3750ce31b5c174b1f0bcced6">TextureProvider</a> = PL_BIT(3), </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>      Default = 0</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    };</div>
</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="foldopen" id="foldopen00027" data-start="{" data-end="};">
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="../../de/de1/structpl_render_pipeline_node_pin_1_1_type_1_1_bits.htm">   27</a></span>    <span class="keyword">struct </span><a class="code hl_struct" href="../../de/de1/structpl_render_pipeline_node_pin_1_1_type_1_1_bits.htm">Bits</a></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    {</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>      StorageType Input : 1;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>      StorageType Output : 1;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>      StorageType PassThrough : 1;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>      StorageType TextureProvider : 1;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    };</div>
</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  };</div>
</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  <a class="code hl_struct" href="../../df/dd9/structpl_bitflags.htm">plBitflags&lt;Type&gt;</a> m_Type;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  plUInt8 m_uiInputIndex = 0xFF;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  plUInt8 m_uiOutputIndex = 0xFF;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  <a class="code hl_class" href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a>* m_pParent = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>};</div>
</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>PL_DECLARE_FLAGS_OPERATORS(<a class="code hl_struct" href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm">plRenderPipelineNodePin::Type</a>);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="};">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../d3/d46/structpl_render_pipeline_node_input_pin.htm">   43</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d3/d46/structpl_render_pipeline_node_input_pin.htm">plRenderPipelineNodeInputPin</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>{</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  PL_ALWAYS_INLINE <a class="code hl_struct" href="../../d3/d46/structpl_render_pipeline_node_input_pin.htm">plRenderPipelineNodeInputPin</a>() { m_Type = Type::Input; }</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>};</div>
</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="};">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../d0/de1/structpl_render_pipeline_node_output_pin.htm">   50</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d0/de1/structpl_render_pipeline_node_output_pin.htm">plRenderPipelineNodeOutputPin</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>{</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  PL_ALWAYS_INLINE <a class="code hl_struct" href="../../d0/de1/structpl_render_pipeline_node_output_pin.htm">plRenderPipelineNodeOutputPin</a>() { m_Type = Type::Output; }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>};</div>
</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="foldopen" id="foldopen00057" data-start="{" data-end="};">
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="../../d6/d87/structpl_render_pipeline_node_input_provider_pin.htm">   57</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/d87/structpl_render_pipeline_node_input_provider_pin.htm">plRenderPipelineNodeInputProviderPin</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d3/d46/structpl_render_pipeline_node_input_pin.htm">plRenderPipelineNodeInputPin</a></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>{</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  PL_ALWAYS_INLINE <a class="code hl_struct" href="../../d6/d87/structpl_render_pipeline_node_input_provider_pin.htm">plRenderPipelineNodeInputProviderPin</a>() { m_Type = Type::Input | Type::TextureProvider; }</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>};</div>
</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="foldopen" id="foldopen00064" data-start="{" data-end="};">
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="../../d2/d50/structpl_render_pipeline_node_output_provider_pin.htm">   64</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d2/d50/structpl_render_pipeline_node_output_provider_pin.htm">plRenderPipelineNodeOutputProviderPin</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d0/de1/structpl_render_pipeline_node_output_pin.htm">plRenderPipelineNodeOutputPin</a></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>{</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  PL_ALWAYS_INLINE <a class="code hl_struct" href="../../d2/d50/structpl_render_pipeline_node_output_provider_pin.htm">plRenderPipelineNodeOutputProviderPin</a>() { m_Type = Type::Output | Type::TextureProvider; }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>};</div>
</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="foldopen" id="foldopen00071" data-start="{" data-end="};">
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="../../db/d30/structpl_render_pipeline_node_pass_through_pin.htm">   71</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../db/d30/structpl_render_pipeline_node_pass_through_pin.htm">plRenderPipelineNodePassThroughPin</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>{</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  PL_ALWAYS_INLINE <a class="code hl_struct" href="../../db/d30/structpl_render_pipeline_node_pass_through_pin.htm">plRenderPipelineNodePassThroughPin</a>() { m_Type = Type::PassThrough; }</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>};</div>
</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="foldopen" id="foldopen00078" data-start="{" data-end="};">
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="../../df/db6/classpl_render_pipeline_node.htm">   78</a></span><span class="keyword">class </span>PL_RENDERERCORE_DLL <a class="code hl_class" href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>{</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  PL_ADD_DYNAMIC_REFLECTION(<a class="code hl_class" href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a>, <a class="code hl_class" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a>);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../df/db6/classpl_render_pipeline_node.htm">~plRenderPipelineNode</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keywordtype">void</span> InitializePins();</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <a class="code hl_class" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> GetPinName(<span class="keyword">const</span> <a class="code hl_struct" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a>* pPin) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keyword">const</span> <a class="code hl_struct" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a>* GetPinByName(<span class="keyword">const</span> <span class="keywordtype">char</span>* szName) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keyword">const</span> <a class="code hl_struct" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a>* GetPinByName(<a class="code hl_class" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> sName) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt;const plRenderPipelineNodePin* const&gt;</a> GetInputPins()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_InputPins; }</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt;const plRenderPipelineNodePin* const&gt;</a> GetOutputPins()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_OutputPins; }</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plRenderPipelineNodePin*&gt;</a> m_InputPins;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plRenderPipelineNodePin*&gt;</a> m_OutputPins;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <a class="code hl_class" href="../../dd/d55/classpl_hash_table.htm">plHashTable&lt;plHashedString, const plRenderPipelineNodePin*&gt;</a> m_NameToPin;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>};</div>
</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>PL_DECLARE_REFLECTABLE_TYPE(PL_RENDERERCORE_DLL, <a class="code hl_struct" href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a>);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>PL_DECLARE_REFLECTABLE_TYPE(PL_RENDERERCORE_DLL, <a class="code hl_struct" href="../../d3/d46/structpl_render_pipeline_node_input_pin.htm">plRenderPipelineNodeInputPin</a>);</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>PL_DECLARE_REFLECTABLE_TYPE(PL_RENDERERCORE_DLL, <a class="code hl_struct" href="../../d0/de1/structpl_render_pipeline_node_output_pin.htm">plRenderPipelineNodeOutputPin</a>);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>PL_DECLARE_REFLECTABLE_TYPE(PL_RENDERERCORE_DLL, <a class="code hl_struct" href="../../d6/d87/structpl_render_pipeline_node_input_provider_pin.htm">plRenderPipelineNodeInputProviderPin</a>);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>PL_DECLARE_REFLECTABLE_TYPE(PL_RENDERERCORE_DLL, <a class="code hl_struct" href="../../d2/d50/structpl_render_pipeline_node_output_provider_pin.htm">plRenderPipelineNodeOutputProviderPin</a>);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>PL_DECLARE_REFLECTABLE_TYPE(PL_RENDERERCORE_DLL, <a class="code hl_struct" href="../../db/d30/structpl_render_pipeline_node_pass_through_pin.htm">plRenderPipelineNodePassThroughPin</a>);</div>
<div class="ttc" id="aclasspl_array_ptr_htm"><div class="ttname"><a href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="aclasspl_dynamic_array_htm"><div class="ttname"><a href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="aclasspl_hash_table_htm"><div class="ttname"><a href="../../dd/d55/classpl_hash_table.htm">plHashTable</a></div><div class="ttdef"><b>Definition</b> HashTable.h:333</div></div>
<div class="ttc" id="aclasspl_hashed_string_htm"><div class="ttname"><a href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a></div><div class="ttdoc">This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...</div><div class="ttdef"><b>Definition</b> HashedString.h:25</div></div>
<div class="ttc" id="aclasspl_reflected_class_htm"><div class="ttname"><a href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></div><div class="ttdoc">All classes that should be dynamically reflectable, need to be derived from this base class.</div><div class="ttdef"><b>Definition</b> DynamicRTTI.h:86</div></div>
<div class="ttc" id="aclasspl_render_pipeline_node_htm"><div class="ttname"><a href="../../df/db6/classpl_render_pipeline_node.htm">plRenderPipelineNode</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:79</div></div>
<div class="ttc" id="astructpl_bitflags_htm"><div class="ttname"><a href="../../df/dd9/structpl_bitflags.htm">plBitflags</a></div><div class="ttdoc">The plBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition</b> Bitflags.h:82</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_input_pin_htm"><div class="ttname"><a href="../../d3/d46/structpl_render_pipeline_node_input_pin.htm">plRenderPipelineNodeInputPin</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:44</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_input_provider_pin_htm"><div class="ttname"><a href="../../d6/d87/structpl_render_pipeline_node_input_provider_pin.htm">plRenderPipelineNodeInputProviderPin</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:58</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_output_pin_htm"><div class="ttname"><a href="../../d0/de1/structpl_render_pipeline_node_output_pin.htm">plRenderPipelineNodeOutputPin</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:51</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_output_provider_pin_htm"><div class="ttname"><a href="../../d2/d50/structpl_render_pipeline_node_output_provider_pin.htm">plRenderPipelineNodeOutputProviderPin</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:65</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_pass_through_pin_htm"><div class="ttname"><a href="../../db/d30/structpl_render_pipeline_node_pass_through_pin.htm">plRenderPipelineNodePassThroughPin</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:72</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_pin_1_1_type_1_1_bits_htm"><div class="ttname"><a href="../../de/de1/structpl_render_pipeline_node_pin_1_1_type_1_1_bits.htm">plRenderPipelineNodePin::Type::Bits</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:28</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_pin_1_1_type_htm"><div class="ttname"><a href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm">plRenderPipelineNodePin::Type</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:14</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_pin_1_1_type_htm_adbcad6b343ef493c5f954acf6d7c482f"><div class="ttname"><a href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm#adbcad6b343ef493c5f954acf6d7c482f">plRenderPipelineNodePin::Type::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:18</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_pin_1_1_type_htm_adbcad6b343ef493c5f954acf6d7c482faeef6664d3750ce31b5c174b1f0bcced6"><div class="ttname"><a href="../../d9/d58/structpl_render_pipeline_node_pin_1_1_type.htm#adbcad6b343ef493c5f954acf6d7c482faeef6664d3750ce31b5c174b1f0bcced6">plRenderPipelineNodePin::Type::TextureProvider</a></div><div class="ttdeci">@ TextureProvider</div><div class="ttdoc">Pass provides pin texture to the pipeline each frame.</div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:22</div></div>
<div class="ttc" id="astructpl_render_pipeline_node_pin_htm"><div class="ttname"><a href="../../d6/d5b/structpl_render_pipeline_node_pin.htm">plRenderPipelineNodePin</a></div><div class="ttdef"><b>Definition</b> RenderPipelineNode.h:10</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_ce0639703669ddb648d62e2a81c7d3ba.htm">RendererCore</a></li><li class="navelem"><a class="el" href="../../dir_c66dd4dc1813ad407155ba7adb0c4db1.htm">Pipeline</a></li><li class="navelem"><b>RenderPipelineNode.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
