<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plResourceLoaderFromMemory Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d0/dc2/classpl_resource_loader_from_memory.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d2/df4/classpl_resource_loader_from_memory-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plResourceLoaderFromMemory Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A resource loader that is mainly used to update a resource on the fly with custom data, e.g. in an editor.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/dd3/_resource_type_loader_8h_source.htm">ResourceTypeLoader.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plResourceLoaderFromMemory:</div>
<div class="dyncontent">
<div class="center"><img src="../../d1/dc6/classpl_resource_loader_from_memory__inherit__graph.png" border="0" usemap="#apl_resource_loader_from_memory_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_resource_loader_from_memory_inherit__map" id="apl_resource_loader_from_memory_inherit__map">
<area shape="rect" title="A resource loader that is mainly used to update a resource on the fly with custom data,..." alt="" coords="5,80,208,107"/>
<area shape="rect" href="../../da/d6b/classpl_resource_type_loader.htm" title="Base class for all resource loaders." alt="" coords="30,5,183,32"/>
<area shape="poly" title=" " alt="" coords="109,48,109,80,104,80,104,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae1c3f8e8aa9703c72373b346d27b2616" id="r_ae1c3f8e8aa9703c72373b346d27b2616"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/dd7/structpl_resource_load_data.htm">plResourceLoadData</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae1c3f8e8aa9703c72373b346d27b2616">OpenDataStream</a> (const <a class="el" href="../../d8/d1c/classpl_resource.htm">plResource</a> *pResource) override</td></tr>
<tr class="memdesc:ae1c3f8e8aa9703c72373b346d27b2616"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this function to implement the resource loading.  <br /></td></tr>
<tr class="separator:ae1c3f8e8aa9703c72373b346d27b2616"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af30d7fc45b6b0456fe0215bcf6389f41" id="r_af30d7fc45b6b0456fe0215bcf6389f41"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af30d7fc45b6b0456fe0215bcf6389f41">CloseDataStream</a> (const <a class="el" href="../../d8/d1c/classpl_resource.htm">plResource</a> *pResource, const <a class="el" href="../../d0/dd7/structpl_resource_load_data.htm">plResourceLoadData</a> &amp;loaderData) override</td></tr>
<tr class="memdesc:af30d7fc45b6b0456fe0215bcf6389f41"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called when the resource has been updated with the data from the resource loader and the loader can deallocate any temporary memory.  <br /></td></tr>
<tr class="separator:af30d7fc45b6b0456fe0215bcf6389f41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ea473b2d61801b98816abe2a63ccabb" id="r_a0ea473b2d61801b98816abe2a63ccabb"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0ea473b2d61801b98816abe2a63ccabb">IsResourceOutdated</a> (const <a class="el" href="../../d8/d1c/classpl_resource.htm">plResource</a> *pResource) const override</td></tr>
<tr class="memdesc:a0ea473b2d61801b98816abe2a63ccabb"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this function returns true, a resource is unloaded and loaded again to update its content.  <br /></td></tr>
<tr class="separator:a0ea473b2d61801b98816abe2a63ccabb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a277f91d235bcb18ec41b2a1e3a3cb6d6" id="r_a277f91d235bcb18ec41b2a1e3a3cb6d6"><td class="memItemLeft" align="right" valign="top"><a id="a277f91d235bcb18ec41b2a1e3a3cb6d6" name="a277f91d235bcb18ec41b2a1e3a3cb6d6"></a>
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sResourceDescription</b></td></tr>
<tr class="separator:a277f91d235bcb18ec41b2a1e3a3cb6d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae169d6c98d5d92b2feddbc561599c89c" id="r_ae169d6c98d5d92b2feddbc561599c89c"><td class="memItemLeft" align="right" valign="top"><a id="ae169d6c98d5d92b2feddbc561599c89c" name="ae169d6c98d5d92b2feddbc561599c89c"></a>
<a class="el" href="../../d9/d94/classpl_timestamp.htm">plTimestamp</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ModificationTimestamp</b></td></tr>
<tr class="separator:ae169d6c98d5d92b2feddbc561599c89c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86fff8591d9eb818aa7949be66505ef3" id="r_a86fff8591d9eb818aa7949be66505ef3"><td class="memItemLeft" align="right" valign="top"><a id="a86fff8591d9eb818aa7949be66505ef3" name="a86fff8591d9eb818aa7949be66505ef3"></a>
<a class="el" href="../../db/dc4/classpl_default_memory_stream_storage.htm">plDefaultMemoryStreamStorage</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_CustomData</b></td></tr>
<tr class="separator:a86fff8591d9eb818aa7949be66505ef3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A resource loader that is mainly used to update a resource on the fly with custom data, e.g. in an editor. </p>
<p>Use like this: Allocate a <a class="el" href="../../d0/dc2/classpl_resource_loader_from_memory.htm" title="A resource loader that is mainly used to update a resource on the fly with custom data,...">plResourceLoaderFromMemory</a> instance on the heap, using PL_DEFAULT_NEW and store the result in a <a class="el" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr&lt;plResourceTypeLoader&gt;</a>. Then set the description, the modification time (simply use <a class="el" href="../../d9/d94/classpl_timestamp.htm#ab6fbcd4ca4efa3380ab06ce774ca9c69" title="Returns the current timestamp. Returned value will always be valid.">plTimestamp::CurrentTimestamp()</a>), and the custom data. Use a <a class="el" href="../../d2/d79/classpl_memory_stream_writer.htm" title="A writer which can access a memory stream.">plMemoryStreamWriter</a> to write your custom data. Make sure to write EXACTLY the same format that the targeted resource type would read, including all data that would typically be written by outside code, e.g. the default <a class="el" href="../../d1/df8/classpl_resource_loader_from_file.htm" title="A default implementation of plResourceTypeLoader for standard file loading.">plResourceLoaderFromFile</a> additionally writes the path to the resource at the start of the stream. If such data is usually present in the stream, you must write this yourself. Then call <a class="el" href="../../d1/d2a/classpl_resource_manager.htm#ac9a4c2417970e405eca9389427ed133b" title="Calls ReloadResource() on the given resource, but makes sure that the reload happens with the given c...">plResourceManager::UpdateResourceWithCustomLoader()</a>, specify the target resource and std::move your created loader in there. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af30d7fc45b6b0456fe0215bcf6389f41" name="af30d7fc45b6b0456fe0215bcf6389f41"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af30d7fc45b6b0456fe0215bcf6389f41">&#9670;&#160;</a></span>CloseDataStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plResourceLoaderFromMemory::CloseDataStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/d1c/classpl_resource.htm">plResource</a> *</td>          <td class="paramname"><span class="paramname"><em>pResource</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d0/dd7/structpl_resource_load_data.htm">plResourceLoadData</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>loaderData</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function is called when the resource has been updated with the data from the resource loader and the loader can deallocate any temporary memory. </p>

<p>Implements <a class="el" href="../../da/d6b/classpl_resource_type_loader.htm#a2a55d777e08164f1374402f3f21930ca">plResourceTypeLoader</a>.</p>

</div>
</div>
<a id="a0ea473b2d61801b98816abe2a63ccabb" name="a0ea473b2d61801b98816abe2a63ccabb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0ea473b2d61801b98816abe2a63ccabb">&#9670;&#160;</a></span>IsResourceOutdated()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plResourceLoaderFromMemory::IsResourceOutdated </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/d1c/classpl_resource.htm">plResource</a> *</td>          <td class="paramname"><span class="paramname"><em>pResource</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>If this function returns true, a resource is unloaded and loaded again to update its content. </p>
<p>Call <a class="el" href="../../d8/d1c/classpl_resource.htm#a6e444c1d9dbbdf9a105c059ae34116a4" title="Returns the modification date of the file from which this resource was loaded.">plResource::GetLoadedFileModificationTime()</a> to query the file modification time that was returned through <a class="el" href="../../d0/dd7/structpl_resource_load_data.htm#a95b2faf219801f2dbfbf6b73821de4c7" title="Used to keep track when the loaded file was modified last and thus when reloading of the resource mig...">plResourceLoadData::m_LoadedFileModificationDate</a>. </p>

<p>Reimplemented from <a class="el" href="../../da/d6b/classpl_resource_type_loader.htm#ad9bd15fef26ad52dfd2e7395367eb7fb">plResourceTypeLoader</a>.</p>

</div>
</div>
<a id="ae1c3f8e8aa9703c72373b346d27b2616" name="ae1c3f8e8aa9703c72373b346d27b2616"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae1c3f8e8aa9703c72373b346d27b2616">&#9670;&#160;</a></span>OpenDataStream()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d0/dd7/structpl_resource_load_data.htm">plResourceLoadData</a> plResourceLoaderFromMemory::OpenDataStream </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d8/d1c/classpl_resource.htm">plResource</a> *</td>          <td class="paramname"><span class="paramname"><em>pResource</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this function to implement the resource loading. </p>
<p>This function should take the information from <em>pResource</em>, e.g. which file to load, and do the loading work. It should allocate temporary storage for the loaded data and encode it in a memory stream, such that the resource can read all necessary information from the stream.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d0/dd7/structpl_resource_load_data.htm" title="Data returned by plResourceTypeLoader implementations.">plResourceLoadData</a> </dd></dl>

<p>Implements <a class="el" href="../../da/d6b/classpl_resource_type_loader.htm#a57af5ad1240e645240a81929cf54ba7a">plResourceTypeLoader</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Core/ResourceManager/<a class="el" href="../../d1/dd3/_resource_type_loader_8h_source.htm">ResourceTypeLoader.h</a></li>
<li>Code/Engine/Core/ResourceManager/Implementation/<b>ResourceTypeLoader.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/dc2/classpl_resource_loader_from_memory.htm">plResourceLoaderFromMemory</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
