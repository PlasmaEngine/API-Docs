<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plSet&lt; KeyType, Comparer, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d5/da6/classpl_set.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../db/da2/classpl_set-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plSet&lt; KeyType, Comparer, AllocatorWrapper &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../dc/d09/_set_8h_source.htm">Set.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plSet&lt; KeyType, Comparer, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../de/da2/classpl_set__inherit__graph.png" border="0" usemap="#apl_set_3_01_key_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_set_3_01_key_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map" id="apl_set_3_01_key_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="5,96,188,139"/>
<area shape="rect" href="../../d4/d4c/classpl_set_base.htm" title="A set container that only stores whether an element resides in it or not. Similar to STL::set." alt="" coords="22,5,171,48"/>
<area shape="poly" title=" " alt="" coords="99,64,99,96,94,96,94,64"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a6d2928df7f4ce8fea72bb234287b63f7" id="r_a6d2928df7f4ce8fea72bb234287b63f7"><td class="memItemLeft" align="right" valign="top"><a id="a6d2928df7f4ce8fea72bb234287b63f7" name="a6d2928df7f4ce8fea72bb234287b63f7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSet</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a6d2928df7f4ce8fea72bb234287b63f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab084c96f5504bb91439e05b66156d610" id="r_ab084c96f5504bb91439e05b66156d610"><td class="memItemLeft" align="right" valign="top"><a id="ab084c96f5504bb91439e05b66156d610" name="ab084c96f5504bb91439e05b66156d610"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSet</b> (const Comparer &amp;comparer, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:ab084c96f5504bb91439e05b66156d610"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad11ff101cc84a34c2d01e8c85fc639e9" id="r_ad11ff101cc84a34c2d01e8c85fc639e9"><td class="memItemLeft" align="right" valign="top"><a id="ad11ff101cc84a34c2d01e8c85fc639e9" name="ad11ff101cc84a34c2d01e8c85fc639e9"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSet</b> (const <a class="el" href="../../d5/da6/classpl_set.htm">plSet</a>&lt; KeyType, Comparer, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:ad11ff101cc84a34c2d01e8c85fc639e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ead61f7bcce89e67fdea920aa53b4f1" id="r_a9ead61f7bcce89e67fdea920aa53b4f1"><td class="memItemLeft" align="right" valign="top"><a id="a9ead61f7bcce89e67fdea920aa53b4f1" name="a9ead61f7bcce89e67fdea920aa53b4f1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plSet</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;other)</td></tr>
<tr class="separator:a9ead61f7bcce89e67fdea920aa53b4f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab66c934e6e3f6066b327ba54273d2388" id="r_ab66c934e6e3f6066b327ba54273d2388"><td class="memItemLeft" align="right" valign="top"><a id="ab66c934e6e3f6066b327ba54273d2388" name="ab66c934e6e3f6066b327ba54273d2388"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d5/da6/classpl_set.htm">plSet</a>&lt; KeyType, Comparer, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:ab66c934e6e3f6066b327ba54273d2388"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5af081cc9af261cfb6bcfed5d5a2ace1" id="r_a5af081cc9af261cfb6bcfed5d5a2ace1"><td class="memItemLeft" align="right" valign="top"><a id="a5af081cc9af261cfb6bcfed5d5a2ace1" name="a5af081cc9af261cfb6bcfed5d5a2ace1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="separator:a5af081cc9af261cfb6bcfed5d5a2ace1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_set_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_set_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase&lt; KeyType, Comparer &gt;</a></td></tr>
<tr class="memitem:ac647cd290962b3ba9edd236c8b386896 inherit pub_methods_classpl_set_base" id="r_ac647cd290962b3ba9edd236c8b386896"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:ac647cd290962b3ba9edd236c8b386896 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether there are no elements in the set. O(1) operation. <br /></td></tr>
<tr class="separator:ac647cd290962b3ba9edd236c8b386896 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac75970c39e9220e6476a83e031ee8fc inherit pub_methods_classpl_set_base" id="r_aac75970c39e9220e6476a83e031ee8fc"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:aac75970c39e9220e6476a83e031ee8fc inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements currently stored in the set. O(1) operation. <br /></td></tr>
<tr class="separator:aac75970c39e9220e6476a83e031ee8fc inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20118e03f5400825607dbe985311bd50 inherit pub_methods_classpl_set_base" id="r_a20118e03f5400825607dbe985311bd50"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a20118e03f5400825607dbe985311bd50 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the set and resets its size to zero. <br /></td></tr>
<tr class="separator:a20118e03f5400825607dbe985311bd50 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1acd8ad3ad4fb4f2d5426ab8b4ae9370 inherit pub_methods_classpl_set_base" id="r_a1acd8ad3ad4fb4f2d5426ab8b4ae9370"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:a1acd8ad3ad4fb4f2d5426ab8b4ae9370 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the very first element. <br /></td></tr>
<tr class="separator:a1acd8ad3ad4fb4f2d5426ab8b4ae9370 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab02cfc8019dc55b41a18c13344886980 inherit pub_methods_classpl_set_base" id="r_ab02cfc8019dc55b41a18c13344886980"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">ReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetReverseIterator</b> () const</td></tr>
<tr class="memdesc:ab02cfc8019dc55b41a18c13344886980 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant ReverseIterator to the very last element. <br /></td></tr>
<tr class="separator:ab02cfc8019dc55b41a18c13344886980 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa30fff0f0fc6ef086be6250b9dc5ac97 inherit pub_methods_classpl_set_base" id="r_aa30fff0f0fc6ef086be6250b9dc5ac97"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aa30fff0f0fc6ef086be6250b9dc5ac97 inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Insert</b> (CompatibleKeyType &amp;&amp;key)</td></tr>
<tr class="memdesc:aa30fff0f0fc6ef086be6250b9dc5ac97 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key into the tree and returns an Iterator to it. O(log n) operation. <br /></td></tr>
<tr class="separator:aa30fff0f0fc6ef086be6250b9dc5ac97 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab316f32494031a88388d301eabfcb293 inherit pub_methods_classpl_set_base" id="r_ab316f32494031a88388d301eabfcb293"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ab316f32494031a88388d301eabfcb293 inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Remove</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:ab316f32494031a88388d301eabfcb293 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the element with the given key, if it exists. O(log n) operation. <br /></td></tr>
<tr class="separator:ab316f32494031a88388d301eabfcb293 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6c57161311deed922b177123f809e1 inherit pub_methods_classpl_set_base" id="r_a8e6c57161311deed922b177123f809e1"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Remove</b> (const <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a> &amp;pos)</td></tr>
<tr class="memdesc:a8e6c57161311deed922b177123f809e1 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the element at the given Iterator. O(log n) operation. <br /></td></tr>
<tr class="separator:a8e6c57161311deed922b177123f809e1 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedb7778252456da1a4c0093f71611667 inherit pub_methods_classpl_set_base" id="r_aedb7778252456da1a4c0093f71611667"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aedb7778252456da1a4c0093f71611667 inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:aedb7778252456da1a4c0093f71611667 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:aedb7778252456da1a4c0093f71611667 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac90c49a36acee2b7e2a1ee1b592df38f inherit pub_methods_classpl_set_base" id="r_ac90c49a36acee2b7e2a1ee1b592df38f"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac90c49a36acee2b7e2a1ee1b592df38f inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ac90c49a36acee2b7e2a1ee1b592df38f inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given key is in the container. <br /></td></tr>
<tr class="separator:ac90c49a36acee2b7e2a1ee1b592df38f inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a6c2e294eee1a84a8ded33b84331419 inherit pub_methods_classpl_set_base" id="r_a0a6c2e294eee1a84a8ded33b84331419"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>ContainsSet</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;operand) const</td></tr>
<tr class="memdesc:a0a6c2e294eee1a84a8ded33b84331419 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all keys of the given set are in the container. <br /></td></tr>
<tr class="separator:a0a6c2e294eee1a84a8ded33b84331419 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af64dbcba530924a7dcc32029d510af56 inherit pub_methods_classpl_set_base" id="r_af64dbcba530924a7dcc32029d510af56"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:af64dbcba530924a7dcc32029d510af56 inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:af64dbcba530924a7dcc32029d510af56 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:af64dbcba530924a7dcc32029d510af56 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9cd9980d0aa92bc9303a02e20f7b684 inherit pub_methods_classpl_set_base" id="r_ae9cd9980d0aa92bc9303a02e20f7b684"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ae9cd9980d0aa92bc9303a02e20f7b684 inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ae9cd9980d0aa92bc9303a02e20f7b684 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:ae9cd9980d0aa92bc9303a02e20f7b684 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33a2e83975eeb8caeb365f79f3004996 inherit pub_methods_classpl_set_base" id="r_a33a2e83975eeb8caeb365f79f3004996"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Union</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;operand)</td></tr>
<tr class="memdesc:a33a2e83975eeb8caeb365f79f3004996 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the union of itself and the operand. <br /></td></tr>
<tr class="separator:a33a2e83975eeb8caeb365f79f3004996 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6047c06a2b4177844182c7964bccd59 inherit pub_methods_classpl_set_base" id="r_aa6047c06a2b4177844182c7964bccd59"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Difference</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;operand)</td></tr>
<tr class="memdesc:aa6047c06a2b4177844182c7964bccd59 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the difference of itself and the operand, i.e. subtracts operand. <br /></td></tr>
<tr class="separator:aa6047c06a2b4177844182c7964bccd59 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d094bef68c1227553443f04cb2fb159 inherit pub_methods_classpl_set_base" id="r_a0d094bef68c1227553443f04cb2fb159"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Intersection</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;operand)</td></tr>
<tr class="memdesc:a0d094bef68c1227553443f04cb2fb159 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the intersection of itself and the operand. <br /></td></tr>
<tr class="separator:a0d094bef68c1227553443f04cb2fb159 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2e442f88e2e95d36a32514109e6400b inherit pub_methods_classpl_set_base" id="r_ae2e442f88e2e95d36a32514109e6400b"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:ae2e442f88e2e95d36a32514109e6400b inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:ae2e442f88e2e95d36a32514109e6400b inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4016affc50b9eb1bfe096389b3cd3f0 inherit pub_methods_classpl_set_base" id="r_ab4016affc50b9eb1bfe096389b3cd3f0"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ab4016affc50b9eb1bfe096389b3cd3f0 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator. <br /></td></tr>
<tr class="separator:ab4016affc50b9eb1bfe096389b3cd3f0 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1601e1f4208685ac8da55e7869228ab inherit pub_methods_classpl_set_base" id="r_ae1601e1f4208685ac8da55e7869228ab"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;)</td></tr>
<tr class="separator:ae1601e1f4208685ac8da55e7869228ab inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a872eb9e8ec23215beb934c9960204048 inherit pub_methods_classpl_set_base" id="r_a872eb9e8ec23215beb934c9960204048"><td class="memItemLeft" align="right" valign="top">
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:a872eb9e8ec23215beb934c9960204048 inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a872eb9e8ec23215beb934c9960204048 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e436f86f6421cb6c605ebee0b817d8e inherit pub_methods_classpl_set_base" id="r_a8e436f86f6421cb6c605ebee0b817d8e"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;other)</td></tr>
<tr class="memdesc:a8e436f86f6421cb6c605ebee0b817d8e inherit pub_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:a8e436f86f6421cb6c605ebee0b817d8e inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9058fcb445c92ce9db85542b6307be61 inherit pub_methods_classpl_set_base" id="r_a9058fcb445c92ce9db85542b6307be61"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a9058fcb445c92ce9db85542b6307be61 inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a9058fcb445c92ce9db85542b6307be61 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0da9b621793ec476276dbb7aae9d495 inherit pub_methods_classpl_set_base" id="r_ae0da9b621793ec476276dbb7aae9d495"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ae0da9b621793ec476276dbb7aae9d495 inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:ae0da9b621793ec476276dbb7aae9d495 inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a219781f6352668f83ccbebd80178e46c inherit pub_methods_classpl_set_base" id="r_a219781f6352668f83ccbebd80178e46c"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a219781f6352668f83ccbebd80178e46c inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a219781f6352668f83ccbebd80178e46c inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13c2869be69eb04f4d3ad8bb4a2d716e inherit pub_methods_classpl_set_base" id="r_a13c2869be69eb04f4d3ad8bb4a2d716e"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a13c2869be69eb04f4d3ad8bb4a2d716e inherit pub_methods_classpl_set_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a13c2869be69eb04f4d3ad8bb4a2d716e inherit pub_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classpl_set_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_classpl_set_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase&lt; KeyType, Comparer &gt;</a></td></tr>
<tr class="memitem:ac1b31146e7b0fca47589a4ae0c85366f inherit pub_types_classpl_set_base" id="r_ac1b31146e7b0fca47589a4ae0c85366f"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>Iterator</b> = <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a>&lt;false&gt;</td></tr>
<tr class="separator:ac1b31146e7b0fca47589a4ae0c85366f inherit pub_types_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3086287ae97f2789d8ba63526739e042 inherit pub_types_classpl_set_base" id="r_a3086287ae97f2789d8ba63526739e042"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>ReverseIterator</b> = <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a>&lt;true&gt;</td></tr>
<tr class="separator:a3086287ae97f2789d8ba63526739e042 inherit pub_types_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_set_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_set_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase&lt; KeyType, Comparer &gt;</a></td></tr>
<tr class="memitem:a7da5a3aae2a0ec183e67656887287532 inherit pro_methods_classpl_set_base" id="r_a7da5a3aae2a0ec183e67656887287532"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plSetBase</b> (const Comparer &amp;comparer, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a7da5a3aae2a0ec183e67656887287532 inherit pro_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the set to be empty. <br /></td></tr>
<tr class="separator:a7da5a3aae2a0ec183e67656887287532 inherit pro_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6311217effdc7ff2f728eb4324120a29 inherit pro_methods_classpl_set_base" id="r_a6311217effdc7ff2f728eb4324120a29"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plSetBase</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;cc, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a6311217effdc7ff2f728eb4324120a29 inherit pro_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all keys from the given set into this one. <br /></td></tr>
<tr class="separator:a6311217effdc7ff2f728eb4324120a29 inherit pro_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:affba493e90896b90c5c4698fc18629a5 inherit pro_methods_classpl_set_base" id="r_affba493e90896b90c5c4698fc18629a5"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>~plSetBase</b> ()</td></tr>
<tr class="memdesc:affba493e90896b90c5c4698fc18629a5 inherit pro_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the set. <br /></td></tr>
<tr class="separator:affba493e90896b90c5c4698fc18629a5 inherit pro_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a619dc8ac9ef97e475c82cb6cbaa4aff3 inherit pro_methods_classpl_set_base" id="r_a619dc8ac9ef97e475c82cb6cbaa4aff3"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a619dc8ac9ef97e475c82cb6cbaa4aff3 inherit pro_methods_classpl_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all keys from the given set into this one. <br /></td></tr>
<tr class="separator:a619dc8ac9ef97e475c82cb6cbaa4aff3 inherit pro_methods_classpl_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename KeyType, typename Comparer = plCompareHelper&lt;KeyType&gt;, typename AllocatorWrapper = plDefaultAllocatorWrapper&gt;<br />
class plSet&lt; KeyType, Comparer, AllocatorWrapper &gt;</div><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d4/d4c/classpl_set_base.htm" title="A set container that only stores whether an element resides in it or not. Similar to STL::set.">plSetBase</a> </dd></dl>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../dc/d09/_set_8h_source.htm">Set.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../db/dc1/_set__inl_8h_source.htm">Set_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/da6/classpl_set.htm">plSet</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
