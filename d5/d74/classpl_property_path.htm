<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plPropertyPath Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d5/d74/classpl_property_path.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d6/d32/classpl_property_path-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plPropertyPath Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Stores a path from an object of a given type to a property inside of it. Once initialized to a specific path, the target property/object of the path can be read or written on multiple root objects. An empty path is allowed in which case WriteToLeafObject/ReadFromLeafObject will return pRootObject directly.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d2/dbd/_property_path_8h_source.htm">PropertyPath.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1094989f8b4151080db64bb1c197e0ab" id="r_a1094989f8b4151080db64bb1c197e0ab"><td class="memItemLeft" align="right" valign="top"><a id="a1094989f8b4151080db64bb1c197e0ab" name="a1094989f8b4151080db64bb1c197e0ab"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValid</b> () const</td></tr>
<tr class="memdesc:a1094989f8b4151080db64bb1c197e0ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if <a class="el" href="#a593b35d1f5413e3e1271e6a7c6b133e5" title="Resolves a path in the syntax &#39;propertyName[index]/propertyName[index]/...&#39; into steps....">InitializeFromPath()</a> has been successfully called and it is therefore possible to use the other functions. <br /></td></tr>
<tr class="separator:a1094989f8b4151080db64bb1c197e0ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a593b35d1f5413e3e1271e6a7c6b133e5" id="r_a593b35d1f5413e3e1271e6a7c6b133e5"><td class="memItemLeft" align="right" valign="top"><a id="a593b35d1f5413e3e1271e6a7c6b133e5" name="a593b35d1f5413e3e1271e6a7c6b133e5"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InitializeFromPath</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;rootObjectRtti, const char *szPath)</td></tr>
<tr class="memdesc:a593b35d1f5413e3e1271e6a7c6b133e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resolves a path in the syntax 'propertyName[index]/propertyName[index]/...' into steps. The '[index]' part is only added for properties that require indices (arrays and maps). <br /></td></tr>
<tr class="separator:a593b35d1f5413e3e1271e6a7c6b133e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac02b12f1066c4a2e428ae253df771996" id="r_ac02b12f1066c4a2e428ae253df771996"><td class="memItemLeft" align="right" valign="top"><a id="ac02b12f1066c4a2e428ae253df771996" name="ac02b12f1066c4a2e428ae253df771996"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InitializeFromPath</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pRootObjectRtti, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d1/d1e/structpl_property_path_step.htm">plPropertyPathStep</a> &gt; path)</td></tr>
<tr class="memdesc:ac02b12f1066c4a2e428ae253df771996"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resolves a path provided as an array of <a class="el" href="../../d1/d1e/structpl_property_path_step.htm" title="Reflected property step that can be used to init an plPropertyPath.">plPropertyPathStep</a>. <br /></td></tr>
<tr class="separator:ac02b12f1066c4a2e428ae253df771996"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9fa37d1cec2633fbbacc2b1b7016764" id="r_ac9fa37d1cec2633fbbacc2b1b7016764"><td class="memItemLeft" align="right" valign="top"><a id="ac9fa37d1cec2633fbbacc2b1b7016764" name="ac9fa37d1cec2633fbbacc2b1b7016764"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>WriteToLeafObject</b> (void *pRootObject, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;type, <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt; void(void *pLeaf, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;pType)&gt; func) const</td></tr>
<tr class="memdesc:ac9fa37d1cec2633fbbacc2b1b7016764"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies the entire path and allows writing to the target object. <br /></td></tr>
<tr class="separator:ac9fa37d1cec2633fbbacc2b1b7016764"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40f550ee29e894f58a6b8994d9fa59bb" id="r_a40f550ee29e894f58a6b8994d9fa59bb"><td class="memItemLeft" align="right" valign="top"><a id="a40f550ee29e894f58a6b8994d9fa59bb" name="a40f550ee29e894f58a6b8994d9fa59bb"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ReadFromLeafObject</b> (void *pRootObject, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;type, <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt; void(void *pLeaf, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;pType)&gt; func) const</td></tr>
<tr class="memdesc:a40f550ee29e894f58a6b8994d9fa59bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies the entire path and allows reading from the target object. <br /></td></tr>
<tr class="separator:a40f550ee29e894f58a6b8994d9fa59bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a902645a31b91a27d08dcefcbe67f1a32" id="r_a902645a31b91a27d08dcefcbe67f1a32"><td class="memItemLeft" align="right" valign="top"><a id="a902645a31b91a27d08dcefcbe67f1a32" name="a902645a31b91a27d08dcefcbe67f1a32"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>WriteProperty</b> (void *pRootObject, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;type, <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt; void(void *pLeafObject, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;pLeafType, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp, const <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;index)&gt; func) const</td></tr>
<tr class="memdesc:a902645a31b91a27d08dcefcbe67f1a32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies the path up to the last step and allows a functor to write to the final property. <br /></td></tr>
<tr class="separator:a902645a31b91a27d08dcefcbe67f1a32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81c64ee5155ce0a74ad891f2edfdfe41" id="r_a81c64ee5155ce0a74ad891f2edfdfe41"><td class="memItemLeft" align="right" valign="top"><a id="a81c64ee5155ce0a74ad891f2edfdfe41" name="a81c64ee5155ce0a74ad891f2edfdfe41"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>ReadProperty</b> (void *pRootObject, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;type, <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt; void(void *pLeafObject, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;pLeafType, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp, const <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;index)&gt; func) const</td></tr>
<tr class="memdesc:a81c64ee5155ce0a74ad891f2edfdfe41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Applies the path up to the last step and allows a functor to read from the final property. <br /></td></tr>
<tr class="separator:a81c64ee5155ce0a74ad891f2edfdfe41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a7872eb9490c59ccd47dedbdad1aaa2" id="r_a3a7872eb9490c59ccd47dedbdad1aaa2"><td class="memItemLeft" align="right" valign="top"><a id="a3a7872eb9490c59ccd47dedbdad1aaa2" name="a3a7872eb9490c59ccd47dedbdad1aaa2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetValue</b> (void *pRootObject, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;type, const <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;value) const</td></tr>
<tr class="memdesc:a3a7872eb9490c59ccd47dedbdad1aaa2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience function that writes 'value' to the 'pRootObject' at the current path. <br /></td></tr>
<tr class="separator:a3a7872eb9490c59ccd47dedbdad1aaa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d5e482da7db681336c786b3269679a7" id="r_a7d5e482da7db681336c786b3269679a7"><td class="memTemplParams" colspan="2"><a id="a7d5e482da7db681336c786b3269679a7" name="a7d5e482da7db681336c786b3269679a7"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a7d5e482da7db681336c786b3269679a7"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetValue</b> (T *pRootObject, const <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;value) const</td></tr>
<tr class="memdesc:a7d5e482da7db681336c786b3269679a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience function that writes 'value' to the 'pRootObject' at the current path. <br /></td></tr>
<tr class="separator:a7d5e482da7db681336c786b3269679a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae030da1a873ad230ef4ddf23ce48e3d9" id="r_ae030da1a873ad230ef4ddf23ce48e3d9"><td class="memItemLeft" align="right" valign="top"><a id="ae030da1a873ad230ef4ddf23ce48e3d9" name="ae030da1a873ad230ef4ddf23ce48e3d9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetValue</b> (void *pRootObject, const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> &amp;type, <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;out_value) const</td></tr>
<tr class="memdesc:ae030da1a873ad230ef4ddf23ce48e3d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience function that reads the value from 'pRootObject' at the current path and stores it in 'out_value'. <br /></td></tr>
<tr class="separator:ae030da1a873ad230ef4ddf23ce48e3d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83cc9632ab327fc66810e07247f808e1" id="r_a83cc9632ab327fc66810e07247f808e1"><td class="memTemplParams" colspan="2"><a id="a83cc9632ab327fc66810e07247f808e1" name="a83cc9632ab327fc66810e07247f808e1"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a83cc9632ab327fc66810e07247f808e1"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (T *pRootObject, <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;out_value) const</td></tr>
<tr class="memdesc:a83cc9632ab327fc66810e07247f808e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convenience function that reads the value from 'pRootObject' at the current path and stores it in 'out_value'. <br /></td></tr>
<tr class="separator:a83cc9632ab327fc66810e07247f808e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Stores a path from an object of a given type to a property inside of it. Once initialized to a specific path, the target property/object of the path can be read or written on multiple root objects. An empty path is allowed in which case WriteToLeafObject/ReadFromLeafObject will return pRootObject directly. </p>
<p>TODO: read/write methods and ResolvePath should return a failure state. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Reflection/<a class="el" href="../../d2/dbd/_property_path_8h_source.htm">PropertyPath.h</a></li>
<li>Code/Engine/Foundation/Reflection/Implementation/<b>PropertyPath.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/d74/classpl_property_path.htm">plPropertyPath</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
