<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/Reflection/Implementation/EnumProperty.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d5/ddb/_enum_property_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">EnumProperty.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/MemberProperty.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/StaticRTTI.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="foldopen" id="foldopen00011" data-start="{" data-end="};">
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="../../df/d77/classpl_abstract_enumeration_property.htm">   11</a></span><span class="keyword">class </span><a class="code hl_class" href="../../df/d77/classpl_abstract_enumeration_property.htm">plAbstractEnumerationProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="}">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../df/d77/classpl_abstract_enumeration_property.htm#a5e58f6177ed0f8044e90a5fcb4563beb">   15</a></span>  <a class="code hl_function" href="../../df/d77/classpl_abstract_enumeration_property.htm#a5e58f6177ed0f8044e90a5fcb4563beb">plAbstractEnumerationProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>    : <a class="code hl_class" href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a>(szPropertyName)</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  {</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  }</div>
</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="../../df/d77/classpl_abstract_enumeration_property.htm#a5a461e6a3fe012148a0b8753315973f0">   21</a></span>  <span class="keyword">virtual</span> plInt64 <a class="code hl_function" href="../../df/d77/classpl_abstract_enumeration_property.htm#a5a461e6a3fe012148a0b8753315973f0">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="../../df/d77/classpl_abstract_enumeration_property.htm#a9991950939e934b9d163a76e8449d487">   26</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d77/classpl_abstract_enumeration_property.htm#a9991950939e934b9d163a76e8449d487">SetValue</a>(<span class="keywordtype">void</span>* pInstance, plInt64 value) <span class="keyword">const</span> = 0;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="foldopen" id="foldopen00028" data-start="{" data-end="}">
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="../../df/d77/classpl_abstract_enumeration_property.htm#a6a03d86cd60a2fd6a69aa9d257051331">   28</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d77/classpl_abstract_enumeration_property.htm#a6a03d86cd60a2fd6a69aa9d257051331">GetValuePtr</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    *<span class="keyword">static_cast&lt;</span>plInt64*<span class="keyword">&gt;</span>(pObject) = <a class="code hl_function" href="../../df/d77/classpl_abstract_enumeration_property.htm#a5a461e6a3fe012148a0b8753315973f0">GetValue</a>(pInstance);</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  }</div>
</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="foldopen" id="foldopen00033" data-start="{" data-end="}">
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno"><a class="line" href="../../df/d77/classpl_abstract_enumeration_property.htm#a89fff07adff33a1d9ecc32ccfbe5fdca">   33</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d77/classpl_abstract_enumeration_property.htm#a89fff07adff33a1d9ecc32ccfbe5fdca">SetValuePtr</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <a class="code hl_function" href="../../df/d77/classpl_abstract_enumeration_property.htm#a9991950939e934b9d163a76e8449d487">SetValue</a>(pInstance, *<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>plInt64*<span class="keyword">&gt;</span>(pObject));</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  }</div>
</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>};</div>
</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> EnumType&gt;</div>
<div class="foldopen" id="foldopen00042" data-start="{" data-end="};">
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno"><a class="line" href="../../d3/db5/classpl_typed_enum_property.htm">   42</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d3/db5/classpl_typed_enum_property.htm">plTypedEnumProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../df/d77/classpl_abstract_enumeration_property.htm">plAbstractEnumerationProperty</a></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>{</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../d3/db5/classpl_typed_enum_property.htm#ad4e2a0013a24e0329dc8836ac4f57b30">   46</a></span>  <a class="code hl_function" href="../../d3/db5/classpl_typed_enum_property.htm#ad4e2a0013a24e0329dc8836ac4f57b30">plTypedEnumProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    : <a class="code hl_class" href="../../df/d77/classpl_abstract_enumeration_property.htm">plAbstractEnumerationProperty</a>(szPropertyName)</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  {</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  }</div>
</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="foldopen" id="foldopen00053" data-start="{" data-end="}">
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="../../d3/db5/classpl_typed_enum_property.htm#a6b8abd80a8b36d24ee3f0dffee692490">   53</a></span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* <a class="code hl_function" href="../../d3/db5/classpl_typed_enum_property.htm#a6b8abd80a8b36d24ee3f0dffee692490">GetSpecificType</a>() const override <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  {</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    <span class="keywordflow">return</span> plGetStaticRTTI&lt;typename plTypeTraits&lt;EnumType&gt;::NonConstReferenceType&gt;();</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  }</div>
</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>};</div>
</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> EnumType, <span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00062" data-start="{" data-end="};">
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="../../de/df2/classpl_enum_accessor_property.htm">   62</a></span><span class="keyword">class </span><a class="code hl_class" href="../../de/df2/classpl_enum_accessor_property.htm">plEnumAccessorProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d3/db5/classpl_typed_enum_property.htm">plTypedEnumProperty</a>&lt;EnumType&gt;</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>{</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keyword">using </span>RealType = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../da/d5d/structpl_type_traits.htm#a5d21aa226bb680dfddc12bfcd6caaa84">plTypeTraits&lt;Type&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keyword">using </span>GetterFunc = Type (Class::*)() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keyword">using </span>SetterFunc = void (Class::*)(Type value);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="foldopen" id="foldopen00070" data-start="{" data-end="}">
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="../../de/df2/classpl_enum_accessor_property.htm#ae2aaf12c7ecc41d6f7643c7ec1a903bd">   70</a></span>  <a class="code hl_function" href="../../de/df2/classpl_enum_accessor_property.htm#ae2aaf12c7ecc41d6f7643c7ec1a903bd">plEnumAccessorProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName, GetterFunc getter, SetterFunc setter)</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    : <a class="code hl_class" href="../../d3/db5/classpl_typed_enum_property.htm">plTypedEnumProperty</a>&lt;EnumType&gt;(szPropertyName)</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    PL_ASSERT_DEBUG(getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The getter of a property cannot be nullptr.&quot;</span>);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    plAbstractMemberProperty::m_Flags.<a class="code hl_function" href="../../df/dd9/structpl_bitflags.htm#aff74e2d19d2f1e1d2301c35c5170803a">Add</a>(<a class="code hl_enumvalue" href="../../db/d0f/structpl_property_flags.htm#aa9691dcb8643c279db2c187968da4d10a536fc67db20052318136e11fa48ec9b5">plPropertyFlags::IsEnum</a>);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    m_Getter = getter;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    m_Setter = setter;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <span class="keywordflow">if</span> (m_Setter == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>      plAbstractMemberProperty::m_Flags.<a class="code hl_function" href="../../df/dd9/structpl_bitflags.htm#aff74e2d19d2f1e1d2301c35c5170803a">Add</a>(<a class="code hl_enumvalue" href="../../db/d0f/structpl_property_flags.htm#aa9691dcb8643c279db2c187968da4d10a0f65bb89430668409daaa4453b1a4b86">plPropertyFlags::ReadOnly</a>);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  }</div>
</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="foldopen" id="foldopen00083" data-start="{" data-end="}">
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="../../de/df2/classpl_enum_accessor_property.htm#aeef68fc4653a96639c8e283e792863aa">   83</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code hl_function" href="../../de/df2/classpl_enum_accessor_property.htm#aeef68fc4653a96639c8e283e792863aa">GetPropertyPointer</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    <span class="comment">// No access to sub-properties, if we have accessors for this property</span></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  }</div>
</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="foldopen" id="foldopen00089" data-start="{" data-end="}">
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="../../de/df2/classpl_enum_accessor_property.htm#a780d2f33a5045495db5ffffbaa7ec354">   89</a></span>  <span class="keyword">virtual</span> plInt64 <a class="code hl_function" href="../../de/df2/classpl_enum_accessor_property.htm#a780d2f33a5045495db5ffffbaa7ec354">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  {</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;EnumType&gt;</a> enumTemp = (<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_Getter)();</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    <span class="keywordflow">return</span> enumTemp.<a class="code hl_function" href="../../dd/d09/structpl_enum.htm#a340dcb34fa90dd6a6391502bbe933baf">GetValue</a>();</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  }</div>
</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="foldopen" id="foldopen00095" data-start="{" data-end="}">
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno"><a class="line" href="../../de/df2/classpl_enum_accessor_property.htm#aa62654137eda8988f3bce51a390f7277">   95</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/df2/classpl_enum_accessor_property.htm#aa62654137eda8988f3bce51a390f7277">SetValue</a>(<span class="keywordtype">void</span>* pInstance, plInt64 value) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  {</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    PL_ASSERT_DEV(m_Setter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no setter function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d4/dd7/classpl_abstract_property.htm#ab192fac6724fcbd56a160013230bad0b">plAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    <span class="keywordflow">if</span> (m_Setter)</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      (<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_Setter)((<span class="keyword">typename</span> EnumType::Enum)value);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  }</div>
</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  GetterFunc m_Getter;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  SetterFunc m_Setter;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>};</div>
</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> EnumType, <span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00110" data-start="{" data-end="};">
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="../../d5/d8f/classpl_enum_member_property.htm">  110</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d5/d8f/classpl_enum_member_property.htm">plEnumMemberProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d3/db5/classpl_typed_enum_property.htm">plTypedEnumProperty</a>&lt;EnumType&gt;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>{</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <span class="keyword">using </span>GetterFunc = Type (*)(<span class="keyword">const</span> Class* pInstance);</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keyword">using </span>SetterFunc = void (*)(Class* pInstance, Type value);</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  <span class="keyword">using </span>PointerFunc = <span class="keywordtype">void</span>* (*)(<span class="keyword">const</span> Class* pInstance);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="foldopen" id="foldopen00118" data-start="{" data-end="}">
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="../../d5/d8f/classpl_enum_member_property.htm#a29eea3fe3dfd5e580747d95d14c28481">  118</a></span>  <a class="code hl_function" href="../../d5/d8f/classpl_enum_member_property.htm#a29eea3fe3dfd5e580747d95d14c28481">plEnumMemberProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName, GetterFunc getter, SetterFunc setter, PointerFunc pointer)</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    : <a class="code hl_class" href="../../d3/db5/classpl_typed_enum_property.htm">plTypedEnumProperty</a>&lt;EnumType&gt;(szPropertyName)</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  {</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    PL_ASSERT_DEBUG(getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The getter of a property cannot be nullptr.&quot;</span>);</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>    plAbstractMemberProperty::m_Flags.<a class="code hl_function" href="../../df/dd9/structpl_bitflags.htm#aff74e2d19d2f1e1d2301c35c5170803a">Add</a>(<a class="code hl_enumvalue" href="../../db/d0f/structpl_property_flags.htm#aa9691dcb8643c279db2c187968da4d10a536fc67db20052318136e11fa48ec9b5">plPropertyFlags::IsEnum</a>);</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    m_Getter = getter;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    m_Setter = setter;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>    m_Pointer = pointer;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    <span class="keywordflow">if</span> (m_Setter == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>      plAbstractMemberProperty::m_Flags.<a class="code hl_function" href="../../df/dd9/structpl_bitflags.htm#aff74e2d19d2f1e1d2301c35c5170803a">Add</a>(<a class="code hl_enumvalue" href="../../db/d0f/structpl_property_flags.htm#aa9691dcb8643c279db2c187968da4d10a0f65bb89430668409daaa4453b1a4b86">plPropertyFlags::ReadOnly</a>);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  }</div>
</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="../../d5/d8f/classpl_enum_member_property.htm#a848745ee56960912bd4f7e888543d81c">  132</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code hl_function" href="../../d5/d8f/classpl_enum_member_property.htm#a848745ee56960912bd4f7e888543d81c">GetPropertyPointer</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Pointer(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)); }</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="foldopen" id="foldopen00134" data-start="{" data-end="}">
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno"><a class="line" href="../../d5/d8f/classpl_enum_member_property.htm#afafe5454859951ecb0f7ba411731ce39">  134</a></span>  <span class="keyword">virtual</span> plInt64 <a class="code hl_function" href="../../d5/d8f/classpl_enum_member_property.htm#afafe5454859951ecb0f7ba411731ce39">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  {</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;EnumType&gt;</a> enumTemp = m_Getter(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance));</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    <span class="keywordflow">return</span> enumTemp.<a class="code hl_function" href="../../dd/d09/structpl_enum.htm#a340dcb34fa90dd6a6391502bbe933baf">GetValue</a>();</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  }</div>
</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="foldopen" id="foldopen00140" data-start="{" data-end="}">
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno"><a class="line" href="../../d5/d8f/classpl_enum_member_property.htm#a1f126b4167abfb114d825f00cac5b91f">  140</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/d8f/classpl_enum_member_property.htm#a1f126b4167abfb114d825f00cac5b91f">SetValue</a>(<span class="keywordtype">void</span>* pInstance, plInt64 value) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  {</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    PL_ASSERT_DEV(m_Setter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no setter function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d4/dd7/classpl_abstract_property.htm#ab192fac6724fcbd56a160013230bad0b">plAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>    <span class="keywordflow">if</span> (m_Setter)</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>      m_Setter(<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance), (<span class="keyword">typename</span> EnumType::Enum)value);</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  }</div>
</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  GetterFunc m_Getter;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  SetterFunc m_Setter;</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  PointerFunc m_Pointer;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>};</div>
</div>
<div class="ttc" id="aclasspl_abstract_enumeration_property_htm"><div class="ttname"><a href="../../df/d77/classpl_abstract_enumeration_property.htm">plAbstractEnumerationProperty</a></div><div class="ttdoc">The base class for enum and bitflags member properties.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:12</div></div>
<div class="ttc" id="aclasspl_abstract_enumeration_property_htm_a5a461e6a3fe012148a0b8753315973f0"><div class="ttname"><a href="../../df/d77/classpl_abstract_enumeration_property.htm#a5a461e6a3fe012148a0b8753315973f0">plAbstractEnumerationProperty::GetValue</a></div><div class="ttdeci">virtual plInt64 GetValue(const void *pInstance) const =0</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div></div>
<div class="ttc" id="aclasspl_abstract_enumeration_property_htm_a5e58f6177ed0f8044e90a5fcb4563beb"><div class="ttname"><a href="../../df/d77/classpl_abstract_enumeration_property.htm#a5e58f6177ed0f8044e90a5fcb4563beb">plAbstractEnumerationProperty::plAbstractEnumerationProperty</a></div><div class="ttdeci">plAbstractEnumerationProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to plAbstractMemberProperty.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:15</div></div>
<div class="ttc" id="aclasspl_abstract_enumeration_property_htm_a6a03d86cd60a2fd6a69aa9d257051331"><div class="ttname"><a href="../../df/d77/classpl_abstract_enumeration_property.htm#a6a03d86cd60a2fd6a69aa9d257051331">plAbstractEnumerationProperty::GetValuePtr</a></div><div class="ttdeci">virtual void GetValuePtr(const void *pInstance, void *pObject) const override</div><div class="ttdoc">Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of t...</div><div class="ttdef"><b>Definition</b> EnumProperty.h:28</div></div>
<div class="ttc" id="aclasspl_abstract_enumeration_property_htm_a89fff07adff33a1d9ecc32ccfbe5fdca"><div class="ttname"><a href="../../df/d77/classpl_abstract_enumeration_property.htm#a89fff07adff33a1d9ecc32ccfbe5fdca">plAbstractEnumerationProperty::SetValuePtr</a></div><div class="ttdeci">virtual void SetValuePtr(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this...</div><div class="ttdef"><b>Definition</b> EnumProperty.h:33</div></div>
<div class="ttc" id="aclasspl_abstract_enumeration_property_htm_a9991950939e934b9d163a76e8449d487"><div class="ttname"><a href="../../df/d77/classpl_abstract_enumeration_property.htm#a9991950939e934b9d163a76e8449d487">plAbstractEnumerationProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, plInt64 value) const =0</div><div class="ttdoc">Modifies the value of the property. Pass the instance pointer to the surrounding class along.</div></div>
<div class="ttc" id="aclasspl_abstract_member_property_htm"><div class="ttname"><a href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a></div><div class="ttdoc">This is the base class for all properties that are members of a class. It provides more information a...</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:237</div></div>
<div class="ttc" id="aclasspl_abstract_property_htm_ab192fac6724fcbd56a160013230bad0b"><div class="ttname"><a href="../../d4/dd7/classpl_abstract_property.htm#ab192fac6724fcbd56a160013230bad0b">plAbstractProperty::GetPropertyName</a></div><div class="ttdeci">const char * GetPropertyName() const</div><div class="ttdoc">Returns the name of the property.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:158</div></div>
<div class="ttc" id="aclasspl_enum_accessor_property_htm"><div class="ttname"><a href="../../de/df2/classpl_enum_accessor_property.htm">plEnumAccessorProperty</a></div><div class="ttdoc">[internal] An implementation of plTypedEnumProperty that uses custom getter / setter functions to acc...</div><div class="ttdef"><b>Definition</b> EnumProperty.h:63</div></div>
<div class="ttc" id="aclasspl_enum_accessor_property_htm_a780d2f33a5045495db5ffffbaa7ec354"><div class="ttname"><a href="../../de/df2/classpl_enum_accessor_property.htm#a780d2f33a5045495db5ffffbaa7ec354">plEnumAccessorProperty::GetValue</a></div><div class="ttdeci">virtual plInt64 GetValue(const void *pInstance) const override</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:89</div></div>
<div class="ttc" id="aclasspl_enum_accessor_property_htm_aa62654137eda8988f3bce51a390f7277"><div class="ttname"><a href="../../de/df2/classpl_enum_accessor_property.htm#aa62654137eda8988f3bce51a390f7277">plEnumAccessorProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, plInt64 value) const override</div><div class="ttdoc">Modifies the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:95</div></div>
<div class="ttc" id="aclasspl_enum_accessor_property_htm_ae2aaf12c7ecc41d6f7643c7ec1a903bd"><div class="ttname"><a href="../../de/df2/classpl_enum_accessor_property.htm#ae2aaf12c7ecc41d6f7643c7ec1a903bd">plEnumAccessorProperty::plEnumAccessorProperty</a></div><div class="ttdeci">plEnumAccessorProperty(const char *szPropertyName, GetterFunc getter, SetterFunc setter)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:70</div></div>
<div class="ttc" id="aclasspl_enum_accessor_property_htm_aeef68fc4653a96639c8e283e792863aa"><div class="ttname"><a href="../../de/df2/classpl_enum_accessor_property.htm#aeef68fc4653a96639c8e283e792863aa">plEnumAccessorProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer(const void *pInstance) const override</div><div class="ttdoc">Returns a pointer to the property data or nullptr. If a valid pointer is returned,...</div><div class="ttdef"><b>Definition</b> EnumProperty.h:83</div></div>
<div class="ttc" id="aclasspl_enum_member_property_htm"><div class="ttname"><a href="../../d5/d8f/classpl_enum_member_property.htm">plEnumMemberProperty</a></div><div class="ttdoc">[internal] An implementation of plTypedEnumProperty that accesses the enum property data directly.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:111</div></div>
<div class="ttc" id="aclasspl_enum_member_property_htm_a1f126b4167abfb114d825f00cac5b91f"><div class="ttname"><a href="../../d5/d8f/classpl_enum_member_property.htm#a1f126b4167abfb114d825f00cac5b91f">plEnumMemberProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, plInt64 value) const override</div><div class="ttdoc">Modifies the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:140</div></div>
<div class="ttc" id="aclasspl_enum_member_property_htm_a29eea3fe3dfd5e580747d95d14c28481"><div class="ttname"><a href="../../d5/d8f/classpl_enum_member_property.htm#a29eea3fe3dfd5e580747d95d14c28481">plEnumMemberProperty::plEnumMemberProperty</a></div><div class="ttdeci">plEnumMemberProperty(const char *szPropertyName, GetterFunc getter, SetterFunc setter, PointerFunc pointer)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:118</div></div>
<div class="ttc" id="aclasspl_enum_member_property_htm_a848745ee56960912bd4f7e888543d81c"><div class="ttname"><a href="../../d5/d8f/classpl_enum_member_property.htm#a848745ee56960912bd4f7e888543d81c">plEnumMemberProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer(const void *pInstance) const override</div><div class="ttdoc">Returns a pointer to the property data or nullptr. If a valid pointer is returned,...</div><div class="ttdef"><b>Definition</b> EnumProperty.h:132</div></div>
<div class="ttc" id="aclasspl_enum_member_property_htm_afafe5454859951ecb0f7ba411731ce39"><div class="ttname"><a href="../../d5/d8f/classpl_enum_member_property.htm#afafe5454859951ecb0f7ba411731ce39">plEnumMemberProperty::GetValue</a></div><div class="ttdeci">virtual plInt64 GetValue(const void *pInstance) const override</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:134</div></div>
<div class="ttc" id="aclasspl_r_t_t_i_htm"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclasspl_typed_enum_property_htm"><div class="ttname"><a href="../../d3/db5/classpl_typed_enum_property.htm">plTypedEnumProperty</a></div><div class="ttdoc">[internal] Base class for enum / bitflags properties that already defines the type.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:43</div></div>
<div class="ttc" id="aclasspl_typed_enum_property_htm_a6b8abd80a8b36d24ee3f0dffee692490"><div class="ttname"><a href="../../d3/db5/classpl_typed_enum_property.htm#a6b8abd80a8b36d24ee3f0dffee692490">plTypedEnumProperty::GetSpecificType</a></div><div class="ttdeci">virtual const plRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the actual type of the property. You can then test whether it derives from plEnumBase or plBi...</div><div class="ttdef"><b>Definition</b> EnumProperty.h:53</div></div>
<div class="ttc" id="aclasspl_typed_enum_property_htm_ad4e2a0013a24e0329dc8836ac4f57b30"><div class="ttname"><a href="../../d3/db5/classpl_typed_enum_property.htm#ad4e2a0013a24e0329dc8836ac4f57b30">plTypedEnumProperty::plTypedEnumProperty</a></div><div class="ttdeci">plTypedEnumProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to plAbstractEnumerationProperty.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:46</div></div>
<div class="ttc" id="astructpl_bitflags_htm_aff74e2d19d2f1e1d2301c35c5170803a"><div class="ttname"><a href="../../df/dd9/structpl_bitflags.htm#aff74e2d19d2f1e1d2301c35c5170803a">plBitflags::Add</a></div><div class="ttdeci">PL_ALWAYS_INLINE void Add(const plBitflags&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Sets the given flag.</div><div class="ttdef"><b>Definition</b> Bitflags.h:151</div></div>
<div class="ttc" id="astructpl_enum_htm"><div class="ttname"><a href="../../dd/d09/structpl_enum.htm">plEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition</b> Enum.h:37</div></div>
<div class="ttc" id="astructpl_enum_htm_a340dcb34fa90dd6a6391502bbe933baf"><div class="ttname"><a href="../../dd/d09/structpl_enum.htm#a340dcb34fa90dd6a6391502bbe933baf">plEnum::GetValue</a></div><div class="ttdeci">PL_ALWAYS_INLINE StorageType GetValue() const</div><div class="ttdoc">Returns the enum value as an integer.</div><div class="ttdef"><b>Definition</b> Enum.h:98</div></div>
<div class="ttc" id="astructpl_property_flags_htm_aa9691dcb8643c279db2c187968da4d10a0f65bb89430668409daaa4453b1a4b86"><div class="ttname"><a href="../../db/d0f/structpl_property_flags.htm#aa9691dcb8643c279db2c187968da4d10a0f65bb89430668409daaa4453b1a4b86">plPropertyFlags::ReadOnly</a></div><div class="ttdeci">@ ReadOnly</div><div class="ttdoc">Can only be read but not modified.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:63</div></div>
<div class="ttc" id="astructpl_property_flags_htm_aa9691dcb8643c279db2c187968da4d10a536fc67db20052318136e11fa48ec9b5"><div class="ttname"><a href="../../db/d0f/structpl_property_flags.htm#aa9691dcb8643c279db2c187968da4d10a536fc67db20052318136e11fa48ec9b5">plPropertyFlags::IsEnum</a></div><div class="ttdeci">@ IsEnum</div><div class="ttdoc">enum property, cast to plAbstractEnumerationProperty.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:54</div></div>
<div class="ttc" id="astructpl_type_traits_htm_a5d21aa226bb680dfddc12bfcd6caaa84"><div class="ttname"><a href="../../da/d5d/structpl_type_traits.htm#a5d21aa226bb680dfddc12bfcd6caaa84">plTypeTraits::NonConstReferenceType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonConstReferenceType</div><div class="ttdoc">removes reference and const qualifier</div><div class="ttdef"><b>Definition</b> TypeTraits.h:218</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_03dd0ffe19aabd3d1cd0d82a91256ab1.htm">Reflection</a></li><li class="navelem"><a class="el" href="../../dir_e37e67d8810cb9249b77d55deb37c5cb.htm">Implementation</a></li><li class="navelem"><b>EnumProperty.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
