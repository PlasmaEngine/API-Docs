<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plPrefabDefaultStateProvider Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d2/d5f/classpl_prefab_default_state_provider.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d4/d40/classpl_prefab_default_state_provider-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plPrefabDefaultStateProvider Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Default state provider that reflects the default state defined in the prefab template.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/d0e/_prefab_default_state_provider_8h_source.htm">PrefabDefaultStateProvider.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plPrefabDefaultStateProvider:</div>
<div class="dyncontent">
<div class="center"><img src="../../dd/d7e/classpl_prefab_default_state_provider__inherit__graph.png" border="0" usemap="#apl_prefab_default_state_provider_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_prefab_default_state_provider_inherit__map" id="apl_prefab_default_state_provider_inherit__map">
<area shape="rect" title="Default state provider that reflects the default state defined in the prefab template." alt="" coords="5,229,191,256"/>
<area shape="rect" href="../../d3/d29/classpl_default_state_provider.htm" title="Interface for querying and restoring the default state of objects and containers." alt="" coords="24,155,172,181"/>
<area shape="poly" title=" " alt="" coords="101,197,101,229,95,229,95,197"/>
<area shape="rect" href="../../d2/df5/classpl_ref_counted.htm" title="Base class for reference counted objects." alt="" coords="49,80,147,107"/>
<area shape="poly" title=" " alt="" coords="101,122,101,154,95,154,95,122"/>
<area shape="rect" href="../../de/da6/classpl_ref_counting_impl.htm" title=" " alt="" coords="35,5,161,32"/>
<area shape="poly" title=" " alt="" coords="101,48,101,80,95,80,95,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5bd001bdb1d97c902dd661832f0abf27" id="r_a5bd001bdb1d97c902dd661832f0abf27"><td class="memItemLeft" align="right" valign="top"><a id="a5bd001bdb1d97c902dd661832f0abf27" name="a5bd001bdb1d97c902dd661832f0abf27"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plPrefabDefaultStateProvider</b> (const <a class="el" href="../../d6/d33/classpl_uuid.htm">plUuid</a> &amp;rootObjectGuid, const <a class="el" href="../../d6/d33/classpl_uuid.htm">plUuid</a> &amp;createFromPrefab, const <a class="el" href="../../d6/d33/classpl_uuid.htm">plUuid</a> &amp;prefabSeedGuid, plInt32 iRootDepth)</td></tr>
<tr class="separator:a5bd001bdb1d97c902dd661832f0abf27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e3e92237e7af89cc74a43987f8bc250" id="r_a1e3e92237e7af89cc74a43987f8bc250"><td class="memItemLeft" align="right" valign="top">virtual plInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1e3e92237e7af89cc74a43987f8bc250">GetRootDepth</a> () const override</td></tr>
<tr class="memdesc:a1e3e92237e7af89cc74a43987f8bc250"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the root depth of this provider instance.  <br /></td></tr>
<tr class="separator:a1e3e92237e7af89cc74a43987f8bc250"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d883b9f18399ff00397b8eb9df3bb75" id="r_a0d883b9f18399ff00397b8eb9df3bb75"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../dd/dd8/classpl_color_gamma_u_b.htm">plColorGammaUB</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0d883b9f18399ff00397b8eb9df3bb75">GetBackgroundColor</a> () const override</td></tr>
<tr class="memdesc:a0d883b9f18399ff00397b8eb9df3bb75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a color to be used in the property grid. Only the hue of the color is used. If alpha is 0, the color is ignored and no tinting of the property grid takes place.  <br /></td></tr>
<tr class="separator:a0d883b9f18399ff00397b8eb9df3bb75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63912c3eb8c59a97595126df64c31cc0" id="r_a63912c3eb8c59a97595126df64c31cc0"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a63912c3eb8c59a97595126df64c31cc0">GetStateProviderName</a> () const override</td></tr>
<tr class="memdesc:a63912c3eb8c59a97595126df64c31cc0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of this state provider. Can be used to check what the outer most provider is for GUI purposes.  <br /></td></tr>
<tr class="separator:a63912c3eb8c59a97595126df64c31cc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c298e6184baf840d285614f6803d1e2" id="r_a1c298e6184baf840d285614f6803d1e2"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1c298e6184baf840d285614f6803d1e2">GetDefaultValue</a> (<a class="el" href="../../d3/d29/classpl_default_state_provider.htm#aa8f375361b31e3cbde99ae7c1b9f819b">SuperArray</a> superPtr, <a class="el" href="../../d6/d5a/classpl_object_accessor_base.htm">plObjectAccessorBase</a> *pAccessor, const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *pObject, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp, <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> index=<a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>()) override</td></tr>
<tr class="memdesc:a1c298e6184baf840d285614f6803d1e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the default value of an object's property at a given index.  <br /></td></tr>
<tr class="separator:a1c298e6184baf840d285614f6803d1e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d2e8513fef58c2e14a8d1618d27d891" id="r_a3d2e8513fef58c2e14a8d1618d27d891"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../db/d23/structpl_status.htm">plStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3d2e8513fef58c2e14a8d1618d27d891">CreateRevertContainerDiff</a> (<a class="el" href="../../d3/d29/classpl_default_state_provider.htm#aa8f375361b31e3cbde99ae7c1b9f819b">SuperArray</a> superPtr, <a class="el" href="../../d6/d5a/classpl_object_accessor_base.htm">plObjectAccessorBase</a> *pAccessor, const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *pObject, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp, <a class="el" href="../../d7/de8/classpl_deque.htm">plDeque</a>&lt; <a class="el" href="../../d4/d0b/structpl_abstract_graph_diff_operation.htm">plAbstractGraphDiffOperation</a> &gt; &amp;out_diff) override</td></tr>
<tr class="memdesc:a3d2e8513fef58c2e14a8d1618d27d891"><td class="mdescLeft">&#160;</td><td class="mdescRight">Queries an array of diff operations that can be executed to revert the object container.  <br /></td></tr>
<tr class="separator:a3d2e8513fef58c2e14a8d1618d27d891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_default_state_provider"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_default_state_provider')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d3/d29/classpl_default_state_provider.htm">plDefaultStateProvider</a></td></tr>
<tr class="memitem:a75c1ecf7eab99f2ae4857de3bb4af296 inherit pub_methods_classpl_default_state_provider" id="r_a75c1ecf7eab99f2ae4857de3bb4af296"><td class="memItemLeft" align="right" valign="top">
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsDefaultValue</b> (<a class="el" href="../../d3/d29/classpl_default_state_provider.htm#aa8f375361b31e3cbde99ae7c1b9f819b">SuperArray</a> superPtr, <a class="el" href="../../d6/d5a/classpl_object_accessor_base.htm">plObjectAccessorBase</a> *pAccessor, const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *pObject, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp, <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> index=<a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>())</td></tr>
<tr class="separator:a75c1ecf7eab99f2ae4857de3bb4af296 inherit pub_methods_classpl_default_state_provider"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97659755fb3208c776a0f39e9829f0c5 inherit pub_methods_classpl_default_state_provider" id="r_a97659755fb3208c776a0f39e9829f0c5"><td class="memItemLeft" align="right" valign="top">
virtual <a class="el" href="../../db/d23/structpl_status.htm">plStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><b>RevertProperty</b> (<a class="el" href="../../d3/d29/classpl_default_state_provider.htm#aa8f375361b31e3cbde99ae7c1b9f819b">SuperArray</a> superPtr, <a class="el" href="../../d6/d5a/classpl_object_accessor_base.htm">plObjectAccessorBase</a> *pAccessor, const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *pObject, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp, <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> index=<a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>())</td></tr>
<tr class="separator:a97659755fb3208c776a0f39e9829f0c5 inherit pub_methods_classpl_default_state_provider"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fb8c91c9a1a12b02017f7fdc078ef29 inherit pub_methods_classpl_default_state_provider" id="r_a1fb8c91c9a1a12b02017f7fdc078ef29"><td class="memItemLeft" align="right" valign="top">
virtual <a class="el" href="../../db/d23/structpl_status.htm">plStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><b>RevertObjectContainer</b> (<a class="el" href="../../d3/d29/classpl_default_state_provider.htm#aa8f375361b31e3cbde99ae7c1b9f819b">SuperArray</a> superPtr, <a class="el" href="../../d6/d5a/classpl_object_accessor_base.htm">plObjectAccessorBase</a> *pAccessor, const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *pObject, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp)</td></tr>
<tr class="separator:a1fb8c91c9a1a12b02017f7fdc078ef29 inherit pub_methods_classpl_default_state_provider"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_ref_counted"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_ref_counted')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d2/df5/classpl_ref_counted.htm">plRefCounted</a></td></tr>
<tr class="memitem:afe4266b3569297a1e61fa2be8bc7b672 inherit pub_methods_classpl_ref_counted" id="r_afe4266b3569297a1e61fa2be8bc7b672"><td class="memItemLeft" align="right" valign="top">
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>~plRefCounted</b> ()=default</td></tr>
<tr class="memdesc:afe4266b3569297a1e61fa2be8bc7b672 inherit pub_methods_classpl_ref_counted"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a virtual destructor. <br /></td></tr>
<tr class="separator:afe4266b3569297a1e61fa2be8bc7b672 inherit pub_methods_classpl_ref_counted"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_ref_counting_impl"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_ref_counting_impl')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/da6/classpl_ref_counting_impl.htm">plRefCountingImpl</a></td></tr>
<tr class="memitem:a1cc7688d100950a55c7d0ccbfd9036db inherit pub_methods_classpl_ref_counting_impl" id="r_a1cc7688d100950a55c7d0ccbfd9036db"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plRefCountingImpl</b> ()=default</td></tr>
<tr class="memdesc:a1cc7688d100950a55c7d0ccbfd9036db inherit pub_methods_classpl_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:a1cc7688d100950a55c7d0ccbfd9036db inherit pub_methods_classpl_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab760358452b37d27ef04d51cdf378cf0 inherit pub_methods_classpl_ref_counting_impl" id="r_ab760358452b37d27ef04d51cdf378cf0"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plRefCountingImpl</b> (const <a class="el" href="../../de/da6/classpl_ref_counting_impl.htm">plRefCountingImpl</a> &amp;rhs)</td></tr>
<tr class="separator:ab760358452b37d27ef04d51cdf378cf0 inherit pub_methods_classpl_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcb719199e7b83f0f675d37fc015a0b4 inherit pub_methods_classpl_ref_counting_impl" id="r_abcb719199e7b83f0f675d37fc015a0b4"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../de/da6/classpl_ref_counting_impl.htm">plRefCountingImpl</a> &amp;rhs)</td></tr>
<tr class="separator:abcb719199e7b83f0f675d37fc015a0b4 inherit pub_methods_classpl_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae56d3286426b75cfb027c11a0c2ba03a inherit pub_methods_classpl_ref_counting_impl" id="r_ae56d3286426b75cfb027c11a0c2ba03a"><td class="memItemLeft" align="right" valign="top">
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>AddRef</b> () const</td></tr>
<tr class="memdesc:ae56d3286426b75cfb027c11a0c2ba03a inherit pub_methods_classpl_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments the reference counter. Returns the new reference count. <br /></td></tr>
<tr class="separator:ae56d3286426b75cfb027c11a0c2ba03a inherit pub_methods_classpl_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0320946adb36a8fab5d17cf6e8f53aca inherit pub_methods_classpl_ref_counting_impl" id="r_a0320946adb36a8fab5d17cf6e8f53aca"><td class="memItemLeft" align="right" valign="top">
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>ReleaseRef</b> () const</td></tr>
<tr class="memdesc:a0320946adb36a8fab5d17cf6e8f53aca inherit pub_methods_classpl_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements the reference counter. Returns the new reference count. <br /></td></tr>
<tr class="separator:a0320946adb36a8fab5d17cf6e8f53aca inherit pub_methods_classpl_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d3670a4d68cc2dc244682d0f3ea4bb9 inherit pub_methods_classpl_ref_counting_impl" id="r_a5d3670a4d68cc2dc244682d0f3ea4bb9"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsReferenced</b> () const</td></tr>
<tr class="memdesc:a5d3670a4d68cc2dc244682d0f3ea4bb9 inherit pub_methods_classpl_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the reference count is greater than 0, false otherwise. <br /></td></tr>
<tr class="separator:a5d3670a4d68cc2dc244682d0f3ea4bb9 inherit pub_methods_classpl_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c2a5100a69f7a48dc2b9a0c7c3f7b12 inherit pub_methods_classpl_ref_counting_impl" id="r_a6c2a5100a69f7a48dc2b9a0c7c3f7b12"><td class="memItemLeft" align="right" valign="top">
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetRefCount</b> () const</td></tr>
<tr class="memdesc:a6c2a5100a69f7a48dc2b9a0c7c3f7b12 inherit pub_methods_classpl_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current reference count. <br /></td></tr>
<tr class="separator:a6c2a5100a69f7a48dc2b9a0c7c3f7b12 inherit pub_methods_classpl_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a4d831eeda45b7dc7b29a0cec9d9f14a8" id="r_a4d831eeda45b7dc7b29a0cec9d9f14a8"><td class="memItemLeft" align="right" valign="top"><a id="a4d831eeda45b7dc7b29a0cec9d9f14a8" name="a4d831eeda45b7dc7b29a0cec9d9f14a8"></a>
static <a class="el" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>&lt; <a class="el" href="../../d3/d29/classpl_default_state_provider.htm">plDefaultStateProvider</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateProvider</b> (<a class="el" href="../../d6/d5a/classpl_object_accessor_base.htm">plObjectAccessorBase</a> *pAccessor, const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *pObject, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp)</td></tr>
<tr class="separator:a4d831eeda45b7dc7b29a0cec9d9f14a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classpl_default_state_provider"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_default_state_provider')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d3/d29/classpl_default_state_provider.htm">plDefaultStateProvider</a></td></tr>
<tr class="memitem:af893cecfd20722b8fd5e49c0ff9749e1 inherit pub_static_methods_classpl_default_state_provider" id="r_af893cecfd20722b8fd5e49c0ff9749e1"><td class="memItemLeft" align="right" valign="top">
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>DoesVariantMatchProperty</b> (const <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;value, const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *pProp, <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> index=<a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>())</td></tr>
<tr class="memdesc:af893cecfd20722b8fd5e49c0ff9749e1 inherit pub_static_methods_classpl_default_state_provider"><td class="mdescLeft">&#160;</td><td class="mdescRight">A sanity check function that verifies that a given variant's value matches that expected of the property at the given index. If index is invalid and the property a container, the value must be an array or dictionary of the property's type. <br /></td></tr>
<tr class="separator:af893cecfd20722b8fd5e49c0ff9749e1 inherit pub_static_methods_classpl_default_state_provider"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classpl_default_state_provider"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_classpl_default_state_provider')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d3/d29/classpl_default_state_provider.htm">plDefaultStateProvider</a></td></tr>
<tr class="memitem:aa8f375361b31e3cbde99ae7c1b9f819b inherit pub_types_classpl_default_state_provider" id="r_aa8f375361b31e3cbde99ae7c1b9f819b"><td class="memItemLeft" align="right" valign="top">using&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d29/classpl_default_state_provider.htm#aa8f375361b31e3cbde99ae7c1b9f819b">SuperArray</a> = const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt;const <a class="el" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>&lt;<a class="el" href="../../d3/d29/classpl_default_state_provider.htm">plDefaultStateProvider</a>&gt;&gt;</td></tr>
<tr class="memdesc:aa8f375361b31e3cbde99ae7c1b9f819b inherit pub_types_classpl_default_state_provider"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parent hierarchy of state providers.  <br /></td></tr>
<tr class="separator:aa8f375361b31e3cbde99ae7c1b9f819b inherit pub_types_classpl_default_state_provider"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Default state provider that reflects the default state defined in the prefab template. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a3d2e8513fef58c2e14a8d1618d27d891" name="a3d2e8513fef58c2e14a8d1618d27d891"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d2e8513fef58c2e14a8d1618d27d891">&#9670;&#160;</a></span>CreateRevertContainerDiff()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../db/d23/structpl_status.htm">plStatus</a> plPrefabDefaultStateProvider::CreateRevertContainerDiff </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/d29/classpl_default_state_provider.htm#aa8f375361b31e3cbde99ae7c1b9f819b">SuperArray</a></td>          <td class="paramname"><span class="paramname"><em>superPtr</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d5a/classpl_object_accessor_base.htm">plObjectAccessorBase</a> *</td>          <td class="paramname"><span class="paramname"><em>pAccessor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *</td>          <td class="paramname"><span class="paramname"><em>pProp</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d7/de8/classpl_deque.htm">plDeque</a>&lt; <a class="el" href="../../d4/d0b/structpl_abstract_graph_diff_operation.htm">plAbstractGraphDiffOperation</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>out_diff</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Queries an array of diff operations that can be executed to revert the object container. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">superPtr</td><td>superPtr Parent hierarchy of inner providers that should be called of this instance cannot handle the request. See SuperArray definition for details. </td></tr>
    <tr><td class="paramname">pAccessor</td><td>pAccessor Accessor to be used for querying object values if necessary. Always valid. </td></tr>
    <tr><td class="paramname">pObject</td><td>pObject The object which is to be reverted. Always valid. </td></tr>
    <tr><td class="paramname">pProp</td><td>pProp The container property which is to be reverted. Always valid. </td></tr>
    <tr><td class="paramname">out_diff</td><td>An array of diff operations that should be executed via plDocumentObjectConverterReader::ApplyDiffToObject to revert the object / container to its default state. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If failure is returned, the operation failed and the undo transaction should be canceled. </dd></dl>
<dl class="section see"><dt>See also</dt><dd>plDocumentObjectConverterReader::ApplyDiffToObject </dd></dl>

<p>Implements <a class="el" href="../../d3/d29/classpl_default_state_provider.htm#a330d8b49ecea75ac81a4f7f58c6baa24">plDefaultStateProvider</a>.</p>

</div>
</div>
<a id="a0d883b9f18399ff00397b8eb9df3bb75" name="a0d883b9f18399ff00397b8eb9df3bb75"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0d883b9f18399ff00397b8eb9df3bb75">&#9670;&#160;</a></span>GetBackgroundColor()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/dd8/classpl_color_gamma_u_b.htm">plColorGammaUB</a> plPrefabDefaultStateProvider::GetBackgroundColor </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a color to be used in the property grid. Only the hue of the color is used. If alpha is 0, the color is ignored and no tinting of the property grid takes place. </p>

<p>Implements <a class="el" href="../../d3/d29/classpl_default_state_provider.htm#a7a8ea9b129fadeba0f84055f625d6886">plDefaultStateProvider</a>.</p>

</div>
</div>
<a id="a1c298e6184baf840d285614f6803d1e2" name="a1c298e6184baf840d285614f6803d1e2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c298e6184baf840d285614f6803d1e2">&#9670;&#160;</a></span>GetDefaultValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> plPrefabDefaultStateProvider::GetDefaultValue </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/d29/classpl_default_state_provider.htm#aa8f375361b31e3cbde99ae7c1b9f819b">SuperArray</a></td>          <td class="paramname"><span class="paramname"><em>superPtr</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d5a/classpl_object_accessor_base.htm">plObjectAccessorBase</a> *</td>          <td class="paramname"><span class="paramname"><em>pAccessor</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d9/dea/classpl_document_object.htm">plDocumentObject</a> *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *</td>          <td class="paramname"><span class="paramname"><em>pProp</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a></td>          <td class="paramname"><span class="paramname"><em>index</em></span><span class="paramdefsep"> = </span><span class="paramdefval"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a>()</span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the default value of an object's property at a given index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">superPtr</td><td>Parent hierarchy of inner providers that should be called of this instance cannot handle the request. See SuperArray definition for details. </td></tr>
    <tr><td class="paramname">pAccessor</td><td>Accessor to be used for querying object values if necessary. Always valid. </td></tr>
    <tr><td class="paramname">pObject</td><td>The object for which the default value should be queried. Always valid. </td></tr>
    <tr><td class="paramname">pProp</td><td>The property for which the default value should be queried. Always valid. </td></tr>
    <tr><td class="paramname">index</td><td>For containers: If the index is valid, the container element's default value is requested. If not, the entire container (either array or dictionary) is requested. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The default value. <a class="el" href="../../d6/ddb/classpl_reflection_utils.htm#a0219d8323368729ac1f775d2ba4039b4" title="Returns the default value for the specific type of the given property.">plReflectionUtils::GetDefaultValue</a> is a good example what is expected to be returned. </dd></dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d6/ddb/classpl_reflection_utils.htm#a0219d8323368729ac1f775d2ba4039b4" title="Returns the default value for the specific type of the given property.">plReflectionUtils::GetDefaultValue</a>, <a class="el" href="../../d3/d29/classpl_default_state_provider.htm#af893cecfd20722b8fd5e49c0ff9749e1" title="A sanity check function that verifies that a given variant&#39;s value matches that expected of the prope...">plDefaultStateProvider::DoesVariantMatchProperty</a> </dd></dl>

<p>Implements <a class="el" href="../../d3/d29/classpl_default_state_provider.htm#ad82b701315e59892c7fc8ed01ca76ec0">plDefaultStateProvider</a>.</p>

</div>
</div>
<a id="a1e3e92237e7af89cc74a43987f8bc250" name="a1e3e92237e7af89cc74a43987f8bc250"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e3e92237e7af89cc74a43987f8bc250">&#9670;&#160;</a></span>GetRootDepth()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">plInt32 plPrefabDefaultStateProvider::GetRootDepth </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the root depth of this provider instance. </p>
<p>This is through how many properties and objects we needed to pass through from the object and property passed into the factory method to find the root object / property that this provider represents. For example if we have this object hierarchy: A |-children- B |-elements- C</p>
<p>If A is a prefab and the factory method was called for C (with no property) then we need to walk up the hierarchy via elements container, the B object, the children container and then finally A. Thus, we need 4 hops to get the the prefab root which means the root depth for this provider instance is 4. </p>

<p>Implements <a class="el" href="../../d3/d29/classpl_default_state_provider.htm#a816a87f4f77bbc6b9153881d00a6c12c">plDefaultStateProvider</a>.</p>

</div>
</div>
<a id="a63912c3eb8c59a97595126df64c31cc0" name="a63912c3eb8c59a97595126df64c31cc0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a63912c3eb8c59a97595126df64c31cc0">&#9670;&#160;</a></span>GetStateProviderName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> plPrefabDefaultStateProvider::GetStateProviderName </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the name of this state provider. Can be used to check what the outer most provider is for GUI purposes. </p>

<p>Implements <a class="el" href="../../d3/d29/classpl_default_state_provider.htm#a0fee69c0cd4cb414fc204a779a3e1c5d">plDefaultStateProvider</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Tools/Libs/GuiFoundation/PropertyGrid/<a class="el" href="../../db/d0e/_prefab_default_state_provider_8h_source.htm">PrefabDefaultStateProvider.h</a></li>
<li>Code/Tools/Libs/GuiFoundation/PropertyGrid/Implementation/<b>PrefabDefaultStateProvider.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d2/d5f/classpl_prefab_default_state_provider.htm">plPrefabDefaultStateProvider</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
