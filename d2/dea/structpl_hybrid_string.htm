<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plHybridString&lt; Size, AllocatorWrapper &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d2/dea/structpl_hybrid_string.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../db/d49/structpl_hybrid_string-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plHybridString&lt; Size, AllocatorWrapper &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../db/db5/_string_8h_source.htm">String.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plHybridString&lt; Size, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../dc/d9e/structpl_hybrid_string__inherit__graph.png" border="0" usemap="#apl_hybrid_string_3_01_size_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_hybrid_string_3_01_size_00_01_allocator_wrapper_01_4_inherit__map" id="apl_hybrid_string_3_01_size_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="27,261,172,304"/>
<area shape="rect" href="../../d1/db3/structpl_hybrid_string_base.htm" title="A string class for storing and passing around strings." alt="" coords="33,171,166,213"/>
<area shape="poly" title=" " alt="" coords="102,229,102,261,97,261,97,229"/>
<area shape="rect" href="../../de/d73/structpl_string_base.htm" title=" " alt="" coords="5,80,194,123"/>
<area shape="poly" title=" " alt="" coords="102,138,102,170,97,170,97,138"/>
<area shape="rect" href="../../da/d54/structpl_this_is_a_string.htm" title="Base class which marks a class as containing string data." alt="" coords="45,5,154,32"/>
<area shape="poly" title=" " alt="" coords="102,48,102,80,97,80,97,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae23d84cdb6400426722f6241009fd64b" id="r_ae23d84cdb6400426722f6241009fd64b"><td class="memItemLeft" align="right" valign="top"><a id="ae23d84cdb6400426722f6241009fd64b" name="ae23d84cdb6400426722f6241009fd64b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:ae23d84cdb6400426722f6241009fd64b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1048e9d7a1a1c8aed722dbff0b0d2d46" id="r_a1048e9d7a1a1c8aed722dbff0b0d2d46"><td class="memItemLeft" align="right" valign="top"><a id="a1048e9d7a1a1c8aed722dbff0b0d2d46" name="a1048e9d7a1a1c8aed722dbff0b0d2d46"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (const <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a>&lt; Size, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:a1048e9d7a1a1c8aed722dbff0b0d2d46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1832fea76f60ac4efb748409afcefc2" id="r_ad1832fea76f60ac4efb748409afcefc2"><td class="memItemLeft" align="right" valign="top"><a id="ad1832fea76f60ac4efb748409afcefc2" name="ad1832fea76f60ac4efb748409afcefc2"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (const <a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a>&lt; Size &gt; &amp;other)</td></tr>
<tr class="separator:ad1832fea76f60ac4efb748409afcefc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bef2147c8b870ba46b8aa36e4dc7593" id="r_a5bef2147c8b870ba46b8aa36e4dc7593"><td class="memItemLeft" align="right" valign="top"><a id="a5bef2147c8b870ba46b8aa36e4dc7593" name="a5bef2147c8b870ba46b8aa36e4dc7593"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (const char *rhs)</td></tr>
<tr class="separator:a5bef2147c8b870ba46b8aa36e4dc7593"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92343c87202a3bcfcbfb44c86b803900" id="r_a92343c87202a3bcfcbfb44c86b803900"><td class="memItemLeft" align="right" valign="top"><a id="a92343c87202a3bcfcbfb44c86b803900" name="a92343c87202a3bcfcbfb44c86b803900"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (const wchar_t *rhs)</td></tr>
<tr class="separator:a92343c87202a3bcfcbfb44c86b803900"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac293c1df6d91a762afe818d35c7b1476" id="r_ac293c1df6d91a762afe818d35c7b1476"><td class="memItemLeft" align="right" valign="top"><a id="ac293c1df6d91a762afe818d35c7b1476" name="ac293c1df6d91a762afe818d35c7b1476"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (const <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;rhs)</td></tr>
<tr class="separator:ac293c1df6d91a762afe818d35c7b1476"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bf8cbe7d692e124ecb62d74ddd79c33" id="r_a1bf8cbe7d692e124ecb62d74ddd79c33"><td class="memItemLeft" align="right" valign="top"><a id="a1bf8cbe7d692e124ecb62d74ddd79c33" name="a1bf8cbe7d692e124ecb62d74ddd79c33"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (const <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;rhs)</td></tr>
<tr class="separator:a1bf8cbe7d692e124ecb62d74ddd79c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20dd52d89eefb53609074b922d1c7cef" id="r_a20dd52d89eefb53609074b922d1c7cef"><td class="memItemLeft" align="right" valign="top"><a id="a20dd52d89eefb53609074b922d1c7cef" name="a20dd52d89eefb53609074b922d1c7cef"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (<a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;&amp;rhs)</td></tr>
<tr class="separator:a20dd52d89eefb53609074b922d1c7cef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94c3f096c57ed71ae16a4afe5fc0b224" id="r_a94c3f096c57ed71ae16a4afe5fc0b224"><td class="memItemLeft" align="right" valign="top"><a id="a94c3f096c57ed71ae16a4afe5fc0b224" name="a94c3f096c57ed71ae16a4afe5fc0b224"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a>&lt; Size, AllocatorWrapper &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a94c3f096c57ed71ae16a4afe5fc0b224"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade040b927b5c650d256a7f8cbfe0329d" id="r_ade040b927b5c650d256a7f8cbfe0329d"><td class="memItemLeft" align="right" valign="top"><a id="ade040b927b5c650d256a7f8cbfe0329d" name="ade040b927b5c650d256a7f8cbfe0329d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridString</b> (<a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a>&lt; Size &gt; &amp;&amp;other)</td></tr>
<tr class="separator:ade040b927b5c650d256a7f8cbfe0329d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c475a30ec61b70ea5fbedab08fe0bc7" id="r_a8c475a30ec61b70ea5fbedab08fe0bc7"><td class="memItemLeft" align="right" valign="top"><a id="a8c475a30ec61b70ea5fbedab08fe0bc7" name="a8c475a30ec61b70ea5fbedab08fe0bc7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a>&lt; Size, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:a8c475a30ec61b70ea5fbedab08fe0bc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2b19f489ff5f1961c9caca94135de8a" id="r_ab2b19f489ff5f1961c9caca94135de8a"><td class="memItemLeft" align="right" valign="top"><a id="ab2b19f489ff5f1961c9caca94135de8a" name="ab2b19f489ff5f1961c9caca94135de8a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a>&lt; Size &gt; &amp;rhs)</td></tr>
<tr class="separator:ab2b19f489ff5f1961c9caca94135de8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cf94d31b9c2b200561e83ef5069f3aa" id="r_a5cf94d31b9c2b200561e83ef5069f3aa"><td class="memItemLeft" align="right" valign="top"><a id="a5cf94d31b9c2b200561e83ef5069f3aa" name="a5cf94d31b9c2b200561e83ef5069f3aa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const char *szString)</td></tr>
<tr class="separator:a5cf94d31b9c2b200561e83ef5069f3aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24d25173ed14093fd77aab94f0223fde" id="r_a24d25173ed14093fd77aab94f0223fde"><td class="memItemLeft" align="right" valign="top"><a id="a24d25173ed14093fd77aab94f0223fde" name="a24d25173ed14093fd77aab94f0223fde"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const wchar_t *pString)</td></tr>
<tr class="separator:a24d25173ed14093fd77aab94f0223fde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe0cb414f532c283756fe6294b345285" id="r_abe0cb414f532c283756fe6294b345285"><td class="memItemLeft" align="right" valign="top"><a id="abe0cb414f532c283756fe6294b345285" name="abe0cb414f532c283756fe6294b345285"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;rhs)</td></tr>
<tr class="separator:abe0cb414f532c283756fe6294b345285"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa03f7dca349f26fd8c8c910479fed539" id="r_aa03f7dca349f26fd8c8c910479fed539"><td class="memItemLeft" align="right" valign="top"><a id="aa03f7dca349f26fd8c8c910479fed539" name="aa03f7dca349f26fd8c8c910479fed539"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;rhs)</td></tr>
<tr class="separator:aa03f7dca349f26fd8c8c910479fed539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add245729584f52cbca2ceb195e44a4eb" id="r_add245729584f52cbca2ceb195e44a4eb"><td class="memItemLeft" align="right" valign="top"><a id="add245729584f52cbca2ceb195e44a4eb" name="add245729584f52cbca2ceb195e44a4eb"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;&amp;rhs)</td></tr>
<tr class="separator:add245729584f52cbca2ceb195e44a4eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae81dd163f60e3a5f0ec565db48864425" id="r_ae81dd163f60e3a5f0ec565db48864425"><td class="memItemLeft" align="right" valign="top"><a id="ae81dd163f60e3a5f0ec565db48864425" name="ae81dd163f60e3a5f0ec565db48864425"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a>&lt; Size, AllocatorWrapper &gt; &amp;&amp;rhs)</td></tr>
<tr class="separator:ae81dd163f60e3a5f0ec565db48864425"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a332bb32bd508a05e22b54b23e1e92057" id="r_a332bb32bd508a05e22b54b23e1e92057"><td class="memItemLeft" align="right" valign="top"><a id="a332bb32bd508a05e22b54b23e1e92057" name="a332bb32bd508a05e22b54b23e1e92057"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a>&lt; Size &gt; &amp;&amp;rhs)</td></tr>
<tr class="separator:a332bb32bd508a05e22b54b23e1e92057"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structpl_hybrid_string_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_structpl_hybrid_string_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td></tr>
<tr class="memitem:a6dc4bd4cf0b2bda613396e87d27df9c6 inherit pub_methods_structpl_hybrid_string_base" id="r_a6dc4bd4cf0b2bda613396e87d27df9c6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a6dc4bd4cf0b2bda613396e87d27df9c6">Clear</a> ()</td></tr>
<tr class="memdesc:a6dc4bd4cf0b2bda613396e87d27df9c6 inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets this string to an empty string.  <br /></td></tr>
<tr class="separator:a6dc4bd4cf0b2bda613396e87d27df9c6 inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06c17e3b0fbddb8388534e8b94422d16 inherit pub_methods_structpl_hybrid_string_base" id="r_a06c17e3b0fbddb8388534e8b94422d16"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:a06c17e3b0fbddb8388534e8b94422d16 inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the internal Utf8 string. <br /></td></tr>
<tr class="separator:a06c17e3b0fbddb8388534e8b94422d16 inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13ca7b0c2437b3c6d86417e614f826bc inherit pub_methods_structpl_hybrid_string_base" id="r_a13ca7b0c2437b3c6d86417e614f826bc"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementCount</b> () const</td></tr>
<tr class="memdesc:a13ca7b0c2437b3c6d86417e614f826bc inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that this string takes (excluding the '\0' terminator). <br /></td></tr>
<tr class="separator:a13ca7b0c2437b3c6d86417e614f826bc inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e226b7e502bfc6f0f9f9dd05e4ce236 inherit pub_methods_structpl_hybrid_string_base" id="r_a2e226b7e502bfc6f0f9f9dd05e4ce236"><td class="memItemLeft" align="right" valign="top">plUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a2e226b7e502bfc6f0f9f9dd05e4ce236">GetCharacterCount</a> () const</td></tr>
<tr class="memdesc:a2e226b7e502bfc6f0f9f9dd05e4ce236 inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of characters in this string. Might be less than GetElementCount, if it contains Utf8 multi-byte characters.  <br /></td></tr>
<tr class="separator:a2e226b7e502bfc6f0f9f9dd05e4ce236 inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bc55a0680f91d3cc243e4a1c65996a6 inherit pub_methods_structpl_hybrid_string_base" id="r_a4bc55a0680f91d3cc243e4a1c65996a6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a4bc55a0680f91d3cc243e4a1c65996a6">GetSubString</a> (plUInt32 uiFirstCharacter, plUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:a4bc55a0680f91d3cc243e4a1c65996a6 inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to a sub-string of this string, starting at character uiFirstCharacter, up until uiFirstCharacter + uiNumCharacters.  <br /></td></tr>
<tr class="separator:a4bc55a0680f91d3cc243e4a1c65996a6 inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a220cf5af489f0f185b304c2a9388b8de inherit pub_methods_structpl_hybrid_string_base" id="r_a220cf5af489f0f185b304c2a9388b8de"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#a220cf5af489f0f185b304c2a9388b8de">GetFirst</a> (plUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:a220cf5af489f0f185b304c2a9388b8de inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to the sub-string containing the first uiNumCharacters characters of this string.  <br /></td></tr>
<tr class="separator:a220cf5af489f0f185b304c2a9388b8de inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5edcf5340b17ed493558ce3f9555294 inherit pub_methods_structpl_hybrid_string_base" id="r_ae5edcf5340b17ed493558ce3f9555294"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm#ae5edcf5340b17ed493558ce3f9555294">GetLast</a> (plUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:ae5edcf5340b17ed493558ce3f9555294 inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to the sub-string containing the last uiNumCharacters characters of this string.  <br /></td></tr>
<tr class="separator:ae5edcf5340b17ed493558ce3f9555294 inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ace821c1da8c69eced69584dee1f63b inherit pub_methods_structpl_hybrid_string_base" id="r_a5ace821c1da8c69eced69584dee1f63b"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>ReadAll</b> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &amp;inout_stream)</td></tr>
<tr class="memdesc:a5ace821c1da8c69eced69584dee1f63b inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replaces the current string with the content from the stream. Reads the stream to its end. <br /></td></tr>
<tr class="separator:a5ace821c1da8c69eced69584dee1f63b inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf2858e6c7fe5a8ca5500476243ab59a inherit pub_methods_structpl_hybrid_string_base" id="r_abf2858e6c7fe5a8ca5500476243ab59a"><td class="memItemLeft" align="right" valign="top">
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:abf2858e6c7fe5a8ca5500476243ab59a inherit pub_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:abf2858e6c7fe5a8ca5500476243ab59a inherit pub_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structpl_string_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_structpl_string_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td></tr>
<tr class="memitem:a7ac3a243ee9ea1f99f7d82dd8e1d60b5 inherit pub_methods_structpl_string_base" id="r_a7ac3a243ee9ea1f99f7d82dd8e1d60b5"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:a7ac3a243ee9ea1f99f7d82dd8e1d60b5 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the string is an empty string. <br /></td></tr>
<tr class="separator:a7ac3a243ee9ea1f99f7d82dd8e1d60b5 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ae403b4b3e534b94edd50edd888b4f0 inherit pub_methods_structpl_string_base" id="r_a6ae403b4b3e534b94edd50edd888b4f0"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>StartsWith</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sStartsWith) const</td></tr>
<tr class="memdesc:a6ae403b4b3e534b94edd50edd888b4f0 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string starts with the given string. <br /></td></tr>
<tr class="separator:a6ae403b4b3e534b94edd50edd888b4f0 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4af994336831ee8ce7ea1aa392388ed6 inherit pub_methods_structpl_string_base" id="r_a4af994336831ee8ce7ea1aa392388ed6"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>StartsWith_NoCase</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sStartsWith) const</td></tr>
<tr class="memdesc:a4af994336831ee8ce7ea1aa392388ed6 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string starts with the given string. Case insensitive. <br /></td></tr>
<tr class="separator:a4af994336831ee8ce7ea1aa392388ed6 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6961a7b6896b3b482b20df06de7c689 inherit pub_methods_structpl_string_base" id="r_ab6961a7b6896b3b482b20df06de7c689"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>EndsWith</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sEndsWith) const</td></tr>
<tr class="memdesc:ab6961a7b6896b3b482b20df06de7c689 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string ends with the given string. <br /></td></tr>
<tr class="separator:ab6961a7b6896b3b482b20df06de7c689 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8986dab73aa8d7095b79ddf761cf6b0d inherit pub_methods_structpl_string_base" id="r_a8986dab73aa8d7095b79ddf761cf6b0d"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>EndsWith_NoCase</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sEndsWith) const</td></tr>
<tr class="memdesc:a8986dab73aa8d7095b79ddf761cf6b0d inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string ends with the given string. Case insensitive. <br /></td></tr>
<tr class="separator:a8986dab73aa8d7095b79ddf761cf6b0d inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb80af12ae97555d0870359e86bd1a68 inherit pub_methods_structpl_string_base" id="r_afb80af12ae97555d0870359e86bd1a68"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#afb80af12ae97555d0870359e86bd1a68">FindSubString</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:afb80af12ae97555d0870359e86bd1a68 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8972e55722d17be6604b1df08082cf83 inherit pub_methods_structpl_string_base" id="r_a8972e55722d17be6604b1df08082cf83"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a8972e55722d17be6604b1df08082cf83">FindSubString_NoCase</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a8972e55722d17be6604b1df08082cf83 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d116e5f43c0ae774c2346b5f94a992c inherit pub_methods_structpl_string_base" id="r_a2d116e5f43c0ae774c2346b5f94a992c"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a2d116e5f43c0ae774c2346b5f94a992c">FindLastSubString</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a2d116e5f43c0ae774c2346b5f94a992c inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54c2b870afa5c0a2fb437e32219eb7d1 inherit pub_methods_structpl_string_base" id="r_a54c2b870afa5c0a2fb437e32219eb7d1"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a54c2b870afa5c0a2fb437e32219eb7d1">FindLastSubString_NoCase</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a54c2b870afa5c0a2fb437e32219eb7d1 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af40ca95f7c2b77e18266ffe6ff7483a8 inherit pub_methods_structpl_string_base" id="r_af40ca95f7c2b77e18266ffe6ff7483a8"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#af40ca95f7c2b77e18266ffe6ff7483a8">FindWholeWord</a> (const char *szSearchFor, <a class="el" href="../../de/d4d/classpl_string_utils.htm#a8bc7e3a526fc09382eaa1276895f3266">plStringUtils::PL_CHARACTER_FILTER</a> isDelimiterCB, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:af40ca95f7c2b77e18266ffe6ff7483a8 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b6659ee0b76480c3ba534f74a4089fa inherit pub_methods_structpl_string_base" id="r_a8b6659ee0b76480c3ba534f74a4089fa"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a8b6659ee0b76480c3ba534f74a4089fa">FindWholeWord_NoCase</a> (const char *szSearchFor, <a class="el" href="../../de/d4d/classpl_string_utils.htm#a8bc7e3a526fc09382eaa1276895f3266">plStringUtils::PL_CHARACTER_FILTER</a> isDelimiterCB, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a8b6659ee0b76480c3ba534f74a4089fa inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ac29b18708a376ce3e9f03bb756a82 inherit pub_methods_structpl_string_base" id="r_a71ac29b18708a376ce3e9f03bb756a82"><td class="memItemLeft" align="right" valign="top">
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>Compare</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOther) const</td></tr>
<tr class="memdesc:a71ac29b18708a376ce3e9f03bb756a82 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller', 1 otherwise. <br /></td></tr>
<tr class="separator:a71ac29b18708a376ce3e9f03bb756a82 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a946009c071c70e5b2ad616a16213d113 inherit pub_methods_structpl_string_base" id="r_a946009c071c70e5b2ad616a16213d113"><td class="memItemLeft" align="right" valign="top">plInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a946009c071c70e5b2ad616a16213d113">CompareN</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOther, plUInt32 uiCharsToCompare) const</td></tr>
<tr class="separator:a946009c071c70e5b2ad616a16213d113 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91a71d7390204850be0e8fc9193e0f31 inherit pub_methods_structpl_string_base" id="r_a91a71d7390204850be0e8fc9193e0f31"><td class="memItemLeft" align="right" valign="top">
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>Compare_NoCase</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOther) const</td></tr>
<tr class="memdesc:a91a71d7390204850be0e8fc9193e0f31 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller', 1 otherwise. Case insensitive. <br /></td></tr>
<tr class="separator:a91a71d7390204850be0e8fc9193e0f31 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4af63c140fc4fe56e1a290df992cec7e inherit pub_methods_structpl_string_base" id="r_a4af63c140fc4fe56e1a290df992cec7e"><td class="memItemLeft" align="right" valign="top">plInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a4af63c140fc4fe56e1a290df992cec7e">CompareN_NoCase</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOther, plUInt32 uiCharsToCompare) const</td></tr>
<tr class="separator:a4af63c140fc4fe56e1a290df992cec7e inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a928260385c9a80109751fbdb1849b321 inherit pub_methods_structpl_string_base" id="r_a928260385c9a80109751fbdb1849b321"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEqual</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOther) const</td></tr>
<tr class="memdesc:a928260385c9a80109751fbdb1849b321 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other string for equality. <br /></td></tr>
<tr class="separator:a928260385c9a80109751fbdb1849b321 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1854b21f65a086f15e164f739d53950d inherit pub_methods_structpl_string_base" id="r_a1854b21f65a086f15e164f739d53950d"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEqualN</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOther, plUInt32 uiCharsToCompare) const</td></tr>
<tr class="memdesc:a1854b21f65a086f15e164f739d53950d inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares up to a given number of characters of this string with the other string for equality. Case insensitive. <br /></td></tr>
<tr class="separator:a1854b21f65a086f15e164f739d53950d inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0801b3fafc90b1beba38313c205e704 inherit pub_methods_structpl_string_base" id="r_ad0801b3fafc90b1beba38313c205e704"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEqual_NoCase</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOther) const</td></tr>
<tr class="memdesc:ad0801b3fafc90b1beba38313c205e704 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other string for equality. <br /></td></tr>
<tr class="separator:ad0801b3fafc90b1beba38313c205e704 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a632d41fe7d33c9e42391ee905a361b06 inherit pub_methods_structpl_string_base" id="r_a632d41fe7d33c9e42391ee905a361b06"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEqualN_NoCase</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sOther, plUInt32 uiCharsToCompare) const</td></tr>
<tr class="memdesc:a632d41fe7d33c9e42391ee905a361b06 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares up to a given number of characters of this string with the other string for equality. Case insensitive. <br /></td></tr>
<tr class="separator:a632d41fe7d33c9e42391ee905a361b06 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5dc9b2300f37b7bb4a42999870e6092 inherit pub_methods_structpl_string_base" id="r_aa5dc9b2300f37b7bb4a42999870e6092"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>ComputeCharacterPosition</b> (plUInt32 uiCharacterIndex) const</td></tr>
<tr class="memdesc:aa5dc9b2300f37b7bb4a42999870e6092 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the pointer to the n-th character in the string. This is a linear search from the start. <br /></td></tr>
<tr class="separator:aa5dc9b2300f37b7bb4a42999870e6092 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5f533a25843450da719ad9c78827c29 inherit pub_methods_structpl_string_base" id="r_ac5f533a25843450da719ad9c78827c29"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d3/da5/structpl_string_iterator.htm">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#ac5f533a25843450da719ad9c78827c29">GetIteratorFront</a> () const</td></tr>
<tr class="memdesc:ac5f533a25843450da719ad9c78827c29 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to this string, which points to the very first character.  <br /></td></tr>
<tr class="separator:ac5f533a25843450da719ad9c78827c29 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97bd0de57b678794224901f970b864b7 inherit pub_methods_structpl_string_base" id="r_a97bd0de57b678794224901f970b864b7"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d8/d32/structpl_string_reverse_iterator.htm">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a97bd0de57b678794224901f970b864b7">GetIteratorBack</a> () const</td></tr>
<tr class="memdesc:a97bd0de57b678794224901f970b864b7 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to this string, which points to the very last character (NOT the end).  <br /></td></tr>
<tr class="separator:a97bd0de57b678794224901f970b864b7 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8edc0eeb6a433a7397215106abd0f39f inherit pub_methods_structpl_string_base" id="r_a8edc0eeb6a433a7397215106abd0f39f"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator plStringView</b> () const</td></tr>
<tr class="memdesc:a8edc0eeb6a433a7397215106abd0f39f inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string view to this string's data. <br /></td></tr>
<tr class="separator:a8edc0eeb6a433a7397215106abd0f39f inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae137b75721c90c6ca1b8aec2b9fa7653 inherit pub_methods_structpl_string_base" id="r_ae137b75721c90c6ca1b8aec2b9fa7653"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetView</b> () const</td></tr>
<tr class="memdesc:ae137b75721c90c6ca1b8aec2b9fa7653 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string view to this string's data. <br /></td></tr>
<tr class="separator:ae137b75721c90c6ca1b8aec2b9fa7653 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ac5057709ce4884266502eb53a12a2b inherit pub_methods_structpl_string_base" id="r_a7ac5057709ce4884266502eb53a12a2b"><td class="memItemLeft" align="right" valign="top">
PL_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>operator const char *</b> () const</td></tr>
<tr class="memdesc:a7ac5057709ce4884266502eb53a12a2b inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the internal Utf8 string. <br /></td></tr>
<tr class="separator:a7ac5057709ce4884266502eb53a12a2b inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a9997394d0cbb4121601246cfd910c6 inherit pub_methods_structpl_string_base" id="r_a9a9997394d0cbb4121601246cfd910c6"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Split</b> (bool bReturnEmptyStrings, Container &amp;ref_output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</td></tr>
<tr class="memdesc:a9a9997394d0cbb4121601246cfd910c6 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills the given container with <a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a>'s which represent each found substring. If bReturnEmptyStrings is true, even empty strings between separators are returned. Output must be a container that stores <a class="el" href="../../d6/d79/classpl_string_view.htm" title="plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">plStringView</a>'s and provides the functions 'Clear' and 'Append'. szSeparator1 to szSeparator6 are strings which act as separators and indicate where to split the string. This string itself will not be modified. <br /></td></tr>
<tr class="separator:a9a9997394d0cbb4121601246cfd910c6 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99dd48e46918eea24a01ee4893f8301a inherit pub_methods_structpl_string_base" id="r_a99dd48e46918eea24a01ee4893f8301a"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>HasAnyExtension</b> () const</td></tr>
<tr class="memdesc:a99dd48e46918eea24a01ee4893f8301a inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path has any file extension. <br /></td></tr>
<tr class="separator:a99dd48e46918eea24a01ee4893f8301a inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdbf19533811ec120710ad7caffe7ad0 inherit pub_methods_structpl_string_base" id="r_abdbf19533811ec120710ad7caffe7ad0"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>HasExtension</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sExtension) const</td></tr>
<tr class="memdesc:abdbf19533811ec120710ad7caffe7ad0 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path ends with the given extension. szExtension should start with a '.' for performance reasons, but it will work without a '.' too. <br /></td></tr>
<tr class="separator:abdbf19533811ec120710ad7caffe7ad0 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0543d52d510868337e70f18ab4467a6 inherit pub_methods_structpl_string_base" id="r_ad0543d52d510868337e70f18ab4467a6"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetFileExtension</b> () const</td></tr>
<tr class="memdesc:ad0543d52d510868337e70f18ab4467a6 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file extension of the given path. Will be empty, if the path does not end with a proper extension. <br /></td></tr>
<tr class="separator:ad0543d52d510868337e70f18ab4467a6 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b26dfed7384bb3264d3f134648396f9 inherit pub_methods_structpl_string_base" id="r_a8b26dfed7384bb3264d3f134648396f9"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a8b26dfed7384bb3264d3f134648396f9">GetFileName</a> () const</td></tr>
<tr class="memdesc:a8b26dfed7384bb3264d3f134648396f9 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file name of a path, excluding the path and extension.  <br /></td></tr>
<tr class="separator:a8b26dfed7384bb3264d3f134648396f9 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5be3ebeaf3a8e57322061b6424ca25a8 inherit pub_methods_structpl_string_base" id="r_a5be3ebeaf3a8e57322061b6424ca25a8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a5be3ebeaf3a8e57322061b6424ca25a8">GetFileNameAndExtension</a> () const</td></tr>
<tr class="memdesc:a5be3ebeaf3a8e57322061b6424ca25a8 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the substring that represents the file name including the file extension.  <br /></td></tr>
<tr class="separator:a5be3ebeaf3a8e57322061b6424ca25a8 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8352abf502483f0e4e10c6733bde642 inherit pub_methods_structpl_string_base" id="r_ad8352abf502483f0e4e10c6733bde642"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#ad8352abf502483f0e4e10c6733bde642">GetFileDirectory</a> () const</td></tr>
<tr class="memdesc:ad8352abf502483f0e4e10c6733bde642 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the directory of the given file, which is the substring up to the last path separator.  <br /></td></tr>
<tr class="separator:ad8352abf502483f0e4e10c6733bde642 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a275c7069b3e5ddd9daf7ea75352128a3 inherit pub_methods_structpl_string_base" id="r_a275c7069b3e5ddd9daf7ea75352128a3"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsAbsolutePath</b> () const</td></tr>
<tr class="memdesc:a275c7069b3e5ddd9daf7ea75352128a3 inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents an absolute path on the current OS. <br /></td></tr>
<tr class="separator:a275c7069b3e5ddd9daf7ea75352128a3 inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a340cb26613564b37461946d685215f inherit pub_methods_structpl_string_base" id="r_a4a340cb26613564b37461946d685215f"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsRelativePath</b> () const</td></tr>
<tr class="memdesc:a4a340cb26613564b37461946d685215f inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a relative path on the current OS. <br /></td></tr>
<tr class="separator:a4a340cb26613564b37461946d685215f inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef9d9918c2d608eb5451b735057a272f inherit pub_methods_structpl_string_base" id="r_aef9d9918c2d608eb5451b735057a272f"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsRootedPath</b> () const</td></tr>
<tr class="memdesc:aef9d9918c2d608eb5451b735057a272f inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a 'rooted' path. See <a class="el" href="../../d5/d08/classpl_file_system.htm" title="The plFileSystem provides high-level functionality to manage files in a virtual file system.">plFileSystem</a> for details. <br /></td></tr>
<tr class="separator:aef9d9918c2d608eb5451b735057a272f inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97a42649db4dba41449786ad43a237cf inherit pub_methods_structpl_string_base" id="r_a97a42649db4dba41449786ad43a237cf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d73/structpl_string_base.htm#a97a42649db4dba41449786ad43a237cf">GetRootedPathRootName</a> () const</td></tr>
<tr class="memdesc:a97a42649db4dba41449786ad43a237cf inherit pub_methods_structpl_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts the root name from a rooted path.  <br /></td></tr>
<tr class="separator:a97a42649db4dba41449786ad43a237cf inherit pub_methods_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_structpl_string_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_structpl_string_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../de/d73/structpl_string_base.htm">plStringBase&lt; plHybridStringBase&lt; Size &gt; &gt;</a></td></tr>
<tr class="memitem:af25a0f1818a027657bf933b2bb334cb5 inherit pub_types_structpl_string_base" id="r_af25a0f1818a027657bf933b2bb334cb5"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b></td></tr>
<tr class="separator:af25a0f1818a027657bf933b2bb334cb5 inherit pub_types_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a218db55e130cefa8bbef146fb7d96b94 inherit pub_types_structpl_string_base" id="r_a218db55e130cefa8bbef146fb7d96b94"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b></td></tr>
<tr class="separator:a218db55e130cefa8bbef146fb7d96b94 inherit pub_types_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7d23dc3ab75161d8f82218db1251e3f inherit pub_types_structpl_string_base" id="r_ae7d23dc3ab75161d8f82218db1251e3f"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b></td></tr>
<tr class="separator:ae7d23dc3ab75161d8f82218db1251e3f inherit pub_types_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0e2162084911821c55d0f7a429da78a inherit pub_types_structpl_string_base" id="r_aa0e2162084911821c55d0f7a429da78a"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b></td></tr>
<tr class="separator:aa0e2162084911821c55d0f7a429da78a inherit pub_types_structpl_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_structpl_hybrid_string_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_structpl_hybrid_string_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase&lt; Size &gt;</a></td></tr>
<tr class="memitem:a053f80fb8a515e0f0155f780b22b7deb inherit pro_methods_structpl_hybrid_string_base" id="r_a053f80fb8a515e0f0155f780b22b7deb"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridStringBase</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a053f80fb8a515e0f0155f780b22b7deb inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty string. <br /></td></tr>
<tr class="separator:a053f80fb8a515e0f0155f780b22b7deb inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f8227c7fe6ba70eb6e283c6c5bb0298 inherit pro_methods_structpl_hybrid_string_base" id="r_a0f8227c7fe6ba70eb6e283c6c5bb0298"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridStringBase</b> (const <a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a> &amp;rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a0f8227c7fe6ba70eb6e283c6c5bb0298 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a0f8227c7fe6ba70eb6e283c6c5bb0298 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a254652fbcb4be2d5a6483ae8cab67cac inherit pro_methods_structpl_hybrid_string_base" id="r_a254652fbcb4be2d5a6483ae8cab67cac"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridStringBase</b> (<a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a> &amp;&amp;rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a254652fbcb4be2d5a6483ae8cab67cac inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a254652fbcb4be2d5a6483ae8cab67cac inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb8e11edbef53315cfc6137d4b6021c7 inherit pro_methods_structpl_hybrid_string_base" id="r_adb8e11edbef53315cfc6137d4b6021c7"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridStringBase</b> (const char *rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:adb8e11edbef53315cfc6137d4b6021c7 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:adb8e11edbef53315cfc6137d4b6021c7 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12ccd2d3723e7c201baf99957035849b inherit pro_methods_structpl_hybrid_string_base" id="r_a12ccd2d3723e7c201baf99957035849b"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridStringBase</b> (const wchar_t *rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a12ccd2d3723e7c201baf99957035849b inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a12ccd2d3723e7c201baf99957035849b inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf9bb642282fd51e4869267702b1be18 inherit pro_methods_structpl_hybrid_string_base" id="r_acf9bb642282fd51e4869267702b1be18"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridStringBase</b> (const <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:acf9bb642282fd51e4869267702b1be18 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:acf9bb642282fd51e4869267702b1be18 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0f1b63be41827a75cb0b30360afc393 inherit pro_methods_structpl_hybrid_string_base" id="r_ac0f1b63be41827a75cb0b30360afc393"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridStringBase</b> (const <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ac0f1b63be41827a75cb0b30360afc393 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ac0f1b63be41827a75cb0b30360afc393 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a239a135a5de5a16519c920a3df329dfb inherit pro_methods_structpl_hybrid_string_base" id="r_a239a135a5de5a16519c920a3df329dfb"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plHybridStringBase</b> (<a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;&amp;rhs, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a239a135a5de5a16519c920a3df329dfb inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a239a135a5de5a16519c920a3df329dfb inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ec1f4eea25a8bd2701dafb0cb13effe inherit pro_methods_structpl_hybrid_string_base" id="r_a2ec1f4eea25a8bd2701dafb0cb13effe"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>~plHybridStringBase</b> ()</td></tr>
<tr class="memdesc:a2ec1f4eea25a8bd2701dafb0cb13effe inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a2ec1f4eea25a8bd2701dafb0cb13effe inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab3039814de70e3a231619331b30de11c inherit pro_methods_structpl_hybrid_string_base" id="r_ab3039814de70e3a231619331b30de11c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a> &amp;rhs)</td></tr>
<tr class="memdesc:ab3039814de70e3a231619331b30de11c inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ab3039814de70e3a231619331b30de11c inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18336dffdc3c1de88271c4e09987fba6 inherit pro_methods_structpl_hybrid_string_base" id="r_a18336dffdc3c1de88271c4e09987fba6"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm">plHybridStringBase</a> &amp;&amp;rhs)</td></tr>
<tr class="memdesc:a18336dffdc3c1de88271c4e09987fba6 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a18336dffdc3c1de88271c4e09987fba6 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a277309f215794ab66ed86d1969fdff61 inherit pro_methods_structpl_hybrid_string_base" id="r_a277309f215794ab66ed86d1969fdff61"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const char *rhs)</td></tr>
<tr class="memdesc:a277309f215794ab66ed86d1969fdff61 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a277309f215794ab66ed86d1969fdff61 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade2007f94afff5f2136b396e960ec1c4 inherit pro_methods_structpl_hybrid_string_base" id="r_ade2007f94afff5f2136b396e960ec1c4"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const wchar_t *rhs)</td></tr>
<tr class="memdesc:ade2007f94afff5f2136b396e960ec1c4 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ade2007f94afff5f2136b396e960ec1c4 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8654e89b57979b6db81346d3eb9d7928 inherit pro_methods_structpl_hybrid_string_base" id="r_a8654e89b57979b6db81346d3eb9d7928"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;rhs)</td></tr>
<tr class="memdesc:a8654e89b57979b6db81346d3eb9d7928 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a8654e89b57979b6db81346d3eb9d7928 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8267a10e45b2c851e0de024a1c7e3a7e inherit pro_methods_structpl_hybrid_string_base" id="r_a8267a10e45b2c851e0de024a1c7e3a7e"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;rhs)</td></tr>
<tr class="memdesc:a8267a10e45b2c851e0de024a1c7e3a7e inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a8267a10e45b2c851e0de024a1c7e3a7e inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66808900535b7aa3857016eaaa717562 inherit pro_methods_structpl_hybrid_string_base" id="r_a66808900535b7aa3857016eaaa717562"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a> &amp;&amp;rhs)</td></tr>
<tr class="memdesc:a66808900535b7aa3857016eaaa717562 inherit pro_methods_structpl_hybrid_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a66808900535b7aa3857016eaaa717562 inherit pro_methods_structpl_hybrid_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;plUInt16 Size, typename AllocatorWrapper = plDefaultAllocatorWrapper&gt;<br />
struct plHybridString&lt; Size, AllocatorWrapper &gt;</div><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d1/db3/structpl_hybrid_string_base.htm" title="A string class for storing and passing around strings.">plHybridStringBase</a> </dd></dl>
</div><hr/>The documentation for this struct was generated from the following files:<ul>
<li>Code/Engine/Foundation/IO/<a class="el" href="../../d3/d99/_stream_8h_source.htm">Stream.h</a></li>
<li>Code/Engine/Foundation/Strings/<a class="el" href="../../db/db5/_string_8h_source.htm">String.h</a></li>
<li>Code/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d7/dec/_all_strings__inl_8h_source.htm">AllStrings_inl.h</a></li>
<li>Code/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d7/d4f/_string__inl_8h_source.htm">String_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plHybridString</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
