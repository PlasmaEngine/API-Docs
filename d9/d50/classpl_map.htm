<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plMap&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d9/d50/classpl_map.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../db/dcb/classpl_map-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plMap&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d3/d63/_map_8h_source.htm">Map.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plMap&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d5/ddc/classpl_map__inherit__graph.png" border="0" usemap="#apl_map_3_01_key_type_00_01_value_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_map_3_01_key_type_00_01_value_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map" id="apl_map_3_01_key_type_00_01_value_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="5,96,207,139"/>
<area shape="rect" href="../../d9/dbe/classpl_map_base.htm" title="An associative container. Similar to STL::map." alt="" coords="25,5,187,48"/>
<area shape="poly" title=" " alt="" coords="109,64,109,96,103,96,103,64"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afcd7352768fd07b71c266dd43a2e4576" id="r_afcd7352768fd07b71c266dd43a2e4576"><td class="memItemLeft" align="right" valign="top"><a id="afcd7352768fd07b71c266dd43a2e4576" name="afcd7352768fd07b71c266dd43a2e4576"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plMap</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:afcd7352768fd07b71c266dd43a2e4576"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6ec7d7fd2547559d88ea4d889bfc746" id="r_ac6ec7d7fd2547559d88ea4d889bfc746"><td class="memItemLeft" align="right" valign="top"><a id="ac6ec7d7fd2547559d88ea4d889bfc746" name="ac6ec7d7fd2547559d88ea4d889bfc746"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plMap</b> (const Comparer &amp;comparer, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:ac6ec7d7fd2547559d88ea4d889bfc746"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85617c84d5ed40dc6b6651a88c2f0d16" id="r_a85617c84d5ed40dc6b6651a88c2f0d16"><td class="memItemLeft" align="right" valign="top"><a id="a85617c84d5ed40dc6b6651a88c2f0d16" name="a85617c84d5ed40dc6b6651a88c2f0d16"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plMap</b> (const <a class="el" href="../../d9/d50/classpl_map.htm">plMap</a>&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:a85617c84d5ed40dc6b6651a88c2f0d16"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba2dc3a3218702afd5ebde595f58330d" id="r_aba2dc3a3218702afd5ebde595f58330d"><td class="memItemLeft" align="right" valign="top"><a id="aba2dc3a3218702afd5ebde595f58330d" name="aba2dc3a3218702afd5ebde595f58330d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plMap</b> (const <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;other)</td></tr>
<tr class="separator:aba2dc3a3218702afd5ebde595f58330d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa67fb2c0d244b03f93d1e76cacc0ef65" id="r_aa67fb2c0d244b03f93d1e76cacc0ef65"><td class="memItemLeft" align="right" valign="top"><a id="aa67fb2c0d244b03f93d1e76cacc0ef65" name="aa67fb2c0d244b03f93d1e76cacc0ef65"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d9/d50/classpl_map.htm">plMap</a>&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:aa67fb2c0d244b03f93d1e76cacc0ef65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc963808babeea58b44b7b82554fa9dc" id="r_abc963808babeea58b44b7b82554fa9dc"><td class="memItemLeft" align="right" valign="top"><a id="abc963808babeea58b44b7b82554fa9dc" name="abc963808babeea58b44b7b82554fa9dc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="separator:abc963808babeea58b44b7b82554fa9dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_map_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_map_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase&lt; KeyType, ValueType, Comparer &gt;</a></td></tr>
<tr class="memitem:a5bee4eaab7d49005eba4c3387d37541d inherit pub_methods_classpl_map_base" id="r_a5bee4eaab7d49005eba4c3387d37541d"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:a5bee4eaab7d49005eba4c3387d37541d inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether there are no elements in the map. O(1) operation. <br /></td></tr>
<tr class="separator:a5bee4eaab7d49005eba4c3387d37541d inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7836b1f7942107dbda516f8ab84acc3c inherit pub_methods_classpl_map_base" id="r_a7836b1f7942107dbda516f8ab84acc3c"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:a7836b1f7942107dbda516f8ab84acc3c inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements currently stored in the map. O(1) operation. <br /></td></tr>
<tr class="separator:a7836b1f7942107dbda516f8ab84acc3c inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4781441e042445a110a5f31fe570a639 inherit pub_methods_classpl_map_base" id="r_a4781441e042445a110a5f31fe570a639"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a4781441e042445a110a5f31fe570a639 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the map and resets its size to zero. <br /></td></tr>
<tr class="separator:a4781441e042445a110a5f31fe570a639 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f38cc470721aee5fd73ceddfbd79064 inherit pub_methods_classpl_map_base" id="r_a8f38cc470721aee5fd73ceddfbd79064"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> ()</td></tr>
<tr class="memdesc:a8f38cc470721aee5fd73ceddfbd79064 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the very first element. <br /></td></tr>
<tr class="separator:a8f38cc470721aee5fd73ceddfbd79064 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ac11bae58d9463d029b4f55e2057ad5 inherit pub_methods_classpl_map_base" id="r_a6ac11bae58d9463d029b4f55e2057ad5"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">ReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetReverseIterator</b> ()</td></tr>
<tr class="memdesc:a6ac11bae58d9463d029b4f55e2057ad5 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a ReverseIterator to the very last element. <br /></td></tr>
<tr class="separator:a6ac11bae58d9463d029b4f55e2057ad5 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33a8d6f1b767aec337daa1cc86406e46 inherit pub_methods_classpl_map_base" id="r_a33a8d6f1b767aec337daa1cc86406e46"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d9/dad/structpl_map_base_const_iterator_base.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:a33a8d6f1b767aec337daa1cc86406e46 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the very first element. <br /></td></tr>
<tr class="separator:a33a8d6f1b767aec337daa1cc86406e46 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17294186dce1335dba35cd054c254840 inherit pub_methods_classpl_map_base" id="r_a17294186dce1335dba35cd054c254840"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d9/dad/structpl_map_base_const_iterator_base.htm">ConstReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetReverseIterator</b> () const</td></tr>
<tr class="memdesc:a17294186dce1335dba35cd054c254840 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant ReverseIterator to the very last element. <br /></td></tr>
<tr class="separator:a17294186dce1335dba35cd054c254840 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c58266978a54ec4697ba4a981c1b80b inherit pub_methods_classpl_map_base" id="r_a6c58266978a54ec4697ba4a981c1b80b"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType , typename CompatibleValueType &gt; </td></tr>
<tr class="memitem:a6c58266978a54ec4697ba4a981c1b80b inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Insert</b> (CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</td></tr>
<tr class="memdesc:a6c58266978a54ec4697ba4a981c1b80b inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key/value pair into the tree and returns an Iterator to it. O(log n) operation. <br /></td></tr>
<tr class="separator:a6c58266978a54ec4697ba4a981c1b80b inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70634f90fcf604ed5e48d867cabd532e inherit pub_methods_classpl_map_base" id="r_a70634f90fcf604ed5e48d867cabd532e"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a70634f90fcf604ed5e48d867cabd532e inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Remove</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a70634f90fcf604ed5e48d867cabd532e inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key/value pair with the given key, if it exists. O(log n) operation. <br /></td></tr>
<tr class="separator:a70634f90fcf604ed5e48d867cabd532e inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46ffc429675f4df5e95968470e6c1997 inherit pub_methods_classpl_map_base" id="r_a46ffc429675f4df5e95968470e6c1997"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Remove</b> (const <a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">Iterator</a> &amp;pos)</td></tr>
<tr class="memdesc:a46ffc429675f4df5e95968470e6c1997 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key/value pair at the given Iterator. O(log n) operation. Returns an iterator to the element after the given iterator. <br /></td></tr>
<tr class="separator:a46ffc429675f4df5e95968470e6c1997 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b122c28aeba0192fbfba01001d61b75 inherit pub_methods_classpl_map_base" id="r_a7b122c28aeba0192fbfba01001d61b75"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a7b122c28aeba0192fbfba01001d61b75 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>FindOrAdd</b> (CompatibleKeyType &amp;&amp;key, bool *out_pExisted=nullptr)</td></tr>
<tr class="memdesc:a7b122c28aeba0192fbfba01001d61b75 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the given key and returns an iterator to it. If it did not exist yet, it is default-created. <em>bExisted</em> is set to true, if the key was found, false if it needed to be created. <br /></td></tr>
<tr class="separator:a7b122c28aeba0192fbfba01001d61b75 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a632300492d4f3c9390a61d58f6cb4758 inherit pub_methods_classpl_map_base" id="r_a632300492d4f3c9390a61d58f6cb4758"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a632300492d4f3c9390a61d58f6cb4758 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator[]</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a632300492d4f3c9390a61d58f6cb4758 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows read/write access to the value stored under the given key. If there is no such key, a new element is default-constructed. <br /></td></tr>
<tr class="separator:a632300492d4f3c9390a61d58f6cb4758 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a1ffdef36aac6973903da9b8de0ec2a inherit pub_methods_classpl_map_base" id="r_a5a1ffdef36aac6973903da9b8de0ec2a"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a5a1ffdef36aac6973903da9b8de0ec2a inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</td></tr>
<tr class="memdesc:a5a1ffdef36aac6973903da9b8de0ec2a inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the corresponding value to out_value. <br /></td></tr>
<tr class="separator:a5a1ffdef36aac6973903da9b8de0ec2a inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af7b2140fd6c972a8b1b282686cfa300c inherit pub_methods_classpl_map_base" id="r_af7b2140fd6c972a8b1b282686cfa300c"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:af7b2140fd6c972a8b1b282686cfa300c inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, const ValueType *&amp;out_pValue) const</td></tr>
<tr class="memdesc:af7b2140fd6c972a8b1b282686cfa300c inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the pointer to the corresponding value to out_pValue. <br /></td></tr>
<tr class="separator:af7b2140fd6c972a8b1b282686cfa300c inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d8bf9ca79ff5233bb09054f3a4d9d7c inherit pub_methods_classpl_map_base" id="r_a8d8bf9ca79ff5233bb09054f3a4d9d7c"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a8d8bf9ca79ff5233bb09054f3a4d9d7c inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType *&amp;out_pValue) const</td></tr>
<tr class="memdesc:a8d8bf9ca79ff5233bb09054f3a4d9d7c inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the pointer to the corresponding value to out_pValue. <br /></td></tr>
<tr class="separator:a8d8bf9ca79ff5233bb09054f3a4d9d7c inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7be4a03b4d477d14abfcdf06727e06fc inherit pub_methods_classpl_map_base" id="r_a7be4a03b4d477d14abfcdf06727e06fc"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a7be4a03b4d477d14abfcdf06727e06fc inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">const ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a7be4a03b4d477d14abfcdf06727e06fc inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr. <br /></td></tr>
<tr class="separator:a7be4a03b4d477d14abfcdf06727e06fc inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf459d880c010ca7d61808bff8b3afd2 inherit pub_methods_classpl_map_base" id="r_abf459d880c010ca7d61808bff8b3afd2"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:abf459d880c010ca7d61808bff8b3afd2 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:abf459d880c010ca7d61808bff8b3afd2 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr. <br /></td></tr>
<tr class="separator:abf459d880c010ca7d61808bff8b3afd2 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6a86c64b4c9288757b309bccf89dc1b inherit pub_methods_classpl_map_base" id="r_ac6a86c64b4c9288757b309bccf89dc1b"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac6a86c64b4c9288757b309bccf89dc1b inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">const ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValueOrDefault</b> (const CompatibleKeyType &amp;key, const ValueType &amp;defaultValue) const</td></tr>
<tr class="memdesc:ac6a86c64b4c9288757b309bccf89dc1b inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Either returns the value of the entry with the given key, if found, or the provided default value. <br /></td></tr>
<tr class="separator:ac6a86c64b4c9288757b309bccf89dc1b inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a279536d38132faa38825432d5e37ae21 inherit pub_methods_classpl_map_base" id="r_a279536d38132faa38825432d5e37ae21"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a279536d38132faa38825432d5e37ae21 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a279536d38132faa38825432d5e37ae21 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:a279536d38132faa38825432d5e37ae21 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d1160f85c4c9e36666c1efd2c9d7f73 inherit pub_methods_classpl_map_base" id="r_a5d1160f85c4c9e36666c1efd2c9d7f73"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a5d1160f85c4c9e36666c1efd2c9d7f73 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a5d1160f85c4c9e36666c1efd2c9d7f73 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a5d1160f85c4c9e36666c1efd2c9d7f73 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accd65f874df0ae04c6273323dba8cb23 inherit pub_methods_classpl_map_base" id="r_accd65f874df0ae04c6273323dba8cb23"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:accd65f874df0ae04c6273323dba8cb23 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:accd65f874df0ae04c6273323dba8cb23 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:accd65f874df0ae04c6273323dba8cb23 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41a4177e7e2b472c746227615fd1b3b7 inherit pub_methods_classpl_map_base" id="r_a41a4177e7e2b472c746227615fd1b3b7"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a41a4177e7e2b472c746227615fd1b3b7 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d9/dad/structpl_map_base_const_iterator_base.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a41a4177e7e2b472c746227615fd1b3b7 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:a41a4177e7e2b472c746227615fd1b3b7 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a038ae61aac3d268ee637b8069fff8b79 inherit pub_methods_classpl_map_base" id="r_a038ae61aac3d268ee637b8069fff8b79"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a038ae61aac3d268ee637b8069fff8b79 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a038ae61aac3d268ee637b8069fff8b79 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given key is in the container. <br /></td></tr>
<tr class="separator:a038ae61aac3d268ee637b8069fff8b79 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5d444d275fdfd9531961373cc0df257 inherit pub_methods_classpl_map_base" id="r_ac5d444d275fdfd9531961373cc0df257"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac5d444d275fdfd9531961373cc0df257 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d9/dad/structpl_map_base_const_iterator_base.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ac5d444d275fdfd9531961373cc0df257 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:ac5d444d275fdfd9531961373cc0df257 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c8ae402009ca98a62b7e57fce8da46d inherit pub_methods_classpl_map_base" id="r_a1c8ae402009ca98a62b7e57fce8da46d"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a1c8ae402009ca98a62b7e57fce8da46d inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d9/dad/structpl_map_base_const_iterator_base.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a1c8ae402009ca98a62b7e57fce8da46d inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a1c8ae402009ca98a62b7e57fce8da46d inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08587ef06af6915d4493add683eb390c inherit pub_methods_classpl_map_base" id="r_a08587ef06af6915d4493add683eb390c"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:a08587ef06af6915d4493add683eb390c inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a08587ef06af6915d4493add683eb390c inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b629b43b77f5f089d2bb963947343f2 inherit pub_methods_classpl_map_base" id="r_a4b629b43b77f5f089d2bb963947343f2"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a4b629b43b77f5f089d2bb963947343f2 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator. <br /></td></tr>
<tr class="separator:a4b629b43b77f5f089d2bb963947343f2 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad0e02aed36f0907eb3d5f6e59947e87 inherit pub_methods_classpl_map_base" id="r_aad0e02aed36f0907eb3d5f6e59947e87"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;)</td></tr>
<tr class="separator:aad0e02aed36f0907eb3d5f6e59947e87 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a535d608aaab6cdeca2628c88841691dd inherit pub_methods_classpl_map_base" id="r_a535d608aaab6cdeca2628c88841691dd"><td class="memItemLeft" align="right" valign="top">
plUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:a535d608aaab6cdeca2628c88841691dd inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a535d608aaab6cdeca2628c88841691dd inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a311f73ffbb7f917ad665d57c961248 inherit pub_methods_classpl_map_base" id="r_a9a311f73ffbb7f917ad665d57c961248"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;other)</td></tr>
<tr class="memdesc:a9a311f73ffbb7f917ad665d57c961248 inherit pub_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:a9a311f73ffbb7f917ad665d57c961248 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a886acd978e96be8ee98dd6082db79ebc inherit pub_methods_classpl_map_base" id="r_a886acd978e96be8ee98dd6082db79ebc"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a886acd978e96be8ee98dd6082db79ebc inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</td></tr>
<tr class="separator:a886acd978e96be8ee98dd6082db79ebc inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a582499d413ab04df4f9836969a0fd6fa inherit pub_methods_classpl_map_base" id="r_a582499d413ab04df4f9836969a0fd6fa"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a582499d413ab04df4f9836969a0fd6fa inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, const ValueType *&amp;out_pValue) const</td></tr>
<tr class="separator:a582499d413ab04df4f9836969a0fd6fa inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af95ab2f2dee41d550626865e2bfabf4c inherit pub_methods_classpl_map_base" id="r_af95ab2f2dee41d550626865e2bfabf4c"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:af95ab2f2dee41d550626865e2bfabf4c inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType *&amp;out_pValue) const</td></tr>
<tr class="separator:af95ab2f2dee41d550626865e2bfabf4c inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a559a18ed24e6047f6a3e885d71b4b2ac inherit pub_methods_classpl_map_base" id="r_a559a18ed24e6047f6a3e885d71b4b2ac"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a559a18ed24e6047f6a3e885d71b4b2ac inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE const ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a559a18ed24e6047f6a3e885d71b4b2ac inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a420b5475db0d5eb5f01b7f5dfc238246 inherit pub_methods_classpl_map_base" id="r_a420b5475db0d5eb5f01b7f5dfc238246"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a420b5475db0d5eb5f01b7f5dfc238246 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:a420b5475db0d5eb5f01b7f5dfc238246 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ea14de07c6361dd1aa6d5272cc7d9cd inherit pub_methods_classpl_map_base" id="r_a3ea14de07c6361dd1aa6d5272cc7d9cd"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a3ea14de07c6361dd1aa6d5272cc7d9cd inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE const ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValueOrDefault</b> (const CompatibleKeyType &amp;key, const ValueType &amp;defaultValue) const</td></tr>
<tr class="separator:a3ea14de07c6361dd1aa6d5272cc7d9cd inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca284a301098fbdf6e158de335ca24a4 inherit pub_methods_classpl_map_base" id="r_aca284a301098fbdf6e158de335ca24a4"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aca284a301098fbdf6e158de335ca24a4 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:aca284a301098fbdf6e158de335ca24a4 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fdd5704676dbc6dfda7d5682131587f inherit pub_methods_classpl_map_base" id="r_a8fdd5704676dbc6dfda7d5682131587f"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a8fdd5704676dbc6dfda7d5682131587f inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::ConstIterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a8fdd5704676dbc6dfda7d5682131587f inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18bd73778cb6ce35ae7be96eb8673c11 inherit pub_methods_classpl_map_base" id="r_a18bd73778cb6ce35ae7be96eb8673c11"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a18bd73778cb6ce35ae7be96eb8673c11 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a18bd73778cb6ce35ae7be96eb8673c11 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac59387a697296fd5cce7607f469937cd inherit pub_methods_classpl_map_base" id="r_ac59387a697296fd5cce7607f469937cd"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac59387a697296fd5cce7607f469937cd inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:ac59387a697296fd5cce7607f469937cd inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c6549b44844ad90df22d322f0556e88 inherit pub_methods_classpl_map_base" id="r_a5c6549b44844ad90df22d322f0556e88"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a5c6549b44844ad90df22d322f0556e88 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::ConstIterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a5c6549b44844ad90df22d322f0556e88 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6140f196aacc5219195746bb4cfbeb86 inherit pub_methods_classpl_map_base" id="r_a6140f196aacc5219195746bb4cfbeb86"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a6140f196aacc5219195746bb4cfbeb86 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:a6140f196aacc5219195746bb4cfbeb86 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2df266f1e9e0cbf305182e60f8a1733 inherit pub_methods_classpl_map_base" id="r_aa2df266f1e9e0cbf305182e60f8a1733"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aa2df266f1e9e0cbf305182e60f8a1733 inherit pub_methods_classpl_map_base"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::ConstIterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:aa2df266f1e9e0cbf305182e60f8a1733 inherit pub_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classpl_map_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_types_classpl_map_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase&lt; KeyType, ValueType, Comparer &gt;</a></td></tr>
<tr class="memitem:a90d7be99c3ce5f016f7ca3d3336f0003 inherit pub_types_classpl_map_base" id="r_a90d7be99c3ce5f016f7ca3d3336f0003"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>ConstIterator</b> = <a class="el" href="../../d9/dad/structpl_map_base_const_iterator_base.htm">plMapBaseConstIteratorBase</a>&lt;KeyType, ValueType, Comparer, false&gt;</td></tr>
<tr class="separator:a90d7be99c3ce5f016f7ca3d3336f0003 inherit pub_types_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70db21cf220fe7b38c6c6437af51b7cf inherit pub_types_classpl_map_base" id="r_a70db21cf220fe7b38c6c6437af51b7cf"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>ConstReverseIterator</b> = <a class="el" href="../../d9/dad/structpl_map_base_const_iterator_base.htm">plMapBaseConstIteratorBase</a>&lt;KeyType, ValueType, Comparer, true&gt;</td></tr>
<tr class="separator:a70db21cf220fe7b38c6c6437af51b7cf inherit pub_types_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c305bbc8512bb81a6892a8994f7746e inherit pub_types_classpl_map_base" id="r_a4c305bbc8512bb81a6892a8994f7746e"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>Iterator</b> = <a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">plMapBaseIteratorBase</a>&lt;KeyType, ValueType, Comparer, false&gt;</td></tr>
<tr class="separator:a4c305bbc8512bb81a6892a8994f7746e inherit pub_types_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79c35d1fa77c4fe393021dff1e2d4951 inherit pub_types_classpl_map_base" id="r_a79c35d1fa77c4fe393021dff1e2d4951"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>ReverseIterator</b> = <a class="el" href="../../d3/d91/structpl_map_base_iterator_base.htm">plMapBaseIteratorBase</a>&lt;KeyType, ValueType, Comparer, true&gt;</td></tr>
<tr class="separator:a79c35d1fa77c4fe393021dff1e2d4951 inherit pub_types_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_map_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_map_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase&lt; KeyType, ValueType, Comparer &gt;</a></td></tr>
<tr class="memitem:ac24bfa33be79545a3745c3bb5c219967 inherit pro_methods_classpl_map_base" id="r_ac24bfa33be79545a3745c3bb5c219967"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plMapBase</b> (const Comparer &amp;comparer, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ac24bfa33be79545a3745c3bb5c219967 inherit pro_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the map to be empty. <br /></td></tr>
<tr class="separator:ac24bfa33be79545a3745c3bb5c219967 inherit pro_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa34cec785e33823ae671e595a9b657a7 inherit pro_methods_classpl_map_base" id="r_aa34cec785e33823ae671e595a9b657a7"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plMapBase</b> (const <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;cc, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:aa34cec785e33823ae671e595a9b657a7 inherit pro_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all key/value pairs from the given map into this one. <br /></td></tr>
<tr class="separator:aa34cec785e33823ae671e595a9b657a7 inherit pro_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48616ebe02686a94d9ac03eeb07d33e2 inherit pro_methods_classpl_map_base" id="r_a48616ebe02686a94d9ac03eeb07d33e2"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>~plMapBase</b> ()</td></tr>
<tr class="memdesc:a48616ebe02686a94d9ac03eeb07d33e2 inherit pro_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements from the map. <br /></td></tr>
<tr class="separator:a48616ebe02686a94d9ac03eeb07d33e2 inherit pro_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9809e273e5ba5c48b7be9ac4f2e06013 inherit pro_methods_classpl_map_base" id="r_a9809e273e5ba5c48b7be9ac4f2e06013"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d9/dbe/classpl_map_base.htm">plMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a9809e273e5ba5c48b7be9ac4f2e06013 inherit pro_methods_classpl_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all key/value pairs from the given map into this one. <br /></td></tr>
<tr class="separator:a9809e273e5ba5c48b7be9ac4f2e06013 inherit pro_methods_classpl_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename KeyType, typename ValueType, typename Comparer = plCompareHelper&lt;KeyType&gt;, typename AllocatorWrapper = plDefaultAllocatorWrapper&gt;<br />
class plMap&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt;</div><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d9/dbe/classpl_map_base.htm" title="An associative container. Similar to STL::map.">plMapBase</a> </dd></dl>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../d3/d63/_map_8h_source.htm">Map.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../de/d1a/_map__inl_8h_source.htm">Map_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d9/d50/classpl_map.htm">plMap</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
