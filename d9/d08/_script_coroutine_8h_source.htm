<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: Code/Engine/Core/Scripting/ScriptCoroutine.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d9/d08/_script_coroutine_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ScriptCoroutine.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Core/CoreDLL.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Core/Scripting/ScriptRTTI.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">class </span><a class="code hl_class" href="../../d9/db8/classpl_script_world_module.htm">plScriptWorldModule</a>;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">using </span><a class="code hl_class" href="../../dd/d49/structpl_generic_id.htm">plScriptCoroutineId</a> = <a class="code hl_struct" href="../../dd/d49/structpl_generic_id.htm">plGenericId&lt;20, 12&gt;</a>;</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="};">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../db/d7b/structpl_script_coroutine_handle.htm">   15</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  PL_DECLARE_HANDLE_TYPE(<a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a>, <a class="code hl_class" href="../../dd/d49/structpl_generic_id.htm">plScriptCoroutineId</a>);</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>};</div>
</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>PL_DECLARE_REFLECTABLE_TYPE(PL_CORE_DLL, <a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a>);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>PL_DECLARE_CUSTOM_VARIANT_TYPE(<a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a>);</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="};">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../d2/dad/classpl_script_coroutine.htm">   34</a></span><span class="keyword">class </span>PL_CORE_DLL <a class="code hl_class" href="../../d2/dad/classpl_script_coroutine.htm">plScriptCoroutine</a></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>{</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  <a class="code hl_class" href="../../d2/dad/classpl_script_coroutine.htm">plScriptCoroutine</a>();</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../d2/dad/classpl_script_coroutine.htm">~plScriptCoroutine</a>();</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a> GetHandle() { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a>(m_Id); }</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> GetName()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_sName; }</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <a class="code hl_class" href="../../d5/dc4/classpl_script_instance.htm">plScriptInstance</a>* GetScriptInstance() { <span class="keywordflow">return</span> m_pInstance; }</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d5/dc4/classpl_script_instance.htm">plScriptInstance</a>* GetScriptInstance()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pInstance; }</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <a class="code hl_class" href="../../d9/db8/classpl_script_world_module.htm">plScriptWorldModule</a>* GetScriptWorldModule() { <span class="keywordflow">return</span> m_pOwnerModule; }</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d9/db8/classpl_script_world_module.htm">plScriptWorldModule</a>* GetScriptWorldModule()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pOwnerModule; }</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="};">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../d8/dde/structpl_script_coroutine_1_1_result.htm">   50</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d8/dde/structpl_script_coroutine_1_1_result.htm">Result</a></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  {</div>
<div class="foldopen" id="foldopen00052" data-start="{" data-end="};">
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="../../d7/d10/structpl_script_coroutine_1_1_result_1_1_state.htm">   52</a></span>    <span class="keyword">struct </span><a class="code hl_struct" href="../../d7/d10/structpl_script_coroutine_1_1_result_1_1_state.htm">State</a></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    {</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>      <span class="keyword">using </span>StorageType = plUInt8;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>      <span class="keyword">enum</span> Enum</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>      {</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>        Invalid,</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>        Running,</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>        Completed,</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>        Failed,</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>        Default = Invalid,</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>      };</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    };</div>
</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <span class="keyword">static</span> PL_ALWAYS_INLINE <a class="code hl_struct" href="../../d8/dde/structpl_script_coroutine_1_1_result.htm">Result</a> Running(<a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> maxDelay = <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a48cd39d05bfa55f8504cc3c056576c9e">plTime::MakeZero</a>()) { <span class="keywordflow">return</span> {State::Running, maxDelay}; }</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <span class="keyword">static</span> PL_ALWAYS_INLINE Result Completed() { <span class="keywordflow">return</span> {State::Completed}; }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    <span class="keyword">static</span> PL_ALWAYS_INLINE Result Failed() { <span class="keywordflow">return</span> {State::Failed}; }</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;State&gt;</a> m_State;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> m_MaxDelay = <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a48cd39d05bfa55f8504cc3c056576c9e">plTime::MakeZero</a>();</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  };</div>
</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> StartWithVarargs(<a class="code hl_class" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt;plVariant&gt;</a> arguments) = 0;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Stop() {}</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keyword">virtual</span> Result Update(<a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> deltaTimeSinceLastUpdate) = 0;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="keywordtype">void</span> UpdateAndSchedule(<a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> deltaTimeSinceLastUpdate = <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a48cd39d05bfa55f8504cc3c056576c9e">plTime::MakeZero</a>());</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../d9/db8/classpl_script_world_module.htm">plScriptWorldModule</a>;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keywordtype">void</span> Initialize(<a class="code hl_class" href="../../dd/d49/structpl_generic_id.htm">plScriptCoroutineId</a> <span class="keywordtype">id</span>, <a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, <a class="code hl_class" href="../../d5/dc4/classpl_script_instance.htm">plScriptInstance</a>&amp; inout_instance, <a class="code hl_class" href="../../d9/db8/classpl_script_world_module.htm">plScriptWorldModule</a>&amp; inout_ownerModule);</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  <span class="keywordtype">void</span> Deinitialize();</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a>* GetUpdateFunctionProperty();</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <a class="code hl_class" href="../../dd/d49/structpl_generic_id.htm">plScriptCoroutineId</a> m_Id;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <a class="code hl_class" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> m_sName;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <a class="code hl_class" href="../../d5/dc4/classpl_script_instance.htm">plScriptInstance</a>* m_pInstance = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <a class="code hl_class" href="../../d9/db8/classpl_script_world_module.htm">plScriptWorldModule</a>* m_pOwnerModule = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>};</div>
</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>PL_DECLARE_REFLECTABLE_TYPE(PL_CORE_DLL, <a class="code hl_class" href="../../d2/dad/classpl_script_coroutine.htm">plScriptCoroutine</a>);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived, <span class="keyword">class</span>... Args&gt;</div>
<div class="foldopen" id="foldopen00098" data-start="{" data-end="};">
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno"><a class="line" href="../../d4/dae/classpl_typed_script_coroutine.htm">   98</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d4/dae/classpl_typed_script_coroutine.htm">plTypedScriptCoroutine</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d2/dad/classpl_script_coroutine.htm">plScriptCoroutine</a></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>{</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keyword">template</span> &lt;std::size_t... I&gt;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  PL_ALWAYS_INLINE <span class="keywordtype">void</span> StartImpl(<a class="code hl_class" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt;plVariant&gt;</a> arguments, std::index_sequence&lt;I...&gt;)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Start(<a class="code hl_struct" href="../../d5/d9a/structpl_variant_adapter.htm">plVariantAdapter</a>&lt;<span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/daf/structget_argument.htm">getArgument&lt;I, Args...&gt;::Type</a>&gt;(arguments[I])...);</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  }</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> StartWithVarargs(<a class="code hl_class" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt;plVariant&gt;</a> arguments)<span class="keyword"> override</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    StartImpl(arguments, std::make_index_sequence&lt;<span class="keyword">sizeof</span>...(Args)&gt;{});</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  }</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>};</div>
</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="foldopen" id="foldopen00117" data-start="{" data-end="};">
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno"><a class="line" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm">  117</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm">plScriptCoroutineCreationMode</a></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>{</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="keyword">using </span>StorageType = plUInt8;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="foldopen" id="foldopen00121" data-start="{" data-end="};">
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5">  121</a></span>  <span class="keyword">enum</span> <a class="code hl_enumeration" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5">Enum</a></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  {</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno"><a class="line" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5ab32a40c4295c599f5567421fb7f62fd3">  123</a></span>    <a class="code hl_enumvalue" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5ab32a40c4295c599f5567421fb7f62fd3">StopOther</a>,     </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5a22de9df670d98d8c50835f180580750f">  124</a></span>    <a class="code hl_enumvalue" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5a22de9df670d98d8c50835f180580750f">DontCreateNew</a>, </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno"><a class="line" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5a249a07a144382d2374011fc520288b5d">  125</a></span>    <a class="code hl_enumvalue" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5a249a07a144382d2374011fc520288b5d">AllowOverlap</a>,  </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    Default = <a class="code hl_enumvalue" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5ab32a40c4295c599f5567421fb7f62fd3">StopOther</a></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  };</div>
</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>};</div>
</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>PL_DECLARE_REFLECTABLE_TYPE(PL_CORE_DLL, <a class="code hl_struct" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm">plScriptCoroutineCreationMode</a>);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="foldopen" id="foldopen00138" data-start="{" data-end="};">
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="../../d7/d07/classpl_script_coroutine_r_t_t_i.htm">  138</a></span><span class="keyword">class </span>PL_CORE_DLL <a class="code hl_class" href="../../d7/d07/classpl_script_coroutine_r_t_t_i.htm">plScriptCoroutineRTTI</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>, <span class="keyword">public</span> <a class="code hl_class" href="../../de/da6/classpl_ref_counting_impl.htm">plRefCountingImpl</a></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>{</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <a class="code hl_class" href="../../d7/d07/classpl_script_coroutine_r_t_t_i.htm">plScriptCoroutineRTTI</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, <a class="code hl_class" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr&lt;plRTTIAllocator&gt;</a>&amp;&amp; pAllocator);</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <a class="code hl_class" href="../../d7/d07/classpl_script_coroutine_r_t_t_i.htm">~plScriptCoroutineRTTI</a>();</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sTypeNameStorage;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  <a class="code hl_class" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr&lt;plRTTIAllocator&gt;</a> m_pAllocatorStorage;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>};</div>
</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="foldopen" id="foldopen00150" data-start="{" data-end="};">
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno"><a class="line" href="../../d4/dbe/classpl_script_coroutine_function_property.htm">  150</a></span><span class="keyword">class </span>PL_CORE_DLL <a class="code hl_class" href="../../d4/dbe/classpl_script_coroutine_function_property.htm">plScriptCoroutineFunctionProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d2/d15/classpl_script_function_property.htm">plScriptFunctionProperty</a></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>{</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <a class="code hl_class" href="../../d4/dbe/classpl_script_coroutine_function_property.htm">plScriptCoroutineFunctionProperty</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;plScriptCoroutineRTTI&gt;</a>&amp; pType, <a class="code hl_enumeration" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5">plScriptCoroutineCreationMode::Enum</a> creationMode);</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <a class="code hl_class" href="../../d4/dbe/classpl_script_coroutine_function_property.htm">~plScriptCoroutineFunctionProperty</a>();</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno"><a class="line" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#aa77e48bd239c15eb527b88a78b9bbd95">  156</a></span>  <span class="keyword">virtual</span> <a class="code hl_enumeration" href="../../d9/dc8/structpl_function_type.htm#af271404fdafe238815ecd4cf373026b8">plFunctionType::Enum</a> <a class="code hl_function" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#aa77e48bd239c15eb527b88a78b9bbd95">GetFunctionType</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code hl_enumvalue" href="../../d9/dc8/structpl_function_type.htm#af271404fdafe238815ecd4cf373026b8a7f52870f31ca76b77dbab839a9383105">plFunctionType::Member</a>; }</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno"><a class="line" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#aee6489bb55e3c7780d6b975a2d37cebc">  157</a></span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* <a class="code hl_function" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#aee6489bb55e3c7780d6b975a2d37cebc">GetReturnType</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">nullptr</span>; }</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#ae22fbc93a2e09469fecf3db8b6b2f132">  158</a></span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../df/dd9/structpl_bitflags.htm">plBitflags&lt;plPropertyFlags&gt;</a> <a class="code hl_function" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#ae22fbc93a2e09469fecf3db8b6b2f132">GetReturnFlags</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> plPropertyFlags::Void; }</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno"><a class="line" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#a5336708b6be339ab38e7324e0cfeb8dc">  159</a></span>  <span class="keyword">virtual</span> plUInt32 <a class="code hl_function" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#a5336708b6be339ab38e7324e0cfeb8dc">GetArgumentCount</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> 0; }</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno"><a class="line" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#a71e0001396d915d9a2bd62bbff4f3174">  160</a></span>  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* <a class="code hl_function" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#a71e0001396d915d9a2bd62bbff4f3174">GetArgumentType</a>(plUInt32 uiParamIndex)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">nullptr</span>; }</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno"><a class="line" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#ab0273e54676e3d40b8c55b386415e235">  161</a></span>  <span class="keyword">virtual</span> <a class="code hl_struct" href="../../df/dd9/structpl_bitflags.htm">plBitflags&lt;plPropertyFlags&gt;</a> <a class="code hl_function" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#ab0273e54676e3d40b8c55b386415e235">GetArgumentFlags</a>(plUInt32 uiParamIndex)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> plPropertyFlags::Void; }</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Execute(<span class="keywordtype">void</span>* pInstance, <a class="code hl_class" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr&lt;plVariant&gt;</a> arguments, <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; out_returnValue) <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;plScriptCoroutineRTTI&gt;</a> m_pType;</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;plScriptCoroutineCreationMode&gt;</a> m_CreationMode;</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>};</div>
</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="foldopen" id="foldopen00171" data-start="{" data-end="};">
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno"><a class="line" href="../../d3/d56/classpl_script_coroutine_message_handler.htm">  171</a></span><span class="keyword">class </span>PL_CORE_DLL <a class="code hl_class" href="../../d3/d56/classpl_script_coroutine_message_handler.htm">plScriptCoroutineMessageHandler</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../dd/d13/classpl_script_message_handler.htm">plScriptMessageHandler</a></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>{</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  <a class="code hl_class" href="../../d3/d56/classpl_script_coroutine_message_handler.htm">plScriptCoroutineMessageHandler</a>(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, <span class="keyword">const</span> <a class="code hl_struct" href="../../d9/d6d/structpl_script_message_desc.htm">plScriptMessageDesc</a>&amp; desc, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;plScriptCoroutineRTTI&gt;</a>&amp; pType, <a class="code hl_enumeration" href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5">plScriptCoroutineCreationMode::Enum</a> creationMode);</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <a class="code hl_class" href="../../d3/d56/classpl_script_coroutine_message_handler.htm">~plScriptCoroutineMessageHandler</a>();</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> Dispatch(<a class="code hl_class" href="../../d1/d8e/classpl_abstract_message_handler.htm">plAbstractMessageHandler</a>* pSelf, <span class="keywordtype">void</span>* pInstance, <a class="code hl_class" href="../../d0/dde/classpl_message.htm">plMessage</a>&amp; ref_msg);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <a class="code hl_class" href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a> m_sName;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;plScriptCoroutineRTTI&gt;</a> m_pType;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;plScriptCoroutineCreationMode&gt;</a> m_CreationMode;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>};</div>
</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00187" data-start="{" data-end="};">
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno"><a class="line" href="../../d3/d4c/structpl_hash_helper_3_01pl_script_coroutine_handle_01_4.htm">  187</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../db/dd0/structpl_hash_helper.htm">plHashHelper</a>&lt;<a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a>&gt;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>{</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  PL_ALWAYS_INLINE <span class="keyword">static</span> plUInt32 Hash(<a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a> value) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../db/dd0/structpl_hash_helper.htm">plHashHelper&lt;plUInt32&gt;::Hash</a>(value.GetInternalID().m_Data); }</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  PL_ALWAYS_INLINE <span class="keyword">static</span> <span class="keywordtype">bool</span> Equal(<a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a> a, <a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a> b) { <span class="keywordflow">return</span> a == b; }</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>};</div>
</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> operator&lt;&lt;(<a class="code hl_class" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a>&amp; hValue) {}</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>PL_ALWAYS_INLINE <span class="keywordtype">void</span> operator&gt;&gt;(<a class="code hl_class" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a>&amp; inout_stream, <a class="code hl_struct" href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a>&amp; ref_hValue) {}</div>
<div class="ttc" id="aclasspl_abstract_function_property_htm"><div class="ttname"><a href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a></div><div class="ttdoc">The base class for a property that represents a function.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:535</div></div>
<div class="ttc" id="aclasspl_abstract_message_handler_htm"><div class="ttname"><a href="../../d1/d8e/classpl_abstract_message_handler.htm">plAbstractMessageHandler</a></div><div class="ttdoc">The base class for all message handlers that a type provides.</div><div class="ttdef"><b>Definition</b> MessageHandler.h:12</div></div>
<div class="ttc" id="aclasspl_array_ptr_htm"><div class="ttname"><a href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:37</div></div>
<div class="ttc" id="aclasspl_hashed_string_htm"><div class="ttname"><a href="../../d0/dc8/classpl_hashed_string.htm">plHashedString</a></div><div class="ttdoc">This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...</div><div class="ttdef"><b>Definition</b> HashedString.h:25</div></div>
<div class="ttc" id="aclasspl_message_htm"><div class="ttname"><a href="../../d0/dde/classpl_message.htm">plMessage</a></div><div class="ttdoc">Base class for all message types. Each message type has it's own id which is used to dispatch message...</div><div class="ttdef"><b>Definition</b> Message.h:22</div></div>
<div class="ttc" id="aclasspl_r_t_t_i_htm"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclasspl_ref_counting_impl_htm"><div class="ttname"><a href="../../de/da6/classpl_ref_counting_impl.htm">plRefCountingImpl</a></div><div class="ttdef"><b>Definition</b> RefCounted.h:7</div></div>
<div class="ttc" id="aclasspl_script_coroutine_function_property_htm"><div class="ttname"><a href="../../d4/dbe/classpl_script_coroutine_function_property.htm">plScriptCoroutineFunctionProperty</a></div><div class="ttdoc">A function property that creates an instance of the given coroutine type and starts it immediately.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:151</div></div>
<div class="ttc" id="aclasspl_script_coroutine_function_property_htm_a5336708b6be339ab38e7324e0cfeb8dc"><div class="ttname"><a href="../../d4/dbe/classpl_script_coroutine_function_property.htm#a5336708b6be339ab38e7324e0cfeb8dc">plScriptCoroutineFunctionProperty::GetArgumentCount</a></div><div class="ttdeci">virtual plUInt32 GetArgumentCount() const override</div><div class="ttdoc">Returns the number of arguments.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:159</div></div>
<div class="ttc" id="aclasspl_script_coroutine_function_property_htm_a71e0001396d915d9a2bd62bbff4f3174"><div class="ttname"><a href="../../d4/dbe/classpl_script_coroutine_function_property.htm#a71e0001396d915d9a2bd62bbff4f3174">plScriptCoroutineFunctionProperty::GetArgumentType</a></div><div class="ttdeci">virtual const plRTTI * GetArgumentType(plUInt32 uiParamIndex) const override</div><div class="ttdoc">Returns the type of the given argument.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:160</div></div>
<div class="ttc" id="aclasspl_script_coroutine_function_property_htm_aa77e48bd239c15eb527b88a78b9bbd95"><div class="ttname"><a href="../../d4/dbe/classpl_script_coroutine_function_property.htm#aa77e48bd239c15eb527b88a78b9bbd95">plScriptCoroutineFunctionProperty::GetFunctionType</a></div><div class="ttdeci">virtual plFunctionType::Enum GetFunctionType() const override</div><div class="ttdoc">Returns the type of function, see plFunctionPropertyType::Enum.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:156</div></div>
<div class="ttc" id="aclasspl_script_coroutine_function_property_htm_ab0273e54676e3d40b8c55b386415e235"><div class="ttname"><a href="../../d4/dbe/classpl_script_coroutine_function_property.htm#ab0273e54676e3d40b8c55b386415e235">plScriptCoroutineFunctionProperty::GetArgumentFlags</a></div><div class="ttdeci">virtual plBitflags&lt; plPropertyFlags &gt; GetArgumentFlags(plUInt32 uiParamIndex) const override</div><div class="ttdoc">Returns the property flags of the given argument.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:161</div></div>
<div class="ttc" id="aclasspl_script_coroutine_function_property_htm_ae22fbc93a2e09469fecf3db8b6b2f132"><div class="ttname"><a href="../../d4/dbe/classpl_script_coroutine_function_property.htm#ae22fbc93a2e09469fecf3db8b6b2f132">plScriptCoroutineFunctionProperty::GetReturnFlags</a></div><div class="ttdeci">virtual plBitflags&lt; plPropertyFlags &gt; GetReturnFlags() const override</div><div class="ttdoc">Returns property flags of the return value.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:158</div></div>
<div class="ttc" id="aclasspl_script_coroutine_function_property_htm_aee6489bb55e3c7780d6b975a2d37cebc"><div class="ttname"><a href="../../d4/dbe/classpl_script_coroutine_function_property.htm#aee6489bb55e3c7780d6b975a2d37cebc">plScriptCoroutineFunctionProperty::GetReturnType</a></div><div class="ttdeci">virtual const plRTTI * GetReturnType() const override</div><div class="ttdoc">Returns the type of the return value.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:157</div></div>
<div class="ttc" id="aclasspl_script_coroutine_htm"><div class="ttname"><a href="../../d2/dad/classpl_script_coroutine.htm">plScriptCoroutine</a></div><div class="ttdoc">Base class of script coroutines.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:35</div></div>
<div class="ttc" id="aclasspl_script_coroutine_message_handler_htm"><div class="ttname"><a href="../../d3/d56/classpl_script_coroutine_message_handler.htm">plScriptCoroutineMessageHandler</a></div><div class="ttdoc">A message handler that creates an instance of the given coroutine type and starts it immediately.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:172</div></div>
<div class="ttc" id="aclasspl_script_coroutine_r_t_t_i_htm"><div class="ttname"><a href="../../d7/d07/classpl_script_coroutine_r_t_t_i.htm">plScriptCoroutineRTTI</a></div><div class="ttdoc">A coroutine type that stores a custom allocator.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:139</div></div>
<div class="ttc" id="aclasspl_script_function_property_htm"><div class="ttname"><a href="../../d2/d15/classpl_script_function_property.htm">plScriptFunctionProperty</a></div><div class="ttdef"><b>Definition</b> ScriptRTTI.h:38</div></div>
<div class="ttc" id="aclasspl_script_instance_htm"><div class="ttname"><a href="../../d5/dc4/classpl_script_instance.htm">plScriptInstance</a></div><div class="ttdef"><b>Definition</b> ScriptRTTI.h:66</div></div>
<div class="ttc" id="aclasspl_script_message_handler_htm"><div class="ttname"><a href="../../dd/d13/classpl_script_message_handler.htm">plScriptMessageHandler</a></div><div class="ttdef"><b>Definition</b> ScriptRTTI.h:54</div></div>
<div class="ttc" id="aclasspl_script_world_module_htm"><div class="ttname"><a href="../../d9/db8/classpl_script_world_module.htm">plScriptWorldModule</a></div><div class="ttdef"><b>Definition</b> ScriptWorldModule.h:13</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a></div><div class="ttdoc">A Shared ptr manages a shared object and destroys that object when no one references it anymore....</div><div class="ttdef"><b>Definition</b> SharedPtr.h:10</div></div>
<div class="ttc" id="aclasspl_stream_reader_htm"><div class="ttname"><a href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclasspl_stream_writer_htm"><div class="ttname"><a href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:107</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_typed_script_coroutine_htm"><div class="ttname"><a href="../../d4/dae/classpl_typed_script_coroutine.htm">plTypedScriptCoroutine</a></div><div class="ttdoc">Base class of coroutines which are implemented in C++ to allow automatic unpacking of the arguments f...</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:99</div></div>
<div class="ttc" id="aclasspl_unique_ptr_htm"><div class="ttname"><a href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a></div><div class="ttdoc">A Unique ptr manages an object and destroys that object when it goes out of scope....</div><div class="ttdef"><b>Definition</b> UniquePtr.h:10</div></div>
<div class="ttc" id="aclasspl_variant_htm"><div class="ttname"><a href="../../da/d4c/classpl_variant.htm">plVariant</a></div><div class="ttdoc">plVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="astructget_argument_htm"><div class="ttname"><a href="../../d5/daf/structget_argument.htm">getArgument</a></div><div class="ttdoc">Use getArgument&lt;N, Args...&gt;::Type to get the type of the Nth argument in Args.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:383</div></div>
<div class="ttc" id="astructpl_bitflags_htm"><div class="ttname"><a href="../../df/dd9/structpl_bitflags.htm">plBitflags</a></div><div class="ttdoc">The plBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition</b> Bitflags.h:82</div></div>
<div class="ttc" id="astructpl_enum_htm"><div class="ttname"><a href="../../dd/d09/structpl_enum.htm">plEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition</b> Enum.h:37</div></div>
<div class="ttc" id="astructpl_function_type_htm_af271404fdafe238815ecd4cf373026b8"><div class="ttname"><a href="../../d9/dc8/structpl_function_type.htm#af271404fdafe238815ecd4cf373026b8">plFunctionType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:525</div></div>
<div class="ttc" id="astructpl_function_type_htm_af271404fdafe238815ecd4cf373026b8a7f52870f31ca76b77dbab839a9383105"><div class="ttname"><a href="../../d9/dc8/structpl_function_type.htm#af271404fdafe238815ecd4cf373026b8a7f52870f31ca76b77dbab839a9383105">plFunctionType::Member</a></div><div class="ttdeci">@ Member</div><div class="ttdoc">A normal member function, a valid instance pointer must be provided to call.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:526</div></div>
<div class="ttc" id="astructpl_generic_id_htm"><div class="ttname"><a href="../../dd/d49/structpl_generic_id.htm">plGenericId&lt; 20, 12 &gt;</a></div></div>
<div class="ttc" id="astructpl_hash_helper_htm"><div class="ttname"><a href="../../db/dd0/structpl_hash_helper.htm">plHashHelper</a></div><div class="ttdoc">Helper struct to calculate the Hash of different types.</div><div class="ttdef"><b>Definition</b> HashingUtils.h:75</div></div>
<div class="ttc" id="astructpl_hybrid_string_htm"><div class="ttname"><a href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt; 32, plDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructpl_script_coroutine_1_1_result_1_1_state_htm"><div class="ttname"><a href="../../d7/d10/structpl_script_coroutine_1_1_result_1_1_state.htm">plScriptCoroutine::Result::State</a></div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:53</div></div>
<div class="ttc" id="astructpl_script_coroutine_1_1_result_htm"><div class="ttname"><a href="../../d8/dde/structpl_script_coroutine_1_1_result.htm">plScriptCoroutine::Result</a></div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:51</div></div>
<div class="ttc" id="astructpl_script_coroutine_creation_mode_htm"><div class="ttname"><a href="../../d9/d99/structpl_script_coroutine_creation_mode.htm">plScriptCoroutineCreationMode</a></div><div class="ttdoc">Mode that decides what should happen if a new coroutine is created while there is already another cor...</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:118</div></div>
<div class="ttc" id="astructpl_script_coroutine_creation_mode_htm_adbfeaed6b0694ad662e8ce4f868d28c5"><div class="ttname"><a href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5">plScriptCoroutineCreationMode::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:122</div></div>
<div class="ttc" id="astructpl_script_coroutine_creation_mode_htm_adbfeaed6b0694ad662e8ce4f868d28c5a22de9df670d98d8c50835f180580750f"><div class="ttname"><a href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5a22de9df670d98d8c50835f180580750f">plScriptCoroutineCreationMode::DontCreateNew</a></div><div class="ttdeci">@ DontCreateNew</div><div class="ttdoc">Don't create a new coroutine if there is already one running with the same name.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:124</div></div>
<div class="ttc" id="astructpl_script_coroutine_creation_mode_htm_adbfeaed6b0694ad662e8ce4f868d28c5a249a07a144382d2374011fc520288b5d"><div class="ttname"><a href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5a249a07a144382d2374011fc520288b5d">plScriptCoroutineCreationMode::AllowOverlap</a></div><div class="ttdeci">@ AllowOverlap</div><div class="ttdoc">Allow multiple overlapping coroutines with the same name.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:125</div></div>
<div class="ttc" id="astructpl_script_coroutine_creation_mode_htm_adbfeaed6b0694ad662e8ce4f868d28c5ab32a40c4295c599f5567421fb7f62fd3"><div class="ttname"><a href="../../d9/d99/structpl_script_coroutine_creation_mode.htm#adbfeaed6b0694ad662e8ce4f868d28c5ab32a40c4295c599f5567421fb7f62fd3">plScriptCoroutineCreationMode::StopOther</a></div><div class="ttdeci">@ StopOther</div><div class="ttdoc">Stop the other coroutine before creating a new one with the same name.</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:123</div></div>
<div class="ttc" id="astructpl_script_coroutine_handle_htm"><div class="ttname"><a href="../../db/d7b/structpl_script_coroutine_handle.htm">plScriptCoroutineHandle</a></div><div class="ttdoc">A handle to a script coroutine which can be used to determine whether a coroutine is still running ev...</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:16</div></div>
<div class="ttc" id="astructpl_script_message_desc_htm"><div class="ttname"><a href="../../d9/d6d/structpl_script_message_desc.htm">plScriptMessageDesc</a></div><div class="ttdef"><b>Definition</b> ScriptRTTI.h:48</div></div>
<div class="ttc" id="astructpl_time_htm"><div class="ttname"><a href="../../d1/df6/structpl_time.htm">plTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition</b> Time.h:12</div></div>
<div class="ttc" id="astructpl_time_htm_a48cd39d05bfa55f8504cc3c056576c9e"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a48cd39d05bfa55f8504cc3c056576c9e">plTime::MakeZero</a></div><div class="ttdeci">PL_ALWAYS_INLINE static constexpr plTime MakeZero()</div><div class="ttdoc">Creates an instance of plTime that was initialized with zero.</div><div class="ttdef"><b>Definition</b> Time.h:42</div></div>
<div class="ttc" id="astructpl_variant_adapter_htm"><div class="ttname"><a href="../../d5/d9a/structpl_variant_adapter.htm">plVariantAdapter</a></div><div class="ttdoc">Used to implicitly retrieve any value from an plVariant to be used as a function argument using the a...</div><div class="ttdef"><b>Definition</b> VariantAdapter.h:211</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_e62ae2b329024d6cec02491cff116055.htm">Core</a></li><li class="navelem"><a class="el" href="../../dir_84a285581bb60aeed789d715a1401fcf.htm">Scripting</a></li><li class="navelem"><b>ScriptCoroutine.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
