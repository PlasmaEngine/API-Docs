<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plOpenDdlWriter Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('da/dda/classpl_open_ddl_writer.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../da/d0f/classpl_open_ddl_writer-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plOpenDdlWriter Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>The base class for OpenDDL writers.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d29/_open_ddl_writer_8h_source.htm">OpenDdlWriter.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dd6/structpl_open_ddl_writer_1_1_ddl_state.htm">DdlState</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a8ad38a0fdca8ac4fc78b4dcbd431d00f" id="r_a8ad38a0fdca8ac4fc78b4dcbd431d00f"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8ad38a0fdca8ac4fc78b4dcbd431d00f">TypeStringMode</a> { <a class="el" href="#a8ad38a0fdca8ac4fc78b4dcbd431d00fa952358fc53c0167a1ea7354f338ed5af">Compliant</a>
, <a class="el" href="#a8ad38a0fdca8ac4fc78b4dcbd431d00fa5b3571429e97357bc5cd927384ed2d10">ShortenedUnsignedInt</a>
, <a class="el" href="#a8ad38a0fdca8ac4fc78b4dcbd431d00face42b65744e60ed9b32e7d4f750a66a5">Shortest</a>
 }</td></tr>
<tr class="separator:a8ad38a0fdca8ac4fc78b4dcbd431d00f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaea8a6dd2930a0b70e616fdebfdc81ff" id="r_aaea8a6dd2930a0b70e616fdebfdc81ff"><td class="memItemLeft" align="right" valign="top">enum class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aaea8a6dd2930a0b70e616fdebfdc81ff">FloatPrecisionMode</a> { <a class="el" href="#aaea8a6dd2930a0b70e616fdebfdc81ffa4b8123df4e2b3456270c11394adf7607">Readable</a>
, <a class="el" href="#aaea8a6dd2930a0b70e616fdebfdc81ffa1649aed298f99d587e2eb30c1db5946b">Exact</a>
 }</td></tr>
<tr class="separator:aaea8a6dd2930a0b70e616fdebfdc81ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aedc2c74b9d00770bb7898eee4ea33177" id="r_aedc2c74b9d00770bb7898eee4ea33177"><td class="memItemLeft" align="right" valign="top"><a id="aedc2c74b9d00770bb7898eee4ea33177" name="aedc2c74b9d00770bb7898eee4ea33177"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plOpenDdlWriter</b> ()</td></tr>
<tr class="memdesc:aedc2c74b9d00770bb7898eee4ea33177"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:aedc2c74b9d00770bb7898eee4ea33177"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa902291dd1ce85d21244c62b95da3cd2" id="r_aa902291dd1ce85d21244c62b95da3cd2"><td class="memItemLeft" align="right" valign="top"><a id="aa902291dd1ce85d21244c62b95da3cd2" name="aa902291dd1ce85d21244c62b95da3cd2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetOutputStream</b> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> *pOutput)</td></tr>
<tr class="memdesc:aa902291dd1ce85d21244c62b95da3cd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">All output is written to this binary stream. <br /></td></tr>
<tr class="separator:aa902291dd1ce85d21244c62b95da3cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f77fcc1032f030d0d7b1d2019500c7c" id="r_a8f77fcc1032f030d0d7b1d2019500c7c"><td class="memItemLeft" align="right" valign="top"><a id="a8f77fcc1032f030d0d7b1d2019500c7c" name="a8f77fcc1032f030d0d7b1d2019500c7c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCompactMode</b> (bool bCompact)</td></tr>
<tr class="memdesc:a8f77fcc1032f030d0d7b1d2019500c7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures how much whitespace is output. <br /></td></tr>
<tr class="separator:a8f77fcc1032f030d0d7b1d2019500c7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f918d2356ec14d43f5f9bef9959bfc4" id="r_a1f918d2356ec14d43f5f9bef9959bfc4"><td class="memItemLeft" align="right" valign="top"><a id="a1f918d2356ec14d43f5f9bef9959bfc4" name="a1f918d2356ec14d43f5f9bef9959bfc4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetPrimitiveTypeStringMode</b> (<a class="el" href="#a8ad38a0fdca8ac4fc78b4dcbd431d00f">TypeStringMode</a> mode)</td></tr>
<tr class="memdesc:a1f918d2356ec14d43f5f9bef9959bfc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures how verbose the type strings are going to be written. <br /></td></tr>
<tr class="separator:a1f918d2356ec14d43f5f9bef9959bfc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ad3d4c9c396120c92f50350bd7ebd81" id="r_a3ad3d4c9c396120c92f50350bd7ebd81"><td class="memItemLeft" align="right" valign="top"><a id="a3ad3d4c9c396120c92f50350bd7ebd81" name="a3ad3d4c9c396120c92f50350bd7ebd81"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetFloatPrecisionMode</b> (<a class="el" href="#aaea8a6dd2930a0b70e616fdebfdc81ff">FloatPrecisionMode</a> mode)</td></tr>
<tr class="memdesc:a3ad3d4c9c396120c92f50350bd7ebd81"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures how float values are output. <br /></td></tr>
<tr class="separator:a3ad3d4c9c396120c92f50350bd7ebd81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5923c253f338ecd04c8033fc4748b6ae" id="r_a5923c253f338ecd04c8033fc4748b6ae"><td class="memItemLeft" align="right" valign="top"><a id="a5923c253f338ecd04c8033fc4748b6ae" name="a5923c253f338ecd04c8033fc4748b6ae"></a>
<a class="el" href="#aaea8a6dd2930a0b70e616fdebfdc81ff">FloatPrecisionMode</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetFloatPrecisionMode</b> () const</td></tr>
<tr class="memdesc:a5923c253f338ecd04c8033fc4748b6ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns how float values are output. <br /></td></tr>
<tr class="separator:a5923c253f338ecd04c8033fc4748b6ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96b2fc6ac7f03ad450d3d9d02b929520" id="r_a96b2fc6ac7f03ad450d3d9d02b929520"><td class="memItemLeft" align="right" valign="top"><a id="a96b2fc6ac7f03ad450d3d9d02b929520" name="a96b2fc6ac7f03ad450d3d9d02b929520"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetIndentation</b> (plInt8 iIndentation)</td></tr>
<tr class="memdesc:a96b2fc6ac7f03ad450d3d9d02b929520"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to set the indentation. Negative values are possible. This makes it possible to set the indentation e.g. to -2, thus the output will only have indentation after a level of 3 has been reached. <br /></td></tr>
<tr class="separator:a96b2fc6ac7f03ad450d3d9d02b929520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a154a56bfc247d1b37f15e1b51f564bf3" id="r_a154a56bfc247d1b37f15e1b51f564bf3"><td class="memItemLeft" align="right" valign="top"><a id="a154a56bfc247d1b37f15e1b51f564bf3" name="a154a56bfc247d1b37f15e1b51f564bf3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>BeginObject</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sType, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName={}, bool bGlobalName=false, bool bSingleLine=false)</td></tr>
<tr class="memdesc:a154a56bfc247d1b37f15e1b51f564bf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Begins outputting an object. <br /></td></tr>
<tr class="separator:a154a56bfc247d1b37f15e1b51f564bf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe778ac8ee683b7e0c9fb86c42ec2fe3" id="r_abe778ac8ee683b7e0c9fb86c42ec2fe3"><td class="memItemLeft" align="right" valign="top"><a id="abe778ac8ee683b7e0c9fb86c42ec2fe3" name="abe778ac8ee683b7e0c9fb86c42ec2fe3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EndObject</b> ()</td></tr>
<tr class="memdesc:abe778ac8ee683b7e0c9fb86c42ec2fe3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ends outputting an object. <br /></td></tr>
<tr class="separator:abe778ac8ee683b7e0c9fb86c42ec2fe3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" id="r_a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4"><td class="memItemLeft" align="right" valign="top"><a id="a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" name="a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>BeginPrimitiveList</b> (plOpenDdlPrimitiveType type, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName={}, bool bGlobalName=false)</td></tr>
<tr class="memdesc:a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Begins outputting a list of primitives of the given type. <br /></td></tr>
<tr class="separator:a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f01da42f9d7edd0ec886114e8f2131b" id="r_a4f01da42f9d7edd0ec886114e8f2131b"><td class="memItemLeft" align="right" valign="top"><a id="a4f01da42f9d7edd0ec886114e8f2131b" name="a4f01da42f9d7edd0ec886114e8f2131b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EndPrimitiveList</b> ()</td></tr>
<tr class="memdesc:a4f01da42f9d7edd0ec886114e8f2131b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ends outputting the list of primitives. <br /></td></tr>
<tr class="separator:a4f01da42f9d7edd0ec886114e8f2131b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a438afa88432602c2accf4933ecd173b5" id="r_a438afa88432602c2accf4933ecd173b5"><td class="memItemLeft" align="right" valign="top"><a id="a438afa88432602c2accf4933ecd173b5" name="a438afa88432602c2accf4933ecd173b5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteBool</b> (const bool *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:a438afa88432602c2accf4933ecd173b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a438afa88432602c2accf4933ecd173b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6930c54ca6ab76797fab07c56639ba3f" id="r_a6930c54ca6ab76797fab07c56639ba3f"><td class="memItemLeft" align="right" valign="top"><a id="a6930c54ca6ab76797fab07c56639ba3f" name="a6930c54ca6ab76797fab07c56639ba3f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteInt8</b> (const plInt8 *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:a6930c54ca6ab76797fab07c56639ba3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a6930c54ca6ab76797fab07c56639ba3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48c49fc09a74fe17acbc968cd845bb9c" id="r_a48c49fc09a74fe17acbc968cd845bb9c"><td class="memItemLeft" align="right" valign="top"><a id="a48c49fc09a74fe17acbc968cd845bb9c" name="a48c49fc09a74fe17acbc968cd845bb9c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteInt16</b> (const plInt16 *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:a48c49fc09a74fe17acbc968cd845bb9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a48c49fc09a74fe17acbc968cd845bb9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dc67d44c08af3aac7b756e85b524d6f" id="r_a4dc67d44c08af3aac7b756e85b524d6f"><td class="memItemLeft" align="right" valign="top"><a id="a4dc67d44c08af3aac7b756e85b524d6f" name="a4dc67d44c08af3aac7b756e85b524d6f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteInt32</b> (const plInt32 *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:a4dc67d44c08af3aac7b756e85b524d6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a4dc67d44c08af3aac7b756e85b524d6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae73c98c5411731f9aa50d266325563a8" id="r_ae73c98c5411731f9aa50d266325563a8"><td class="memItemLeft" align="right" valign="top"><a id="ae73c98c5411731f9aa50d266325563a8" name="ae73c98c5411731f9aa50d266325563a8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteInt64</b> (const plInt64 *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:ae73c98c5411731f9aa50d266325563a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:ae73c98c5411731f9aa50d266325563a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af060e99af66798773b62c022f44a2a64" id="r_af060e99af66798773b62c022f44a2a64"><td class="memItemLeft" align="right" valign="top"><a id="af060e99af66798773b62c022f44a2a64" name="af060e99af66798773b62c022f44a2a64"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteUInt8</b> (const plUInt8 *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:af060e99af66798773b62c022f44a2a64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:af060e99af66798773b62c022f44a2a64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a89ddb4b88b52091e45056b803d0c8e" id="r_a2a89ddb4b88b52091e45056b803d0c8e"><td class="memItemLeft" align="right" valign="top"><a id="a2a89ddb4b88b52091e45056b803d0c8e" name="a2a89ddb4b88b52091e45056b803d0c8e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteUInt16</b> (const plUInt16 *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:a2a89ddb4b88b52091e45056b803d0c8e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a2a89ddb4b88b52091e45056b803d0c8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab070e2ca40b38008e46a8dc87bef0647" id="r_ab070e2ca40b38008e46a8dc87bef0647"><td class="memItemLeft" align="right" valign="top"><a id="ab070e2ca40b38008e46a8dc87bef0647" name="ab070e2ca40b38008e46a8dc87bef0647"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteUInt32</b> (const plUInt32 *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:ab070e2ca40b38008e46a8dc87bef0647"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:ab070e2ca40b38008e46a8dc87bef0647"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3e1cf5026b358b3caea7c9b5fa349af" id="r_aa3e1cf5026b358b3caea7c9b5fa349af"><td class="memItemLeft" align="right" valign="top"><a id="aa3e1cf5026b358b3caea7c9b5fa349af" name="aa3e1cf5026b358b3caea7c9b5fa349af"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteUInt64</b> (const plUInt64 *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:aa3e1cf5026b358b3caea7c9b5fa349af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:aa3e1cf5026b358b3caea7c9b5fa349af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a301456a8f07efc24e6518b81c8fb0e97" id="r_a301456a8f07efc24e6518b81c8fb0e97"><td class="memItemLeft" align="right" valign="top"><a id="a301456a8f07efc24e6518b81c8fb0e97" name="a301456a8f07efc24e6518b81c8fb0e97"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteFloat</b> (const float *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:a301456a8f07efc24e6518b81c8fb0e97"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a301456a8f07efc24e6518b81c8fb0e97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea2e623be2b030cafb75b2a784b7ce1c" id="r_aea2e623be2b030cafb75b2a784b7ce1c"><td class="memItemLeft" align="right" valign="top"><a id="aea2e623be2b030cafb75b2a784b7ce1c" name="aea2e623be2b030cafb75b2a784b7ce1c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteDouble</b> (const double *pValues, plUInt32 uiCount=1)</td></tr>
<tr class="memdesc:aea2e623be2b030cafb75b2a784b7ce1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:aea2e623be2b030cafb75b2a784b7ce1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e6f1de939e4c722131d6737fde5ef2e" id="r_a7e6f1de939e4c722131d6737fde5ef2e"><td class="memItemLeft" align="right" valign="top"><a id="a7e6f1de939e4c722131d6737fde5ef2e" name="a7e6f1de939e4c722131d6737fde5ef2e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteString</b> (const <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;sString)</td></tr>
<tr class="memdesc:a7e6f1de939e4c722131d6737fde5ef2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a single string to the primitive list. Can be called multiple times between <a class="el" href="#a0ecdbf3fc8a0aa8b1b9ee470a60a9fb4" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="#a4f01da42f9d7edd0ec886114e8f2131b" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a7e6f1de939e4c722131d6737fde5ef2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28aa9fac3c5bbbfe790f2132ef9d6dfe" id="r_a28aa9fac3c5bbbfe790f2132ef9d6dfe"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a28aa9fac3c5bbbfe790f2132ef9d6dfe">WriteBinaryAsString</a> (const void *pData, plUInt32 uiBytes)</td></tr>
<tr class="memdesc:a28aa9fac3c5bbbfe790f2132ef9d6dfe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a single string to the primitive list, but the value is a HEX representation of the given binary data.  <br /></td></tr>
<tr class="separator:a28aa9fac3c5bbbfe790f2132ef9d6dfe"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-types" name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:a64d8fac392114a4322f028d90298ebdf" id="r_a64d8fac392114a4322f028d90298ebdf"><td class="memItemLeft" align="right" valign="top"><a id="a64d8fac392114a4322f028d90298ebdf" name="a64d8fac392114a4322f028d90298ebdf"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>State</b> { <br />
&#160;&#160;<b>Invalid</b> = -5
, <b>Empty</b> = -4
, <b>ObjectSingleLine</b> = -3
, <b>ObjectMultiLine</b> = -2
, <br />
&#160;&#160;<b>ObjectStart</b> = -1
, <b>PrimitivesBool</b> = 0
, <b>PrimitivesInt8</b>
, <b>PrimitivesInt16</b>
, <br />
&#160;&#160;<b>PrimitivesInt32</b>
, <b>PrimitivesInt64</b>
, <b>PrimitivesUInt8</b>
, <b>PrimitivesUInt16</b>
, <br />
&#160;&#160;<b>PrimitivesUInt32</b>
, <b>PrimitivesUInt64</b>
, <b>PrimitivesFloat</b>
, <b>PrimitivesDouble</b>
, <br />
&#160;&#160;<b>PrimitivesString</b>
<br />
 }</td></tr>
<tr class="separator:a64d8fac392114a4322f028d90298ebdf"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a3eff7d49fe5937d179b6af858507291b" id="r_a3eff7d49fe5937d179b6af858507291b"><td class="memItemLeft" align="right" valign="top"><a id="a3eff7d49fe5937d179b6af858507291b" name="a3eff7d49fe5937d179b6af858507291b"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputString</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> s)</td></tr>
<tr class="separator:a3eff7d49fe5937d179b6af858507291b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7db99963a6fe5c0e91591ff2da99176a" id="r_a7db99963a6fe5c0e91591ff2da99176a"><td class="memItemLeft" align="right" valign="top"><a id="a7db99963a6fe5c0e91591ff2da99176a" name="a7db99963a6fe5c0e91591ff2da99176a"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputString</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> s, plUInt32 uiElementCount)</td></tr>
<tr class="separator:a7db99963a6fe5c0e91591ff2da99176a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98f46257990f3ea288060dd0ebdd9a42" id="r_a98f46257990f3ea288060dd0ebdd9a42"><td class="memItemLeft" align="right" valign="top"><a id="a98f46257990f3ea288060dd0ebdd9a42" name="a98f46257990f3ea288060dd0ebdd9a42"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputEscapedString</b> (const <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> &amp;string)</td></tr>
<tr class="separator:a98f46257990f3ea288060dd0ebdd9a42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fbcb7013a04f2876e641c428718d8a8" id="r_a9fbcb7013a04f2876e641c428718d8a8"><td class="memItemLeft" align="right" valign="top"><a id="a9fbcb7013a04f2876e641c428718d8a8" name="a9fbcb7013a04f2876e641c428718d8a8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputIndentation</b> ()</td></tr>
<tr class="separator:a9fbcb7013a04f2876e641c428718d8a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad58b0fc2c7ee7a5e687d35b4f354526" id="r_aad58b0fc2c7ee7a5e687d35b4f354526"><td class="memItemLeft" align="right" valign="top"><a id="aad58b0fc2c7ee7a5e687d35b4f354526" name="aad58b0fc2c7ee7a5e687d35b4f354526"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputPrimitiveTypeNameCompliant</b> (plOpenDdlPrimitiveType type)</td></tr>
<tr class="separator:aad58b0fc2c7ee7a5e687d35b4f354526"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac964dd2f573d0c00847e9db14e1e5b76" id="r_ac964dd2f573d0c00847e9db14e1e5b76"><td class="memItemLeft" align="right" valign="top"><a id="ac964dd2f573d0c00847e9db14e1e5b76" name="ac964dd2f573d0c00847e9db14e1e5b76"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputPrimitiveTypeNameShort</b> (plOpenDdlPrimitiveType type)</td></tr>
<tr class="separator:ac964dd2f573d0c00847e9db14e1e5b76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa79014d191801594ee22a790a2d1b7b1" id="r_aa79014d191801594ee22a790a2d1b7b1"><td class="memItemLeft" align="right" valign="top"><a id="aa79014d191801594ee22a790a2d1b7b1" name="aa79014d191801594ee22a790a2d1b7b1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputPrimitiveTypeNameShortest</b> (plOpenDdlPrimitiveType type)</td></tr>
<tr class="separator:aa79014d191801594ee22a790a2d1b7b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac50e46278b9d504d12a27cd0b7f19e51" id="r_ac50e46278b9d504d12a27cd0b7f19e51"><td class="memItemLeft" align="right" valign="top"><a id="ac50e46278b9d504d12a27cd0b7f19e51" name="ac50e46278b9d504d12a27cd0b7f19e51"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WritePrimitiveType</b> (plOpenDdlWriter::State exp)</td></tr>
<tr class="separator:ac50e46278b9d504d12a27cd0b7f19e51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f5012db0ef902d3b817ec7b8dd626bf" id="r_a9f5012db0ef902d3b817ec7b8dd626bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9f5012db0ef902d3b817ec7b8dd626bf">OutputObjectName</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName, bool bGlobalName)</td></tr>
<tr class="separator:a9f5012db0ef902d3b817ec7b8dd626bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27960839919aea318b7e23e6286174ba" id="r_a27960839919aea318b7e23e6286174ba"><td class="memItemLeft" align="right" valign="top"><a id="a27960839919aea318b7e23e6286174ba" name="a27960839919aea318b7e23e6286174ba"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteBinaryAsHex</b> (const void *pData, plUInt32 uiBytes)</td></tr>
<tr class="separator:a27960839919aea318b7e23e6286174ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38b5428a2793704a742e375f7d295cb7" id="r_a38b5428a2793704a742e375f7d295cb7"><td class="memItemLeft" align="right" valign="top"><a id="a38b5428a2793704a742e375f7d295cb7" name="a38b5428a2793704a742e375f7d295cb7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputObjectBeginning</b> ()</td></tr>
<tr class="separator:a38b5428a2793704a742e375f7d295cb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a81444ff1ad0f90924ad7667934cc63f5" id="r_a81444ff1ad0f90924ad7667934cc63f5"><td class="memItemLeft" align="right" valign="top"><a id="a81444ff1ad0f90924ad7667934cc63f5" name="a81444ff1ad0f90924ad7667934cc63f5"></a>
plInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iIndentation</b> = 0</td></tr>
<tr class="separator:a81444ff1ad0f90924ad7667934cc63f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acabafd2acb355a7ee567528a5648019f" id="r_acabafd2acb355a7ee567528a5648019f"><td class="memItemLeft" align="right" valign="top"><a id="acabafd2acb355a7ee567528a5648019f" name="acabafd2acb355a7ee567528a5648019f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bCompactMode</b> = false</td></tr>
<tr class="separator:acabafd2acb355a7ee567528a5648019f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f8db742952a8e151e1ba2cd672bdece" id="r_a3f8db742952a8e151e1ba2cd672bdece"><td class="memItemLeft" align="right" valign="top"><a id="a3f8db742952a8e151e1ba2cd672bdece" name="a3f8db742952a8e151e1ba2cd672bdece"></a>
<a class="el" href="#a8ad38a0fdca8ac4fc78b4dcbd431d00f">TypeStringMode</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_TypeStringMode</b> = <a class="el" href="#a8ad38a0fdca8ac4fc78b4dcbd431d00fa5b3571429e97357bc5cd927384ed2d10">TypeStringMode::ShortenedUnsignedInt</a></td></tr>
<tr class="separator:a3f8db742952a8e151e1ba2cd672bdece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed38530c1ad433602a9eeb62a56ae062" id="r_aed38530c1ad433602a9eeb62a56ae062"><td class="memItemLeft" align="right" valign="top"><a id="aed38530c1ad433602a9eeb62a56ae062" name="aed38530c1ad433602a9eeb62a56ae062"></a>
<a class="el" href="#aaea8a6dd2930a0b70e616fdebfdc81ff">FloatPrecisionMode</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_FloatPrecisionMode</b> = <a class="el" href="#aaea8a6dd2930a0b70e616fdebfdc81ffa1649aed298f99d587e2eb30c1db5946b">FloatPrecisionMode::Exact</a></td></tr>
<tr class="separator:aed38530c1ad433602a9eeb62a56ae062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac24fec9b6fa95ff9b9198355aa2631ee" id="r_ac24fec9b6fa95ff9b9198355aa2631ee"><td class="memItemLeft" align="right" valign="top"><a id="ac24fec9b6fa95ff9b9198355aa2631ee" name="ac24fec9b6fa95ff9b9198355aa2631ee"></a>
<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pOutput</b> = nullptr</td></tr>
<tr class="separator:ac24fec9b6fa95ff9b9198355aa2631ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b0c911f3cdc2f76dca7c618f438f0b4" id="r_a2b0c911f3cdc2f76dca7c618f438f0b4"><td class="memItemLeft" align="right" valign="top"><a id="a2b0c911f3cdc2f76dca7c618f438f0b4" name="a2b0c911f3cdc2f76dca7c618f438f0b4"></a>
<a class="el" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sTemp</b></td></tr>
<tr class="separator:a2b0c911f3cdc2f76dca7c618f438f0b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab608f535fd8aae8cb07b0ea40808a938" id="r_ab608f535fd8aae8cb07b0ea40808a938"><td class="memItemLeft" align="right" valign="top"><a id="ab608f535fd8aae8cb07b0ea40808a938" name="ab608f535fd8aae8cb07b0ea40808a938"></a>
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; <a class="el" href="../../d0/dd6/structpl_open_ddl_writer_1_1_ddl_state.htm">DdlState</a>, 16 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_StateStack</b></td></tr>
<tr class="separator:ab608f535fd8aae8cb07b0ea40808a938"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The base class for OpenDDL writers. </p>
<p>Declares a common interface for writing OpenDDL files. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="aaea8a6dd2930a0b70e616fdebfdc81ff" name="aaea8a6dd2930a0b70e616fdebfdc81ff"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaea8a6dd2930a0b70e616fdebfdc81ff">&#9670;&#160;</a></span>FloatPrecisionMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#aaea8a6dd2930a0b70e616fdebfdc81ff">plOpenDdlWriter::FloatPrecisionMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="aaea8a6dd2930a0b70e616fdebfdc81ffa4b8123df4e2b3456270c11394adf7607" name="aaea8a6dd2930a0b70e616fdebfdc81ffa4b8123df4e2b3456270c11394adf7607"></a>Readable&#160;</td><td class="fielddoc"><p>Float values are printed as readable numbers. Precision might get lost though. </p>
</td></tr>
<tr><td class="fieldname"><a id="aaea8a6dd2930a0b70e616fdebfdc81ffa1649aed298f99d587e2eb30c1db5946b" name="aaea8a6dd2930a0b70e616fdebfdc81ffa1649aed298f99d587e2eb30c1db5946b"></a>Exact&#160;</td><td class="fielddoc"><p>Float values are printed as HEX, representing the exact binary data. </p>
</td></tr>
</table>

</div>
</div>
<a id="a8ad38a0fdca8ac4fc78b4dcbd431d00f" name="a8ad38a0fdca8ac4fc78b4dcbd431d00f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8ad38a0fdca8ac4fc78b4dcbd431d00f">&#9670;&#160;</a></span>TypeStringMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum class <a class="el" href="#a8ad38a0fdca8ac4fc78b4dcbd431d00f">plOpenDdlWriter::TypeStringMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a8ad38a0fdca8ac4fc78b4dcbd431d00fa952358fc53c0167a1ea7354f338ed5af" name="a8ad38a0fdca8ac4fc78b4dcbd431d00fa952358fc53c0167a1ea7354f338ed5af"></a>Compliant&#160;</td><td class="fielddoc"><p>All primitive types are written as the OpenDDL standard defines them (very verbose) </p>
</td></tr>
<tr><td class="fieldname"><a id="a8ad38a0fdca8ac4fc78b4dcbd431d00fa5b3571429e97357bc5cd927384ed2d10" name="a8ad38a0fdca8ac4fc78b4dcbd431d00fa5b3571429e97357bc5cd927384ed2d10"></a>ShortenedUnsignedInt&#160;</td><td class="fielddoc"><p>unsigned_intX is shortened to uintX </p>
</td></tr>
<tr><td class="fieldname"><a id="a8ad38a0fdca8ac4fc78b4dcbd431d00face42b65744e60ed9b32e7d4f750a66a5" name="a8ad38a0fdca8ac4fc78b4dcbd431d00face42b65744e60ed9b32e7d4f750a66a5"></a>Shortest&#160;</td><td class="fielddoc"><p>All primitive type names are shortened to one or two characters: i1, i2, i3, i4, u1, u2, u3, u4, b, s, f, d (int, uint, bool, string, float, double) </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9f5012db0ef902d3b817ec7b8dd626bf" name="a9f5012db0ef902d3b817ec7b8dd626bf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f5012db0ef902d3b817ec7b8dd626bf">&#9670;&#160;</a></span>OutputObjectName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plOpenDdlWriter::OutputObjectName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sName</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bGlobalName</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000017">Test</a></b></dt><dd>This code path is untested </dd></dl>

</div>
</div>
<a id="a28aa9fac3c5bbbfe790f2132ef9d6dfe" name="a28aa9fac3c5bbbfe790f2132ef9d6dfe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a28aa9fac3c5bbbfe790f2132ef9d6dfe">&#9670;&#160;</a></span>WriteBinaryAsString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plOpenDdlWriter::WriteBinaryAsString </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pData</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiBytes</em></span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes a single string to the primitive list, but the value is a HEX representation of the given binary data. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000018">Test</a></b></dt><dd><a class="el" href="#a28aa9fac3c5bbbfe790f2132ef9d6dfe" title="Writes a single string to the primitive list, but the value is a HEX representation of the given bina...">plOpenDdlWriter::WriteBinaryAsString</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/IO/<a class="el" href="../../d3/d29/_open_ddl_writer_8h_source.htm">OpenDdlWriter.h</a></li>
<li>Code/Engine/Foundation/IO/Implementation/<b>OpenDdlWriter.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/dda/classpl_open_ddl_writer.htm">plOpenDdlWriter</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
