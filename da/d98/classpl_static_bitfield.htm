<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plStaticBitfield&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('da/d98/classpl_static_bitfield.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../de/d0a/classpl_static_bitfield-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plStaticBitfield&lt; T &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:aa19a4975c2d377ceb5e8eec4a9ba9caf" id="r_aa19a4975c2d377ceb5e8eec4a9ba9caf"><td class="memItemLeft" align="right" valign="top"><a id="aa19a4975c2d377ceb5e8eec4a9ba9caf" name="aa19a4975c2d377ceb5e8eec4a9ba9caf"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>StorageType</b> = T</td></tr>
<tr class="separator:aa19a4975c2d377ceb5e8eec4a9ba9caf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab48d4ad9699a088ef17e5e1f569125f0" id="r_ab48d4ad9699a088ef17e5e1f569125f0"><td class="memItemLeft" align="right" valign="top"><a id="ab48d4ad9699a088ef17e5e1f569125f0" name="ab48d4ad9699a088ef17e5e1f569125f0"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ConstIterator</b> = <a class="el" href="../../d4/d37/structpl_bit_iterator.htm">plBitIterator</a>&lt;StorageType, true, plUInt32&gt;</td></tr>
<tr class="separator:ab48d4ad9699a088ef17e5e1f569125f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7d55f2f518feea74bd9e3e910b94d382" id="r_a7d55f2f518feea74bd9e3e910b94d382"><td class="memItemLeft" align="right" valign="top"><a id="a7d55f2f518feea74bd9e3e910b94d382" name="a7d55f2f518feea74bd9e3e910b94d382"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plStaticBitfield</b> ()</td></tr>
<tr class="memdesc:a7d55f2f518feea74bd9e3e910b94d382"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the bitfield to all zero. <br /></td></tr>
<tr class="separator:a7d55f2f518feea74bd9e3e910b94d382"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42654bb40a29fa37fab164c1a40abfe5" id="r_a42654bb40a29fa37fab164c1a40abfe5"><td class="memItemLeft" align="right" valign="top"><a id="a42654bb40a29fa37fab164c1a40abfe5" name="a42654bb40a29fa37fab164c1a40abfe5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsAnyBitSet</b> () const</td></tr>
<tr class="memdesc:a42654bb40a29fa37fab164c1a40abfe5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is not zero. <br /></td></tr>
<tr class="separator:a42654bb40a29fa37fab164c1a40abfe5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d9b3573af8f31cff201ae14f4e9213d" id="r_a7d9b3573af8f31cff201ae14f4e9213d"><td class="memItemLeft" align="right" valign="top"><a id="a7d9b3573af8f31cff201ae14f4e9213d" name="a7d9b3573af8f31cff201ae14f4e9213d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsNoBitSet</b> () const</td></tr>
<tr class="memdesc:a7d9b3573af8f31cff201ae14f4e9213d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is all zero. <br /></td></tr>
<tr class="separator:a7d9b3573af8f31cff201ae14f4e9213d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f524145f67bce03d6599d5482b6696c" id="r_a5f524145f67bce03d6599d5482b6696c"><td class="memItemLeft" align="right" valign="top"><a id="a5f524145f67bce03d6599d5482b6696c" name="a5f524145f67bce03d6599d5482b6696c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>AreAllBitsSet</b> () const</td></tr>
<tr class="memdesc:a5f524145f67bce03d6599d5482b6696c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is not empty and all bits are set to one. <br /></td></tr>
<tr class="separator:a5f524145f67bce03d6599d5482b6696c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada27b02559a14adc2a3f2ed865e4a5e7" id="r_ada27b02559a14adc2a3f2ed865e4a5e7"><td class="memItemLeft" align="right" valign="top"><a id="ada27b02559a14adc2a3f2ed865e4a5e7" name="ada27b02559a14adc2a3f2ed865e4a5e7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBit</b> (plUInt32 uiBit)</td></tr>
<tr class="memdesc:ada27b02559a14adc2a3f2ed865e4a5e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the given bit to 1. <br /></td></tr>
<tr class="separator:ada27b02559a14adc2a3f2ed865e4a5e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c1027437874a273f75deceebae3a57d" id="r_a3c1027437874a273f75deceebae3a57d"><td class="memItemLeft" align="right" valign="top"><a id="a3c1027437874a273f75deceebae3a57d" name="a3c1027437874a273f75deceebae3a57d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearBit</b> (plUInt32 uiBit)</td></tr>
<tr class="memdesc:a3c1027437874a273f75deceebae3a57d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the given bit to 0. <br /></td></tr>
<tr class="separator:a3c1027437874a273f75deceebae3a57d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad09e2778f00e6a59185cd25ef32df72b" id="r_ad09e2778f00e6a59185cd25ef32df72b"><td class="memItemLeft" align="right" valign="top"><a id="ad09e2778f00e6a59185cd25ef32df72b" name="ad09e2778f00e6a59185cd25ef32df72b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBitValue</b> (plUInt32 uiBit, bool bValue)</td></tr>
<tr class="memdesc:ad09e2778f00e6a59185cd25ef32df72b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the given bit to 1 or 0 depending on the given value. <br /></td></tr>
<tr class="separator:ad09e2778f00e6a59185cd25ef32df72b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33a26d2a4fad97b3ece3925e1db28c70" id="r_a33a26d2a4fad97b3ece3925e1db28c70"><td class="memItemLeft" align="right" valign="top"><a id="a33a26d2a4fad97b3ece3925e1db28c70" name="a33a26d2a4fad97b3ece3925e1db28c70"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsBitSet</b> (plUInt32 uiBit) const</td></tr>
<tr class="memdesc:a33a26d2a4fad97b3ece3925e1db28c70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given bit is set to 1. <br /></td></tr>
<tr class="separator:a33a26d2a4fad97b3ece3925e1db28c70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a991836b30800844c8b875a632588f25c" id="r_a991836b30800844c8b875a632588f25c"><td class="memItemLeft" align="right" valign="top"><a id="a991836b30800844c8b875a632588f25c" name="a991836b30800844c8b875a632588f25c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearAllBits</b> ()</td></tr>
<tr class="memdesc:a991836b30800844c8b875a632588f25c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all bits to 0. Same as Clear(). <br /></td></tr>
<tr class="separator:a991836b30800844c8b875a632588f25c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a645b5c7df5dee009e9df4ed102f261ec" id="r_a645b5c7df5dee009e9df4ed102f261ec"><td class="memItemLeft" align="right" valign="top"><a id="a645b5c7df5dee009e9df4ed102f261ec" name="a645b5c7df5dee009e9df4ed102f261ec"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAllBits</b> ()</td></tr>
<tr class="memdesc:a645b5c7df5dee009e9df4ed102f261ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets all bits to 1. <br /></td></tr>
<tr class="separator:a645b5c7df5dee009e9df4ed102f261ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad38fd7e4ae0f42f2c691f1ec9e67ef8a" id="r_ad38fd7e4ae0f42f2c691f1ec9e67ef8a"><td class="memItemLeft" align="right" valign="top"><a id="ad38fd7e4ae0f42f2c691f1ec9e67ef8a" name="ad38fd7e4ae0f42f2c691f1ec9e67ef8a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBitRange</b> (plUInt32 uiFirstBit, plUInt32 uiNumBits)</td></tr>
<tr class="memdesc:ad38fd7e4ae0f42f2c691f1ec9e67ef8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the range starting at uiFirstBit up to (and including) uiLastBit to 1. <br /></td></tr>
<tr class="separator:ad38fd7e4ae0f42f2c691f1ec9e67ef8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a427515b97370fe124a642e02ed5a356f" id="r_a427515b97370fe124a642e02ed5a356f"><td class="memItemLeft" align="right" valign="top"><a id="a427515b97370fe124a642e02ed5a356f" name="a427515b97370fe124a642e02ed5a356f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearBitRange</b> (plUInt32 uiFirstBit, plUInt32 uiNumBits)</td></tr>
<tr class="memdesc:a427515b97370fe124a642e02ed5a356f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the range starting at uiFirstBit up to (and including) uiLastBit to 0. <br /></td></tr>
<tr class="separator:a427515b97370fe124a642e02ed5a356f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dde95b0571ae097e6fae71e4b6d505d" id="r_a1dde95b0571ae097e6fae71e4b6d505d"><td class="memItemLeft" align="right" valign="top"><a id="a1dde95b0571ae097e6fae71e4b6d505d" name="a1dde95b0571ae097e6fae71e4b6d505d"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetLowestBitSet</b> () const</td></tr>
<tr class="memdesc:a1dde95b0571ae097e6fae71e4b6d505d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of the lowest bit that is set. Returns the max index+1 in case no bit is set, at all. <br /></td></tr>
<tr class="separator:a1dde95b0571ae097e6fae71e4b6d505d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af511f95ead0da7487a3da77b444ce0be" id="r_af511f95ead0da7487a3da77b444ce0be"><td class="memItemLeft" align="right" valign="top"><a id="af511f95ead0da7487a3da77b444ce0be" name="af511f95ead0da7487a3da77b444ce0be"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetHighestBitSet</b> () const</td></tr>
<tr class="memdesc:af511f95ead0da7487a3da77b444ce0be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of the highest bit that is set. Returns the max index+1 in case no bit is set, at all. <br /></td></tr>
<tr class="separator:af511f95ead0da7487a3da77b444ce0be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80096e924ed69826a72c1ad02ce21e0f" id="r_a80096e924ed69826a72c1ad02ce21e0f"><td class="memItemLeft" align="right" valign="top"><a id="a80096e924ed69826a72c1ad02ce21e0f" name="a80096e924ed69826a72c1ad02ce21e0f"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetNumBitsSet</b> () const</td></tr>
<tr class="memdesc:a80096e924ed69826a72c1ad02ce21e0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the count of how many bits are set in total. <br /></td></tr>
<tr class="separator:a80096e924ed69826a72c1ad02ce21e0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae77f5aabd916e3cca7917f7db241289" id="r_aae77f5aabd916e3cca7917f7db241289"><td class="memItemLeft" align="right" valign="top"><a id="aae77f5aabd916e3cca7917f7db241289" name="aae77f5aabd916e3cca7917f7db241289"></a>
T&#160;</td><td class="memItemRight" valign="bottom"><b>GetValue</b> () const</td></tr>
<tr class="memdesc:aae77f5aabd916e3cca7917f7db241289"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the raw uint that stores all bits. <br /></td></tr>
<tr class="separator:aae77f5aabd916e3cca7917f7db241289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fbba6219b2227c7c445c9d22f8a9b8c" id="r_a6fbba6219b2227c7c445c9d22f8a9b8c"><td class="memItemLeft" align="right" valign="top"><a id="a6fbba6219b2227c7c445c9d22f8a9b8c" name="a6fbba6219b2227c7c445c9d22f8a9b8c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetValue</b> (T value)</td></tr>
<tr class="memdesc:a6fbba6219b2227c7c445c9d22f8a9b8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the raw uint that stores all bits. <br /></td></tr>
<tr class="separator:a6fbba6219b2227c7c445c9d22f8a9b8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15bc077bf8d2ac7791131033a0ee2e34" id="r_a15bc077bf8d2ac7791131033a0ee2e34"><td class="memItemLeft" align="right" valign="top"><a id="a15bc077bf8d2ac7791131033a0ee2e34" name="a15bc077bf8d2ac7791131033a0ee2e34"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a15bc077bf8d2ac7791131033a0ee2e34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps two bitfields. <br /></td></tr>
<tr class="separator:a15bc077bf8d2ac7791131033a0ee2e34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b5155364d93cb8215284e918ff18f7a" id="r_a6b5155364d93cb8215284e918ff18f7a"><td class="memItemLeft" align="right" valign="top"><a id="a6b5155364d93cb8215284e918ff18f7a" name="a6b5155364d93cb8215284e918ff18f7a"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator|=</b> (const <a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a6b5155364d93cb8215284e918ff18f7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies <em>this</em> to also contain the bits from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a6b5155364d93cb8215284e918ff18f7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0a8d82aed795670f4b6719ede5b51b7" id="r_aa0a8d82aed795670f4b6719ede5b51b7"><td class="memItemLeft" align="right" valign="top"><a id="aa0a8d82aed795670f4b6719ede5b51b7" name="aa0a8d82aed795670f4b6719ede5b51b7"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator&amp;=</b> (const <a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:aa0a8d82aed795670f4b6719ede5b51b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies <em>this</em> to only contain the bits that were set in <em>this</em> and <em>rhs</em>. <br /></td></tr>
<tr class="separator:aa0a8d82aed795670f4b6719ede5b51b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0bc44bc07ccc819a52039a09c43d055" id="r_ae0bc44bc07ccc819a52039a09c43d055"><td class="memItemLeft" align="right" valign="top"><a id="ae0bc44bc07ccc819a52039a09c43d055" name="ae0bc44bc07ccc819a52039a09c43d055"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Serialize</b> (<a class="el" href="../../d6/d90/classpl_stream_writer.htm">plStreamWriter</a> &amp;inout_writer) const</td></tr>
<tr class="separator:ae0bc44bc07ccc819a52039a09c43d055"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a117c58313837a3c0ca46b15cfdcba02a" id="r_a117c58313837a3c0ca46b15cfdcba02a"><td class="memItemLeft" align="right" valign="top"><a id="a117c58313837a3c0ca46b15cfdcba02a" name="a117c58313837a3c0ca46b15cfdcba02a"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Deserialize</b> (<a class="el" href="../../df/d3d/classpl_stream_reader.htm">plStreamReader</a> &amp;inout_reader)</td></tr>
<tr class="separator:a117c58313837a3c0ca46b15cfdcba02a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6640d2bbf71a4cf3659cf8eac31afed9" id="r_a6640d2bbf71a4cf3659cf8eac31afed9"><td class="memItemLeft" align="right" valign="top"><a id="a6640d2bbf71a4cf3659cf8eac31afed9" name="a6640d2bbf71a4cf3659cf8eac31afed9"></a>
<a class="el" href="../../d4/d37/structpl_bit_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:a6640d2bbf71a4cf3659cf8eac31afed9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant iterator to the very first set bit. Note that due to the way iterating through bits is accelerated, changes to the bitfield while iterating through the bits has undefined behaviour. <br /></td></tr>
<tr class="separator:a6640d2bbf71a4cf3659cf8eac31afed9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addb89d956baeec9272420c10ddfd90e6" id="r_addb89d956baeec9272420c10ddfd90e6"><td class="memItemLeft" align="right" valign="top"><a id="addb89d956baeec9272420c10ddfd90e6" name="addb89d956baeec9272420c10ddfd90e6"></a>
<a class="el" href="../../d4/d37/structpl_bit_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetEndIterator</b> () const</td></tr>
<tr class="memdesc:addb89d956baeec9272420c10ddfd90e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an invalid iterator. Needed to support range based for loops. <br /></td></tr>
<tr class="separator:addb89d956baeec9272420c10ddfd90e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:adeed8ecc4aa707409768b26cf77d1e64" id="r_adeed8ecc4aa707409768b26cf77d1e64"><td class="memItemLeft" align="right" valign="top"><a id="adeed8ecc4aa707409768b26cf77d1e64" name="adeed8ecc4aa707409768b26cf77d1e64"></a>
static constexpr plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetStorageTypeBitCount</b> ()</td></tr>
<tr class="separator:adeed8ecc4aa707409768b26cf77d1e64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98a14807d91894ee1c0e684926362b64" id="r_a98a14807d91894ee1c0e684926362b64"><td class="memItemLeft" align="right" valign="top"><a id="a98a14807d91894ee1c0e684926362b64" name="a98a14807d91894ee1c0e684926362b64"></a>
static <a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>MakeFromMask</b> (StorageType bits)</td></tr>
<tr class="separator:a98a14807d91894ee1c0e684926362b64"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a7a0b3ddeefc4247bf986627a8d4e6320" id="r_a7a0b3ddeefc4247bf986627a8d4e6320"><td class="memTemplParams" colspan="2"><a id="a7a0b3ddeefc4247bf986627a8d4e6320" name="a7a0b3ddeefc4247bf986627a8d4e6320"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a7a0b3ddeefc4247bf986627a8d4e6320"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator|</b> (<a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:a7a0b3ddeefc4247bf986627a8d4e6320"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21479da9d0a1757a3cc005b24578589d" id="r_a21479da9d0a1757a3cc005b24578589d"><td class="memTemplParams" colspan="2"><a id="a21479da9d0a1757a3cc005b24578589d" name="a21479da9d0a1757a3cc005b24578589d"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a21479da9d0a1757a3cc005b24578589d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&amp;</b> (<a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:a21479da9d0a1757a3cc005b24578589d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6376e88fa0f21b1781111b062042344" id="r_ab6376e88fa0f21b1781111b062042344"><td class="memTemplParams" colspan="2"><a id="ab6376e88fa0f21b1781111b062042344" name="ab6376e88fa0f21b1781111b062042344"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ab6376e88fa0f21b1781111b062042344"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator^</b> (<a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:ab6376e88fa0f21b1781111b062042344"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c396ab9753bde1ccd30d4c30ee0327e" id="r_a9c396ab9753bde1ccd30d4c30ee0327e"><td class="memTemplParams" colspan="2"><a id="a9c396ab9753bde1ccd30d4c30ee0327e" name="a9c396ab9753bde1ccd30d4c30ee0327e"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a9c396ab9753bde1ccd30d4c30ee0327e"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator==</b> (<a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:a9c396ab9753bde1ccd30d4c30ee0327e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75023dca68d601b1098cef94e3aa8c01" id="r_a75023dca68d601b1098cef94e3aa8c01"><td class="memTemplParams" colspan="2"><a id="a75023dca68d601b1098cef94e3aa8c01" name="a75023dca68d601b1098cef94e3aa8c01"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a75023dca68d601b1098cef94e3aa8c01"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator!=</b> (<a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:a75023dca68d601b1098cef94e3aa8c01"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../df/d21/_bitfield_8h_source.htm">Bitfield.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../de/d58/_bitfield__inl_8h_source.htm">Bitfield_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d98/classpl_static_bitfield.htm">plStaticBitfield</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
