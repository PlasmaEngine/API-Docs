<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plPointerWithFlags&lt; PtrType, NumFlagBits &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('da/db4/classpl_pointer_with_flags.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d3/ddf/classpl_pointer_with_flags-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plPointerWithFlags&lt; PtrType, NumFlagBits &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A wrapper around a raw pointer that allows to use the lower N bits for flags.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/da7/_pointer_with_flags_8h_source.htm">PointerWithFlags.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a82ac1169b6c4cb0bd336db9c01d0866b" id="r_a82ac1169b6c4cb0bd336db9c01d0866b"><td class="memItemLeft" align="right" valign="top"><a id="a82ac1169b6c4cb0bd336db9c01d0866b" name="a82ac1169b6c4cb0bd336db9c01d0866b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plPointerWithFlags</b> ()=default</td></tr>
<tr class="memdesc:a82ac1169b6c4cb0bd336db9c01d0866b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the pointer and flags with zero. <br /></td></tr>
<tr class="separator:a82ac1169b6c4cb0bd336db9c01d0866b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4585bd84f2e3e1df91fcd5f5998e755f" id="r_a4585bd84f2e3e1df91fcd5f5998e755f"><td class="memItemLeft" align="right" valign="top"><a id="a4585bd84f2e3e1df91fcd5f5998e755f" name="a4585bd84f2e3e1df91fcd5f5998e755f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plPointerWithFlags</b> (PtrType *pPtr, plUInt8 uiFlags=0)</td></tr>
<tr class="memdesc:a4585bd84f2e3e1df91fcd5f5998e755f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the pointer and flags. <br /></td></tr>
<tr class="separator:a4585bd84f2e3e1df91fcd5f5998e755f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a184bb97b0be4631b2f0a83811b261e66" id="r_a184bb97b0be4631b2f0a83811b261e66"><td class="memItemLeft" align="right" valign="top"><a id="a184bb97b0be4631b2f0a83811b261e66" name="a184bb97b0be4631b2f0a83811b261e66"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetPtrAndFlags</b> (PtrType *pPtr, plUInt8 uiFlags)</td></tr>
<tr class="memdesc:a184bb97b0be4631b2f0a83811b261e66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer and flags. <br /></td></tr>
<tr class="separator:a184bb97b0be4631b2f0a83811b261e66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a5d5027f5f85fbe111fa190f90fa040" id="r_a2a5d5027f5f85fbe111fa190f90fa040"><td class="memItemLeft" align="right" valign="top"><a id="a2a5d5027f5f85fbe111fa190f90fa040" name="a2a5d5027f5f85fbe111fa190f90fa040"></a>
const PtrType *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPtr</b> () const</td></tr>
<tr class="memdesc:a2a5d5027f5f85fbe111fa190f90fa040"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a2a5d5027f5f85fbe111fa190f90fa040"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3864bde3f9a61ba7558cc49f00266add" id="r_a3864bde3f9a61ba7558cc49f00266add"><td class="memItemLeft" align="right" valign="top"><a id="a3864bde3f9a61ba7558cc49f00266add" name="a3864bde3f9a61ba7558cc49f00266add"></a>
PtrType *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPtr</b> ()</td></tr>
<tr class="memdesc:a3864bde3f9a61ba7558cc49f00266add"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a3864bde3f9a61ba7558cc49f00266add"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d00b2f779005c3134158d7e1e1f2c7e" id="r_a4d00b2f779005c3134158d7e1e1f2c7e"><td class="memItemLeft" align="right" valign="top"><a id="a4d00b2f779005c3134158d7e1e1f2c7e" name="a4d00b2f779005c3134158d7e1e1f2c7e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetPtr</b> (PtrType *pPtr)</td></tr>
<tr class="memdesc:a4d00b2f779005c3134158d7e1e1f2c7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer value only. Flags stay unchanged. <br /></td></tr>
<tr class="separator:a4d00b2f779005c3134158d7e1e1f2c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5894a2db2ff2b7c58e6425406ad646c3" id="r_a5894a2db2ff2b7c58e6425406ad646c3"><td class="memItemLeft" align="right" valign="top"><a id="a5894a2db2ff2b7c58e6425406ad646c3" name="a5894a2db2ff2b7c58e6425406ad646c3"></a>
plUInt8&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a5894a2db2ff2b7c58e6425406ad646c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags value only. <br /></td></tr>
<tr class="separator:a5894a2db2ff2b7c58e6425406ad646c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a0d46bc0550848ee3c297ad674b798b" id="r_a8a0d46bc0550848ee3c297ad674b798b"><td class="memItemLeft" align="right" valign="top"><a id="a8a0d46bc0550848ee3c297ad674b798b" name="a8a0d46bc0550848ee3c297ad674b798b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetFlags</b> (plUInt8 uiFlags)</td></tr>
<tr class="memdesc:a8a0d46bc0550848ee3c297ad674b798b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes only the flags value. The given value must fit into the reserved bits. <br /></td></tr>
<tr class="separator:a8a0d46bc0550848ee3c297ad674b798b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04f7449a42e8f30d647ad19962c50160" id="r_a04f7449a42e8f30d647ad19962c50160"><td class="memItemLeft" align="right" valign="top"><a id="a04f7449a42e8f30d647ad19962c50160" name="a04f7449a42e8f30d647ad19962c50160"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator PtrType *</b> ()</td></tr>
<tr class="memdesc:a04f7449a42e8f30d647ad19962c50160"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a04f7449a42e8f30d647ad19962c50160"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ff7dff0b5fec72eb1dfbd5a34f10f9c" id="r_a0ff7dff0b5fec72eb1dfbd5a34f10f9c"><td class="memItemLeft" align="right" valign="top"><a id="a0ff7dff0b5fec72eb1dfbd5a34f10f9c" name="a0ff7dff0b5fec72eb1dfbd5a34f10f9c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator const PtrType *</b> () const</td></tr>
<tr class="memdesc:a0ff7dff0b5fec72eb1dfbd5a34f10f9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the masked off pointer value. <br /></td></tr>
<tr class="separator:a0ff7dff0b5fec72eb1dfbd5a34f10f9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb69fe38dfe5dc59793829ba4375b47e" id="r_abb69fe38dfe5dc59793829ba4375b47e"><td class="memItemLeft" align="right" valign="top"><a id="abb69fe38dfe5dc59793829ba4375b47e" name="abb69fe38dfe5dc59793829ba4375b47e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (PtrType *pPtr)</td></tr>
<tr class="memdesc:abb69fe38dfe5dc59793829ba4375b47e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the pointer value only. Flags stay unchanged. <br /></td></tr>
<tr class="separator:abb69fe38dfe5dc59793829ba4375b47e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d6293d75c33ecbc2dfd884a10ecd5fc" id="r_a5d6293d75c33ecbc2dfd884a10ecd5fc"><td class="memTemplParams" colspan="2"><a id="a5d6293d75c33ecbc2dfd884a10ecd5fc" name="a5d6293d75c33ecbc2dfd884a10ecd5fc"></a>
template&lt;typename  = typename std::enable_if&lt;std::is_const&lt;PtrType&gt;::value == false&gt;&gt; </td></tr>
<tr class="memitem:a5d6293d75c33ecbc2dfd884a10ecd5fc"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator==</b> (const PtrType *pPtr) const</td></tr>
<tr class="memdesc:a5d6293d75c33ecbc2dfd884a10ecd5fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored) <br /></td></tr>
<tr class="separator:a5d6293d75c33ecbc2dfd884a10ecd5fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0e339a9a2b1c94909ec9425188fd96b" id="r_ac0e339a9a2b1c94909ec9425188fd96b"><td class="memItemLeft" align="right" valign="top"><a id="ac0e339a9a2b1c94909ec9425188fd96b" name="ac0e339a9a2b1c94909ec9425188fd96b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../da/db4/classpl_pointer_with_flags.htm">plPointerWithFlags</a>&lt; PtrType, NumFlagBits &gt; &amp;rhs) const</td></tr>
<tr class="separator:ac0e339a9a2b1c94909ec9425188fd96b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84480af4cb93e626dc247def24af50e1" id="r_a84480af4cb93e626dc247def24af50e1"><td class="memItemLeft" align="right" valign="top"><a id="a84480af4cb93e626dc247def24af50e1" name="a84480af4cb93e626dc247def24af50e1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../da/db4/classpl_pointer_with_flags.htm">plPointerWithFlags</a>&lt; PtrType, NumFlagBits &gt; &amp;)</td></tr>
<tr class="separator:a84480af4cb93e626dc247def24af50e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fd7380898f207f83e7d43563ba34c0e" id="r_a4fd7380898f207f83e7d43563ba34c0e"><td class="memItemLeft" align="right" valign="top"><a id="a4fd7380898f207f83e7d43563ba34c0e" name="a4fd7380898f207f83e7d43563ba34c0e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (PtrType *pPtr) const</td></tr>
<tr class="memdesc:a4fd7380898f207f83e7d43563ba34c0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored) <br /></td></tr>
<tr class="separator:a4fd7380898f207f83e7d43563ba34c0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01e4ceaffb2f3c05b7be9e037c39333a" id="r_a01e4ceaffb2f3c05b7be9e037c39333a"><td class="memItemLeft" align="right" valign="top"><a id="a01e4ceaffb2f3c05b7be9e037c39333a" name="a01e4ceaffb2f3c05b7be9e037c39333a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (PtrType *)</td></tr>
<tr class="separator:a01e4ceaffb2f3c05b7be9e037c39333a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa64d7ac3ed6453f67a3d9ca31221f4d3" id="r_aa64d7ac3ed6453f67a3d9ca31221f4d3"><td class="memItemLeft" align="right" valign="top"><a id="aa64d7ac3ed6453f67a3d9ca31221f4d3" name="aa64d7ac3ed6453f67a3d9ca31221f4d3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (std::nullptr_t) const</td></tr>
<tr class="memdesc:aa64d7ac3ed6453f67a3d9ca31221f4d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the pointer part for equality (flags are ignored) <br /></td></tr>
<tr class="separator:aa64d7ac3ed6453f67a3d9ca31221f4d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae960dca3494c266b011d55ea390fcdca" id="r_ae960dca3494c266b011d55ea390fcdca"><td class="memItemLeft" align="right" valign="top"><a id="ae960dca3494c266b011d55ea390fcdca" name="ae960dca3494c266b011d55ea390fcdca"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (std::nullptr_t)</td></tr>
<tr class="separator:ae960dca3494c266b011d55ea390fcdca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a209c63641949be08a9ceec51b04b67f3" id="r_a209c63641949be08a9ceec51b04b67f3"><td class="memItemLeft" align="right" valign="top"><a id="a209c63641949be08a9ceec51b04b67f3" name="a209c63641949be08a9ceec51b04b67f3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator bool</b> () const</td></tr>
<tr class="memdesc:a209c63641949be08a9ceec51b04b67f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the pointer part is not nullptr (flags are ignored) <br /></td></tr>
<tr class="separator:a209c63641949be08a9ceec51b04b67f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af14d13e273ccbc0f9a41ca97f635ac68" id="r_af14d13e273ccbc0f9a41ca97f635ac68"><td class="memItemLeft" align="right" valign="top"><a id="af14d13e273ccbc0f9a41ca97f635ac68" name="af14d13e273ccbc0f9a41ca97f635ac68"></a>
const PtrType *&#160;</td><td class="memItemRight" valign="bottom"><b>operator-&gt;</b> () const</td></tr>
<tr class="memdesc:af14d13e273ccbc0f9a41ca97f635ac68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:af14d13e273ccbc0f9a41ca97f635ac68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2987200a4ef37de3498b497677444ec" id="r_ad2987200a4ef37de3498b497677444ec"><td class="memItemLeft" align="right" valign="top"><a id="ad2987200a4ef37de3498b497677444ec" name="ad2987200a4ef37de3498b497677444ec"></a>
PtrType *&#160;</td><td class="memItemRight" valign="bottom"><b>operator-&gt;</b> ()</td></tr>
<tr class="memdesc:ad2987200a4ef37de3498b497677444ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:ad2987200a4ef37de3498b497677444ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04ed655ace4c265571d6376e59a4141e" id="r_a04ed655ace4c265571d6376e59a4141e"><td class="memItemLeft" align="right" valign="top"><a id="a04ed655ace4c265571d6376e59a4141e" name="a04ed655ace4c265571d6376e59a4141e"></a>
const PtrType &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> () const</td></tr>
<tr class="memdesc:a04ed655ace4c265571d6376e59a4141e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:a04ed655ace4c265571d6376e59a4141e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae37ca19dcee7cb7a1794a733bc5e73df" id="r_ae37ca19dcee7cb7a1794a733bc5e73df"><td class="memItemLeft" align="right" valign="top"><a id="ae37ca19dcee7cb7a1794a733bc5e73df" name="ae37ca19dcee7cb7a1794a733bc5e73df"></a>
PtrType &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> ()</td></tr>
<tr class="memdesc:ae37ca19dcee7cb7a1794a733bc5e73df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dereferences the pointer. <br /></td></tr>
<tr class="separator:ae37ca19dcee7cb7a1794a733bc5e73df"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename PtrType, plUInt8 NumFlagBits = 2&gt;<br />
class plPointerWithFlags&lt; PtrType, NumFlagBits &gt;</div><p>A wrapper around a raw pointer that allows to use the lower N bits for flags. </p>
<p>When accessing the pointer, the lower N bits are masked off. Typically one can safely store 3 bits in the lower bits of a pointer as most data is 8 byte aligned, especially when it was heap allocated. </p>
</div><hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Types/<a class="el" href="../../db/da7/_pointer_with_flags_8h_source.htm">PointerWithFlags.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/db4/classpl_pointer_with_flags.htm">plPointerWithFlags</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
