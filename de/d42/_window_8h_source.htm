<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Core/System/Window.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('de/d42/_window_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Window.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Core/CoreDLL.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Math/Rect.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Math/Size.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Math/Vec2.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/Strings/String.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/Types/UniquePtr.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">class </span><a class="code hl_class" href="../../da/dda/classpl_open_ddl_writer.htm">plOpenDdlWriter</a>;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">class </span><a class="code hl_class" href="../../d0/d83/classpl_open_ddl_reader.htm">plOpenDdlReader</a>;</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">class </span><a class="code hl_class" href="../../d2/d5d/classpl_open_ddl_reader_element.htm">plOpenDdlReaderElement</a>;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="comment">// Include the proper Input implementation to use</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="preprocessor">#if PL_ENABLED(PL_SUPPORTS_GLFW)</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="preprocessor">#  include &lt;Core/System/Implementation/glfw/InputDevice_glfw.h&gt;</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_WINDOWS_DESKTOP)</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="preprocessor">#  include &lt;Core/System/Implementation/Win/InputDevice_win32.h&gt;</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_WINDOWS_UWP)</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">#  include &lt;Core/System/Implementation/uwp/InputDevice_uwp.h&gt;</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_ANDROID)</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="preprocessor">#  include &lt;Core/System/Implementation/android/InputDevice_android.h&gt;</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="preprocessor">#  include &lt;Core/System/Implementation/null/InputDevice_null.h&gt;</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="comment">// Currently the following scenarios are possible</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="comment">// - Windows native implementation, using HWND</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="comment">// - GLFW on windows, using GLFWWindow* internally and HWND to pass windows around</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="comment">// - GLFW / XCB on linux. Runtime uses GLFWWindow*. Editor uses xcb-window. Tagged union is passed around as window handle.</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="preprocessor">#if PL_ENABLED(PL_SUPPORTS_GLFW)</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>{</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  <span class="keyword">typedef</span> <span class="keyword">struct </span>GLFWwindow GLFWwindow;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>}</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#  if PL_ENABLED(PL_PLATFORM_WINDOWS_DESKTOP)</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#    include &lt;Foundation/Basics/Platform/Win/MinWindows.h&gt;</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="keyword">using </span>plWindowHandle = plMinWindows::HWND;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="keyword">using </span>plWindowInternalHandle = GLFWwindow*;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="preprocessor">#    define INVALID_WINDOW_HANDLE_VALUE (plWindowHandle)(0)</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="preprocessor">#    define INVALID_INTERNAL_WINDOW_HANDLE_VALUE nullptr</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="preprocessor">#  elif PL_ENABLED(PL_PLATFORM_LINUX)</span></div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="keyword">extern</span> <span class="stringliteral">&quot;C&quot;</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>{</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <span class="keyword">typedef</span> <span class="keyword">struct </span>xcb_connection_t xcb_connection_t;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>}</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="keyword">struct </span>plXcbWindowHandle</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>{</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  xcb_connection_t* m_pConnection;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  plUInt32 m_Window;</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>};</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="keyword">struct </span>plWindowHandle</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>{</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="keyword">enum class</span> Type</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  {</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    Invalid = 0,</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    GLFW = 1, <span class="comment">// Used by the runtime</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    XCB = 2   <span class="comment">// Used by the editor</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  };</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  Type type;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keyword">union</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    GLFWwindow* glfwWindow;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    plXcbWindowHandle xcbWindow;</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  };</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <span class="keywordtype">bool</span> operator==(plWindowHandle&amp; rhs)</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  {</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    <span class="keywordflow">if</span> (type != rhs.type)</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <span class="keywordflow">if</span> (type == Type::GLFW)</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    {</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>      <span class="keywordflow">return</span> glfwWindow == rhs.glfwWindow;</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    }</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    {</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>      <span class="comment">// We don&#39;t compare the connection because we only want to know if we reference the same window.</span></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>      <span class="keywordflow">return</span> xcbWindow.m_Window == rhs.xcbWindow.m_Window;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  }</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>};</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="keyword">using </span>plWindowInternalHandle = plWindowHandle;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span><span class="preprocessor">#    define INVALID_WINDOW_HANDLE_VALUE \</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span><span class="preprocessor">      plWindowHandle {}</span></div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="preprocessor">#  else</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="keyword">using </span>plWindowHandle = GLFWwindow*;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="keyword">using </span>plWindowInternalHandle = GLFWwindow*;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="preprocessor">#    define INVALID_WINDOW_HANDLE_VALUE (GLFWwindow*)(0)</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="preprocessor">#  endif</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_WINDOWS_DESKTOP)</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="preprocessor">#  include &lt;Foundation/Basics/Platform/Win/MinWindows.h&gt;</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="keyword">using </span>plWindowHandle = plMinWindows::HWND;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span><span class="keyword">using </span>plWindowInternalHandle = plWindowHandle;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="preprocessor">#  define INVALID_WINDOW_HANDLE_VALUE (plWindowHandle)(0)</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_WINDOWS_UWP)</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="keyword">using </span>plWindowHandle = IUnknown*;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="keyword">using </span>plWindowInternalHandle = plWindowHandle;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="preprocessor">#  define INVALID_WINDOW_HANDLE_VALUE nullptr</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_ANDROID)</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="keyword">struct </span>ANativeWindow;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="keyword">using </span>plWindowHandle = ANativeWindow*;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span><span class="keyword">using </span>plWindowInternalHandle = plWindowHandle;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="preprocessor">#  define INVALID_WINDOW_HANDLE_VALUE nullptr</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span><span class="keyword">using </span>plWindowHandle = <span class="keywordtype">void</span>*;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="keyword">using </span>plWindowInternalHandle = plWindowHandle;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="preprocessor">#  define INVALID_WINDOW_HANDLE_VALUE nullptr</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="preprocessor">#ifndef INVALID_INTERNAL_WINDOW_HANDLE_VALUE</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span><span class="preprocessor">#  define INVALID_INTERNAL_WINDOW_HANDLE_VALUE INVALID_WINDOW_HANDLE_VALUE</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="};">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="../../d8/d8b/classpl_window_base.htm">  133</a></span><span class="keyword">class </span>PL_CORE_DLL <a class="code hl_class" href="../../d8/d8b/classpl_window_base.htm">plWindowBase</a></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>{</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../d8/d8b/classpl_window_base.htm">~plWindowBase</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a> GetClientAreaSize() <span class="keyword">const</span> = 0;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <span class="keyword">virtual</span> plWindowHandle GetNativeWindowHandle() <span class="keyword">const</span> = 0;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="../../d8/d8b/classpl_window_base.htm#a0761457bcd3146b33636464bd1ae7c7a">  145</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d8/d8b/classpl_window_base.htm#a0761457bcd3146b33636464bd1ae7c7a">IsFullscreenWindow</a>(<span class="keywordtype">bool</span> bOnlyProperFullscreenMode = <span class="keyword">false</span>) <span class="keyword">const</span> = 0;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="../../d8/d8b/classpl_window_base.htm#a1e61ac541b0ed4640b416c39a5f4b7e9">  149</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d8/d8b/classpl_window_base.htm#a1e61ac541b0ed4640b416c39a5f4b7e9">IsVisible</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> ProcessWindowMessages() = 0;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> AddReference() = 0;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> RemoveReference() = 0;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>};</div>
</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="foldopen" id="foldopen00158" data-start="{" data-end="};">
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="../../d6/d2f/structpl_window_mode.htm">  158</a></span><span class="keyword">struct </span>PL_CORE_DLL <a class="code hl_struct" href="../../d6/d2f/structpl_window_mode.htm">plWindowMode</a></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>{</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keyword">using </span>StorageType = plUInt8;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="foldopen" id="foldopen00162" data-start="{" data-end="};">
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno"><a class="line" href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776e">  162</a></span>  <span class="keyword">enum</span> <a class="code hl_enumeration" href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776e">Enum</a></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  {</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776ead8c0c6482a3d27c140ea03dc633d45cc">  164</a></span>    <a class="code hl_enumvalue" href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776ead8c0c6482a3d27c140ea03dc633d45cc">WindowFixedResolution</a>,                </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno"><a class="line" href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776ea77b0c14de7f795843d8a5ce3c3f443e1">  165</a></span>    <a class="code hl_enumvalue" href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776ea77b0c14de7f795843d8a5ce3c3f443e1">WindowResizable</a>,                      </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    FullscreenBorderlessNativeResolution, </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>    FullscreenFixedResolution,            </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    Default = WindowFixedResolution</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  };</div>
</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno"><a class="line" href="../../d6/d2f/structpl_window_mode.htm#aa768f9484212e790101f6b8bf1d008d8">  175</a></span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d2f/structpl_window_mode.htm#aa768f9484212e790101f6b8bf1d008d8">IsFullscreen</a>(<a class="code hl_enumeration" href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776e">Enum</a> e) { <span class="keywordflow">return</span> e == FullscreenBorderlessNativeResolution || e == FullscreenFixedResolution; }</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>};</div>
</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="foldopen" id="foldopen00179" data-start="{" data-end="};">
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm">  179</a></span><span class="keyword">struct </span>PL_CORE_DLL <a class="code hl_struct" href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a></div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>{</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> AdjustWindowSizeAndPosition();</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  <span class="keywordtype">void</span> SaveToDDL(<a class="code hl_class" href="../../da/dda/classpl_open_ddl_writer.htm">plOpenDdlWriter</a>&amp; ref_writer);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> SaveToDDL(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFile);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  <span class="keywordtype">void</span> LoadFromDDL(<span class="keyword">const</span> <a class="code hl_class" href="../../d2/d5d/classpl_open_ddl_reader_element.htm">plOpenDdlReaderElement</a>* pParentElement);</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> LoadFromDDL(<a class="code hl_class" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sFile);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a5d58daa973d82eba5795f25bf2bb711f">  204</a></span>  <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_Title = <span class="stringliteral">&quot;plEngine&quot;</span>;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a9bed4540a255048726391e0e14781a8a">  207</a></span>  <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;plWindowMode&gt;</a> <a class="code hl_variable" href="../../d9/d6d/structpl_window_creation_desc.htm#a9bed4540a255048726391e0e14781a8a">m_WindowMode</a>;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a031524a2ea977a8ec431466b95334da7">  211</a></span>  plInt8 m_iMonitor = -1;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a1a296070ac377425a5777ac31c26535c">  214</a></span>  <a class="code hl_class" href="../../d1/dd1/classpl_vec2_template.htm">plVec2I32</a> m_Position = <a class="code hl_class" href="../../d1/dd1/classpl_vec2_template.htm">plVec2I32</a>(0x80000000, 0x80000000); <span class="comment">// Magic number on windows that positions the window at a &#39;good default position&#39;</span></div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#ab125551c2d6655a414b94a3a1f672ff3">  217</a></span>  <a class="code hl_class" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a> m_Resolution = <a class="code hl_class" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a>(1280, 720);</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a658d0005bfc034d5f0c63f1fafb74e18">  221</a></span>  plUInt8 m_uiWindowNumber = 0;</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a72c08f204272300d03060e5435eb7aaf">  225</a></span>  <span class="keywordtype">bool</span> m_bClipMouseCursor = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a7cd4f96b8e3cbabaa11d15191be55556">  229</a></span>  <span class="keywordtype">bool</span> m_bShowMouseCursor = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a81d4a7042a3d773f51f05928bcc7fec8">  232</a></span>  <span class="keywordtype">bool</span> m_bSetForegroundOnInit = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno"><a class="line" href="../../d9/d6d/structpl_window_creation_desc.htm#a1f8d3e1abc8f6cf4747c1af747b36958">  235</a></span>  <span class="keywordtype">bool</span> m_bCenterWindowOnDisplay = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>};</div>
</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="foldopen" id="foldopen00243" data-start="{" data-end="};">
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm">  243</a></span><span class="keyword">class </span>PL_CORE_DLL <a class="code hl_class" href="../../df/d28/classpl_window.htm">plWindow</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d8/d8b/classpl_window_base.htm">plWindowBase</a></div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>{</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>  <a class="code hl_class" href="../../df/d28/classpl_window.htm">plWindow</a>();</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../df/d28/classpl_window.htm">~plWindow</a>();</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#a5101f7e4fe071cc9d9b791d42ebb14ef">  256</a></span>  <span class="keyword">inline</span> <span class="keyword">const</span> <a class="code hl_struct" href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a>&amp; <a class="code hl_function" href="../../df/d28/classpl_window.htm#a5101f7e4fe071cc9d9b791d42ebb14ef">GetCreationDescription</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_CreationDescription; }</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#a6115abe9c9901875749c5120a5dbf398">  259</a></span>  <span class="keyword">virtual</span> <a class="code hl_class" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a> <a class="code hl_function" href="../../df/d28/classpl_window.htm#a6115abe9c9901875749c5120a5dbf398">GetClientAreaSize</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_CreationDescription.m_Resolution; }</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  <span class="keyword">virtual</span> plWindowHandle GetNativeWindowHandle() <span class="keyword">const override</span>;</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="foldopen" id="foldopen00267" data-start="{" data-end="}">
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#a1b81723a3473ead14edb024e94cbb6ea">  267</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../df/d28/classpl_window.htm#a1b81723a3473ead14edb024e94cbb6ea">IsFullscreenWindow</a>(<span class="keywordtype">bool</span> bOnlyProperFullscreenMode = <span class="keyword">false</span>)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>    <span class="keywordflow">if</span> (bOnlyProperFullscreenMode)</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>      <span class="keywordflow">return</span> m_CreationDescription.m_WindowMode == <a class="code hl_enumvalue" href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776ead30e37a4c68f283ad1bbdf725d6b1829">plWindowMode::FullscreenFixedResolution</a>;</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span> </div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../d6/d2f/structpl_window_mode.htm#aa768f9484212e790101f6b8bf1d008d8">plWindowMode::IsFullscreen</a>(m_CreationDescription.m_WindowMode);</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  }</div>
</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#adf77c8a410a8f0656ac48570f7818e54">  275</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../df/d28/classpl_window.htm#adf77c8a410a8f0656ac48570f7818e54">IsVisible</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_bVisible; }</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> AddReference()<span class="keyword"> override </span>{ m_iReferenceCount.Increment(); }</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> RemoveReference()<span class="keyword"> override </span>{ m_iReferenceCount.Decrement(); }</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> ProcessWindowMessages() <span class="keyword">override</span>;</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span> </div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> Initialize();</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span> </div>
<div class="foldopen" id="foldopen00301" data-start="{" data-end="}">
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#a73485ab7b4225ec19f57618784f21278">  301</a></span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> <a class="code hl_function" href="../../df/d28/classpl_window.htm#a73485ab7b4225ec19f57618784f21278">Initialize</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a>&amp; creationDescription)</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>  {</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>    m_CreationDescription = creationDescription;</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>    <span class="keywordflow">return</span> Initialize();</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  }</div>
</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span> </div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#af9d899474c90e9c899b067f32bafda5c">  308</a></span>  <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../df/d28/classpl_window.htm#af9d899474c90e9c899b067f32bafda5c">IsInitialized</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_bInitialized; }</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span> </div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> Destroy();</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>  <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> Resize(<span class="keyword">const</span> <a class="code hl_class" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a>&amp; newWindowSize);</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnResize(<span class="keyword">const</span> <a class="code hl_class" href="../../dd/df9/classpl_size_template.htm">plSizeU32</a>&amp; newWindowSize);</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#a584e162009a872cca10e5424a8445282">  325</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d28/classpl_window.htm#a584e162009a872cca10e5424a8445282">OnWindowMove</a>(<span class="keyword">const</span> plInt32 iNewPosX, <span class="keyword">const</span> plInt32 iNewPosY) {}</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span> </div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#a9ff2fbabc88afb503145631625b36a00">  328</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d28/classpl_window.htm#a9ff2fbabc88afb503145631625b36a00">OnFocus</a>(<span class="keywordtype">bool</span> bHasFocus) {}</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#a8b5a8d493cb488b70800096ac1b54ed8">  331</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d28/classpl_window.htm#a8b5a8d493cb488b70800096ac1b54ed8">OnVisibleChange</a>(<span class="keywordtype">bool</span> bVisible) { m_bVisible = bVisible; }</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span> </div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#a3f35499d576253dedfc6353583917e0e">  334</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d28/classpl_window.htm#a3f35499d576253dedfc6353583917e0e">OnClickClose</a>() {}</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span> </div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span> </div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span><span class="preprocessor">#if PL_ENABLED(PL_PLATFORM_WINDOWS)</span></div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnWindowMessage(plMinWindows::HWND hWnd, plMinWindows::UINT msg, plMinWindows::WPARAM wparam, plMinWindows::LPARAM lparam);</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span> </div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_OSX)</span></div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span> </div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_LINUX)</span></div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span> </div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span><span class="preprocessor">#elif PL_ENABLED(PL_PLATFORM_ANDROID)</span></div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span> </div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span><span class="preprocessor">#  error &quot;Missing code for plWindow on this platform!&quot;</span></div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span> </div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#ae032cae78b74a594b3ee35ee0b23016c">  359</a></span>  <a class="code hl_class" href="../../d7/dff/classpl_standard_input_device.htm">plStandardInputDevice</a>* <a class="code hl_function" href="../../df/d28/classpl_window.htm#ae032cae78b74a594b3ee35ee0b23016c">GetInputDevice</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pInputDevice.Borrow(); }</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span> </div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>  <span class="keyword">static</span> plUInt8 GetNextUnusedWindowNumber();</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span> </div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno"><a class="line" href="../../df/d28/classpl_window.htm#ac58fa7c4296ae8a7696fe19840ef784c">  369</a></span>  <a class="code hl_struct" href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a> <a class="code hl_variable" href="../../df/d28/classpl_window.htm#ac58fa7c4296ae8a7696fe19840ef784c">m_CreationDescription</a>;</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> </div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>  <span class="keywordtype">bool</span> m_bInitialized = <span class="keyword">false</span>;</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>  <span class="keywordtype">bool</span> m_bVisible = <span class="keyword">true</span>;</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span> </div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>  <a class="code hl_class" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr&lt;plStandardInputDevice&gt;</a> m_pInputDevice;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span> </div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>  <span class="keyword">mutable</span> plWindowInternalHandle m_hWindowHandle = plWindowInternalHandle();</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span> </div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span><span class="preprocessor">#if PL_ENABLED(PL_SUPPORTS_GLFW)</span></div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> IconifyCallback(GLFWwindow* window, <span class="keywordtype">int</span> iconified);</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> SizeCallback(GLFWwindow* window, <span class="keywordtype">int</span> width, <span class="keywordtype">int</span> height);</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> PositionCallback(GLFWwindow* window, <span class="keywordtype">int</span> xpos, <span class="keywordtype">int</span> ypos);</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> CloseCallback(GLFWwindow* window);</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> FocusCallback(GLFWwindow* window, <span class="keywordtype">int</span> focused);</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> KeyCallback(GLFWwindow* window, <span class="keywordtype">int</span> key, <span class="keywordtype">int</span> scancode, <span class="keywordtype">int</span> action, <span class="keywordtype">int</span> mods);</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> CharacterCallback(GLFWwindow* window, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> codepoint);</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> CursorPositionCallback(GLFWwindow* window, <span class="keywordtype">double</span> xpos, <span class="keywordtype">double</span> ypos);</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> MouseButtonCallback(GLFWwindow* window, <span class="keywordtype">int</span> button, <span class="keywordtype">int</span> action, <span class="keywordtype">int</span> mods);</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> ScrollCallback(GLFWwindow* window, <span class="keywordtype">double</span> xoffset, <span class="keywordtype">double</span> yoffset);</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span> </div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>  <span class="keyword">static</span> plUInt8 s_uiNextUnusedWindowNumber;</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>  <a class="code hl_class" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger32</a> m_iReferenceCount = 0;</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>};</div>
</div>
<div class="ttc" id="aclasspl_atomic_integer_htm"><div class="ttname"><a href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger&lt; plInt32 &gt;</a></div></div>
<div class="ttc" id="aclasspl_open_ddl_reader_element_htm"><div class="ttname"><a href="../../d2/d5d/classpl_open_ddl_reader_element.htm">plOpenDdlReaderElement</a></div><div class="ttdoc">Represents a single 'object' in a DDL document, e.g. either a custom type or a primitives list.</div><div class="ttdef"><b>Definition</b> OpenDdlReader.h:11</div></div>
<div class="ttc" id="aclasspl_open_ddl_reader_htm"><div class="ttname"><a href="../../d0/d83/classpl_open_ddl_reader.htm">plOpenDdlReader</a></div><div class="ttdoc">An OpenDDL reader parses an entire DDL document and creates an in-memory representation of the docume...</div><div class="ttdef"><b>Definition</b> OpenDdlReader.h:118</div></div>
<div class="ttc" id="aclasspl_open_ddl_writer_htm"><div class="ttname"><a href="../../da/dda/classpl_open_ddl_writer.htm">plOpenDdlWriter</a></div><div class="ttdoc">The base class for OpenDDL writers.</div><div class="ttdef"><b>Definition</b> OpenDdlWriter.h:13</div></div>
<div class="ttc" id="aclasspl_size_template_htm"><div class="ttname"><a href="../../dd/df9/classpl_size_template.htm">plSizeTemplate&lt; plUInt32 &gt;</a></div></div>
<div class="ttc" id="aclasspl_standard_input_device_htm"><div class="ttname"><a href="../../d7/dff/classpl_standard_input_device.htm">plStandardInputDevice</a></div><div class="ttdoc">Android standard input device.</div><div class="ttdef"><b>Definition</b> InputDevice_android.h:10</div></div>
<div class="ttc" id="aclasspl_string_view_htm"><div class="ttname"><a href="../../d6/d79/classpl_string_view.htm">plStringView</a></div><div class="ttdoc">plStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclasspl_unique_ptr_htm"><div class="ttname"><a href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a></div><div class="ttdoc">A Unique ptr manages an object and destroys that object when it goes out of scope....</div><div class="ttdef"><b>Definition</b> UniquePtr.h:10</div></div>
<div class="ttc" id="aclasspl_vec2_template_htm"><div class="ttname"><a href="../../d1/dd1/classpl_vec2_template.htm">plVec2Template&lt; plInt32 &gt;</a></div></div>
<div class="ttc" id="aclasspl_window_base_htm"><div class="ttname"><a href="../../d8/d8b/classpl_window_base.htm">plWindowBase</a></div><div class="ttdoc">Base class of all window classes that have a client area and a native window handle.</div><div class="ttdef"><b>Definition</b> Window.h:134</div></div>
<div class="ttc" id="aclasspl_window_base_htm_a0761457bcd3146b33636464bd1ae7c7a"><div class="ttname"><a href="../../d8/d8b/classpl_window_base.htm#a0761457bcd3146b33636464bd1ae7c7a">plWindowBase::IsFullscreenWindow</a></div><div class="ttdeci">virtual bool IsFullscreenWindow(bool bOnlyProperFullscreenMode=false) const =0</div><div class="ttdoc">Whether the window is a fullscreen window or should be one - some platforms may enforce this via the ...</div></div>
<div class="ttc" id="aclasspl_window_base_htm_a1e61ac541b0ed4640b416c39a5f4b7e9"><div class="ttname"><a href="../../d8/d8b/classpl_window_base.htm#a1e61ac541b0ed4640b416c39a5f4b7e9">plWindowBase::IsVisible</a></div><div class="ttdeci">virtual bool IsVisible() const =0</div><div class="ttdoc">Whether the window can potentially be seen by the user. Windows that are minimized or hidden are not ...</div></div>
<div class="ttc" id="aclasspl_window_htm"><div class="ttname"><a href="../../df/d28/classpl_window.htm">plWindow</a></div><div class="ttdoc">A simple abstraction for platform specific window creation.</div><div class="ttdef"><b>Definition</b> Window.h:244</div></div>
<div class="ttc" id="aclasspl_window_htm_a1b81723a3473ead14edb024e94cbb6ea"><div class="ttname"><a href="../../df/d28/classpl_window.htm#a1b81723a3473ead14edb024e94cbb6ea">plWindow::IsFullscreenWindow</a></div><div class="ttdeci">virtual bool IsFullscreenWindow(bool bOnlyProperFullscreenMode=false) const override</div><div class="ttdoc">Returns whether the window covers an entire monitor.</div><div class="ttdef"><b>Definition</b> Window.h:267</div></div>
<div class="ttc" id="aclasspl_window_htm_a3f35499d576253dedfc6353583917e0e"><div class="ttname"><a href="../../df/d28/classpl_window.htm#a3f35499d576253dedfc6353583917e0e">plWindow::OnClickClose</a></div><div class="ttdeci">virtual void OnClickClose()</div><div class="ttdoc">Called when the close button of the window is clicked. Does nothing by default.</div><div class="ttdef"><b>Definition</b> Window.h:334</div></div>
<div class="ttc" id="aclasspl_window_htm_a5101f7e4fe071cc9d9b791d42ebb14ef"><div class="ttname"><a href="../../df/d28/classpl_window.htm#a5101f7e4fe071cc9d9b791d42ebb14ef">plWindow::GetCreationDescription</a></div><div class="ttdeci">const plWindowCreationDesc &amp; GetCreationDescription() const</div><div class="ttdoc">Returns the currently active description struct.</div><div class="ttdef"><b>Definition</b> Window.h:256</div></div>
<div class="ttc" id="aclasspl_window_htm_a584e162009a872cca10e5424a8445282"><div class="ttname"><a href="../../df/d28/classpl_window.htm#a584e162009a872cca10e5424a8445282">plWindow::OnWindowMove</a></div><div class="ttdeci">virtual void OnWindowMove(const plInt32 iNewPosX, const plInt32 iNewPosY)</div><div class="ttdoc">Called when the window position is changed. Not possible on all OSes.</div><div class="ttdef"><b>Definition</b> Window.h:325</div></div>
<div class="ttc" id="aclasspl_window_htm_a6115abe9c9901875749c5120a5dbf398"><div class="ttname"><a href="../../df/d28/classpl_window.htm#a6115abe9c9901875749c5120a5dbf398">plWindow::GetClientAreaSize</a></div><div class="ttdeci">virtual plSizeU32 GetClientAreaSize() const override</div><div class="ttdoc">Returns the size of the client area / ie. the window resolution.</div><div class="ttdef"><b>Definition</b> Window.h:259</div></div>
<div class="ttc" id="aclasspl_window_htm_a73485ab7b4225ec19f57618784f21278"><div class="ttname"><a href="../../df/d28/classpl_window.htm#a73485ab7b4225ec19f57618784f21278">plWindow::Initialize</a></div><div class="ttdeci">plResult Initialize(const plWindowCreationDesc &amp;creationDescription)</div><div class="ttdoc">Creates a new platform specific window with the given settings.</div><div class="ttdef"><b>Definition</b> Window.h:301</div></div>
<div class="ttc" id="aclasspl_window_htm_a8b5a8d493cb488b70800096ac1b54ed8"><div class="ttname"><a href="../../df/d28/classpl_window.htm#a8b5a8d493cb488b70800096ac1b54ed8">plWindow::OnVisibleChange</a></div><div class="ttdeci">virtual void OnVisibleChange(bool bVisible)</div><div class="ttdoc">Called when the window gets focus or loses focus.</div><div class="ttdef"><b>Definition</b> Window.h:331</div></div>
<div class="ttc" id="aclasspl_window_htm_a9ff2fbabc88afb503145631625b36a00"><div class="ttname"><a href="../../df/d28/classpl_window.htm#a9ff2fbabc88afb503145631625b36a00">plWindow::OnFocus</a></div><div class="ttdeci">virtual void OnFocus(bool bHasFocus)</div><div class="ttdoc">Called when the window gets focus or loses focus.</div><div class="ttdef"><b>Definition</b> Window.h:328</div></div>
<div class="ttc" id="aclasspl_window_htm_ac58fa7c4296ae8a7696fe19840ef784c"><div class="ttname"><a href="../../df/d28/classpl_window.htm#ac58fa7c4296ae8a7696fe19840ef784c">plWindow::m_CreationDescription</a></div><div class="ttdeci">plWindowCreationDesc m_CreationDescription</div><div class="ttdef"><b>Definition</b> Window.h:369</div></div>
<div class="ttc" id="aclasspl_window_htm_adf77c8a410a8f0656ac48570f7818e54"><div class="ttname"><a href="../../df/d28/classpl_window.htm#adf77c8a410a8f0656ac48570f7818e54">plWindow::IsVisible</a></div><div class="ttdeci">virtual bool IsVisible() const override</div><div class="ttdoc">Whether the window can potentially be seen by the user. Windows that are minimized or hidden are not ...</div><div class="ttdef"><b>Definition</b> Window.h:275</div></div>
<div class="ttc" id="aclasspl_window_htm_ae032cae78b74a594b3ee35ee0b23016c"><div class="ttname"><a href="../../df/d28/classpl_window.htm#ae032cae78b74a594b3ee35ee0b23016c">plWindow::GetInputDevice</a></div><div class="ttdeci">plStandardInputDevice * GetInputDevice() const</div><div class="ttdoc">Returns the input device that is attached to this window and typically provides mouse / keyboard inpu...</div><div class="ttdef"><b>Definition</b> Window.h:359</div></div>
<div class="ttc" id="aclasspl_window_htm_af9d899474c90e9c899b067f32bafda5c"><div class="ttname"><a href="../../df/d28/classpl_window.htm#af9d899474c90e9c899b067f32bafda5c">plWindow::IsInitialized</a></div><div class="ttdeci">bool IsInitialized() const</div><div class="ttdoc">Gets if the window is up and running.</div><div class="ttdef"><b>Definition</b> Window.h:308</div></div>
<div class="ttc" id="astructpl_enum_htm"><div class="ttname"><a href="../../dd/d09/structpl_enum.htm">plEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition</b> Enum.h:37</div></div>
<div class="ttc" id="astructpl_hybrid_string_htm"><div class="ttname"><a href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt; 32, plDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructpl_window_creation_desc_htm"><div class="ttname"><a href="../../d9/d6d/structpl_window_creation_desc.htm">plWindowCreationDesc</a></div><div class="ttdoc">Parameters for creating a window, such as position and resolution.</div><div class="ttdef"><b>Definition</b> Window.h:180</div></div>
<div class="ttc" id="astructpl_window_creation_desc_htm_a9bed4540a255048726391e0e14781a8a"><div class="ttname"><a href="../../d9/d6d/structpl_window_creation_desc.htm#a9bed4540a255048726391e0e14781a8a">plWindowCreationDesc::m_WindowMode</a></div><div class="ttdeci">plEnum&lt; plWindowMode &gt; m_WindowMode</div><div class="ttdoc">Defines how the window size is determined.</div><div class="ttdef"><b>Definition</b> Window.h:207</div></div>
<div class="ttc" id="astructpl_window_mode_htm"><div class="ttname"><a href="../../d6/d2f/structpl_window_mode.htm">plWindowMode</a></div><div class="ttdoc">Determines how the position and resolution for a window are picked.</div><div class="ttdef"><b>Definition</b> Window.h:159</div></div>
<div class="ttc" id="astructpl_window_mode_htm_aa768f9484212e790101f6b8bf1d008d8"><div class="ttname"><a href="../../d6/d2f/structpl_window_mode.htm#aa768f9484212e790101f6b8bf1d008d8">plWindowMode::IsFullscreen</a></div><div class="ttdeci">static constexpr bool IsFullscreen(Enum e)</div><div class="ttdoc">Returns whether the window covers an entire monitor. This includes borderless windows and proper full...</div><div class="ttdef"><b>Definition</b> Window.h:175</div></div>
<div class="ttc" id="astructpl_window_mode_htm_ae763cd1d8eed150f27a8074ef58c776e"><div class="ttname"><a href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776e">plWindowMode::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> Window.h:163</div></div>
<div class="ttc" id="astructpl_window_mode_htm_ae763cd1d8eed150f27a8074ef58c776ea77b0c14de7f795843d8a5ce3c3f443e1"><div class="ttname"><a href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776ea77b0c14de7f795843d8a5ce3c3f443e1">plWindowMode::WindowResizable</a></div><div class="ttdeci">@ WindowResizable</div><div class="ttdoc">The resolution and size are what the user picked and will not be changed. Allows window resizing by t...</div><div class="ttdef"><b>Definition</b> Window.h:165</div></div>
<div class="ttc" id="astructpl_window_mode_htm_ae763cd1d8eed150f27a8074ef58c776ead30e37a4c68f283ad1bbdf725d6b1829"><div class="ttname"><a href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776ead30e37a4c68f283ad1bbdf725d6b1829">plWindowMode::FullscreenFixedResolution</a></div><div class="ttdeci">@ FullscreenFixedResolution</div><div class="ttdef"><b>Definition</b> Window.h:168</div></div>
<div class="ttc" id="astructpl_window_mode_htm_ae763cd1d8eed150f27a8074ef58c776ead8c0c6482a3d27c140ea03dc633d45cc"><div class="ttname"><a href="../../d6/d2f/structpl_window_mode.htm#ae763cd1d8eed150f27a8074ef58c776ead8c0c6482a3d27c140ea03dc633d45cc">plWindowMode::WindowFixedResolution</a></div><div class="ttdeci">@ WindowFixedResolution</div><div class="ttdoc">The resolution and size are what the user picked and will not be changed. The window will not be resi...</div><div class="ttdef"><b>Definition</b> Window.h:164</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_e62ae2b329024d6cec02491cff116055.htm">Core</a></li><li class="navelem"><a class="el" href="../../dir_d65d34c5f19cec3b377822bbca412770.htm">System</a></li><li class="navelem"><b>Window.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
