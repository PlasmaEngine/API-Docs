<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plRemoteInterface Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d7/da9/classpl_remote_interface.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d7/d77/classpl_remote_interface-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plRemoteInterface Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae080bdc1d577617d33e78fecdffd1e9b" id="r_ae080bdc1d577617d33e78fecdffd1e9b"><td class="memItemLeft" align="right" valign="top"><a id="ae080bdc1d577617d33e78fecdffd1e9b" name="ae080bdc1d577617d33e78fecdffd1e9b"></a>
<a class="el" href="../../d1/df4/classpl_mutex.htm">plMutex</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetMutex</b> () const</td></tr>
<tr class="memdesc:ae080bdc1d577617d33e78fecdffd1e9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exposes the mutex that is internally used to secure multi-threaded access. <br /></td></tr>
<tr class="separator:ae080bdc1d577617d33e78fecdffd1e9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Connection</div></td></tr>
<tr class="memitem:a0575cdadc2c4a5a8d604c18fded1740d" id="r_a0575cdadc2c4a5a8d604c18fded1740d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0575cdadc2c4a5a8d604c18fded1740d">StartServer</a> (plUInt32 uiConnectionToken, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sAddress, bool bStartUpdateThread=true)</td></tr>
<tr class="memdesc:a0575cdadc2c4a5a8d604c18fded1740d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the remote interface as a server.  <br /></td></tr>
<tr class="separator:a0575cdadc2c4a5a8d604c18fded1740d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a7395ab81af58fd9e911232d2b50be5" id="r_a3a7395ab81af58fd9e911232d2b50be5"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a3a7395ab81af58fd9e911232d2b50be5">ConnectToServer</a> (plUInt32 uiConnectionToken, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sAddress, bool bStartUpdateThread=true)</td></tr>
<tr class="memdesc:a3a7395ab81af58fd9e911232d2b50be5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Starts the network interface as a client. Tries to connect to the given address.  <br /></td></tr>
<tr class="separator:a3a7395ab81af58fd9e911232d2b50be5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacc4212224d91532317d4fed670d9ff4" id="r_aacc4212224d91532317d4fed670d9ff4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aacc4212224d91532317d4fed670d9ff4">WaitForConnectionToServer</a> (<a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> timeout=<a class="el" href="../../d1/df6/structpl_time.htm#a3d1efa40afb39795fad0f3b6401626f1">plTime::MakeFromSeconds</a>(10))</td></tr>
<tr class="memdesc:aacc4212224d91532317d4fed670d9ff4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can only be called after <a class="el" href="#a3a7395ab81af58fd9e911232d2b50be5" title="Starts the network interface as a client. Tries to connect to the given address.">ConnectToServer()</a>. Updates the network in a loop until a connection is established, or the time has run out.  <br /></td></tr>
<tr class="separator:aacc4212224d91532317d4fed670d9ff4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5476fb9afaa9a23b4746ba896a271962" id="r_a5476fb9afaa9a23b4746ba896a271962"><td class="memItemLeft" align="right" valign="top"><a id="a5476fb9afaa9a23b4746ba896a271962" name="a5476fb9afaa9a23b4746ba896a271962"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ShutdownConnection</b> ()</td></tr>
<tr class="memdesc:a5476fb9afaa9a23b4746ba896a271962"><td class="mdescLeft">&#160;</td><td class="mdescRight">Closes the connection in an orderly fashion. <br /></td></tr>
<tr class="separator:a5476fb9afaa9a23b4746ba896a271962"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81fd1d6051b23a6b0230ad9958e4c33b" id="r_a81fd1d6051b23a6b0230ad9958e4c33b"><td class="memItemLeft" align="right" valign="top"><a id="a81fd1d6051b23a6b0230ad9958e4c33b" name="a81fd1d6051b23a6b0230ad9958e4c33b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsConnectedToServer</b> () const</td></tr>
<tr class="memdesc:a81fd1d6051b23a6b0230ad9958e4c33b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the client is connected to a server. <br /></td></tr>
<tr class="separator:a81fd1d6051b23a6b0230ad9958e4c33b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa727c8c920509343a19ea27ef8274637" id="r_aa727c8c920509343a19ea27ef8274637"><td class="memItemLeft" align="right" valign="top"><a id="aa727c8c920509343a19ea27ef8274637" name="aa727c8c920509343a19ea27ef8274637"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsConnectedToClients</b> () const</td></tr>
<tr class="memdesc:aa727c8c920509343a19ea27ef8274637"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the server is connected to any client. <br /></td></tr>
<tr class="separator:aa727c8c920509343a19ea27ef8274637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8db32471727e1b2c139d743657e1519" id="r_ad8db32471727e1b2c139d743657e1519"><td class="memItemLeft" align="right" valign="top"><a id="ad8db32471727e1b2c139d743657e1519" name="ad8db32471727e1b2c139d743657e1519"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsConnectedToOther</b> () const</td></tr>
<tr class="memdesc:ad8db32471727e1b2c139d743657e1519"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the client or server is connected its counterpart. <br /></td></tr>
<tr class="separator:ad8db32471727e1b2c139d743657e1519"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a115de13071354e4801521e8b5bda2f70" id="r_a115de13071354e4801521e8b5bda2f70"><td class="memItemLeft" align="right" valign="top"><a id="a115de13071354e4801521e8b5bda2f70" name="a115de13071354e4801521e8b5bda2f70"></a>
plRemoteMode&#160;</td><td class="memItemRight" valign="bottom"><b>GetRemoteMode</b> () const</td></tr>
<tr class="memdesc:a115de13071354e4801521e8b5bda2f70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the remote interface is inactive, a client or a server. <br /></td></tr>
<tr class="separator:a115de13071354e4801521e8b5bda2f70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fe45f6229f361a2a692edca4a18de66" id="r_a8fe45f6229f361a2a692edca4a18de66"><td class="memItemLeft" align="right" valign="top"><a id="a8fe45f6229f361a2a692edca4a18de66" name="a8fe45f6229f361a2a692edca4a18de66"></a>
const <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetServerAddress</b> () const</td></tr>
<tr class="memdesc:a8fe45f6229f361a2a692edca4a18de66"><td class="mdescLeft">&#160;</td><td class="mdescRight">The address through which the connection was started. <br /></td></tr>
<tr class="separator:a8fe45f6229f361a2a692edca4a18de66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af941b82194ec1f597c8a1a73c944b289" id="r_af941b82194ec1f597c8a1a73c944b289"><td class="memItemLeft" align="right" valign="top"><a id="af941b82194ec1f597c8a1a73c944b289" name="af941b82194ec1f597c8a1a73c944b289"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetApplicationID</b> () const</td></tr>
<tr class="memdesc:af941b82194ec1f597c8a1a73c944b289"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the own (random) application ID used to identify this instance. <br /></td></tr>
<tr class="separator:af941b82194ec1f597c8a1a73c944b289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77a0ee44b51f9822cfb30730ab6d7723" id="r_a77a0ee44b51f9822cfb30730ab6d7723"><td class="memItemLeft" align="right" valign="top"><a id="a77a0ee44b51f9822cfb30730ab6d7723" name="a77a0ee44b51f9822cfb30730ab6d7723"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetConnectionToken</b> () const</td></tr>
<tr class="memdesc:a77a0ee44b51f9822cfb30730ab6d7723"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the connection token used to identify compatible servers/clients. <br /></td></tr>
<tr class="separator:a77a0ee44b51f9822cfb30730ab6d7723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Server Information</div></td></tr>
<tr class="memitem:a315cff53543954a86cc919cfe5f1c527" id="r_a315cff53543954a86cc919cfe5f1c527"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a315cff53543954a86cc919cfe5f1c527">GetServerInfoIP</a> () const</td></tr>
<tr class="memdesc:a315cff53543954a86cc919cfe5f1c527"><td class="mdescLeft">&#160;</td><td class="mdescRight">For the client to display the name of the server.  <br /></td></tr>
<tr class="separator:a315cff53543954a86cc919cfe5f1c527"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20d18e3b4d7404c229ce4429acd055b3" id="r_a20d18e3b4d7404c229ce4429acd055b3"><td class="memItemLeft" align="right" valign="top"><a id="a20d18e3b4d7404c229ce4429acd055b3" name="a20d18e3b4d7404c229ce4429acd055b3"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetServerID</b> () const</td></tr>
<tr class="memdesc:a20d18e3b4d7404c229ce4429acd055b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Some random identifier, that allows to determine after a reconnect, whether the connected instance is still the same server. <br /></td></tr>
<tr class="separator:a20d18e3b4d7404c229ce4429acd055b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2dea8364557788bbbc380d4d127b966c" id="r_a2dea8364557788bbbc380d4d127b966c"><td class="memItemLeft" align="right" valign="top"><a id="a2dea8364557788bbbc380d4d127b966c" name="a2dea8364557788bbbc380d4d127b966c"></a>
<a class="el" href="../../d1/df6/structpl_time.htm">plTime</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPingToServer</b> () const</td></tr>
<tr class="memdesc:a2dea8364557788bbbc380d4d127b966c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current ping to the server. <br /></td></tr>
<tr class="separator:a2dea8364557788bbbc380d4d127b966c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Updating the Remote Interface</div></td></tr>
<tr class="memitem:aabd1d39aa5a88d0794134aaa89cd80f8" id="r_aabd1d39aa5a88d0794134aaa89cd80f8"><td class="memItemLeft" align="right" valign="top"><a id="aabd1d39aa5a88d0794134aaa89cd80f8" name="aabd1d39aa5a88d0794134aaa89cd80f8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateRemoteInterface</b> ()</td></tr>
<tr class="memdesc:aabd1d39aa5a88d0794134aaa89cd80f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">If no update thread was spawned, this should be called to process messages. <br /></td></tr>
<tr class="separator:aabd1d39aa5a88d0794134aaa89cd80f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ddc885cf3a8d50dfa3000c938d2092c" id="r_a4ddc885cf3a8d50dfa3000c938d2092c"><td class="memItemLeft" align="right" valign="top"><a id="a4ddc885cf3a8d50dfa3000c938d2092c" name="a4ddc885cf3a8d50dfa3000c938d2092c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdatePingToServer</b> ()</td></tr>
<tr class="memdesc:a4ddc885cf3a8d50dfa3000c938d2092c"><td class="mdescLeft">&#160;</td><td class="mdescRight">If no update thread was spawned, this should be called by clients to determine the ping. <br /></td></tr>
<tr class="separator:a4ddc885cf3a8d50dfa3000c938d2092c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Sending Messages</div></td></tr>
<tr class="memitem:a72c5fad3aeafe15e8674b1c4e4349d0f" id="r_a72c5fad3aeafe15e8674b1c4e4349d0f"><td class="memItemLeft" align="right" valign="top"><a id="a72c5fad3aeafe15e8674b1c4e4349d0f" name="a72c5fad3aeafe15e8674b1c4e4349d0f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Send</b> (plUInt32 uiSystemID, plUInt32 uiMsgID)</td></tr>
<tr class="memdesc:a72c5fad3aeafe15e8674b1c4e4349d0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a reliable message without any data. If it is a server, the message is broadcast to all clients. If it is a client, the message is only sent to the server. <br /></td></tr>
<tr class="separator:a72c5fad3aeafe15e8674b1c4e4349d0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41d3807ff93374924c79c482cf9371ab" id="r_a41d3807ff93374924c79c482cf9371ab"><td class="memItemLeft" align="right" valign="top"><a id="a41d3807ff93374924c79c482cf9371ab" name="a41d3807ff93374924c79c482cf9371ab"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Send</b> (plRemoteTransmitMode tm, plUInt32 uiSystemID, plUInt32 uiMsgID, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const plUInt8 &gt; &amp;data)</td></tr>
<tr class="memdesc:a41d3807ff93374924c79c482cf9371ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message, appends the given array of data If it is a server, the message is broadcast to all clients. If it is a client, the message is only sent to the server. <br /></td></tr>
<tr class="separator:a41d3807ff93374924c79c482cf9371ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28dfcb7d1d3aad561ea698e7055a0e05" id="r_a28dfcb7d1d3aad561ea698e7055a0e05"><td class="memItemLeft" align="right" valign="top"><a id="a28dfcb7d1d3aad561ea698e7055a0e05" name="a28dfcb7d1d3aad561ea698e7055a0e05"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Send</b> (plRemoteTransmitMode tm, plUInt32 uiSystemID, plUInt32 uiMsgID, const <a class="el" href="../../d2/d69/classpl_contiguous_memory_stream_storage.htm">plContiguousMemoryStreamStorage</a> &amp;data)</td></tr>
<tr class="separator:a28dfcb7d1d3aad561ea698e7055a0e05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad42392efb6e154ef80bc4ee08240d401" id="r_ad42392efb6e154ef80bc4ee08240d401"><td class="memItemLeft" align="right" valign="top"><a id="ad42392efb6e154ef80bc4ee08240d401" name="ad42392efb6e154ef80bc4ee08240d401"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Send</b> (plRemoteTransmitMode tm, plUInt32 uiSystemID, plUInt32 uiMsgID, const void *pData=nullptr, plUInt32 uiDataBytes=0)</td></tr>
<tr class="memdesc:ad42392efb6e154ef80bc4ee08240d401"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message, appends the given array of data If it is a server, the message is broadcast to all clients. If it is a client, the message is only sent to the server. <br /></td></tr>
<tr class="separator:ad42392efb6e154ef80bc4ee08240d401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0030a0078822c938557fb8ee981922d" id="r_ac0030a0078822c938557fb8ee981922d"><td class="memItemLeft" align="right" valign="top"><a id="ac0030a0078822c938557fb8ee981922d" name="ac0030a0078822c938557fb8ee981922d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Send</b> (plRemoteTransmitMode tm, <a class="el" href="../../d2/d26/classpl_remote_message.htm">plRemoteMessage</a> &amp;ref_msg)</td></tr>
<tr class="memdesc:ac0030a0078822c938557fb8ee981922d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends an <a class="el" href="../../d2/d26/classpl_remote_message.htm" title="Encapsulates all the data that is transmitted when sending or receiving a message with plRemoteInterf...">plRemoteMessage</a> If it is a server, the message is broadcast to all clients. If it is a client, the message is only sent to the server. <br /></td></tr>
<tr class="separator:ac0030a0078822c938557fb8ee981922d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Message Handling</div></td></tr>
<tr class="memitem:ac2942a975486706ba22d45543cc1c29f" id="r_ac2942a975486706ba22d45543cc1c29f"><td class="memItemLeft" align="right" valign="top"><a id="ac2942a975486706ba22d45543cc1c29f" name="ac2942a975486706ba22d45543cc1c29f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetMessageHandler</b> (plUInt32 uiSystemID, <a class="el" href="../../df/df1/structpl_delegate.htm">plRemoteMessageHandler</a> messageHandler)</td></tr>
<tr class="memdesc:ac2942a975486706ba22d45543cc1c29f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a message handler that is executed for all incoming messages for the given system. <br /></td></tr>
<tr class="separator:ac2942a975486706ba22d45543cc1c29f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afebf25b6672736d31195080a0a6c6467" id="r_afebf25b6672736d31195080a0a6c6467"><td class="memItemLeft" align="right" valign="top"><a id="afebf25b6672736d31195080a0a6c6467" name="afebf25b6672736d31195080a0a6c6467"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetUnhandledMessageHandler</b> (<a class="el" href="../../df/df1/structpl_delegate.htm">plRemoteMessageHandler</a> messageHandler)</td></tr>
<tr class="memdesc:afebf25b6672736d31195080a0a6c6467"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers a message handler that is executed for all incoming messages for systems for which there are no dedicated message handlers. <br /></td></tr>
<tr class="separator:afebf25b6672736d31195080a0a6c6467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5460bb00d04fd5149ffd77ed9e74ef7e" id="r_a5460bb00d04fd5149ffd77ed9e74ef7e"><td class="memItemLeft" align="right" valign="top"><a id="a5460bb00d04fd5149ffd77ed9e74ef7e" name="a5460bb00d04fd5149ffd77ed9e74ef7e"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>ExecuteMessageHandlers</b> (plUInt32 uiSystem)</td></tr>
<tr class="memdesc:a5460bb00d04fd5149ffd77ed9e74ef7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes the message handler for all messages that have arrived for the given system. <br /></td></tr>
<tr class="separator:a5460bb00d04fd5149ffd77ed9e74ef7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1eef7cde4c350cae62f1b4fc544b3dee" id="r_a1eef7cde4c350cae62f1b4fc544b3dee"><td class="memItemLeft" align="right" valign="top"><a id="a1eef7cde4c350cae62f1b4fc544b3dee" name="a1eef7cde4c350cae62f1b4fc544b3dee"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>ExecuteAllMessageHandlers</b> ()</td></tr>
<tr class="memdesc:a1eef7cde4c350cae62f1b4fc544b3dee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes all message handlers for all received messages. <br /></td></tr>
<tr class="separator:a1eef7cde4c350cae62f1b4fc544b3dee"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Events</div></td></tr>
<tr class="memitem:a735fc44e4eb2902fbc61da807f207007" id="r_a735fc44e4eb2902fbc61da807f207007"><td class="memItemLeft" align="right" valign="top"><a id="a735fc44e4eb2902fbc61da807f207007" name="a735fc44e4eb2902fbc61da807f207007"></a>
<a class="el" href="../../dd/d61/classpl_event.htm">plEvent</a>&lt; const <a class="el" href="../../d9/dd2/structpl_remote_event.htm">plRemoteEvent</a> &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_RemoteEvents</b></td></tr>
<tr class="memdesc:a735fc44e4eb2902fbc61da807f207007"><td class="mdescLeft">&#160;</td><td class="mdescRight">Broadcasts events about connections. <br /></td></tr>
<tr class="separator:a735fc44e4eb2902fbc61da807f207007"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader">Implementation Details</h2></td></tr>
<tr class="memitem:abbabee41c3b4ed5f519fd45c3470e6d2" id="r_abbabee41c3b4ed5f519fd45c3470e6d2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abbabee41c3b4ed5f519fd45c3470e6d2">m_sServerInfoIP</a></td></tr>
<tr class="memdesc:abbabee41c3b4ed5f519fd45c3470e6d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes should update this when the information is available.  <br /></td></tr>
<tr class="separator:abbabee41c3b4ed5f519fd45c3470e6d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1faa198280f0fd6ffe15d80bd75b9539" id="r_a1faa198280f0fd6ffe15d80bd75b9539"><td class="memItemLeft" align="right" valign="top"><a id="a1faa198280f0fd6ffe15d80bd75b9539" name="a1faa198280f0fd6ffe15d80bd75b9539"></a>
virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InternalCreateConnection</b> (plRemoteMode mode, <a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sServerAddress)=0</td></tr>
<tr class="memdesc:a1faa198280f0fd6ffe15d80bd75b9539"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to start a network connection. <br /></td></tr>
<tr class="separator:a1faa198280f0fd6ffe15d80bd75b9539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fc54203c5317bd9eb809ee5fbc4241f" id="r_a6fc54203c5317bd9eb809ee5fbc4241f"><td class="memItemLeft" align="right" valign="top"><a id="a6fc54203c5317bd9eb809ee5fbc4241f" name="a6fc54203c5317bd9eb809ee5fbc4241f"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>InternalShutdownConnection</b> ()=0</td></tr>
<tr class="memdesc:a6fc54203c5317bd9eb809ee5fbc4241f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to shutdown a network connection. <br /></td></tr>
<tr class="separator:a6fc54203c5317bd9eb809ee5fbc4241f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a109aaadbb6e2d7ee5c891581d05a1144" id="r_a109aaadbb6e2d7ee5c891581d05a1144"><td class="memItemLeft" align="right" valign="top"><a id="a109aaadbb6e2d7ee5c891581d05a1144" name="a109aaadbb6e2d7ee5c891581d05a1144"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>InternalUpdateRemoteInterface</b> ()=0</td></tr>
<tr class="memdesc:a109aaadbb6e2d7ee5c891581d05a1144"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to update. <br /></td></tr>
<tr class="separator:a109aaadbb6e2d7ee5c891581d05a1144"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a302709f69a32d051620dae055d44ad1e" id="r_a302709f69a32d051620dae055d44ad1e"><td class="memItemLeft" align="right" valign="top"><a id="a302709f69a32d051620dae055d44ad1e" name="a302709f69a32d051620dae055d44ad1e"></a>
virtual <a class="el" href="../../d1/df6/structpl_time.htm">plTime</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InternalGetPingToServer</b> ()=0</td></tr>
<tr class="memdesc:a302709f69a32d051620dae055d44ad1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to get the ping to the server (client mode only) <br /></td></tr>
<tr class="separator:a302709f69a32d051620dae055d44ad1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d07fa57ba9284f18e87f1262f350a35" id="r_a5d07fa57ba9284f18e87f1262f350a35"><td class="memItemLeft" align="right" valign="top"><a id="a5d07fa57ba9284f18e87f1262f350a35" name="a5d07fa57ba9284f18e87f1262f350a35"></a>
virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>InternalTransmit</b> (plRemoteTransmitMode tm, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const plUInt8 &gt; &amp;data)=0</td></tr>
<tr class="memdesc:a5d07fa57ba9284f18e87f1262f350a35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes have to implement this to deliver messages to the server or client. <br /></td></tr>
<tr class="separator:a5d07fa57ba9284f18e87f1262f350a35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5e6dbd264de83a40593062f0c684004" id="r_ab5e6dbd264de83a40593062f0c684004"><td class="memItemLeft" align="right" valign="top"><a id="ab5e6dbd264de83a40593062f0c684004" name="ab5e6dbd264de83a40593062f0c684004"></a>
virtual <a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>DetermineTargetAddress</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sConnectTo, plUInt32 &amp;out_IP, plUInt16 &amp;out_Port)</td></tr>
<tr class="memdesc:ab5e6dbd264de83a40593062f0c684004"><td class="mdescLeft">&#160;</td><td class="mdescRight">Derived classes can override this to interpret an address differently. <br /></td></tr>
<tr class="separator:ab5e6dbd264de83a40593062f0c684004"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a361a48fcdf3be4f697eaf3cea5e45d57" id="r_a361a48fcdf3be4f697eaf3cea5e45d57"><td class="memItemLeft" align="right" valign="top"><a id="a361a48fcdf3be4f697eaf3cea5e45d57" name="a361a48fcdf3be4f697eaf3cea5e45d57"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ReportConnectionToServer</b> (plUInt32 uiServerID)</td></tr>
<tr class="memdesc:a361a48fcdf3be4f697eaf3cea5e45d57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a server connection has been established. <br /></td></tr>
<tr class="separator:a361a48fcdf3be4f697eaf3cea5e45d57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab67f205aa42c9e07734b2a20da22c3a7" id="r_ab67f205aa42c9e07734b2a20da22c3a7"><td class="memItemLeft" align="right" valign="top"><a id="ab67f205aa42c9e07734b2a20da22c3a7" name="ab67f205aa42c9e07734b2a20da22c3a7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ReportConnectionToClient</b> (plUInt32 uiApplicationID)</td></tr>
<tr class="memdesc:ab67f205aa42c9e07734b2a20da22c3a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a client connection has been established. <br /></td></tr>
<tr class="separator:ab67f205aa42c9e07734b2a20da22c3a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b7ea7f68c548749553a1bea35dfdda0" id="r_a0b7ea7f68c548749553a1bea35dfdda0"><td class="memItemLeft" align="right" valign="top"><a id="a0b7ea7f68c548749553a1bea35dfdda0" name="a0b7ea7f68c548749553a1bea35dfdda0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ReportDisconnectedFromServer</b> ()</td></tr>
<tr class="memdesc:a0b7ea7f68c548749553a1bea35dfdda0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a server connection has been lost. <br /></td></tr>
<tr class="separator:a0b7ea7f68c548749553a1bea35dfdda0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b473a4ab5b3973e0313a3970a444914" id="r_a1b473a4ab5b3973e0313a3970a444914"><td class="memItemLeft" align="right" valign="top"><a id="a1b473a4ab5b3973e0313a3970a444914" name="a1b473a4ab5b3973e0313a3970a444914"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ReportDisconnectedFromClient</b> (plUInt32 uiApplicationID)</td></tr>
<tr class="memdesc:a1b473a4ab5b3973e0313a3970a444914"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a client connection has been lost. <br /></td></tr>
<tr class="separator:a1b473a4ab5b3973e0313a3970a444914"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8cccf0a090b125fcb5e2e3d5d8345c6" id="r_ac8cccf0a090b125fcb5e2e3d5d8345c6"><td class="memItemLeft" align="right" valign="top"><a id="ac8cccf0a090b125fcb5e2e3d5d8345c6" name="ac8cccf0a090b125fcb5e2e3d5d8345c6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ReportMessage</b> (plUInt32 uiApplicationID, plUInt32 uiSystemID, plUInt32 uiMsgID, const <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const plUInt8 &gt; &amp;data)</td></tr>
<tr class="memdesc:ac8cccf0a090b125fcb5e2e3d5d8345c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called by the implementation, when a message has arrived. <br /></td></tr>
<tr class="separator:ac8cccf0a090b125fcb5e2e3d5d8345c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a3a7395ab81af58fd9e911232d2b50be5" name="a3a7395ab81af58fd9e911232d2b50be5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a7395ab81af58fd9e911232d2b50be5">&#9670;&#160;</a></span>ConnectToServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plRemoteInterface::ConnectToServer </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiConnectionToken</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sAddress</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bStartUpdateThread</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts the network interface as a client. Tries to connect to the given address. </p>
<p>This function immediately returns and no connection is guaranteed. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiConnectionToken</td><td>Same as for StartServer() </td></tr>
    <tr><td class="paramname">szAddress</td><td>Could be a network address "127.0.0.1" or "localhost" or some other name that identifies the target, e.g. a named pipe. </td></tr>
    <tr><td class="paramname">bStartUpdateThread</td><td>Same as for StartServer()</td></tr>
  </table>
  </dd>
</dl>
<p>If this function succeeds, it still might not be connected to a server. Use <a class="el" href="#aacc4212224d91532317d4fed670d9ff4" title="Can only be called after ConnectToServer(). Updates the network in a loop until a connection is estab...">WaitForConnectionToServer()</a> to enforce a connection. </p>

</div>
</div>
<a id="a315cff53543954a86cc919cfe5f1c527" name="a315cff53543954a86cc919cfe5f1c527"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a315cff53543954a86cc919cfe5f1c527">&#9670;&#160;</a></span>GetServerInfoIP()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> &amp; plRemoteInterface::GetServerInfoIP </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>For the client to display the name of the server. </p>
<p>For the client to display the IP of the server </p>

</div>
</div>
<a id="a0575cdadc2c4a5a8d604c18fded1740d" name="a0575cdadc2c4a5a8d604c18fded1740d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0575cdadc2c4a5a8d604c18fded1740d">&#9670;&#160;</a></span>StartServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plRemoteInterface::StartServer </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiConnectionToken</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sAddress</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bStartUpdateThread</em></span><span class="paramdefsep"> = </span><span class="paramdefval">true</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Starts the remote interface as a server. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiConnectionToken</td><td>Should be a unique sequence (e.g. 'PLPZ') to identify the purpose of this connection. Only server and clients with the same token will accept connections. </td></tr>
    <tr><td class="paramname">uiPort</td><td>The port over which the connection should run. </td></tr>
    <tr><td class="paramname">bStartUpdateThread</td><td>If true, a thread is started that will regularly call UpdateNetwork() and <a class="el" href="#a4ddc885cf3a8d50dfa3000c938d2092c" title="If no update thread was spawned, this should be called by clients to determine the ping.">UpdatePingToServer()</a>. If false, this has to be called manually in regular intervals. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="aacc4212224d91532317d4fed670d9ff4" name="aacc4212224d91532317d4fed670d9ff4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacc4212224d91532317d4fed670d9ff4">&#9670;&#160;</a></span>WaitForConnectionToServer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../da/dce/structpl_result.htm">plResult</a> plRemoteInterface::WaitForConnectionToServer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d1/df6/structpl_time.htm">plTime</a></td>          <td class="paramname"><span class="paramname"><em>timeout</em></span><span class="paramdefsep"> = </span><span class="paramdefval"><a class="el" href="../../d1/df6/structpl_time.htm#a3d1efa40afb39795fad0f3b6401626f1">plTime::MakeFromSeconds</a>(10)</span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Can only be called after <a class="el" href="#a3a7395ab81af58fd9e911232d2b50be5" title="Starts the network interface as a client. Tries to connect to the given address.">ConnectToServer()</a>. Updates the network in a loop until a connection is established, or the time has run out. </p>
<p>A timeout of exactly zero means to wait indefinitely. </p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="abbabee41c3b4ed5f519fd45c3470e6d2" name="abbabee41c3b4ed5f519fd45c3470e6d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbabee41c3b4ed5f519fd45c3470e6d2">&#9670;&#160;</a></span>m_sServerInfoIP</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> plRemoteInterface::m_sServerInfoIP</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Derived classes should update this when the information is available. </p>
<p>Derived classes should update this when the information is available </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Communication/<a class="el" href="../../df/dde/_remote_interface_8h_source.htm">RemoteInterface.h</a></li>
<li>Code/Engine/Foundation/Communication/Implementation/<b>RemoteInterface.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d7/da9/classpl_remote_interface.htm">plRemoteInterface</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
