<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plAbstractFunctionProperty Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d7/de1/classpl_abstract_function_property.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d4/d04/classpl_abstract_function_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAbstractFunctionProperty Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>The base class for a property that represents a function.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/d4a/_abstract_property_8h_source.htm">AbstractProperty.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plAbstractFunctionProperty:</div>
<div class="dyncontent">
<div class="center"><img src="../../d0/ddb/classpl_abstract_function_property__inherit__graph.png" border="0" usemap="#apl_abstract_function_property_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_abstract_function_property_inherit__map" id="apl_abstract_function_property_inherit__map">
<area shape="rect" title="The base class for a property that represents a function." alt="" coords="183,221,362,248"/>
<area shape="rect" href="../../de/db7/classpl_typed_function_property.htm" title=" " alt="" coords="418,45,584,88"/>
<area shape="poly" title=" " alt="" coords="302,210,469,86,472,91,306,214"/>
<area shape="rect" href="../../de/db7/classpl_typed_function_property.htm" title=" " alt="" coords="418,151,584,193"/>
<area shape="poly" title=" " alt="" coords="338,214,420,191,421,197,339,219"/>
<area shape="rect" href="../../d2/db1/classpl_phantom_function_property.htm" title=" " alt="" coords="410,221,592,248"/>
<area shape="poly" title=" " alt="" coords="377,232,409,232,409,237,377,237"/>
<area shape="rect" href="../../d2/d15/classpl_script_function_property.htm" title=" " alt="" coords="419,280,583,307"/>
<area shape="poly" title=" " alt="" coords="343,250,447,277,446,282,341,255"/>
<area shape="rect" href="../../de/db7/classpl_typed_function_property.htm" title=" " alt="" coords="418,331,584,373"/>
<area shape="poly" title=" " alt="" coords="307,255,355,286,411,316,437,328,435,332,409,321,353,290,304,259"/>
<area shape="rect" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="5,221,135,248"/>
<area shape="poly" title=" " alt="" coords="150,232,182,232,182,237,150,237"/>
<area shape="rect" href="../../de/d2e/classpl_constructor_function_property.htm" title=" " alt="" coords="642,5,839,48"/>
<area shape="poly" title=" " alt="" coords="598,48,641,41,642,46,599,53"/>
<area shape="rect" href="../../db/d2d/classpl_function_property_3_01_r_07_5_08_07_args_8_8_8_08_4.htm" title=" " alt="" coords="675,72,806,115"/>
<area shape="poly" title=" " alt="" coords="582,143,674,112,676,117,584,148"/>
<area shape="rect" href="../../d0/d35/classpl_function_property_3_01_r_07_c_l_a_s_s_1_1_5_08_07_args_8_8_8_08_01const_01_4.htm" title=" " alt="" coords="664,139,817,197"/>
<area shape="poly" title=" " alt="" coords="599,168,663,167,664,172,599,173"/>
<area shape="rect" href="../../db/dfa/classpl_function_property_3_01_r_07_c_l_a_s_s_1_1_5_08_07_args_8_8_8_08_4.htm" title=" " alt="" coords="660,221,821,264"/>
<area shape="poly" title=" " alt="" coords="592,196,666,218,665,223,590,201"/>
<area shape="rect" href="../../d4/dbe/classpl_script_coroutine_function_property.htm" title="A function property that creates an instance of the given coroutine type and starts it immediately." alt="" coords="655,288,826,331"/>
<area shape="poly" title=" " alt="" coords="599,297,655,301,655,306,599,303"/>
<area shape="rect" href="../../d9/d25/classpl_visual_script_function_property.htm" title=" " alt="" coords="640,355,841,381"/>
<area shape="poly" title=" " alt="" coords="574,309,593,316,641,340,677,351,676,357,639,345,591,321,572,314"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4711b9faea797214e046d6e13d13dc2a" id="r_a4711b9faea797214e046d6e13d13dc2a"><td class="memItemLeft" align="right" valign="top"><a id="a4711b9faea797214e046d6e13d13dc2a" name="a4711b9faea797214e046d6e13d13dc2a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractFunctionProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a4711b9faea797214e046d6e13d13dc2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">plAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a4711b9faea797214e046d6e13d13dc2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5db335daa710a1dbaa908a31b61b972f" id="r_a5db335daa710a1dbaa908a31b61b972f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a5db335daa710a1dbaa908a31b61b972f">GetCategory</a> () const override</td></tr>
<tr class="memdesc:a5db335daa710a1dbaa908a31b61b972f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the category of this property. Cast this property to the next higher type for more information.  <br /></td></tr>
<tr class="separator:a5db335daa710a1dbaa908a31b61b972f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09a5f9760df4bed68936338a5d362062" id="r_a09a5f9760df4bed68936338a5d362062"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d9/dc8/structpl_function_type.htm#af271404fdafe238815ecd4cf373026b8">plFunctionType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a09a5f9760df4bed68936338a5d362062">GetFunctionType</a> () const =0</td></tr>
<tr class="memdesc:a09a5f9760df4bed68936338a5d362062"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of function, see plFunctionPropertyType::Enum.  <br /></td></tr>
<tr class="separator:a09a5f9760df4bed68936338a5d362062"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab92f74cf69aa367442a1abc51b0a7184" id="r_ab92f74cf69aa367442a1abc51b0a7184"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ab92f74cf69aa367442a1abc51b0a7184">GetReturnType</a> () const =0</td></tr>
<tr class="memdesc:ab92f74cf69aa367442a1abc51b0a7184"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the return value.  <br /></td></tr>
<tr class="separator:ab92f74cf69aa367442a1abc51b0a7184"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa762a03b8899ee55f319c9b1a5d47e91" id="r_aa762a03b8899ee55f319c9b1a5d47e91"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa762a03b8899ee55f319c9b1a5d47e91">GetReturnFlags</a> () const =0</td></tr>
<tr class="memdesc:aa762a03b8899ee55f319c9b1a5d47e91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns property flags of the return value.  <br /></td></tr>
<tr class="separator:aa762a03b8899ee55f319c9b1a5d47e91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c9557e6bfffe92ee5e6fe166be704e1" id="r_a8c9557e6bfffe92ee5e6fe166be704e1"><td class="memItemLeft" align="right" valign="top">virtual plUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8c9557e6bfffe92ee5e6fe166be704e1">GetArgumentCount</a> () const =0</td></tr>
<tr class="memdesc:a8c9557e6bfffe92ee5e6fe166be704e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of arguments.  <br /></td></tr>
<tr class="separator:a8c9557e6bfffe92ee5e6fe166be704e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a613fab41ed31217a83cee0faf08be5d4" id="r_a613fab41ed31217a83cee0faf08be5d4"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a613fab41ed31217a83cee0faf08be5d4">GetArgumentType</a> (plUInt32 uiParamIndex) const =0</td></tr>
<tr class="memdesc:a613fab41ed31217a83cee0faf08be5d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the given argument.  <br /></td></tr>
<tr class="separator:a613fab41ed31217a83cee0faf08be5d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e6c40a8d3d023ef9cc5031bbb776b9e" id="r_a4e6c40a8d3d023ef9cc5031bbb776b9e"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4e6c40a8d3d023ef9cc5031bbb776b9e">GetArgumentFlags</a> (plUInt32 uiParamIndex) const =0</td></tr>
<tr class="memdesc:a4e6c40a8d3d023ef9cc5031bbb776b9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the property flags of the given argument.  <br /></td></tr>
<tr class="separator:a4e6c40a8d3d023ef9cc5031bbb776b9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3d4088cb5e959e5c181db038bf2529e" id="r_af3d4088cb5e959e5c181db038bf2529e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af3d4088cb5e959e5c181db038bf2529e">Execute</a> (void *pInstance, <a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &gt; arguments, <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;out_returnValue) const =0</td></tr>
<tr class="memdesc:af3d4088cb5e959e5c181db038bf2529e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls the function. Provide the instance on which the function is supposed to be called.  <br /></td></tr>
<tr class="separator:af3d4088cb5e959e5c181db038bf2529e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe6e3ed4313e5ad444a598c82d2e716e" id="r_abe6e3ed4313e5ad444a598c82d2e716e"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#abe6e3ed4313e5ad444a598c82d2e716e">GetSpecificType</a> () const override</td></tr>
<tr class="memdesc:abe6e3ed4313e5ad444a598c82d2e716e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dd/d62/classpl_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">plTypedConstantProperty</a>.  <br /></td></tr>
<tr class="separator:abe6e3ed4313e5ad444a598c82d2e716e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21ad0f6260a2f6e7c3c70e202f54f895" id="r_a21ad0f6260a2f6e7c3c70e202f54f895"><td class="memItemLeft" align="right" valign="top"><a id="a21ad0f6260a2f6e7c3c70e202f54f895" name="a21ad0f6260a2f6e7c3c70e202f54f895"></a>
<a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a21ad0f6260a2f6e7c3c70e202f54f895"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a21ad0f6260a2f6e7c3c70e202f54f895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a436a0dabc0e3c9322c35a26c225ed960" id="r_a436a0dabc0e3c9322c35a26c225ed960"><td class="memItemLeft" align="right" valign="top"><a id="a436a0dabc0e3c9322c35a26c225ed960" name="a436a0dabc0e3c9322c35a26c225ed960"></a>
<a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a436a0dabc0e3c9322c35a26c225ed960"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a436a0dabc0e3c9322c35a26c225ed960"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property" id="r_a8ae8dcf20f01b0926e321d68fd38d243"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property" id="r_ab192fac6724fcbd56a160013230bad0b"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property" id="r_a988149e0184a527d89a6fc7b529aa6fc"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property" id="r_a1a7c0de0ecff4c5ab4a37987f9780a64"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property" id="r_a249245c8d8a5bd14d12b7b72920b4d5e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property" id="r_aa28f7ffab1bd6667a67f94a351e618ba"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property" id="r_a74666a9b6312d9e8a0208ff67ec56a7d"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property" id="r_a5226bc2ced2436f3aeaf96fadea40f70"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property" id="r_a135a819e72ea2827916acdefd2fb6848"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property" id="r_aaf46ae0b97785db5048abb483c603cea"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *, 2, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The base class for a property that represents a function. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="af3d4088cb5e959e5c181db038bf2529e" name="af3d4088cb5e959e5c181db038bf2529e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3d4088cb5e959e5c181db038bf2529e">&#9670;&#160;</a></span>Execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void plAbstractFunctionProperty::Execute </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &gt;</td>          <td class="paramname"><span class="paramname"><em>arguments</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_returnValue</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calls the function. Provide the instance on which the function is supposed to be called. </p>
<p>arguments must be the size of GetArgumentCount, the following rules apply for both arguments and return value: Any standard type must be provided by value, even if it is a pointer to one. Types must match exactly, no ConvertTo is called. enum and bitflags are supported if <a class="el" href="../../dd/d09/structpl_enum.htm" title="A custom enum implementation that allows to define the underlying storage type to control its memory ...">plEnum</a> / <a class="el" href="../../df/dd9/structpl_bitflags.htm" title="The plBitflags class allows you to work with type-safe bitflags.">plBitflags</a> is used, value must be provided as plInt64. Out values (&amp;, *) are written back to the variant they were read from. Any class is provided by pointer, regardless of whether it is a pointer or not. The returnValue must only be valid if the return value is a ref or by value class. In that case returnValue must be a ptr to a valid class instance of the returned type. An invalid variant is equal to a nullptr, except for if the argument is of type <a class="el" href="../../da/d4c/classpl_variant.htm" title="plVariant is a class that can store different types of variables, which is useful in situations where...">plVariant</a>, in which case it is impossible to pass along a nullptr. </p>

<p>Implemented in <a class="el" href="../../de/d2e/classpl_constructor_function_property.htm#aa72e09877b8ddf4552f23d4954baa6db">plConstructorFunctionProperty&lt; CLASS, Args &gt;</a>, <a class="el" href="../../db/d2d/classpl_function_property_3_01_r_07_5_08_07_args_8_8_8_08_4.htm#a9f53c01814077140de2f84e3cace3bca">plFunctionProperty&lt; R(*)(Args...)&gt;</a>, <a class="el" href="../../d0/d35/classpl_function_property_3_01_r_07_c_l_a_s_s_1_1_5_08_07_args_8_8_8_08_01const_01_4.htm#a52562781212ae0d818d5501d98320d17">plFunctionProperty&lt; R(CLASS::*)(Args...) const &gt;</a>, <a class="el" href="../../db/dfa/classpl_function_property_3_01_r_07_c_l_a_s_s_1_1_5_08_07_args_8_8_8_08_4.htm#a78ac539007c6e0b68f188ddbc2318186">plFunctionProperty&lt; R(CLASS::*)(Args...)&gt;</a>, <a class="el" href="../../d2/db1/classpl_phantom_function_property.htm#adf562d6ffd706cba88c009a35f69a29e">plPhantomFunctionProperty</a>, <a class="el" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#af160631094bf374d6269b8b9a1ffa060">plScriptCoroutineFunctionProperty</a>, and <a class="el" href="../../d9/d25/classpl_visual_script_function_property.htm#afbc9e57184a3ae7c79ccdd30a0a462be">plVisualScriptFunctionProperty</a>.</p>

</div>
</div>
<a id="a8c9557e6bfffe92ee5e6fe166be704e1" name="a8c9557e6bfffe92ee5e6fe166be704e1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c9557e6bfffe92ee5e6fe166be704e1">&#9670;&#160;</a></span>GetArgumentCount()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual plUInt32 plAbstractFunctionProperty::GetArgumentCount </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the number of arguments. </p>

<p>Implemented in <a class="el" href="../../d2/db1/classpl_phantom_function_property.htm#a4588c621014565290ec8d9447b6ccc08">plPhantomFunctionProperty</a>, <a class="el" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#a5336708b6be339ab38e7324e0cfeb8dc">plScriptCoroutineFunctionProperty</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a5e48bf9171b4f55a61d543bd053fd83b">plTypedFunctionProperty&lt; R, Args &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a5e48bf9171b4f55a61d543bd053fd83b">plTypedFunctionProperty&lt; CLASS *, Args... &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a5e48bf9171b4f55a61d543bd053fd83b">plTypedFunctionProperty&lt; R, Args... &gt;</a>, and <a class="el" href="../../d9/d25/classpl_visual_script_function_property.htm#aab3f7033528cfca0668e79fcd41b36a6">plVisualScriptFunctionProperty</a>.</p>

</div>
</div>
<a id="a4e6c40a8d3d023ef9cc5031bbb776b9e" name="a4e6c40a8d3d023ef9cc5031bbb776b9e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4e6c40a8d3d023ef9cc5031bbb776b9e">&#9670;&#160;</a></span>GetArgumentFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; plAbstractFunctionProperty::GetArgumentFlags </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiParamIndex</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the property flags of the given argument. </p>

<p>Implemented in <a class="el" href="../../d2/db1/classpl_phantom_function_property.htm#ae5296d29c2fad0fe69a9ac72e13ed860">plPhantomFunctionProperty</a>, <a class="el" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#ab0273e54676e3d40b8c55b386415e235">plScriptCoroutineFunctionProperty</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a9366bea84812251468c151b623183819">plTypedFunctionProperty&lt; R, Args &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a9366bea84812251468c151b623183819">plTypedFunctionProperty&lt; CLASS *, Args... &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a9366bea84812251468c151b623183819">plTypedFunctionProperty&lt; R, Args... &gt;</a>, and <a class="el" href="../../d9/d25/classpl_visual_script_function_property.htm#a634a96fd9fa0ab1856b85a82a51ced38">plVisualScriptFunctionProperty</a>.</p>

</div>
</div>
<a id="a613fab41ed31217a83cee0faf08be5d4" name="a613fab41ed31217a83cee0faf08be5d4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a613fab41ed31217a83cee0faf08be5d4">&#9670;&#160;</a></span>GetArgumentType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> * plAbstractFunctionProperty::GetArgumentType </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiParamIndex</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of the given argument. </p>

<p>Implemented in <a class="el" href="../../d2/db1/classpl_phantom_function_property.htm#a93ba64a84aff52e3078e4c85976ff5f2">plPhantomFunctionProperty</a>, <a class="el" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#a71e0001396d915d9a2bd62bbff4f3174">plScriptCoroutineFunctionProperty</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a074758c998cce76634f3b1867a320d7e">plTypedFunctionProperty&lt; R, Args &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a074758c998cce76634f3b1867a320d7e">plTypedFunctionProperty&lt; CLASS *, Args... &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a074758c998cce76634f3b1867a320d7e">plTypedFunctionProperty&lt; R, Args... &gt;</a>, and <a class="el" href="../../d9/d25/classpl_visual_script_function_property.htm#a312ed23086b8b0fc25e337aa22a1b5bf">plVisualScriptFunctionProperty</a>.</p>

</div>
</div>
<a id="a5db335daa710a1dbaa908a31b61b972f" name="a5db335daa710a1dbaa908a31b61b972f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5db335daa710a1dbaa908a31b61b972f">&#9670;&#160;</a></span>GetCategory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a> plAbstractFunctionProperty::GetCategory </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the category of this property. Cast this property to the next higher type for more information. </p>

<p>Implements <a class="el" href="../../d4/dd7/classpl_abstract_property.htm#a234883c7cab039c992bfeb662ce4ecd5">plAbstractProperty</a>.</p>

</div>
</div>
<a id="a09a5f9760df4bed68936338a5d362062" name="a09a5f9760df4bed68936338a5d362062"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09a5f9760df4bed68936338a5d362062">&#9670;&#160;</a></span>GetFunctionType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d9/dc8/structpl_function_type.htm#af271404fdafe238815ecd4cf373026b8">plFunctionType::Enum</a> plAbstractFunctionProperty::GetFunctionType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of function, see plFunctionPropertyType::Enum. </p>

<p>Implemented in <a class="el" href="../../de/d2e/classpl_constructor_function_property.htm#a18a72531b35286923b04af6b1409ca51">plConstructorFunctionProperty&lt; CLASS, Args &gt;</a>, <a class="el" href="../../db/d2d/classpl_function_property_3_01_r_07_5_08_07_args_8_8_8_08_4.htm#af23139c3174647ffadad24d20ab98104">plFunctionProperty&lt; R(*)(Args...)&gt;</a>, <a class="el" href="../../d0/d35/classpl_function_property_3_01_r_07_c_l_a_s_s_1_1_5_08_07_args_8_8_8_08_01const_01_4.htm#ab99bf339a159fa407a13b8cacebc8ee4">plFunctionProperty&lt; R(CLASS::*)(Args...) const &gt;</a>, <a class="el" href="../../db/dfa/classpl_function_property_3_01_r_07_c_l_a_s_s_1_1_5_08_07_args_8_8_8_08_4.htm#a69254815aa12a0b6227563bb3a4cfd38">plFunctionProperty&lt; R(CLASS::*)(Args...)&gt;</a>, <a class="el" href="../../d2/db1/classpl_phantom_function_property.htm#a61a560bd0f774d3914a7eeebacefcf6c">plPhantomFunctionProperty</a>, <a class="el" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#aa77e48bd239c15eb527b88a78b9bbd95">plScriptCoroutineFunctionProperty</a>, and <a class="el" href="../../d9/d25/classpl_visual_script_function_property.htm#a6e7be4bd860bbebb35f5770fcbd9e5b7">plVisualScriptFunctionProperty</a>.</p>

</div>
</div>
<a id="aa762a03b8899ee55f319c9b1a5d47e91" name="aa762a03b8899ee55f319c9b1a5d47e91"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa762a03b8899ee55f319c9b1a5d47e91">&#9670;&#160;</a></span>GetReturnFlags()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; plAbstractFunctionProperty::GetReturnFlags </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns property flags of the return value. </p>

<p>Implemented in <a class="el" href="../../d2/db1/classpl_phantom_function_property.htm#a57176fa38f568a02289c268f42df8a21">plPhantomFunctionProperty</a>, <a class="el" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#ae22fbc93a2e09469fecf3db8b6b2f132">plScriptCoroutineFunctionProperty</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a2caac76c0e0cbec99499ddf804e569ce">plTypedFunctionProperty&lt; R, Args &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a2caac76c0e0cbec99499ddf804e569ce">plTypedFunctionProperty&lt; CLASS *, Args... &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#a2caac76c0e0cbec99499ddf804e569ce">plTypedFunctionProperty&lt; R, Args... &gt;</a>, and <a class="el" href="../../d9/d25/classpl_visual_script_function_property.htm#aba2ce97125c836c5d7d7b02651d2d7e4">plVisualScriptFunctionProperty</a>.</p>

</div>
</div>
<a id="ab92f74cf69aa367442a1abc51b0a7184" name="ab92f74cf69aa367442a1abc51b0a7184"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab92f74cf69aa367442a1abc51b0a7184">&#9670;&#160;</a></span>GetReturnType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> * plAbstractFunctionProperty::GetReturnType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type of the return value. </p>

<p>Implemented in <a class="el" href="../../d2/db1/classpl_phantom_function_property.htm#af746b89cbff6624e385e872d14a3f849">plPhantomFunctionProperty</a>, <a class="el" href="../../d4/dbe/classpl_script_coroutine_function_property.htm#aee6489bb55e3c7780d6b975a2d37cebc">plScriptCoroutineFunctionProperty</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#aa63f9137a8687d4bb5f0e0e1f79eed23">plTypedFunctionProperty&lt; R, Args &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#aa63f9137a8687d4bb5f0e0e1f79eed23">plTypedFunctionProperty&lt; CLASS *, Args... &gt;</a>, <a class="el" href="../../de/db7/classpl_typed_function_property.htm#aa63f9137a8687d4bb5f0e0e1f79eed23">plTypedFunctionProperty&lt; R, Args... &gt;</a>, and <a class="el" href="../../d9/d25/classpl_visual_script_function_property.htm#a6cf9573b006d1421853c31d68eb78645">plVisualScriptFunctionProperty</a>.</p>

</div>
</div>
<a id="abe6e3ed4313e5ad444a598c82d2e716e" name="abe6e3ed4313e5ad444a598c82d2e716e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abe6e3ed4313e5ad444a598c82d2e716e">&#9670;&#160;</a></span>GetSpecificType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> * plAbstractFunctionProperty::GetSpecificType </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dd/d62/classpl_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">plTypedConstantProperty</a>. </p>

<p>Implements <a class="el" href="../../d4/dd7/classpl_abstract_property.htm#acbd1806e4b123998797a4c080ad9fbb1">plAbstractProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../d8/d4a/_abstract_property_8h_source.htm">AbstractProperty.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d7/de1/classpl_abstract_function_property.htm">plAbstractFunctionProperty</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
