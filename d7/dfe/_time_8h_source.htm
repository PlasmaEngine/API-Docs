<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/Time/Time.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d7/dfe/_time_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Time.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Configuration/StaticSubSystem.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="foldopen" id="foldopen00011" data-start="{" data-end="};">
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm">   11</a></span><span class="keyword">struct </span>PL_FOUNDATION_DLL <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> Now(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#ac5f427a49626075d6f5eb9978bab8c25">   18</a></span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#ac5f427a49626075d6f5eb9978bab8c25">MakeFromNanoseconds</a>(<span class="keywordtype">double</span> fNanoseconds) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fNanoseconds * 0.000000001); }</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> Nanoseconds(<span class="keywordtype">double</span> fNanoseconds) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fNanoseconds * 0.000000001); }</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#ab0bdbb8d9dd869dd2b7a578b9add7275">   22</a></span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#ab0bdbb8d9dd869dd2b7a578b9add7275">MakeFromMicroseconds</a>(<span class="keywordtype">double</span> fMicroseconds) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fMicroseconds * 0.000001); }</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> Microseconds(<span class="keywordtype">double</span> fMicroseconds) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fMicroseconds * 0.000001); }</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a29173814b302afee5a23a6c679cabc6a">   26</a></span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a29173814b302afee5a23a6c679cabc6a">MakeFromMilliseconds</a>(<span class="keywordtype">double</span> fMilliseconds) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fMilliseconds * 0.001); }</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> Milliseconds(<span class="keywordtype">double</span> fMilliseconds) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fMilliseconds * 0.001); }</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a3d1efa40afb39795fad0f3b6401626f1">   30</a></span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a3d1efa40afb39795fad0f3b6401626f1">MakeFromSeconds</a>(<span class="keywordtype">double</span> fSeconds) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fSeconds); }</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> Seconds(<span class="keywordtype">double</span> fSeconds) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fSeconds); }</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#afd7fbbaff9829b1af9a4e9a80c4b9d90">   34</a></span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#afd7fbbaff9829b1af9a4e9a80c4b9d90">MakeFromMinutes</a>(<span class="keywordtype">double</span> fMinutes) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fMinutes * 60); }</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> Minutes(<span class="keywordtype">double</span> fMinutes) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fMinutes * 60); }</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a6d287b2e1140c1614ae9af7a3f970b59">   38</a></span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a6d287b2e1140c1614ae9af7a3f970b59">MakeFromHours</a>(<span class="keywordtype">double</span> fHours) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fHours * 60 * 60); }</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> Hours(<span class="keywordtype">double</span> fHours) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(fHours * 60 * 60); }</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a48cd39d05bfa55f8504cc3c056576c9e">   42</a></span>  [[nodiscard]] PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a48cd39d05bfa55f8504cc3c056576c9e">MakeZero</a>() { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(0.0); }</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  PL_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a3a6f5f72a4ffefb7fa0bb9b44a28d4e4">   47</a></span>  PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a3a6f5f72a4ffefb7fa0bb9b44a28d4e4">plTime</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a8f033fc0c2f036c606c1a15673ad435e">   50</a></span>  PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a8f033fc0c2f036c606c1a15673ad435e">IsZero</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime == 0.0; }</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a3bd5e8c7cea2d78490c996933bc93ef9">   53</a></span>  PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a3bd5e8c7cea2d78490c996933bc93ef9">IsNegative</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime &lt; 0.0; }</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a00185c6e27ce5252f72a942ebb0966f9">   56</a></span>  PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a00185c6e27ce5252f72a942ebb0966f9">IsPositive</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime &gt; 0.0; }</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a3480b7af9b914d2b316ee190205d5e34">   59</a></span>  PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a3480b7af9b914d2b316ee190205d5e34">IsZeroOrNegative</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime &lt;= 0.0; }</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="../../d1/df6/structpl_time.htm#a962c549d5399bc05f4c82ef7d201aef9">   62</a></span>  PL_ALWAYS_INLINE <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df6/structpl_time.htm#a962c549d5399bc05f4c82ef7d201aef9">IsZeroOrPositive</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime &gt;= 0.0; }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keyword">constexpr</span> <span class="keywordtype">float</span> AsFloatInSeconds() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keyword">constexpr</span> <span class="keywordtype">double</span> GetNanoseconds() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <span class="keyword">constexpr</span> <span class="keywordtype">double</span> GetMicroseconds() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keyword">constexpr</span> <span class="keywordtype">double</span> GetMilliseconds() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="keyword">constexpr</span> <span class="keywordtype">double</span> GetSeconds() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  <span class="keyword">constexpr</span> <span class="keywordtype">double</span> GetMinutes() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keyword">constexpr</span> <span class="keywordtype">double</span> GetHours() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keyword">constexpr</span> <span class="keywordtype">void</span> operator-=(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; other);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keyword">constexpr</span> <span class="keywordtype">void</span> operator+=(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; other);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keyword">constexpr</span> <span class="keywordtype">void</span> operator*=(<span class="keywordtype">double</span> fFactor);</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keyword">constexpr</span> <span class="keywordtype">void</span> operator/=(<span class="keywordtype">double</span> fFactor);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator-(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; other) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator+(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; other) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator-() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; rhs)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime &lt; rhs.m_fTime; }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator&lt;=(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; rhs)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime &lt;= rhs.m_fTime; }</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator&gt;(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; rhs)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime &gt; rhs.m_fTime; }</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator&gt;=(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; rhs)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime &gt;= rhs.m_fTime; }</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; rhs)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime == rhs.m_fTime; }</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>&amp; rhs)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_fTime != rhs.m_fTime; }</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a>(<span class="keywordtype">double</span> fTime);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="keywordtype">double</span> m_fTime = 0.0;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  PL_MAKE_SUBSYSTEM_STARTUP_FRIEND(Foundation, Time);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> Initialize();</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>};</div>
</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span><span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator*(<a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> t, <span class="keywordtype">double</span> f);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span><span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator*(<span class="keywordtype">double</span> f, <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> t);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator*(<a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> f, <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> t); <span class="comment">// not physically correct, but useful (should result in seconds squared)</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span><span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator/(<a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> t, <span class="keywordtype">double</span> f);</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span><span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator/(<span class="keywordtype">double</span> f, <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> t);</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span><span class="keyword">constexpr</span> <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> operator/(<a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> f, <a class="code hl_struct" href="../../d1/df6/structpl_time.htm">plTime</a> t); <span class="comment">// not physically correct, but useful (should result in a value without a unit)</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span><span class="preprocessor">#include &lt;Foundation/Time/Implementation/Time_inl.h&gt;</span></div>
<div class="ttc" id="astructpl_time_htm"><div class="ttname"><a href="../../d1/df6/structpl_time.htm">plTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition</b> Time.h:12</div></div>
<div class="ttc" id="astructpl_time_htm_a00185c6e27ce5252f72a942ebb0966f9"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a00185c6e27ce5252f72a942ebb0966f9">plTime::IsPositive</a></div><div class="ttdeci">PL_ALWAYS_INLINE constexpr bool IsPositive() const</div><div class="ttdoc">Checks for a positive time value. This does not include zero.</div><div class="ttdef"><b>Definition</b> Time.h:56</div></div>
<div class="ttc" id="astructpl_time_htm_a29173814b302afee5a23a6c679cabc6a"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a29173814b302afee5a23a6c679cabc6a">plTime::MakeFromMilliseconds</a></div><div class="ttdeci">PL_ALWAYS_INLINE static constexpr plTime MakeFromMilliseconds(double fMilliseconds)</div><div class="ttdoc">Creates an instance of plTime that was initialized from milliseconds.</div><div class="ttdef"><b>Definition</b> Time.h:26</div></div>
<div class="ttc" id="astructpl_time_htm_a3480b7af9b914d2b316ee190205d5e34"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a3480b7af9b914d2b316ee190205d5e34">plTime::IsZeroOrNegative</a></div><div class="ttdeci">PL_ALWAYS_INLINE constexpr bool IsZeroOrNegative() const</div><div class="ttdoc">Returns true if the stored time is zero or negative.</div><div class="ttdef"><b>Definition</b> Time.h:59</div></div>
<div class="ttc" id="astructpl_time_htm_a3a6f5f72a4ffefb7fa0bb9b44a28d4e4"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a3a6f5f72a4ffefb7fa0bb9b44a28d4e4">plTime::plTime</a></div><div class="ttdeci">PL_ALWAYS_INLINE constexpr plTime()=default</div><div class="ttdoc">The default constructor sets the time to zero.</div></div>
<div class="ttc" id="astructpl_time_htm_a3bd5e8c7cea2d78490c996933bc93ef9"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a3bd5e8c7cea2d78490c996933bc93ef9">plTime::IsNegative</a></div><div class="ttdeci">PL_ALWAYS_INLINE constexpr bool IsNegative() const</div><div class="ttdoc">Checks for a negative time value.</div><div class="ttdef"><b>Definition</b> Time.h:53</div></div>
<div class="ttc" id="astructpl_time_htm_a3d1efa40afb39795fad0f3b6401626f1"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a3d1efa40afb39795fad0f3b6401626f1">plTime::MakeFromSeconds</a></div><div class="ttdeci">PL_ALWAYS_INLINE static constexpr plTime MakeFromSeconds(double fSeconds)</div><div class="ttdoc">Creates an instance of plTime that was initialized from seconds.</div><div class="ttdef"><b>Definition</b> Time.h:30</div></div>
<div class="ttc" id="astructpl_time_htm_a48cd39d05bfa55f8504cc3c056576c9e"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a48cd39d05bfa55f8504cc3c056576c9e">plTime::MakeZero</a></div><div class="ttdeci">PL_ALWAYS_INLINE static constexpr plTime MakeZero()</div><div class="ttdoc">Creates an instance of plTime that was initialized with zero.</div><div class="ttdef"><b>Definition</b> Time.h:42</div></div>
<div class="ttc" id="astructpl_time_htm_a6d287b2e1140c1614ae9af7a3f970b59"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a6d287b2e1140c1614ae9af7a3f970b59">plTime::MakeFromHours</a></div><div class="ttdeci">PL_ALWAYS_INLINE static constexpr plTime MakeFromHours(double fHours)</div><div class="ttdoc">Creates an instance of plTime that was initialized from hours.</div><div class="ttdef"><b>Definition</b> Time.h:38</div></div>
<div class="ttc" id="astructpl_time_htm_a8f033fc0c2f036c606c1a15673ad435e"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a8f033fc0c2f036c606c1a15673ad435e">plTime::IsZero</a></div><div class="ttdeci">PL_ALWAYS_INLINE constexpr bool IsZero() const</div><div class="ttdoc">Returns true if the stored time is exactly zero. That typically means the value was not changed from ...</div><div class="ttdef"><b>Definition</b> Time.h:50</div></div>
<div class="ttc" id="astructpl_time_htm_a962c549d5399bc05f4c82ef7d201aef9"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#a962c549d5399bc05f4c82ef7d201aef9">plTime::IsZeroOrPositive</a></div><div class="ttdeci">PL_ALWAYS_INLINE constexpr bool IsZeroOrPositive() const</div><div class="ttdoc">Returns true if the stored time is zero or positive.</div><div class="ttdef"><b>Definition</b> Time.h:62</div></div>
<div class="ttc" id="astructpl_time_htm_ab0bdbb8d9dd869dd2b7a578b9add7275"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#ab0bdbb8d9dd869dd2b7a578b9add7275">plTime::MakeFromMicroseconds</a></div><div class="ttdeci">PL_ALWAYS_INLINE static constexpr plTime MakeFromMicroseconds(double fMicroseconds)</div><div class="ttdoc">Creates an instance of plTime that was initialized from microseconds.</div><div class="ttdef"><b>Definition</b> Time.h:22</div></div>
<div class="ttc" id="astructpl_time_htm_ac5f427a49626075d6f5eb9978bab8c25"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#ac5f427a49626075d6f5eb9978bab8c25">plTime::MakeFromNanoseconds</a></div><div class="ttdeci">PL_ALWAYS_INLINE static constexpr plTime MakeFromNanoseconds(double fNanoseconds)</div><div class="ttdoc">Creates an instance of plTime that was initialized from nanoseconds.</div><div class="ttdef"><b>Definition</b> Time.h:18</div></div>
<div class="ttc" id="astructpl_time_htm_afd7fbbaff9829b1af9a4e9a80c4b9d90"><div class="ttname"><a href="../../d1/df6/structpl_time.htm#afd7fbbaff9829b1af9a4e9a80c4b9d90">plTime::MakeFromMinutes</a></div><div class="ttdeci">PL_ALWAYS_INLINE static constexpr plTime MakeFromMinutes(double fMinutes)</div><div class="ttdoc">Creates an instance of plTime that was initialized from minutes.</div><div class="ttdef"><b>Definition</b> Time.h:34</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_9029fef5605009259072bed4f2175481.htm">Time</a></li><li class="navelem"><b>Time.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
