<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/SimdMath/Implementation/SimdMath_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d3/df3/_simd_math__inl_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">SimdMath_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">// static</span></div>
<div class="foldopen" id="foldopen00006" data-start="{" data-end="}">
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno"><a class="line" href="../../d9/d3b/structpl_simd_math.htm#a61c7bfcd269da853c13da379af5e350e">    6</a></span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> <a class="code hl_function" href="../../d9/d3b/structpl_simd_math.htm#a61c7bfcd269da853c13da379af5e350e">plSimdMath::Exp</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_MSVC) &amp;&amp; PL_SIMD_IMPLEMENTATION == PL_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  <span class="keywordflow">return</span> _mm_exp_ps(f.m_v);</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(plMath::Exp(f.x()), plMath::Exp(f.y()), plMath::Exp(f.z()), plMath::Exp(f.w()));</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>}</div>
</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment">// static</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::Ln(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>{</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_MSVC) &amp;&amp; PL_SIMD_IMPLEMENTATION == PL_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="keywordflow">return</span> _mm_log_ps(f.m_v);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(plMath::Ln(f.x()), plMath::Ln(f.y()), plMath::Ln(f.z()), plMath::Ln(f.w()));</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>}</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="comment">// static</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::Log2(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>{</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_MSVC) &amp;&amp; PL_SIMD_IMPLEMENTATION == PL_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keywordflow">return</span> _mm_log2_ps(f.m_v);</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(plMath::Log2(f.x()), plMath::Log2(f.y()), plMath::Log2(f.z()), plMath::Log2(f.w()));</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>}</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="comment">// static</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d0/d45/classpl_simd_vec4i.htm">plSimdVec4i</a> plSimdMath::Log2i(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d45/classpl_simd_vec4i.htm">plSimdVec4i</a>&amp; i)</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>{</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d0/d45/classpl_simd_vec4i.htm">plSimdVec4i</a>(<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ada25e7495cb20e9d0d07f58c735a9115">plMath::Log2i</a>(i.x()), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ada25e7495cb20e9d0d07f58c735a9115">plMath::Log2i</a>(i.y()), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ada25e7495cb20e9d0d07f58c735a9115">plMath::Log2i</a>(i.z()), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ada25e7495cb20e9d0d07f58c735a9115">plMath::Log2i</a>(i.w()));</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>}</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="comment">// static</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::Log10(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>{</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_MSVC) &amp;&amp; PL_SIMD_IMPLEMENTATION == PL_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keywordflow">return</span> _mm_log10_ps(f.m_v);</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(plMath::Log10(f.x()), plMath::Log10(f.y()), plMath::Log10(f.z()), plMath::Log10(f.w()));</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>}</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="comment">// static</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::Pow2(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>{</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_MSVC) &amp;&amp; PL_SIMD_IMPLEMENTATION == PL_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keywordflow">return</span> _mm_exp2_ps(f.m_v);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(plMath::Pow2(f.x()), plMath::Pow2(f.y()), plMath::Pow2(f.z()), plMath::Pow2(f.w()));</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>}</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="comment">// static</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::Sin(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>{</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_MSVC) &amp;&amp; PL_SIMD_IMPLEMENTATION == PL_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keywordflow">return</span> _mm_sin_ps(f.m_v);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a3c10f39a9283445ab6001096104bb153">plMath::Sin</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.x())), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a3c10f39a9283445ab6001096104bb153">plMath::Sin</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.y())), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a3c10f39a9283445ab6001096104bb153">plMath::Sin</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.z())),</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a3c10f39a9283445ab6001096104bb153">plMath::Sin</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.w())));</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>}</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span><span class="comment">// static</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::Cos(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>{</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_MSVC) &amp;&amp; PL_SIMD_IMPLEMENTATION == PL_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keywordflow">return</span> _mm_cos_ps(f.m_v);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ac9493ece7e4354a37df97ed08bb26eac">plMath::Cos</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.x())), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ac9493ece7e4354a37df97ed08bb26eac">plMath::Cos</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.y())), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ac9493ece7e4354a37df97ed08bb26eac">plMath::Cos</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.z())),</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#ac9493ece7e4354a37df97ed08bb26eac">plMath::Cos</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.w())));</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>}</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="comment">// static</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::Tan(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>{</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span><span class="preprocessor">#if PL_ENABLED(PL_COMPILER_MSVC) &amp;&amp; PL_SIMD_IMPLEMENTATION == PL_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keywordflow">return</span> _mm_tan_ps(f.m_v);</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9642f34bcdd7dae2a75a3b5cd9f944fc">plMath::Tan</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.x())), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9642f34bcdd7dae2a75a3b5cd9f944fc">plMath::Tan</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.y())), <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9642f34bcdd7dae2a75a3b5cd9f944fc">plMath::Tan</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.z())),</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a9642f34bcdd7dae2a75a3b5cd9f944fc">plMath::Tan</a>(<a class="code hl_function" href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a>(f.w())));</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>}</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="comment">// static</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>PL_ALWAYS_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::ASin(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>{</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a04fa861cad77751490be4cdd83983e75">plMath::Pi&lt;float&gt;</a>() * 0.5f) - ACos(f);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>}</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span><span class="comment">// 4th order polynomial approximation</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="comment">// 7 * 10^-5 radians precision</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="comment">// Reference : Handbook of Mathematical Functions (chapter : Elementary Transcendental Functions), M. Abramowitz and I.A. Stegun, Ed.</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="comment">// static</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::ACos(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>{</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> x1 = f.Abs();</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> x2 = x1.CompMul(x1);</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> x3 = x2.CompMul(x1);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> s = x1 * -0.2121144f + <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(1.5707288f);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  s += x2 * 0.0742610f;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  s += x3 * -0.0187293f;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  s = s.CompMul((<a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(1.0f) - x1).GetSqrt());</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  <span class="keywordflow">return</span> plSimdVec4f::Select(f &gt;= <a class="code hl_function" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a>(), s, <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a04fa861cad77751490be4cdd83983e75">plMath::Pi&lt;float&gt;</a>()) - s);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>}</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="comment">// Reference: https://seblagarde.wordpress.com/2014/12/01/inverse-trigonometric-functions-gpu-optimization-for-amd-gcn-architecture/</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="comment">// static</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>PL_FORCE_INLINE <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> plSimdMath::ATan(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>&amp; f)</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>{</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> x = f.Abs();</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> t0 = plSimdVec4f::Select(x &lt; <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(1.0f), x, x.GetReciprocal());</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> t1 = t0.CompMul(t0);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a> poly = <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(0.0872929f);</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  poly = <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(-0.301895f) + poly.CompMul(t1);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  poly = <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(1.0f) + poly.CompMul(t1);</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  poly = poly.CompMul(t0);</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  t0 = plSimdVec4f::Select(x &lt; <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(1.0f), poly, <a class="code hl_class" href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a>(<a class="code hl_function" href="../../d1/dbc/namespacepl_math.htm#a04fa861cad77751490be4cdd83983e75">plMath::Pi&lt;float&gt;</a>() * 0.5f) - poly);</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="keywordflow">return</span> plSimdVec4f::Select(f &lt; <a class="code hl_function" href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a>(), -t0, t0);</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>}</div>
<div class="ttc" id="aclasspl_angle_htm_ab466b5d88e7338a52a22aeb172697495"><div class="ttname"><a href="../../d4/dfd/classpl_angle.htm#ab466b5d88e7338a52a22aeb172697495">plAngle::MakeFromRadian</a></div><div class="ttdeci">static constexpr plAngle MakeFromRadian(float fRadian)</div><div class="ttdoc">Creates an instance of plAngle that was initialized from radian. (No need for any conversion)</div><div class="ttdef"><b>Definition</b> Angle_inl.h:38</div></div>
<div class="ttc" id="aclasspl_simd_vec4f_htm"><div class="ttname"><a href="../../d6/dc1/classpl_simd_vec4f.htm">plSimdVec4f</a></div><div class="ttdoc">A 4-component SIMD vector class.</div><div class="ttdef"><b>Definition</b> SimdVec4f.h:8</div></div>
<div class="ttc" id="aclasspl_simd_vec4f_htm_a9079be9cc5ff9c8644d5a275f1099c0f"><div class="ttname"><a href="../../d6/dc1/classpl_simd_vec4f.htm#a9079be9cc5ff9c8644d5a275f1099c0f">plSimdVec4f::MakeZero</a></div><div class="ttdeci">static plSimdVec4f MakeZero()</div><div class="ttdoc">Creates an plSimdVec4f that is initialized to zero.</div><div class="ttdef"><b>Definition</b> SimdVec4f_inl.h:8</div></div>
<div class="ttc" id="aclasspl_simd_vec4i_htm"><div class="ttname"><a href="../../d0/d45/classpl_simd_vec4i.htm">plSimdVec4i</a></div><div class="ttdoc">A SIMD 4-component vector class of signed 32b integers.</div><div class="ttdef"><b>Definition</b> SimdVec4i.h:9</div></div>
<div class="ttc" id="anamespacepl_math_htm_a04fa861cad77751490be4cdd83983e75"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a04fa861cad77751490be4cdd83983e75">plMath::Pi</a></div><div class="ttdeci">constexpr TYPE Pi()</div><div class="ttdoc">Returns the natural constant Pi.</div></div>
<div class="ttc" id="anamespacepl_math_htm_a3c10f39a9283445ab6001096104bb153"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a3c10f39a9283445ab6001096104bb153">plMath::Sin</a></div><div class="ttdeci">PL_ALWAYS_INLINE float Sin(plAngle a)</div><div class="ttdoc">***** Trigonometric Functions *****</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:62</div></div>
<div class="ttc" id="anamespacepl_math_htm_a9642f34bcdd7dae2a75a3b5cd9f944fc"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#a9642f34bcdd7dae2a75a3b5cd9f944fc">plMath::Tan</a></div><div class="ttdeci">PL_ALWAYS_INLINE float Tan(plAngle a)</div><div class="ttdoc">Takes an angle, returns its tangent.</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:72</div></div>
<div class="ttc" id="anamespacepl_math_htm_ac9493ece7e4354a37df97ed08bb26eac"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ac9493ece7e4354a37df97ed08bb26eac">plMath::Cos</a></div><div class="ttdeci">PL_ALWAYS_INLINE float Cos(plAngle a)</div><div class="ttdoc">Takes an angle, returns its cosine.</div><div class="ttdef"><b>Definition</b> MathFloat_inl.h:67</div></div>
<div class="ttc" id="anamespacepl_math_htm_ada25e7495cb20e9d0d07f58c735a9115"><div class="ttname"><a href="../../d1/dbc/namespacepl_math.htm#ada25e7495cb20e9d0d07f58c735a9115">plMath::Log2i</a></div><div class="ttdeci">PL_ALWAYS_INLINE plUInt32 Log2i(plUInt32 uiVal)</div><div class="ttdoc">Returns the integral logarithm to the base 2, that comes closest to the given integer.</div><div class="ttdef"><b>Definition</b> MathInt32_inl.h:41</div></div>
<div class="ttc" id="astructpl_simd_math_htm_a61c7bfcd269da853c13da379af5e350e"><div class="ttname"><a href="../../d9/d3b/structpl_simd_math.htm#a61c7bfcd269da853c13da379af5e350e">plSimdMath::Exp</a></div><div class="ttdeci">static plSimdVec4f Exp(const plSimdVec4f &amp;f)</div><div class="ttdef"><b>Definition</b> SimdMath_inl.h:6</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_e0773f6bc48aee020523ff8d30d00c02.htm">SimdMath</a></li><li class="navelem"><a class="el" href="../../dir_3ba8ecdc8c842079897e8785b600fb10.htm">Implementation</a></li><li class="navelem"><b>SimdMath_inl.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
