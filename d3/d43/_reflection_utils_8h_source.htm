<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: Code/Engine/Foundation/Reflection/ReflectionUtils.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d3/d43/_reflection_utils_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ReflectionUtils.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Containers/Set.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="keyword">class </span><a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>;</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">class </span><a class="code hl_class" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a>;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="foldopen" id="foldopen00010" data-start="{" data-end="};">
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno"><a class="line" href="../../d6/ddb/classpl_reflection_utils.htm">   10</a></span><span class="keyword">class </span>PL_FOUNDATION_DLL <a class="code hl_class" href="../../d6/ddb/classpl_reflection_utils.htm">plReflectionUtils</a></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* GetCommonBaseType(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti1, <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti2);</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsBasicType(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti);</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsValueType(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a>* pProp);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* GetTypeFromVariant(<span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; value);</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* GetTypeFromVariant(<a class="code hl_enumeration" href="../../d6/d1e/structpl_variant_type.htm#a4d10a99c083abdf7283ab1f48565de12">plVariantType::Enum</a> type);</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keyword">static</span> plUInt32 GetComponentCount(<a class="code hl_enumeration" href="../../d6/d1e/structpl_variant_type.htm#a4d10a99c083abdf7283ab1f48565de12">plVariantType::Enum</a> type);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> SetComponent(<a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; ref_vector, plUInt32 uiComponent, <span class="keywordtype">double</span> fValue);                             <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <span class="keyword">static</span> <span class="keywordtype">double</span> GetComponent(<span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; vector, plUInt32 uiComponent);</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a> GetMemberPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject);              <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> SetMemberPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; value); <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a> GetArrayPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4a/classpl_abstract_array_property.htm">plAbstractArrayProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, plUInt32 uiIndex);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> SetArrayPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4a/classpl_abstract_array_property.htm">plAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, plUInt32 uiIndex, <span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; value);</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> InsertSetPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../de/dec/classpl_abstract_set_property.htm">plAbstractSetProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; value);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> RemoveSetPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../de/dec/classpl_abstract_set_property.htm">plAbstractSetProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; value);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a> GetMapPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/dfe/classpl_abstract_map_property.htm">plAbstractMapProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> SetMapPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/dfe/classpl_abstract_map_property.htm">plAbstractMapProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey, <span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; value);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> InsertArrayPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4a/classpl_abstract_array_property.htm">plAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; value, plUInt32 uiIndex);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> RemoveArrayPropertyValue(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4a/classpl_abstract_array_property.htm">plAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, plUInt32 uiIndex);</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a>* GetMemberProperty(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti, plUInt32 uiPropertyIndex);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a>* GetMemberProperty(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti, <span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName); <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> GatherTypesDerivedFromClass(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti, <a class="code hl_class" href="../../d5/da6/classpl_set.htm">plSet&lt;const plRTTI*&gt;</a>&amp; out_types);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> GatherDependentTypes(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti, <a class="code hl_class" href="../../d5/da6/classpl_set.htm">plSet&lt;const plRTTI*&gt;</a>&amp; inout_typesAsSet, <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plRTTI*&gt;</a>* out_pTypesAsStack = <span class="keyword">nullptr</span>);</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  <span class="keyword">static</span> <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> CreateDependencySortedTypeArray(<span class="keyword">const</span> <a class="code hl_class" href="../../d5/da6/classpl_set.htm">plSet&lt;const plRTTI*&gt;</a>&amp; types, <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;const plRTTI*&gt;</a>&amp; out_sortedTypes);</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="foldopen" id="foldopen00072" data-start="{" data-end="};">
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno"><a class="line" href="../../d6/dd0/structpl_reflection_utils_1_1_enum_conversion_mode.htm">   72</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d6/dd0/structpl_reflection_utils_1_1_enum_conversion_mode.htm">EnumConversionMode</a></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    <span class="keyword">enum</span> Enum</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    {</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>      FullyQualifiedName,</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      ValueNameOnly,</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>      Default = FullyQualifiedName</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    };</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="keyword">using </span>StorageType = plUInt8;</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  };</div>
</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> EnumerationToString(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pEnumerationRtti, plInt64 iValue, <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp; out_sOutput,</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00092" data-start="{" data-end="}">
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="../../d6/ddb/classpl_reflection_utils.htm#ab7164a9239b7cc29dfc6a0c5a64a1295">   92</a></span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/ddb/classpl_reflection_utils.htm#ab7164a9239b7cc29dfc6a0c5a64a1295">EnumerationToString</a>(<a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;T&gt;</a> value, <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp; out_sOutput, <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default)</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  {</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    <span class="keywordflow">return</span> EnumerationToString(plGetStaticRTTI&lt;T&gt;(), value.<a class="code hl_function" href="../../dd/d09/structpl_enum.htm#a340dcb34fa90dd6a6391502bbe933baf">GetValue</a>(), out_sOutput, conversionMode);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  }</div>
</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00099" data-start="{" data-end="}">
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="../../d6/ddb/classpl_reflection_utils.htm#a2527bb557e85599b3f41b93aad9e19c0">   99</a></span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/ddb/classpl_reflection_utils.htm#a2527bb557e85599b3f41b93aad9e19c0">BitflagsToString</a>(<a class="code hl_struct" href="../../df/dd9/structpl_bitflags.htm">plBitflags&lt;T&gt;</a> value, <a class="code hl_class" href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a>&amp; out_sOutput, <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default)</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  {</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    <span class="keywordflow">return</span> EnumerationToString(plGetStaticRTTI&lt;T&gt;(), value.<a class="code hl_function" href="../../df/dd9/structpl_bitflags.htm#a7c3acbd9555515e4940049aa02e742f3">GetValue</a>(), out_sOutput, conversionMode);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  }</div>
</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="foldopen" id="foldopen00104" data-start="{" data-end="};">
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno"><a class="line" href="../../d6/d8a/structpl_reflection_utils_1_1_enum_key_value_pair.htm">  104</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d6/d8a/structpl_reflection_utils_1_1_enum_key_value_pair.htm">EnumKeyValuePair</a></div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  {</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    <a class="code hl_class" href="../../d2/dea/structpl_hybrid_string.htm">plString</a> m_sKey;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    plInt32 m_iValue = 0;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  };</div>
</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> GetEnumKeysAndValues(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pEnumerationRtti, <a class="code hl_class" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray&lt;EnumKeyValuePair&gt;</a>&amp; ref_entries, <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default);</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> StringToEnumeration(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pEnumerationRtti, <span class="keyword">const</span> <span class="keywordtype">char</span>* szValue, plInt64&amp; out_iValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00120" data-start="{" data-end="}">
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno"><a class="line" href="../../d6/ddb/classpl_reflection_utils.htm#ada9c7a33f717231e1c9e1070badec396">  120</a></span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/ddb/classpl_reflection_utils.htm#ada9c7a33f717231e1c9e1070badec396">StringToEnumeration</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szValue, <a class="code hl_struct" href="../../dd/d09/structpl_enum.htm">plEnum&lt;T&gt;</a>&amp; out_value)</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  {</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>    plInt64 value;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    <span class="keyword">const</span> <span class="keyword">auto</span> retval = StringToEnumeration(plGetStaticRTTI&lt;T&gt;(), szValue, value);</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    out_value = <span class="keyword">static_cast&lt;</span>typename T::Enum<span class="keyword">&gt;</span>(value);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>    <span class="keywordflow">return</span> retval;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  }</div>
</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keyword">static</span> plInt64 DefaultEnumerationValue(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pEnumerationRtti); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="keyword">static</span> plInt64 MakeEnumerationValid(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pEnumerationRtti, plInt64 iValue); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00138" data-start="{" data-end="}">
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="../../d6/ddb/classpl_reflection_utils.htm#a149d5808a3c65de320dcdcc4def021a4">  138</a></span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/ddb/classpl_reflection_utils.htm#a149d5808a3c65de320dcdcc4def021a4">IsEqual</a>(<span class="keyword">const</span> T* pObject, <span class="keyword">const</span> T* pObject2)</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    <span class="keywordflow">return</span> IsEqual(pObject, pObject2, plGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  }</div>
</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject2, <span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pType); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject2, <span class="keyword">const</span> <a class="code hl_class" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a>* pProp);</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> DeleteObject(<span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code hl_class" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a>* pOwnerProperty);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a> GetDefaultVariantFromType(<a class="code hl_enumeration" href="../../d6/d1e/structpl_variant_type.htm#a4d10a99c083abdf7283ab1f48565de12">plVariant::Type::Enum</a> type); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a> GetDefaultVariantFromType(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti);</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a> GetDefaultValue(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a>* pProperty, <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a> index = <a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>());</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> SetAllMemberPropertiesToDefault(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a>* pRtti, <span class="keywordtype">void</span>* pObject);</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  <span class="keyword">static</span> <a class="code hl_struct" href="../../da/dce/structpl_result.htm">plResult</a> ClampValue(<a class="code hl_class" href="../../da/d4c/classpl_variant.htm">plVariant</a>&amp; value, <span class="keyword">const</span> <a class="code hl_class" href="../../d8/da7/classpl_clamp_value_attribute.htm">plClampValueAttribute</a>* pAttrib);</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>};</div>
</div>
<div class="ttc" id="aclasspl_abstract_array_property_htm"><div class="ttname"><a href="../../dc/d4a/classpl_abstract_array_property.htm">plAbstractArrayProperty</a></div><div class="ttdoc">The base class for a property that represents an array of values.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:273</div></div>
<div class="ttc" id="aclasspl_abstract_map_property_htm"><div class="ttname"><a href="../../d1/dfe/classpl_abstract_map_property.htm">plAbstractMapProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:348</div></div>
<div class="ttc" id="aclasspl_abstract_member_property_htm"><div class="ttname"><a href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a></div><div class="ttdoc">This is the base class for all properties that are members of a class. It provides more information a...</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:237</div></div>
<div class="ttc" id="aclasspl_abstract_property_htm"><div class="ttname"><a href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></div><div class="ttdoc">This is the base interface for all properties in the reflection system. It provides enough informatio...</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:150</div></div>
<div class="ttc" id="aclasspl_abstract_set_property_htm"><div class="ttname"><a href="../../de/dec/classpl_abstract_set_property.htm">plAbstractSetProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:313</div></div>
<div class="ttc" id="aclasspl_clamp_value_attribute_htm"><div class="ttname"><a href="../../d8/da7/classpl_clamp_value_attribute.htm">plClampValueAttribute</a></div><div class="ttdoc">A property attribute that allows to define min and max values for the UI. Min or max may be set to an...</div><div class="ttdef"><b>Definition</b> PropertyAttributes.h:216</div></div>
<div class="ttc" id="aclasspl_dynamic_array_htm"><div class="ttname"><a href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="aclasspl_r_t_t_i_htm"><div class="ttname"><a href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclasspl_reflection_utils_htm"><div class="ttname"><a href="../../d6/ddb/classpl_reflection_utils.htm">plReflectionUtils</a></div><div class="ttdoc">Helper functions for handling reflection related operations.</div><div class="ttdef"><b>Definition</b> ReflectionUtils.h:11</div></div>
<div class="ttc" id="aclasspl_reflection_utils_htm_a149d5808a3c65de320dcdcc4def021a4"><div class="ttname"><a href="../../d6/ddb/classpl_reflection_utils.htm#a149d5808a3c65de320dcdcc4def021a4">plReflectionUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *pObject, const T *pObject2)</div><div class="ttdoc">Templated convenience function that calls IsEqual and automatically deduces the type.</div><div class="ttdef"><b>Definition</b> ReflectionUtils.h:138</div></div>
<div class="ttc" id="aclasspl_reflection_utils_htm_a2527bb557e85599b3f41b93aad9e19c0"><div class="ttname"><a href="../../d6/ddb/classpl_reflection_utils.htm#a2527bb557e85599b3f41b93aad9e19c0">plReflectionUtils::BitflagsToString</a></div><div class="ttdeci">static bool BitflagsToString(plBitflags&lt; T &gt; value, plStringBuilder &amp;out_sOutput, plEnum&lt; EnumConversionMode &gt; conversionMode=EnumConversionMode::Default)</div><div class="ttdoc">Helper template to shorten the call for plBitflags.</div><div class="ttdef"><b>Definition</b> ReflectionUtils.h:99</div></div>
<div class="ttc" id="aclasspl_reflection_utils_htm_ab7164a9239b7cc29dfc6a0c5a64a1295"><div class="ttname"><a href="../../d6/ddb/classpl_reflection_utils.htm#ab7164a9239b7cc29dfc6a0c5a64a1295">plReflectionUtils::EnumerationToString</a></div><div class="ttdeci">static bool EnumerationToString(plEnum&lt; T &gt; value, plStringBuilder &amp;out_sOutput, plEnum&lt; EnumConversionMode &gt; conversionMode=EnumConversionMode::Default)</div><div class="ttdoc">Helper template to shorten the call for plEnums.</div><div class="ttdef"><b>Definition</b> ReflectionUtils.h:92</div></div>
<div class="ttc" id="aclasspl_reflection_utils_htm_ada9c7a33f717231e1c9e1070badec396"><div class="ttname"><a href="../../d6/ddb/classpl_reflection_utils.htm#ada9c7a33f717231e1c9e1070badec396">plReflectionUtils::StringToEnumeration</a></div><div class="ttdeci">static bool StringToEnumeration(const char *szValue, plEnum&lt; T &gt; &amp;out_value)</div><div class="ttdoc">Helper template to shorten the call for plEnums.</div><div class="ttdef"><b>Definition</b> ReflectionUtils.h:120</div></div>
<div class="ttc" id="aclasspl_set_htm"><div class="ttname"><a href="../../d5/da6/classpl_set.htm">plSet</a></div><div class="ttdef"><b>Definition</b> Set.h:238</div></div>
<div class="ttc" id="aclasspl_string_builder_htm"><div class="ttname"><a href="../../d3/d2d/classpl_string_builder.htm">plStringBuilder</a></div><div class="ttdoc">plStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclasspl_variant_htm"><div class="ttname"><a href="../../da/d4c/classpl_variant.htm">plVariant</a></div><div class="ttdoc">plVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="astructpl_bitflags_htm"><div class="ttname"><a href="../../df/dd9/structpl_bitflags.htm">plBitflags</a></div><div class="ttdoc">The plBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition</b> Bitflags.h:82</div></div>
<div class="ttc" id="astructpl_bitflags_htm_a7c3acbd9555515e4940049aa02e742f3"><div class="ttname"><a href="../../df/dd9/structpl_bitflags.htm#a7c3acbd9555515e4940049aa02e742f3">plBitflags::GetValue</a></div><div class="ttdeci">PL_ALWAYS_INLINE StorageType GetValue() const</div><div class="ttdoc">Returns the stored value as the underlying integer type.</div><div class="ttdef"><b>Definition</b> Bitflags.h:199</div></div>
<div class="ttc" id="astructpl_enum_htm"><div class="ttname"><a href="../../dd/d09/structpl_enum.htm">plEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition</b> Enum.h:37</div></div>
<div class="ttc" id="astructpl_enum_htm_a340dcb34fa90dd6a6391502bbe933baf"><div class="ttname"><a href="../../dd/d09/structpl_enum.htm#a340dcb34fa90dd6a6391502bbe933baf">plEnum::GetValue</a></div><div class="ttdeci">PL_ALWAYS_INLINE StorageType GetValue() const</div><div class="ttdoc">Returns the enum value as an integer.</div><div class="ttdef"><b>Definition</b> Enum.h:98</div></div>
<div class="ttc" id="astructpl_hybrid_string_htm"><div class="ttname"><a href="../../d2/dea/structpl_hybrid_string.htm">plHybridString&lt; 32, plDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructpl_reflection_utils_1_1_enum_conversion_mode_htm"><div class="ttname"><a href="../../d6/dd0/structpl_reflection_utils_1_1_enum_conversion_mode.htm">plReflectionUtils::EnumConversionMode</a></div><div class="ttdef"><b>Definition</b> ReflectionUtils.h:73</div></div>
<div class="ttc" id="astructpl_reflection_utils_1_1_enum_key_value_pair_htm"><div class="ttname"><a href="../../d6/d8a/structpl_reflection_utils_1_1_enum_key_value_pair.htm">plReflectionUtils::EnumKeyValuePair</a></div><div class="ttdef"><b>Definition</b> ReflectionUtils.h:105</div></div>
<div class="ttc" id="astructpl_result_htm"><div class="ttname"><a href="../../da/dce/structpl_result.htm">plResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructpl_variant_type_htm_a4d10a99c083abdf7283ab1f48565de12"><div class="ttname"><a href="../../d6/d1e/structpl_variant_type.htm#a4d10a99c083abdf7283ab1f48565de12">plVariantType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdoc">This enum describes the type of data that is currently stored inside the variant. Note that changes t...</div><div class="ttdef"><b>Definition</b> VariantType.h:26</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_03dd0ffe19aabd3d1cd0d82a91256ab1.htm">Reflection</a></li><li class="navelem"><b>ReflectionUtils.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
