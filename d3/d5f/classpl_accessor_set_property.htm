<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plAccessorSetProperty&lt; Class, Type, Container &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d3/d5f/classpl_accessor_set_property.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d1/d5c/classpl_accessor_set_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAccessorSetProperty&lt; Class, Type, Container &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for plAccessorSetProperty&lt; Class, Type, Container &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d6/dc2/classpl_accessor_set_property__inherit__graph.png" border="0" usemap="#apl_accessor_set_property_3_01_class_00_01_type_00_01_container_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_accessor_set_property_3_01_class_00_01_type_00_01_container_01_4_inherit__map" id="apl_accessor_set_property_3_01_class_00_01_type_00_01_container_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="5,245,183,288"/>
<area shape="rect" href="../../d5/d14/classpl_typed_set_property.htm" title="Do not cast into this class or any of its derived classes, use plAbstractSetProperty instead." alt="" coords="26,155,162,197"/>
<area shape="poly" title=" " alt="" coords="97,213,97,245,91,245,91,213"/>
<area shape="rect" href="../../de/dec/classpl_abstract_set_property.htm" title="The base class for a property that represents a set of values." alt="" coords="19,80,169,107"/>
<area shape="poly" title=" " alt="" coords="97,122,97,154,91,154,91,122"/>
<area shape="rect" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="29,5,159,32"/>
<area shape="poly" title=" " alt="" coords="97,48,97,80,91,80,91,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a6d1a7d4bd0d6aaac69cc4b0c50b9ed5b" id="r_a6d1a7d4bd0d6aaac69cc4b0c50b9ed5b"><td class="memItemLeft" align="right" valign="top"><a id="a6d1a7d4bd0d6aaac69cc4b0c50b9ed5b" name="a6d1a7d4bd0d6aaac69cc4b0c50b9ed5b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ContainerType</b> = typename <a class="el" href="../../da/d5d/structpl_type_traits.htm">plTypeTraits</a>&lt;Container&gt;::NonConstReferenceType</td></tr>
<tr class="separator:a6d1a7d4bd0d6aaac69cc4b0c50b9ed5b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35a062ff0c6c04e5218a29d607ecb9ca" id="r_a35a062ff0c6c04e5218a29d607ecb9ca"><td class="memItemLeft" align="right" valign="top"><a id="a35a062ff0c6c04e5218a29d607ecb9ca" name="a35a062ff0c6c04e5218a29d607ecb9ca"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>RealType</b> = typename <a class="el" href="../../da/d5d/structpl_type_traits.htm">plTypeTraits</a>&lt;Type&gt;::NonConstReferenceType</td></tr>
<tr class="separator:a35a062ff0c6c04e5218a29d607ecb9ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac94ea07fb6731ccf852caa95962a04f2" id="r_ac94ea07fb6731ccf852caa95962a04f2"><td class="memItemLeft" align="right" valign="top"><a id="ac94ea07fb6731ccf852caa95962a04f2" name="ac94ea07fb6731ccf852caa95962a04f2"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>InsertFunc</b> = void (Class::*)(Type value)</td></tr>
<tr class="separator:ac94ea07fb6731ccf852caa95962a04f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad89efb4c38149eee3fc25cf001515284" id="r_ad89efb4c38149eee3fc25cf001515284"><td class="memItemLeft" align="right" valign="top"><a id="ad89efb4c38149eee3fc25cf001515284" name="ad89efb4c38149eee3fc25cf001515284"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveFunc</b> = void (Class::*)(Type value)</td></tr>
<tr class="separator:ad89efb4c38149eee3fc25cf001515284"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2973bd63b2a3d4f80f2d2b0399715805" id="r_a2973bd63b2a3d4f80f2d2b0399715805"><td class="memItemLeft" align="right" valign="top"><a id="a2973bd63b2a3d4f80f2d2b0399715805" name="a2973bd63b2a3d4f80f2d2b0399715805"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>GetValuesFunc</b> = Container (Class::*)() const</td></tr>
<tr class="separator:a2973bd63b2a3d4f80f2d2b0399715805"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3f09d321efd27a0d3b77ea3e94042542" id="r_a3f09d321efd27a0d3b77ea3e94042542"><td class="memItemLeft" align="right" valign="top"><a id="a3f09d321efd27a0d3b77ea3e94042542" name="a3f09d321efd27a0d3b77ea3e94042542"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plAccessorSetProperty</b> (const char *szPropertyName, GetValuesFunc getValues, InsertFunc insert, RemoveFunc remove)</td></tr>
<tr class="separator:a3f09d321efd27a0d3b77ea3e94042542"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a04bc8d12a483ec5b54b47748f1aa54" id="r_a8a04bc8d12a483ec5b54b47748f1aa54"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a8a04bc8d12a483ec5b54b47748f1aa54">IsEmpty</a> (const void *pInstance) const override</td></tr>
<tr class="memdesc:a8a04bc8d12a483ec5b54b47748f1aa54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the set is empty.  <br /></td></tr>
<tr class="separator:a8a04bc8d12a483ec5b54b47748f1aa54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c4e79e92b22a32d71bfa2e1cea8abbd" id="r_a0c4e79e92b22a32d71bfa2e1cea8abbd"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a0c4e79e92b22a32d71bfa2e1cea8abbd">Clear</a> (void *pInstance) const override</td></tr>
<tr class="memdesc:a0c4e79e92b22a32d71bfa2e1cea8abbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the set.  <br /></td></tr>
<tr class="separator:a0c4e79e92b22a32d71bfa2e1cea8abbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad64d56c252fbb94be4a753270bd7603a" id="r_ad64d56c252fbb94be4a753270bd7603a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad64d56c252fbb94be4a753270bd7603a">Insert</a> (void *pInstance, const void *pObject) const override</td></tr>
<tr class="memdesc:ad64d56c252fbb94be4a753270bd7603a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the target of pObject into the set.  <br /></td></tr>
<tr class="separator:ad64d56c252fbb94be4a753270bd7603a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2442a605f5f5c8f76b84f834e9e2fd7c" id="r_a2442a605f5f5c8f76b84f834e9e2fd7c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a2442a605f5f5c8f76b84f834e9e2fd7c">Remove</a> (void *pInstance, const void *pObject) const override</td></tr>
<tr class="memdesc:a2442a605f5f5c8f76b84f834e9e2fd7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the target of pObject from the set.  <br /></td></tr>
<tr class="separator:a2442a605f5f5c8f76b84f834e9e2fd7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1db793ee03f4aaffb148c68d494781c4" id="r_a1db793ee03f4aaffb148c68d494781c4"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1db793ee03f4aaffb148c68d494781c4">Contains</a> (const void *pInstance, const void *pObject) const override</td></tr>
<tr class="memdesc:a1db793ee03f4aaffb148c68d494781c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the target of pObject is in the set.  <br /></td></tr>
<tr class="separator:a1db793ee03f4aaffb148c68d494781c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a389ea6e889074b06717c3c4a3e5e7b" id="r_a6a389ea6e889074b06717c3c4a3e5e7b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a6a389ea6e889074b06717c3c4a3e5e7b">GetValues</a> (const void *pInstance, <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &gt; &amp;out_keys) const override</td></tr>
<tr class="memdesc:a6a389ea6e889074b06717c3c4a3e5e7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the content of the set to out_keys.  <br /></td></tr>
<tr class="separator:a6a389ea6e889074b06717c3c4a3e5e7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_typed_set_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_typed_set_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d5/d14/classpl_typed_set_property.htm">plTypedSetProperty&lt; Type &gt;</a></td></tr>
<tr class="memitem:a4863002edeba8555e7d7fb3111ac2f1c inherit pub_methods_classpl_typed_set_property" id="r_a4863002edeba8555e7d7fb3111ac2f1c"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plTypedSetProperty</b> (const char *szPropertyName)</td></tr>
<tr class="separator:a4863002edeba8555e7d7fb3111ac2f1c inherit pub_methods_classpl_typed_set_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72710d0d1115f9da57bc5685f035e6b8 inherit pub_methods_classpl_typed_set_property" id="r_a72710d0d1115f9da57bc5685f035e6b8"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d14/classpl_typed_set_property.htm#a72710d0d1115f9da57bc5685f035e6b8">GetSpecificType</a> () const override</td></tr>
<tr class="memdesc:a72710d0d1115f9da57bc5685f035e6b8 inherit pub_methods_classpl_typed_set_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dd/d62/classpl_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">plTypedConstantProperty</a>.  <br /></td></tr>
<tr class="separator:a72710d0d1115f9da57bc5685f035e6b8 inherit pub_methods_classpl_typed_set_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_set_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_set_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/dec/classpl_abstract_set_property.htm">plAbstractSetProperty</a></td></tr>
<tr class="memitem:a8f9e5ffd152eeb93488d6b6c045bc473 inherit pub_methods_classpl_abstract_set_property" id="r_a8f9e5ffd152eeb93488d6b6c045bc473"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractSetProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a8f9e5ffd152eeb93488d6b6c045bc473 inherit pub_methods_classpl_abstract_set_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">plAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a8f9e5ffd152eeb93488d6b6c045bc473 inherit pub_methods_classpl_abstract_set_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0887f0765e0b07f5105128b4cf68aaec inherit pub_methods_classpl_abstract_set_property" id="r_a0887f0765e0b07f5105128b4cf68aaec"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dec/classpl_abstract_set_property.htm#a0887f0765e0b07f5105128b4cf68aaec">GetCategory</a> () const override</td></tr>
<tr class="memdesc:a0887f0765e0b07f5105128b4cf68aaec inherit pub_methods_classpl_abstract_set_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7a65ce49dd94abc9687cd7e17bb6941ec8" title="The property is actually a set of values. Cast to plAbstractSetProperty.">plPropertyCategory::Set</a>.  <br /></td></tr>
<tr class="separator:a0887f0765e0b07f5105128b4cf68aaec inherit pub_methods_classpl_abstract_set_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property" id="r_a8ae8dcf20f01b0926e321d68fd38d243"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property" id="r_ab192fac6724fcbd56a160013230bad0b"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property" id="r_a988149e0184a527d89a6fc7b529aa6fc"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property" id="r_a1a7c0de0ecff4c5ab4a37987f9780a64"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property" id="r_a249245c8d8a5bd14d12b7b72920b4d5e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property" id="r_aa28f7ffab1bd6667a67f94a351e618ba"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property" id="r_a74666a9b6312d9e8a0208ff67ec56a7d"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property" id="r_a5226bc2ced2436f3aeaf96fadea40f70"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property" id="r_a135a819e72ea2827916acdefd2fb6848"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property" id="r_aaf46ae0b97785db5048abb483c603cea"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *, 2, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0c4e79e92b22a32d71bfa2e1cea8abbd" name="a0c4e79e92b22a32d71bfa2e1cea8abbd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c4e79e92b22a32d71bfa2e1cea8abbd">&#9670;&#160;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type , typename Container &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d3/d5f/classpl_accessor_set_property.htm">plAccessorSetProperty</a>&lt; Class, Type, Container &gt;::Clear </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clears the set. </p>

<p>Implements <a class="el" href="../../de/dec/classpl_abstract_set_property.htm#a794de79dbae79a41c287587d37cc8aa7">plAbstractSetProperty</a>.</p>

</div>
</div>
<a id="a1db793ee03f4aaffb148c68d494781c4" name="a1db793ee03f4aaffb148c68d494781c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1db793ee03f4aaffb148c68d494781c4">&#9670;&#160;</a></span>Contains()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type , typename Container &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="../../d3/d5f/classpl_accessor_set_property.htm">plAccessorSetProperty</a>&lt; Class, Type, Container &gt;::Contains </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether the target of pObject is in the set. </p>

<p>Implements <a class="el" href="../../de/dec/classpl_abstract_set_property.htm#ac8abb1ff63e9edfebd7a960ee7af068e">plAbstractSetProperty</a>.</p>

</div>
</div>
<a id="a6a389ea6e889074b06717c3c4a3e5e7b" name="a6a389ea6e889074b06717c3c4a3e5e7b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a389ea6e889074b06717c3c4a3e5e7b">&#9670;&#160;</a></span>GetValues()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type , typename Container &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d3/d5f/classpl_accessor_set_property.htm">plAccessorSetProperty</a>&lt; Class, Type, Container &gt;::GetValues </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../da/d4c/classpl_variant.htm">plVariant</a> &gt; &amp;</td>          <td class="paramname"><span class="paramname"><em>out_keys</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes the content of the set to out_keys. </p>

<p>Implements <a class="el" href="../../de/dec/classpl_abstract_set_property.htm#a748c326fd6969c8c94e06bf519e3d550">plAbstractSetProperty</a>.</p>

</div>
</div>
<a id="ad64d56c252fbb94be4a753270bd7603a" name="ad64d56c252fbb94be4a753270bd7603a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad64d56c252fbb94be4a753270bd7603a">&#9670;&#160;</a></span>Insert()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type , typename Container &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d3/d5f/classpl_accessor_set_property.htm">plAccessorSetProperty</a>&lt; Class, Type, Container &gt;::Insert </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Inserts the target of pObject into the set. </p>

<p>Implements <a class="el" href="../../de/dec/classpl_abstract_set_property.htm#a79cc953e7e23c0b39ce754ab6d16bb65">plAbstractSetProperty</a>.</p>

</div>
</div>
<a id="a8a04bc8d12a483ec5b54b47748f1aa54" name="a8a04bc8d12a483ec5b54b47748f1aa54"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a04bc8d12a483ec5b54b47748f1aa54">&#9670;&#160;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type , typename Container &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool <a class="el" href="../../d3/d5f/classpl_accessor_set_property.htm">plAccessorSetProperty</a>&lt; Class, Type, Container &gt;::IsEmpty </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether the set is empty. </p>

<p>Implements <a class="el" href="../../de/dec/classpl_abstract_set_property.htm#a41d7c810cc71ee349538a228aa40dfe8">plAbstractSetProperty</a>.</p>

</div>
</div>
<a id="a2442a605f5f5c8f76b84f834e9e2fd7c" name="a2442a605f5f5c8f76b84f834e9e2fd7c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2442a605f5f5c8f76b84f834e9e2fd7c">&#9670;&#160;</a></span>Remove()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type , typename Container &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d3/d5f/classpl_accessor_set_property.htm">plAccessorSetProperty</a>&lt; Class, Type, Container &gt;::Remove </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes the target of pObject from the set. </p>

<p>Implements <a class="el" href="../../de/dec/classpl_abstract_set_property.htm#a599443c953498c1f982bbd079469aab0">plAbstractSetProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../d6/d41/_set_property_8h_source.htm">SetProperty.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/d5f/classpl_accessor_set_property.htm">plAccessorSetProperty</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
