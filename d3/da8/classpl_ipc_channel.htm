<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plIpcChannel Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d3/da8/classpl_ipc_channel.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../db/d74/classpl_ipc_channel-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plIpcChannel Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>Base class for a communication channel between processes.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/d91/_ipc_channel_8h_source.htm">IpcChannel.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/db2/structpl_ipc_channel_1_1_connection_state.htm">ConnectionState</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d27/structpl_ipc_channel_1_1_mode.htm">Mode</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:af9cf0be343051b7f8631ab396f8fba57" id="r_af9cf0be343051b7f8631ab396f8fba57"><td class="memItemLeft" align="right" valign="top"><a id="af9cf0be343051b7f8631ab396f8fba57" name="af9cf0be343051b7f8631ab396f8fba57"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ReceiveCallback</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt;void(<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt;const plUInt8&gt; message)&gt;</td></tr>
<tr class="separator:af9cf0be343051b7f8631ab396f8fba57"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7845a101ee045262fd7eace31bd693d8" id="r_a7845a101ee045262fd7eace31bd693d8"><td class="memItemLeft" align="right" valign="top"><a id="a7845a101ee045262fd7eace31bd693d8" name="a7845a101ee045262fd7eace31bd693d8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Connect</b> ()</td></tr>
<tr class="memdesc:a7845a101ee045262fd7eace31bd693d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Connects async. On success, m_Events will be broadcasted. <br /></td></tr>
<tr class="separator:a7845a101ee045262fd7eace31bd693d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d1afd0eae61f7e315d3333189f11a24" id="r_a7d1afd0eae61f7e315d3333189f11a24"><td class="memItemLeft" align="right" valign="top"><a id="a7d1afd0eae61f7e315d3333189f11a24" name="a7d1afd0eae61f7e315d3333189f11a24"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Disconnect</b> ()</td></tr>
<tr class="memdesc:a7d1afd0eae61f7e315d3333189f11a24"><td class="mdescLeft">&#160;</td><td class="mdescRight">Disconnect async. On completion, m_Events will be broadcasted. <br /></td></tr>
<tr class="separator:a7d1afd0eae61f7e315d3333189f11a24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b82f2532fa6f2c317f56059804646bb" id="r_a2b82f2532fa6f2c317f56059804646bb"><td class="memItemLeft" align="right" valign="top"><a id="a2b82f2532fa6f2c317f56059804646bb" name="a2b82f2532fa6f2c317f56059804646bb"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsConnected</b> () const</td></tr>
<tr class="memdesc:a2b82f2532fa6f2c317f56059804646bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether we have a connection. <br /></td></tr>
<tr class="separator:a2b82f2532fa6f2c317f56059804646bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9faf9bbf991b9fcd96cb271f219c4b66" id="r_a9faf9bbf991b9fcd96cb271f219c4b66"><td class="memItemLeft" align="right" valign="top"><a id="a9faf9bbf991b9fcd96cb271f219c4b66" name="a9faf9bbf991b9fcd96cb271f219c4b66"></a>
<a class="el" href="../../dd/d09/structpl_enum.htm">plEnum</a>&lt; <a class="el" href="../../dd/db2/structpl_ipc_channel_1_1_connection_state.htm">ConnectionState</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetConnectionState</b> () const</td></tr>
<tr class="memdesc:a9faf9bbf991b9fcd96cb271f219c4b66"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current state of the connection. <br /></td></tr>
<tr class="separator:a9faf9bbf991b9fcd96cb271f219c4b66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dd60e46eba890ffe3bcdc5a4fd8adad" id="r_a7dd60e46eba890ffe3bcdc5a4fd8adad"><td class="memItemLeft" align="right" valign="top"><a id="a7dd60e46eba890ffe3bcdc5a4fd8adad" name="a7dd60e46eba890ffe3bcdc5a4fd8adad"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Send</b> (<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const plUInt8 &gt; data)</td></tr>
<tr class="memdesc:a7dd60e46eba890ffe3bcdc5a4fd8adad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sends a message. pMsg can be destroyed after the call. <br /></td></tr>
<tr class="separator:a7dd60e46eba890ffe3bcdc5a4fd8adad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a160007a2e988558d635344cb5765ee7d" id="r_a160007a2e988558d635344cb5765ee7d"><td class="memItemLeft" align="right" valign="top"><a id="a160007a2e988558d635344cb5765ee7d" name="a160007a2e988558d635344cb5765ee7d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetReceiveCallback</b> (<a class="el" href="../../df/df1/structpl_delegate.htm">ReceiveCallback</a> callback)</td></tr>
<tr class="separator:a160007a2e988558d635344cb5765ee7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93644fbf53c4de188956687067bc3357" id="r_a93644fbf53c4de188956687067bc3357"><td class="memItemLeft" align="right" valign="top"><a id="a93644fbf53c4de188956687067bc3357" name="a93644fbf53c4de188956687067bc3357"></a>
<a class="el" href="../../da/dce/structpl_result.htm">plResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>WaitForMessages</b> (<a class="el" href="../../d1/df6/structpl_time.htm">plTime</a> timeout)</td></tr>
<tr class="memdesc:a93644fbf53c4de188956687067bc3357"><td class="mdescLeft">&#160;</td><td class="mdescRight">Block and wait for new messages and call ProcessMessages. <br /></td></tr>
<tr class="separator:a93644fbf53c4de188956687067bc3357"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9a2ccf26be97fdd2abe99814ca720de1" id="r_a9a2ccf26be97fdd2abe99814ca720de1"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; <a class="el" href="../../d3/da8/classpl_ipc_channel.htm">plIpcChannel</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a9a2ccf26be97fdd2abe99814ca720de1">CreatePipeChannel</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sAddress, Mode::Enum mode)</td></tr>
<tr class="memdesc:a9a2ccf26be97fdd2abe99814ca720de1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an IPC communication channel using pipes.  <br /></td></tr>
<tr class="separator:a9a2ccf26be97fdd2abe99814ca720de1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c51f9d9f044a813a3320f44ff121114" id="r_a0c51f9d9f044a813a3320f44ff121114"><td class="memItemLeft" align="right" valign="top"><a id="a0c51f9d9f044a813a3320f44ff121114" name="a0c51f9d9f044a813a3320f44ff121114"></a>
static <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; <a class="el" href="../../d3/da8/classpl_ipc_channel.htm">plIpcChannel</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CreateNetworkChannel</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sAddress, Mode::Enum mode)</td></tr>
<tr class="separator:a0c51f9d9f044a813a3320f44ff121114"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:aadff7750f5d1e4fbc74da861bbb4efc3" id="r_aadff7750f5d1e4fbc74da861bbb4efc3"><td class="memItemLeft" align="right" valign="top"><a id="aadff7750f5d1e4fbc74da861bbb4efc3" name="aadff7750f5d1e4fbc74da861bbb4efc3"></a>
<a class="el" href="../../dd/d61/classpl_event.htm">plEvent</a>&lt; const <a class="el" href="../../d3/dc1/structpl_ipc_channel_event.htm">plIpcChannelEvent</a> &amp;, <a class="el" href="../../d1/df4/classpl_mutex.htm">plMutex</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Events</b></td></tr>
<tr class="memdesc:aadff7750f5d1e4fbc74da861bbb4efc3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will be sent from any thread. <br /></td></tr>
<tr class="separator:aadff7750f5d1e4fbc74da861bbb4efc3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-types" name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:ae94e2d681799fe980a60dc878ee31d68" id="r_ae94e2d681799fe980a60dc878ee31d68"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae94e2d681799fe980a60dc878ee31d68">Constants</a> : plUInt32 { <a class="el" href="#ae94e2d681799fe980a60dc878ee31d68a687137213b333abbef6732f9b2b35e21">HEADER_SIZE</a> = 8
, <a class="el" href="#ae94e2d681799fe980a60dc878ee31d68a82e49a5b308fc37f6aaf856ad3439a83">MAGIC_VALUE</a> = 'USED'
, <a class="el" href="#ae94e2d681799fe980a60dc878ee31d68a0f974ac4d1e860e7a45334396b9f45b4">MAX_MESSAGE_SIZE</a> = 1024 * 1024 * 16
 }</td></tr>
<tr class="separator:ae94e2d681799fe980a60dc878ee31d68"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a697e0799c38442aa929c417619c6dd5d" id="r_a697e0799c38442aa929c417619c6dd5d"><td class="memItemLeft" align="right" valign="top"><a id="a697e0799c38442aa929c417619c6dd5d" name="a697e0799c38442aa929c417619c6dd5d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plIpcChannel</b> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sAddress, Mode::Enum mode)</td></tr>
<tr class="separator:a697e0799c38442aa929c417619c6dd5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa750cb098c3184b455245f254dc297a0" id="r_aa750cb098c3184b455245f254dc297a0"><td class="memItemLeft" align="right" valign="top"><a id="aa750cb098c3184b455245f254dc297a0" name="aa750cb098c3184b455245f254dc297a0"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>RequiresRegularTick</b> ()</td></tr>
<tr class="memdesc:aa750cb098c3184b455245f254dc297a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this and return true, if the surrounding infrastructure should call the '<a class="el" href="#adb129d8e649115031d465f98e5ea9afa" title="Can implement regular updates, e.g. for polling network state.">Tick()</a>' function. <br /></td></tr>
<tr class="separator:aa750cb098c3184b455245f254dc297a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb129d8e649115031d465f98e5ea9afa" id="r_adb129d8e649115031d465f98e5ea9afa"><td class="memItemLeft" align="right" valign="top"><a id="adb129d8e649115031d465f98e5ea9afa" name="adb129d8e649115031d465f98e5ea9afa"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>Tick</b> ()</td></tr>
<tr class="memdesc:adb129d8e649115031d465f98e5ea9afa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can implement regular updates, e.g. for polling network state. <br /></td></tr>
<tr class="separator:adb129d8e649115031d465f98e5ea9afa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbd5beeda4059c5af70763a960e943b1" id="r_acbd5beeda4059c5af70763a960e943b1"><td class="memItemLeft" align="right" valign="top"><a id="acbd5beeda4059c5af70763a960e943b1" name="acbd5beeda4059c5af70763a960e943b1"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>InternalConnect</b> ()=0</td></tr>
<tr class="memdesc:acbd5beeda4059c5af70763a960e943b1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called on worker thread after Connect was called. <br /></td></tr>
<tr class="separator:acbd5beeda4059c5af70763a960e943b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0c15c95782bb7b934a5de57efd1e12b" id="r_ad0c15c95782bb7b934a5de57efd1e12b"><td class="memItemLeft" align="right" valign="top"><a id="ad0c15c95782bb7b934a5de57efd1e12b" name="ad0c15c95782bb7b934a5de57efd1e12b"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>InternalDisconnect</b> ()=0</td></tr>
<tr class="memdesc:ad0c15c95782bb7b934a5de57efd1e12b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called on worker thread after Disconnect was called. <br /></td></tr>
<tr class="separator:ad0c15c95782bb7b934a5de57efd1e12b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4a55e8ac8f63663fa3c156f93154296" id="r_af4a55e8ac8f63663fa3c156f93154296"><td class="memItemLeft" align="right" valign="top"><a id="af4a55e8ac8f63663fa3c156f93154296" name="af4a55e8ac8f63663fa3c156f93154296"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>InternalSend</b> ()=0</td></tr>
<tr class="memdesc:af4a55e8ac8f63663fa3c156f93154296"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called on worker thread to sent pending messages. <br /></td></tr>
<tr class="separator:af4a55e8ac8f63663fa3c156f93154296"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1fba66f8d44466b8f1a7debc1b7045f" id="r_af1fba66f8d44466b8f1a7debc1b7045f"><td class="memItemLeft" align="right" valign="top"><a id="af1fba66f8d44466b8f1a7debc1b7045f" name="af1fba66f8d44466b8f1a7debc1b7045f"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>NeedWakeup</b> () const =0</td></tr>
<tr class="memdesc:af1fba66f8d44466b8f1a7debc1b7045f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by Send to determine whether the message loop need to be woken up. <br /></td></tr>
<tr class="separator:af1fba66f8d44466b8f1a7debc1b7045f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5293ea603d58ce4aca5b89323c23ead0" id="r_a5293ea603d58ce4aca5b89323c23ead0"><td class="memItemLeft" align="right" valign="top"><a id="a5293ea603d58ce4aca5b89323c23ead0" name="a5293ea603d58ce4aca5b89323c23ead0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetConnectionState</b> (<a class="el" href="../../dd/d09/structpl_enum.htm">plEnum</a>&lt; <a class="el" href="../../dd/db2/structpl_ipc_channel_1_1_connection_state.htm">ConnectionState</a> &gt; state)</td></tr>
<tr class="separator:a5293ea603d58ce4aca5b89323c23ead0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0b893ae7c9b9be186e68c2d51aed672" id="r_ae0b893ae7c9b9be186e68c2d51aed672"><td class="memItemLeft" align="right" valign="top"><a id="ae0b893ae7c9b9be186e68c2d51aed672" name="ae0b893ae7c9b9be186e68c2d51aed672"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ReceiveData</b> (<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const plUInt8 &gt; data)</td></tr>
<tr class="memdesc:ae0b893ae7c9b9be186e68c2d51aed672"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implementation needs to call this when new data has been received. data can be invalidated after the function. <br /></td></tr>
<tr class="separator:ae0b893ae7c9b9be186e68c2d51aed672"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a069d6031947ca6a5393d07b6d3a14ff1" id="r_a069d6031947ca6a5393d07b6d3a14ff1"><td class="memItemLeft" align="right" valign="top"><a id="a069d6031947ca6a5393d07b6d3a14ff1" name="a069d6031947ca6a5393d07b6d3a14ff1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>FlushPendingOperations</b> ()</td></tr>
<tr class="separator:a069d6031947ca6a5393d07b6d3a14ff1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a037b56321014700bbc6c204c3413a056" id="r_a037b56321014700bbc6c204c3413a056"><td class="memItemLeft" align="right" valign="top"><a id="a037b56321014700bbc6c204c3413a056" name="a037b56321014700bbc6c204c3413a056"></a>
plThreadID&#160;</td><td class="memItemRight" valign="bottom"><b>m_ThreadId</b> = 0</td></tr>
<tr class="separator:a037b56321014700bbc6c204c3413a056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dff6cc4c2d9db7f0dd64bf0f2a1cf01" id="r_a7dff6cc4c2d9db7f0dd64bf0f2a1cf01"><td class="memItemLeft" align="right" valign="top"><a id="a7dff6cc4c2d9db7f0dd64bf0f2a1cf01" name="a7dff6cc4c2d9db7f0dd64bf0f2a1cf01"></a>
<a class="el" href="../../da/ddf/classpl_atomic_integer.htm">plAtomicInteger</a>&lt; <a class="el" href="../../dd/db2/structpl_ipc_channel_1_1_connection_state.htm#a6146f3c49237f6388bd864ad76283cb0">ConnectionState::Enum</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_iConnectionState</b> = ConnectionState::Disconnected</td></tr>
<tr class="separator:a7dff6cc4c2d9db7f0dd64bf0f2a1cf01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0392e2ce4850e0594a414a09e126627" id="r_ab0392e2ce4850e0594a414a09e126627"><td class="memItemLeft" align="right" valign="top"><a id="ab0392e2ce4850e0594a414a09e126627" name="ab0392e2ce4850e0594a414a09e126627"></a>
<a class="el" href="../../d2/dea/structpl_hybrid_string.htm">plString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sAddress</b></td></tr>
<tr class="separator:ab0392e2ce4850e0594a414a09e126627"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74cf66045e96fde81e04c7b2bdd03c37" id="r_a74cf66045e96fde81e04c7b2bdd03c37"><td class="memItemLeft" align="right" valign="top"><a id="a74cf66045e96fde81e04c7b2bdd03c37" name="a74cf66045e96fde81e04c7b2bdd03c37"></a>
const <a class="el" href="../../dd/d09/structpl_enum.htm">plEnum</a>&lt; <a class="el" href="../../de/d27/structpl_ipc_channel_1_1_mode.htm">Mode</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Mode</b></td></tr>
<tr class="separator:a74cf66045e96fde81e04c7b2bdd03c37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58d5508e474ee6b8a57a33220f4f62e3" id="r_a58d5508e474ee6b8a57a33220f4f62e3"><td class="memItemLeft" align="right" valign="top"><a id="a58d5508e474ee6b8a57a33220f4f62e3" name="a58d5508e474ee6b8a57a33220f4f62e3"></a>
<a class="el" href="../../d4/d02/classpl_message_loop.htm">plMessageLoop</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pOwner</b> = nullptr</td></tr>
<tr class="separator:a58d5508e474ee6b8a57a33220f4f62e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5034f265fb803a392abbf93e9410b3d" id="r_ac5034f265fb803a392abbf93e9410b3d"><td class="memItemLeft" align="right" valign="top"><a id="ac5034f265fb803a392abbf93e9410b3d" name="ac5034f265fb803a392abbf93e9410b3d"></a>
<a class="el" href="../../d1/df4/classpl_mutex.htm">plMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_OutputQueueMutex</b></td></tr>
<tr class="separator:ac5034f265fb803a392abbf93e9410b3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a293293f23112c3fd7908ac98f21384e2" id="r_a293293f23112c3fd7908ac98f21384e2"><td class="memItemLeft" align="right" valign="top"><a id="a293293f23112c3fd7908ac98f21384e2" name="a293293f23112c3fd7908ac98f21384e2"></a>
<a class="el" href="../../d7/de8/classpl_deque.htm">plDeque</a>&lt; <a class="el" href="../../d2/d69/classpl_contiguous_memory_stream_storage.htm">plContiguousMemoryStreamStorage</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_OutputQueue</b></td></tr>
<tr class="separator:a293293f23112c3fd7908ac98f21384e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a377e612ea4cbd7829ce10b1db1dc24a8" id="r_a377e612ea4cbd7829ce10b1db1dc24a8"><td class="memItemLeft" align="right" valign="top"><a id="a377e612ea4cbd7829ce10b1db1dc24a8" name="a377e612ea4cbd7829ce10b1db1dc24a8"></a>
<a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; plUInt8 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_MessageAccumulator</b></td></tr>
<tr class="memdesc:a377e612ea4cbd7829ce10b1db1dc24a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Message is assembled in here. <br /></td></tr>
<tr class="separator:a377e612ea4cbd7829ce10b1db1dc24a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa10dbe0596053f03cf29266db1a94faf" id="r_aa10dbe0596053f03cf29266db1a94faf"><td class="memItemLeft" align="right" valign="top"><a id="aa10dbe0596053f03cf29266db1a94faf" name="aa10dbe0596053f03cf29266db1a94faf"></a>
<a class="el" href="../../d1/df4/classpl_mutex.htm">plMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ReceiveCallbackMutex</b></td></tr>
<tr class="separator:aa10dbe0596053f03cf29266db1a94faf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa10e7b0602f9ffbfe6d6ceb765141794" id="r_aa10e7b0602f9ffbfe6d6ceb765141794"><td class="memItemLeft" align="right" valign="top"><a id="aa10e7b0602f9ffbfe6d6ceb765141794" name="aa10e7b0602f9ffbfe6d6ceb765141794"></a>
<a class="el" href="../../df/df1/structpl_delegate.htm">ReceiveCallback</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ReceiveCallback</b></td></tr>
<tr class="separator:aa10e7b0602f9ffbfe6d6ceb765141794"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad97e2541587598b6303b3f0767c495" id="r_a2ad97e2541587598b6303b3f0767c495"><td class="memItemLeft" align="right" valign="top"><a id="a2ad97e2541587598b6303b3f0767c495" name="a2ad97e2541587598b6303b3f0767c495"></a>
<a class="el" href="../../d8/d66/classpl_thread_signal.htm">plThreadSignal</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_IncomingMessages</b></td></tr>
<tr class="separator:a2ad97e2541587598b6303b3f0767c495"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a42094d09c8305ac6870ceb34a9b2fdae" id="r_a42094d09c8305ac6870ceb34a9b2fdae"><td class="memItemLeft" align="right" valign="top"><a id="a42094d09c8305ac6870ceb34a9b2fdae" name="a42094d09c8305ac6870ceb34a9b2fdae"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plMessageLoop</b></td></tr>
<tr class="separator:a42094d09c8305ac6870ceb34a9b2fdae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Base class for a communication channel between processes. </p>
<p>The channel allows for byte blobs to be send back and forth between two processes. A client should only try to connect to a server once the server has changed to <a class="el" href="../../dd/db2/structpl_ipc_channel_1_1_connection_state.htm#a6146f3c49237f6388bd864ad76283cb0ae3050cfaea1a3a539662f286f1e7bf19" title="In case of the server, this state indicates that the server is ready to be connected to.">ConnectionState::Connecting</a> as this indicates the server is ready to be conneccted to.</p>
<p>Use <a class="el" href="../../d3/da8/classpl_ipc_channel.htm" title="Base class for a communication channel between processes.">plIpcChannel</a>:<a class="el" href="#a9a2ccf26be97fdd2abe99814ca720de1" title="Creates an IPC communication channel using pipes.">CreatePipeChannel</a> to create an IPC pipe instance. To send more complex messages accross, you can create a <a class="el" href="../../d4/dff/classpl_ipc_process_message_protocol.htm" title="A protocol around plIpcChannel to send reflected messages instead of byte array messages between clie...">plIpcProcessMessageProtocol</a> on top of the channel. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="ae94e2d681799fe980a60dc878ee31d68" name="ae94e2d681799fe980a60dc878ee31d68"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae94e2d681799fe980a60dc878ee31d68">&#9670;&#160;</a></span>Constants</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="#ae94e2d681799fe980a60dc878ee31d68">plIpcChannel::Constants</a> : plUInt32</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ae94e2d681799fe980a60dc878ee31d68a687137213b333abbef6732f9b2b35e21" name="ae94e2d681799fe980a60dc878ee31d68a687137213b333abbef6732f9b2b35e21"></a>HEADER_SIZE&#160;</td><td class="fielddoc"><p>Magic value and size plUint32. </p>
</td></tr>
<tr><td class="fieldname"><a id="ae94e2d681799fe980a60dc878ee31d68a82e49a5b308fc37f6aaf856ad3439a83" name="ae94e2d681799fe980a60dc878ee31d68a82e49a5b308fc37f6aaf856ad3439a83"></a>MAGIC_VALUE&#160;</td><td class="fielddoc"><p>Magic value. </p>
</td></tr>
<tr><td class="fieldname"><a id="ae94e2d681799fe980a60dc878ee31d68a0f974ac4d1e860e7a45334396b9f45b4" name="ae94e2d681799fe980a60dc878ee31d68a0f974ac4d1e860e7a45334396b9f45b4"></a>MAX_MESSAGE_SIZE&#160;</td><td class="fielddoc"><p>Arbitrary message size limit. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9a2ccf26be97fdd2abe99814ca720de1" name="a9a2ccf26be97fdd2abe99814ca720de1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9a2ccf26be97fdd2abe99814ca720de1">&#9670;&#160;</a></span>CreatePipeChannel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; <a class="el" href="../../d3/da8/classpl_ipc_channel.htm">plIpcChannel</a> &gt; plIpcChannel::CreatePipeChannel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sAddress</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Mode::Enum</td>          <td class="paramname"><span class="paramname"><em>mode</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an IPC communication channel using pipes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szAddress</td><td>Name of the pipe, must be unique on a system and less than 200 characters. </td></tr>
    <tr><td class="paramname">mode</td><td>Whether to run in client or server mode. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Communication/<a class="el" href="../../de/d91/_ipc_channel_8h_source.htm">IpcChannel.h</a></li>
<li>Code/Engine/Foundation/Communication/Implementation/<b>IpcChannel.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/da8/classpl_ipc_channel.htm">plIpcChannel</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
