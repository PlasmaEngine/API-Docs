<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plRTTIDefaultAllocator&lt; CLASS, AllocatorWrapper &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d1/d0a/structpl_r_t_t_i_default_allocator.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d0/d48/structpl_r_t_t_i_default_allocator-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plRTTIDefaultAllocator&lt; CLASS, AllocatorWrapper &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Default implementation of <a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm" title="The interface for an allocator that creates instances of reflected types.">plRTTIAllocator</a> that allocates instances via the given allocator.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/dd7/_r_t_t_i_8h_source.htm">RTTI.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plRTTIDefaultAllocator&lt; CLASS, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d2/dab/structpl_r_t_t_i_default_allocator__inherit__graph.png" border="0" usemap="#apl_r_t_t_i_default_allocator_3_01_c_l_a_s_s_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_r_t_t_i_default_allocator_3_01_c_l_a_s_s_00_01_allocator_wrapper_01_4_inherit__map" id="apl_r_t_t_i_default_allocator_3_01_c_l_a_s_s_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title="Default implementation of plRTTIAllocator that allocates instances via the given allocator." alt="" coords="5,80,202,123"/>
<area shape="rect" href="../../dc/d77/structpl_r_t_t_i_allocator.htm" title="The interface for an allocator that creates instances of reflected types." alt="" coords="49,5,158,32"/>
<area shape="poly" title=" " alt="" coords="106,48,106,80,101,80,101,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad293133f5aa75049550e8aa2e45d2b1f" id="r_ad293133f5aa75049550e8aa2e45d2b1f"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; void &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad293133f5aa75049550e8aa2e45d2b1f">AllocateInternal</a> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator) override</td></tr>
<tr class="memdesc:ad293133f5aa75049550e8aa2e45d2b1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a new instance that was allocated with the given allocator.  <br /></td></tr>
<tr class="separator:ad293133f5aa75049550e8aa2e45d2b1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa05b6724fd72dd6d16dbe6c7fc127b96" id="r_aa05b6724fd72dd6d16dbe6c7fc127b96"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; void &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aa05b6724fd72dd6d16dbe6c7fc127b96">CloneInternal</a> (const void *pObject, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator) override</td></tr>
<tr class="memdesc:aa05b6724fd72dd6d16dbe6c7fc127b96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clones the given instance with the given allocator.  <br /></td></tr>
<tr class="separator:aa05b6724fd72dd6d16dbe6c7fc127b96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adef014003490a816e48bfa3f1e9f0f0f" id="r_adef014003490a816e48bfa3f1e9f0f0f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#adef014003490a816e48bfa3f1e9f0f0f">Deallocate</a> (void *pObject, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator) override</td></tr>
<tr class="memdesc:adef014003490a816e48bfa3f1e9f0f0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the given instance with the given allocator.  <br /></td></tr>
<tr class="separator:adef014003490a816e48bfa3f1e9f0f0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structpl_r_t_t_i_allocator"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_structpl_r_t_t_i_allocator')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm">plRTTIAllocator</a></td></tr>
<tr class="memitem:a8af8fcfd647d2e3f9036c1823c93138d inherit pub_methods_structpl_r_t_t_i_allocator" id="r_a8af8fcfd647d2e3f9036c1823c93138d"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm#a8af8fcfd647d2e3f9036c1823c93138d">CanAllocate</a> () const</td></tr>
<tr class="memdesc:a8af8fcfd647d2e3f9036c1823c93138d inherit pub_methods_structpl_r_t_t_i_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type that is represented by this allocator, can be dynamically allocated at runtime.  <br /></td></tr>
<tr class="separator:a8af8fcfd647d2e3f9036c1823c93138d inherit pub_methods_structpl_r_t_t_i_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ab3357b12a3fb58b9e0f0dd50bd23ba inherit pub_methods_structpl_r_t_t_i_allocator" id="r_a8ab3357b12a3fb58b9e0f0dd50bd23ba"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a8ab3357b12a3fb58b9e0f0dd50bd23ba inherit pub_methods_structpl_r_t_t_i_allocator"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Allocate</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator=nullptr)</td></tr>
<tr class="memdesc:a8ab3357b12a3fb58b9e0f0dd50bd23ba inherit pub_methods_structpl_r_t_t_i_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates one instance. <br /></td></tr>
<tr class="separator:a8ab3357b12a3fb58b9e0f0dd50bd23ba inherit pub_methods_structpl_r_t_t_i_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6041da85ad74701cfde8d6d3421e0a9 inherit pub_methods_structpl_r_t_t_i_allocator" id="r_aa6041da85ad74701cfde8d6d3421e0a9"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa6041da85ad74701cfde8d6d3421e0a9 inherit pub_methods_structpl_r_t_t_i_allocator"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Clone</b> (const void *pObject, <a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator=nullptr)</td></tr>
<tr class="memdesc:aa6041da85ad74701cfde8d6d3421e0a9 inherit pub_methods_structpl_r_t_t_i_allocator"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clones the given instance. <br /></td></tr>
<tr class="separator:aa6041da85ad74701cfde8d6d3421e0a9 inherit pub_methods_structpl_r_t_t_i_allocator"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename CLASS, typename AllocatorWrapper = plDefaultAllocatorWrapper&gt;<br />
struct plRTTIDefaultAllocator&lt; CLASS, AllocatorWrapper &gt;</div><p>Default implementation of <a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm" title="The interface for an allocator that creates instances of reflected types.">plRTTIAllocator</a> that allocates instances via the given allocator. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ad293133f5aa75049550e8aa2e45d2b1f" name="ad293133f5aa75049550e8aa2e45d2b1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad293133f5aa75049550e8aa2e45d2b1f">&#9670;&#160;</a></span>AllocateInternal()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CLASS , typename AllocatorWrapper  = plDefaultAllocatorWrapper&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; void &gt; <a class="el" href="../../d1/d0a/structpl_r_t_t_i_default_allocator.htm">plRTTIDefaultAllocator</a>&lt; CLASS, AllocatorWrapper &gt;::AllocateInternal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *</td>          <td class="paramname"><span class="paramname"><em>pAllocator</em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a new instance that was allocated with the given allocator. </p>

<p>Implements <a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm">plRTTIAllocator</a>.</p>

</div>
</div>
<a id="aa05b6724fd72dd6d16dbe6c7fc127b96" name="aa05b6724fd72dd6d16dbe6c7fc127b96"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa05b6724fd72dd6d16dbe6c7fc127b96">&#9670;&#160;</a></span>CloneInternal()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CLASS , typename AllocatorWrapper  = plDefaultAllocatorWrapper&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a>&lt; void &gt; <a class="el" href="../../d1/d0a/structpl_r_t_t_i_default_allocator.htm">plRTTIDefaultAllocator</a>&lt; CLASS, AllocatorWrapper &gt;::CloneInternal </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *</td>          <td class="paramname"><span class="paramname"><em>pAllocator</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clones the given instance with the given allocator. </p>

<p>Reimplemented from <a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm">plRTTIAllocator</a>.</p>

</div>
</div>
<a id="adef014003490a816e48bfa3f1e9f0f0f" name="adef014003490a816e48bfa3f1e9f0f0f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adef014003490a816e48bfa3f1e9f0f0f">&#9670;&#160;</a></span>Deallocate()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename CLASS , typename AllocatorWrapper  = plDefaultAllocatorWrapper&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d1/d0a/structpl_r_t_t_i_default_allocator.htm">plRTTIDefaultAllocator</a>&lt; CLASS, AllocatorWrapper &gt;::Deallocate </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pObject</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *</td>          <td class="paramname"><span class="paramname"><em>pAllocator</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deletes the given instance with the given allocator. </p>

<p>Implements <a class="el" href="../../dc/d77/structpl_r_t_t_i_allocator.htm#a03666d62aa0d30ba76e953a7d32a36a5">plRTTIAllocator</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../de/dd7/_r_t_t_i_8h_source.htm">RTTI.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d0a/structpl_r_t_t_i_default_allocator.htm">plRTTIDefaultAllocator</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
