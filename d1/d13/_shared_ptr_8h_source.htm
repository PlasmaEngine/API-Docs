<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: Code/Engine/Foundation/Types/SharedPtr.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d1/d13/_shared_ptr_8h_source.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">SharedPtr.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Types/RefCounted.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Types/UniquePtr.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00009" data-start="{" data-end="};">
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm">    9</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>{</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  PL_DECLARE_MEM_RELOCATABLE_TYPE();</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>();</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#a696ed60df9f381f380e3760d636f2957">   19</a></span>  <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a696ed60df9f381f380e3760d636f2957">plSharedPtr</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance&lt;U&gt;</a>&amp; instance);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#a6fd025d99e7aa8bc60e9aec943784711">   24</a></span>  <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a6fd025d99e7aa8bc60e9aec943784711">plSharedPtr</a>(U* pInstance, <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* pAllocator);</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#a48739bf39ac60577491529939e6d8120">   31</a></span>  <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a48739bf39ac60577491529939e6d8120">plSharedPtr</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;U&gt;</a>&amp; other);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#af0e99e342297b9d633b739418b46e95f">   35</a></span>  <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#af0e99e342297b9d633b739418b46e95f">plSharedPtr</a>(<a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;U&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#ac54a3448a61a2d6aa41ee68c1dff205e">   39</a></span>  <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#ac54a3448a61a2d6aa41ee68c1dff205e">plSharedPtr</a>(<a class="code hl_class" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr&lt;U&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>(std::nullptr_t);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#aab2d6308ce3754f2fc78ff1a147aa830">~plSharedPtr</a>();</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#a4ed6257f7acc24d1c3c2a2cc007fb4e8">   49</a></span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a4ed6257f7acc24d1c3c2a2cc007fb4e8">operator=</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance&lt;U&gt;</a>&amp; instance);</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a4ed6257f7acc24d1c3c2a2cc007fb4e8">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#aec6c0bbc164351a89e61b89d85c4bdca">   56</a></span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#aec6c0bbc164351a89e61b89d85c4bdca">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;U&gt;</a>&amp; other);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#ae8dfc51e3427083e59956c82340d43dc">   60</a></span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#ae8dfc51e3427083e59956c82340d43dc">operator=</a>(<a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;U&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#a3579bb025ccfb02da1af476cee99ddfb">   64</a></span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a3579bb025ccfb02da1af476cee99ddfb">operator=</a>(<a class="code hl_class" href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr&lt;U&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a4ed6257f7acc24d1c3c2a2cc007fb4e8">operator=</a>(std::nullptr_t);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  T* <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a685ac2bc1c57b0f2c9f16c634378e5b3">Borrow</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a21d6c6c39586eef0456a2e182b3a4036">Clear</a>();</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  T&amp; <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a7c431ab2bc48b2d2cbac32fcf821c18a">operator*</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  T* <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a4915e87c689079de24e87547043b3ffb">operator-&gt;</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keyword">operator</span> <span class="keyword">const</span> T*() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keyword">operator</span> T*();</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keyword">explicit</span> <span class="keyword">operator</span> bool() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a52924c86d1dd8dba58df861872b19a47">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="keywordtype">bool</span> operator&lt;=(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordtype">bool</span> operator&gt;(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keywordtype">bool</span> operator&gt;=(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a52924c86d1dd8dba58df861872b19a47">operator==</a>(std::nullptr_t) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <span class="keywordtype">bool</span> operator!=(std::nullptr_t) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keywordtype">bool</span> operator&lt;(std::nullptr_t) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="keywordtype">bool</span> operator&lt;=(std::nullptr_t) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordtype">bool</span> operator&gt;(std::nullptr_t) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keywordtype">bool</span> operator&gt;=(std::nullptr_t) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> DERIVED&gt;</div>
<div class="foldopen" id="foldopen00110" data-start="{" data-end="}">
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="../../d6/d8f/classpl_shared_ptr.htm#a199aaaec75442145cc3f0faf75e158f0">  110</a></span>  <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;DERIVED&gt;</a> <a class="code hl_function" href="../../d6/d8f/classpl_shared_ptr.htm#a199aaaec75442145cc3f0faf75e158f0">Downcast</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr&lt;DERIVED&gt;</a>(<span class="keyword">static_cast&lt;</span>DERIVED*<span class="keyword">&gt;</span>(m_pInstance), m_pAllocator);</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  }</div>
</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a>;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <span class="keywordtype">void</span> AddReferenceIfValid();</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>  <span class="keywordtype">void</span> ReleaseReferenceIfValid();</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  T* m_pInstance;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  <a class="code hl_class" href="../../da/df3/classpl_allocator.htm">plAllocator</a>* m_pAllocator;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>};</div>
</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="preprocessor">#include &lt;Foundation/Types/Implementation/SharedPtr_inl.h&gt;</span></div>
<div class="ttc" id="aclasspl_allocator_htm"><div class="ttname"><a href="../../da/df3/classpl_allocator.htm">plAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm">plSharedPtr</a></div><div class="ttdoc">A Shared ptr manages a shared object and destroys that object when no one references it anymore....</div><div class="ttdef"><b>Definition</b> SharedPtr.h:10</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a199aaaec75442145cc3f0faf75e158f0"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a199aaaec75442145cc3f0faf75e158f0">plSharedPtr::Downcast</a></div><div class="ttdeci">plSharedPtr&lt; DERIVED &gt; Downcast() const</div><div class="ttdoc">Returns a copy of this, as an plSharedPtr&lt;DERIVED&gt;. Downcasts the stored pointer (using static_cast).</div><div class="ttdef"><b>Definition</b> SharedPtr.h:110</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a21d6c6c39586eef0456a2e182b3a4036"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a21d6c6c39586eef0456a2e182b3a4036">plSharedPtr::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys the managed object if no one else references it anymore and resets the shared ptr.</div><div class="ttdef"><b>Definition</b> SharedPtr_inl.h:174</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a3579bb025ccfb02da1af476cee99ddfb"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a3579bb025ccfb02da1af476cee99ddfb">plSharedPtr::operator=</a></div><div class="ttdeci">plSharedPtr&lt; T &gt; &amp; operator=(plUniquePtr&lt; U &gt; &amp;&amp;other)</div><div class="ttdoc">Move assigns a shared ptr from a unique ptr. The unique ptr will be empty afterwards.</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a48739bf39ac60577491529939e6d8120"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a48739bf39ac60577491529939e6d8120">plSharedPtr::plSharedPtr</a></div><div class="ttdeci">plSharedPtr(const plSharedPtr&lt; U &gt; &amp;other)</div><div class="ttdoc">Copy constructs a shared ptr from another. Both will hold a reference to the managed object afterward...</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a4915e87c689079de24e87547043b3ffb"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a4915e87c689079de24e87547043b3ffb">plSharedPtr::operator-&gt;</a></div><div class="ttdeci">T * operator-&gt;() const</div><div class="ttdoc">Provides access to the managed object.</div><div class="ttdef"><b>Definition</b> SharedPtr_inl.h:186</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a4ed6257f7acc24d1c3c2a2cc007fb4e8"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a4ed6257f7acc24d1c3c2a2cc007fb4e8">plSharedPtr::operator=</a></div><div class="ttdeci">plSharedPtr&lt; T &gt; &amp; operator=(const plInternal::NewInstance&lt; U &gt; &amp;instance)</div><div class="ttdoc">Sets the shared ptr from a freshly created instance through PL_NEW or PL_DEFAULT_NEW.</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a52924c86d1dd8dba58df861872b19a47"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a52924c86d1dd8dba58df861872b19a47">plSharedPtr::operator==</a></div><div class="ttdeci">bool operator==(const plSharedPtr&lt; T &gt; &amp;rhs) const</div><div class="ttdoc">Compares the shared ptr against another shared ptr.</div><div class="ttdef"><b>Definition</b> SharedPtr_inl.h:210</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a685ac2bc1c57b0f2c9f16c634378e5b3"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a685ac2bc1c57b0f2c9f16c634378e5b3">plSharedPtr::Borrow</a></div><div class="ttdeci">T * Borrow() const</div><div class="ttdoc">Borrows the managed object. The shared ptr stays unmodified.</div><div class="ttdef"><b>Definition</b> SharedPtr_inl.h:168</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a696ed60df9f381f380e3760d636f2957"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a696ed60df9f381f380e3760d636f2957">plSharedPtr::plSharedPtr</a></div><div class="ttdeci">plSharedPtr(const plInternal::NewInstance&lt; U &gt; &amp;instance)</div><div class="ttdoc">Creates a shared ptr from a freshly created instance through PL_NEW or PL_DEFAULT_NEW.</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a6fd025d99e7aa8bc60e9aec943784711"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a6fd025d99e7aa8bc60e9aec943784711">plSharedPtr::plSharedPtr</a></div><div class="ttdeci">plSharedPtr(U *pInstance, plAllocator *pAllocator)</div><div class="ttdoc">Creates a shared ptr from a pointer and an allocator. The passed allocator will be used to destroy th...</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_a7c431ab2bc48b2d2cbac32fcf821c18a"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#a7c431ab2bc48b2d2cbac32fcf821c18a">plSharedPtr::operator*</a></div><div class="ttdeci">T &amp; operator*() const</div><div class="ttdoc">Provides access to the managed object.</div><div class="ttdef"><b>Definition</b> SharedPtr_inl.h:180</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_aab2d6308ce3754f2fc78ff1a147aa830"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#aab2d6308ce3754f2fc78ff1a147aa830">plSharedPtr::~plSharedPtr</a></div><div class="ttdeci">~plSharedPtr()</div><div class="ttdoc">Destroys the managed object using the stored allocator if no one else references it anymore.</div><div class="ttdef"><b>Definition</b> SharedPtr_inl.h:76</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_ac54a3448a61a2d6aa41ee68c1dff205e"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#ac54a3448a61a2d6aa41ee68c1dff205e">plSharedPtr::plSharedPtr</a></div><div class="ttdeci">plSharedPtr(plUniquePtr&lt; U &gt; &amp;&amp;other)</div><div class="ttdoc">Move constructs a shared ptr from a unique ptr. The unique ptr will be empty afterwards.</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_ae8dfc51e3427083e59956c82340d43dc"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#ae8dfc51e3427083e59956c82340d43dc">plSharedPtr::operator=</a></div><div class="ttdeci">plSharedPtr&lt; T &gt; &amp; operator=(plSharedPtr&lt; U &gt; &amp;&amp;other)</div><div class="ttdoc">Move assigns a shared ptr from another. The other shared ptr will be empty afterwards.</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_aec6c0bbc164351a89e61b89d85c4bdca"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#aec6c0bbc164351a89e61b89d85c4bdca">plSharedPtr::operator=</a></div><div class="ttdeci">plSharedPtr&lt; T &gt; &amp; operator=(const plSharedPtr&lt; U &gt; &amp;other)</div><div class="ttdoc">Sets the shared ptr from another. Both will hold a reference to the managed object afterwards.</div></div>
<div class="ttc" id="aclasspl_shared_ptr_htm_af0e99e342297b9d633b739418b46e95f"><div class="ttname"><a href="../../d6/d8f/classpl_shared_ptr.htm#af0e99e342297b9d633b739418b46e95f">plSharedPtr::plSharedPtr</a></div><div class="ttdeci">plSharedPtr(plSharedPtr&lt; U &gt; &amp;&amp;other)</div><div class="ttdoc">Move constructs a shared ptr from another. The other shared ptr will be empty afterwards.</div></div>
<div class="ttc" id="aclasspl_unique_ptr_htm"><div class="ttname"><a href="../../df/d44/classpl_unique_ptr.htm">plUniquePtr</a></div><div class="ttdoc">A Unique ptr manages an object and destroys that object when it goes out of scope....</div><div class="ttdef"><b>Definition</b> UniquePtr.h:10</div></div>
<div class="ttc" id="astructpl_internal_1_1_new_instance_htm"><div class="ttname"><a href="../../d5/d9d/structpl_internal_1_1_new_instance.htm">plInternal::NewInstance</a></div><div class="ttdef"><b>Definition</b> Allocator_inl.h:18</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_c32432c00eff92f753f8e1e2859d61e1.htm">Types</a></li><li class="navelem"><b>SharedPtr.h</b></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
