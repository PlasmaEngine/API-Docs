<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plJoltWorldModule Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d1/d31/classpl_jolt_world_module.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../de/d98/classpl_jolt_world_module-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plJoltWorldModule Class Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for plJoltWorldModule:</div>
<div class="dyncontent">
<div class="center"><img src="../../d2/d1a/classpl_jolt_world_module__inherit__graph.png" border="0" usemap="#apl_jolt_world_module_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_jolt_world_module_inherit__map" id="apl_jolt_world_module_inherit__map">
<area shape="rect" title=" " alt="" coords="43,304,171,331"/>
<area shape="rect" href="../../d3/d4e/classpl_physics_world_module_interface.htm" title=" " alt="" coords="5,229,209,256"/>
<area shape="poly" title=" " alt="" coords="110,272,110,304,104,304,104,272"/>
<area shape="rect" href="../../df/df2/classpl_world_module.htm" title=" " alt="" coords="53,155,161,181"/>
<area shape="poly" title=" " alt="" coords="110,197,110,229,104,229,104,197"/>
<area shape="rect" href="../../d4/d91/classpl_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="48,80,166,107"/>
<area shape="poly" title=" " alt="" coords="110,122,110,154,104,154,104,122"/>
<area shape="rect" href="../../de/dc4/classpl_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="68,5,146,32"/>
<area shape="poly" title=" " alt="" coords="110,48,110,80,104,80,104,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a82fd062618121cb3bcf0d2299183ca26" id="r_a82fd062618121cb3bcf0d2299183ca26"><td class="memItemLeft" align="right" valign="top"><a id="a82fd062618121cb3bcf0d2299183ca26" name="a82fd062618121cb3bcf0d2299183ca26"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plJoltWorldModule</b> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld)</td></tr>
<tr class="separator:a82fd062618121cb3bcf0d2299183ca26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2fa0784d4c7a3b7c1ed514a1a077681" id="r_af2fa0784d4c7a3b7c1ed514a1a077681"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#af2fa0784d4c7a3b7c1ed514a1a077681">Initialize</a> () override</td></tr>
<tr class="memdesc:af2fa0784d4c7a3b7c1ed514a1a077681"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called after the constructor. A derived type can override this method to do initialization work. Typically this is the method where updates function are registered.  <br /></td></tr>
<tr class="separator:af2fa0784d4c7a3b7c1ed514a1a077681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a440bcc4f1250074d023b564fa0f0b89d" id="r_a440bcc4f1250074d023b564fa0f0b89d"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a440bcc4f1250074d023b564fa0f0b89d">Deinitialize</a> () override</td></tr>
<tr class="memdesc:a440bcc4f1250074d023b564fa0f0b89d"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called before the destructor. A derived type can override this method to do deinitialization work.  <br /></td></tr>
<tr class="separator:a440bcc4f1250074d023b564fa0f0b89d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeff1ef821d63e8d4d8eedd8ba7de2fca" id="r_aeff1ef821d63e8d4d8eedd8ba7de2fca"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aeff1ef821d63e8d4d8eedd8ba7de2fca">OnSimulationStarted</a> () override</td></tr>
<tr class="memdesc:aeff1ef821d63e8d4d8eedd8ba7de2fca"><td class="mdescLeft">&#160;</td><td class="mdescRight">This method is called at the start of the next world update when the world is simulated. This method will be called after the initialization method.  <br /></td></tr>
<tr class="separator:aeff1ef821d63e8d4d8eedd8ba7de2fca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae11bd79941f429219c057e55fbc2b7a1" id="r_ae11bd79941f429219c057e55fbc2b7a1"><td class="memItemLeft" align="right" valign="top"><a id="ae11bd79941f429219c057e55fbc2b7a1" name="ae11bd79941f429219c057e55fbc2b7a1"></a>
JPH::PhysicsSystem *&#160;</td><td class="memItemRight" valign="bottom"><b>GetJoltSystem</b> ()</td></tr>
<tr class="separator:ae11bd79941f429219c057e55fbc2b7a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6331c80db86e07b46c26056145b00505" id="r_a6331c80db86e07b46c26056145b00505"><td class="memItemLeft" align="right" valign="top"><a id="a6331c80db86e07b46c26056145b00505" name="a6331c80db86e07b46c26056145b00505"></a>
const JPH::PhysicsSystem *&#160;</td><td class="memItemRight" valign="bottom"><b>GetJoltSystem</b> () const</td></tr>
<tr class="separator:a6331c80db86e07b46c26056145b00505"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c2ba6ada3935c26c7c6acfed56ff0d5" id="r_a3c2ba6ada3935c26c7c6acfed56ff0d5"><td class="memItemLeft" align="right" valign="top"><a id="a3c2ba6ada3935c26c7c6acfed56ff0d5" name="a3c2ba6ada3935c26c7c6acfed56ff0d5"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>CreateObjectFilterID</b> ()</td></tr>
<tr class="separator:a3c2ba6ada3935c26c7c6acfed56ff0d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f851ca85ec277ac5cca3c0ec183719f" id="r_a7f851ca85ec277ac5cca3c0ec183719f"><td class="memItemLeft" align="right" valign="top"><a id="a7f851ca85ec277ac5cca3c0ec183719f" name="a7f851ca85ec277ac5cca3c0ec183719f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DeleteObjectFilterID</b> (plUInt32 &amp;ref_uiObjectFilterID)</td></tr>
<tr class="separator:a7f851ca85ec277ac5cca3c0ec183719f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35e431360f144a9a2af7083bcb9221d0" id="r_a35e431360f144a9a2af7083bcb9221d0"><td class="memItemLeft" align="right" valign="top"><a id="a35e431360f144a9a2af7083bcb9221d0" name="a35e431360f144a9a2af7083bcb9221d0"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>AllocateUserData</b> (<a class="el" href="../../dd/de9/classpl_jolt_user_data.htm">plJoltUserData</a> *&amp;out_pUserData)</td></tr>
<tr class="separator:a35e431360f144a9a2af7083bcb9221d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca114eb5b1bf5e1de3c74235a845093f" id="r_aca114eb5b1bf5e1de3c74235a845093f"><td class="memItemLeft" align="right" valign="top"><a id="aca114eb5b1bf5e1de3c74235a845093f" name="aca114eb5b1bf5e1de3c74235a845093f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DeallocateUserData</b> (plUInt32 &amp;ref_uiUserDataId)</td></tr>
<tr class="separator:aca114eb5b1bf5e1de3c74235a845093f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05190a416509e40b2d9709a580d3af46" id="r_a05190a416509e40b2d9709a580d3af46"><td class="memItemLeft" align="right" valign="top"><a id="a05190a416509e40b2d9709a580d3af46" name="a05190a416509e40b2d9709a580d3af46"></a>
const <a class="el" href="../../dd/de9/classpl_jolt_user_data.htm">plJoltUserData</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetUserData</b> (plUInt32 uiUserDataId) const</td></tr>
<tr class="separator:a05190a416509e40b2d9709a580d3af46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb43b29f7ca507268acffde5d21c180a" id="r_afb43b29f7ca507268acffde5d21c180a"><td class="memItemLeft" align="right" valign="top"><a id="afb43b29f7ca507268acffde5d21c180a" name="afb43b29f7ca507268acffde5d21c180a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetGravity</b> (const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vObjectGravity, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vCharacterGravity)</td></tr>
<tr class="separator:afb43b29f7ca507268acffde5d21c180a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37b4a467ae7e160445bf902dad543971" id="r_a37b4a467ae7e160445bf902dad543971"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a37b4a467ae7e160445bf902dad543971">GetGravity</a> () const override</td></tr>
<tr class="separator:a37b4a467ae7e160445bf902dad543971"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a563240dd32b0eb6863dcb003e852a569" id="r_a563240dd32b0eb6863dcb003e852a569"><td class="memItemLeft" align="right" valign="top"><a id="a563240dd32b0eb6863dcb003e852a569" name="a563240dd32b0eb6863dcb003e852a569"></a>
<a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetCharacterGravity</b> () const</td></tr>
<tr class="separator:a563240dd32b0eb6863dcb003e852a569"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97f83bfd5610c04235eed434e63ab82" id="r_ae97f83bfd5610c04235eed434e63ab82"><td class="memItemLeft" align="right" valign="top">virtual plUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae97f83bfd5610c04235eed434e63ab82">GetCollisionLayerByName</a> (<a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a> sName) const override</td></tr>
<tr class="memdesc:ae97f83bfd5610c04235eed434e63ab82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for a collision layer with the given name and returns its index.  <br /></td></tr>
<tr class="separator:ae97f83bfd5610c04235eed434e63ab82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6e57fa0417a556caa7eab95ec1c528a" id="r_ac6e57fa0417a556caa7eab95ec1c528a"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ac6e57fa0417a556caa7eab95ec1c528a">Raycast</a> (<a class="el" href="../../d0/d29/structpl_physics_cast_result.htm">plPhysicsCastResult</a> &amp;out_result, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vStart, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vDir, float fDistance, const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params, plPhysicsHitCollection collection=plPhysicsHitCollection::Closest) const override</td></tr>
<tr class="separator:ac6e57fa0417a556caa7eab95ec1c528a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8f80c63ba4a7a437cc4a6da53b19545" id="r_ad8f80c63ba4a7a437cc4a6da53b19545"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ad8f80c63ba4a7a437cc4a6da53b19545">RaycastAll</a> (<a class="el" href="../../df/d25/structpl_physics_cast_result_array.htm">plPhysicsCastResultArray</a> &amp;out_results, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vStart, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vDir, float fDistance, const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params) const override</td></tr>
<tr class="separator:ad8f80c63ba4a7a437cc4a6da53b19545"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4532c6ae2f32f3f7d165889c594205b1" id="r_a4532c6ae2f32f3f7d165889c594205b1"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a4532c6ae2f32f3f7d165889c594205b1">SweepTestSphere</a> (<a class="el" href="../../d0/d29/structpl_physics_cast_result.htm">plPhysicsCastResult</a> &amp;out_result, float fSphereRadius, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vStart, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vDir, float fDistance, const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params, plPhysicsHitCollection collection=plPhysicsHitCollection::Closest) const override</td></tr>
<tr class="separator:a4532c6ae2f32f3f7d165889c594205b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c7ee9e78e5b5b78daf8a8af05026e39" id="r_a1c7ee9e78e5b5b78daf8a8af05026e39"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1c7ee9e78e5b5b78daf8a8af05026e39">SweepTestBox</a> (<a class="el" href="../../d0/d29/structpl_physics_cast_result.htm">plPhysicsCastResult</a> &amp;out_result, <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> vBoxExtends, const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;transform, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vDir, float fDistance, const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params, plPhysicsHitCollection collection=plPhysicsHitCollection::Closest) const override</td></tr>
<tr class="separator:a1c7ee9e78e5b5b78daf8a8af05026e39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae588362da9f2757f2a914feef4d7fce2" id="r_ae588362da9f2757f2a914feef4d7fce2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae588362da9f2757f2a914feef4d7fce2">SweepTestCapsule</a> (<a class="el" href="../../d0/d29/structpl_physics_cast_result.htm">plPhysicsCastResult</a> &amp;out_result, float fCapsuleRadius, float fCapsuleHeight, const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;transform, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vDir, float fDistance, const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params, plPhysicsHitCollection collection=plPhysicsHitCollection::Closest) const override</td></tr>
<tr class="separator:ae588362da9f2757f2a914feef4d7fce2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18e59e89ef7dca94c6c4e48c0cb3cfea" id="r_a18e59e89ef7dca94c6c4e48c0cb3cfea"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a18e59e89ef7dca94c6c4e48c0cb3cfea">OverlapTestSphere</a> (float fSphereRadius, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vPosition, const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params) const override</td></tr>
<tr class="separator:a18e59e89ef7dca94c6c4e48c0cb3cfea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf0fed59510cc64b3e4d65eadbdd15aa" id="r_acf0fed59510cc64b3e4d65eadbdd15aa"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#acf0fed59510cc64b3e4d65eadbdd15aa">OverlapTestCapsule</a> (float fCapsuleRadius, float fCapsuleHeight, const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;transform, const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params) const override</td></tr>
<tr class="separator:acf0fed59510cc64b3e4d65eadbdd15aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee29d10528d33bbb803f29be3a5e601b" id="r_aee29d10528d33bbb803f29be3a5e601b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#aee29d10528d33bbb803f29be3a5e601b">QueryShapesInSphere</a> (<a class="el" href="../../d9/d02/structpl_physics_overlap_result_array.htm">plPhysicsOverlapResultArray</a> &amp;out_results, float fSphereRadius, const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;vPosition, const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params) const override</td></tr>
<tr class="separator:aee29d10528d33bbb803f29be3a5e601b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41770818729cd15f6f1e7ddec088d4cf" id="r_a41770818729cd15f6f1e7ddec088d4cf"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a41770818729cd15f6f1e7ddec088d4cf">AddStaticCollisionBox</a> (<a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *pObject, <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> vBoxSize) override</td></tr>
<tr class="memdesc:a41770818729cd15f6f1e7ddec088d4cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a static actor with a box shape to pOwner.  <br /></td></tr>
<tr class="separator:a41770818729cd15f6f1e7ddec088d4cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7461cc746826374e08404c0af6a21399" id="r_a7461cc746826374e08404c0af6a21399"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7461cc746826374e08404c0af6a21399">AddFixedJointComponent</a> (<a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *pOwner, const <a class="el" href="../../d6/d9d/structpl_physics_world_module_interface_1_1_fixed_joint_config.htm">plPhysicsWorldModuleInterface::FixedJointConfig</a> &amp;cfg) override</td></tr>
<tr class="memdesc:a7461cc746826374e08404c0af6a21399"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a fixed joint to pOwner.  <br /></td></tr>
<tr class="separator:a7461cc746826374e08404c0af6a21399"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7763f7750f762a04b817ec285fd64cdb" id="r_a7763f7750f762a04b817ec285fd64cdb"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d9/dc2/classpl_bounding_box_sphere_template.htm">plBoundingBoxSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7763f7750f762a04b817ec285fd64cdb">GetWorldSpaceBounds</a> (<a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *pOwner, plUInt32 uiCollisionLayer, <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; plPhysicsShapeType &gt; shapeTypes, bool bIncludeChildObjects) const override</td></tr>
<tr class="memdesc:a7763f7750f762a04b817ec285fd64cdb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gets world space bounds of a physics object if its shape type is included in shapeTypes and its collision layer interacts with uiCollisionLayer.  <br /></td></tr>
<tr class="separator:a7763f7750f762a04b817ec285fd64cdb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a34fd6e141bef74271c80cec6e8110ac8" id="r_a34fd6e141bef74271c80cec6e8110ac8"><td class="memItemLeft" align="right" valign="top"><a id="a34fd6e141bef74271c80cec6e8110ac8" name="a34fd6e141bef74271c80cec6e8110ac8"></a>
const <a class="el" href="../../d5/da6/classpl_set.htm">plSet</a>&lt; <a class="el" href="../../d6/dc9/classpl_jolt_dynamic_actor_component.htm">plJoltDynamicActorComponent</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetActiveActors</b> () const</td></tr>
<tr class="separator:a34fd6e141bef74271c80cec6e8110ac8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a037e35aadca0338af952679c4175a6b3" id="r_a037e35aadca0338af952679c4175a6b3"><td class="memItemLeft" align="right" valign="top"><a id="a037e35aadca0338af952679c4175a6b3" name="a037e35aadca0338af952679c4175a6b3"></a>
const <a class="el" href="../../d9/d50/classpl_map.htm">plMap</a>&lt; <a class="el" href="../../d6/d57/classpl_jolt_ragdoll_component.htm">plJoltRagdollComponent</a> *, plInt32 &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetActiveRagdolls</b> () const</td></tr>
<tr class="separator:a037e35aadca0338af952679c4175a6b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a255b155f351b225d57eedfdc1bce5f4d" id="r_a255b155f351b225d57eedfdc1bce5f4d"><td class="memItemLeft" align="right" valign="top"><a id="a255b155f351b225d57eedfdc1bce5f4d" name="a255b155f351b225d57eedfdc1bce5f4d"></a>
const <a class="el" href="../../d9/d50/classpl_map.htm">plMap</a>&lt; <a class="el" href="../../da/dfb/classpl_jolt_rope_component.htm">plJoltRopeComponent</a> *, plInt32 &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetActiveRopes</b> () const</td></tr>
<tr class="separator:a255b155f351b225d57eedfdc1bce5f4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1123b8727c5a548845fc5a3cc049427" id="r_ac1123b8727c5a548845fc5a3cc049427"><td class="memItemLeft" align="right" valign="top"><a id="ac1123b8727c5a548845fc5a3cc049427" name="ac1123b8727c5a548845fc5a3cc049427"></a>
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; <a class="el" href="../../d6/d57/classpl_jolt_ragdoll_component.htm">plJoltRagdollComponent</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetRagdollsPutToSleep</b> ()</td></tr>
<tr class="separator:ac1123b8727c5a548845fc5a3cc049427"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cceb86cf9ff964b23f2c66113809c0f" id="r_a0cceb86cf9ff964b23f2c66113809c0f"><td class="memItemLeft" align="right" valign="top"><a id="a0cceb86cf9ff964b23f2c66113809c0f" name="a0cceb86cf9ff964b23f2c66113809c0f"></a>
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>QueueBodyToAdd</b> (JPH::Body *pBody, bool bAwake)</td></tr>
<tr class="memdesc:a0cceb86cf9ff964b23f2c66113809c0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a uint32 that can be queried for completion with <a class="el" href="#a10d00fa05e76e5b6e14cd7df43b03075" title="Checks whether the last QueueBodyToAdd() has been processed already, or not.">IsBodyStillQueuedToAdd()</a>. <br /></td></tr>
<tr class="separator:a0cceb86cf9ff964b23f2c66113809c0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10d00fa05e76e5b6e14cd7df43b03075" id="r_a10d00fa05e76e5b6e14cd7df43b03075"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a10d00fa05e76e5b6e14cd7df43b03075">IsBodyStillQueuedToAdd</a> (plUInt32 uiBodiesAddCounter) const</td></tr>
<tr class="memdesc:a10d00fa05e76e5b6e14cd7df43b03075"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the last <a class="el" href="#a0cceb86cf9ff964b23f2c66113809c0f" title="Returns a uint32 that can be queried for completion with IsBodyStillQueuedToAdd().">QueueBodyToAdd()</a> has been processed already, or not.  <br /></td></tr>
<tr class="separator:a10d00fa05e76e5b6e14cd7df43b03075"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac302456b338e8309729132eb0c3ce530" id="r_ac302456b338e8309729132eb0c3ce530"><td class="memItemLeft" align="right" valign="top"><a id="ac302456b338e8309729132eb0c3ce530" name="ac302456b338e8309729132eb0c3ce530"></a>
JPH::GroupFilter *&#160;</td><td class="memItemRight" valign="bottom"><b>GetGroupFilter</b> () const</td></tr>
<tr class="separator:ac302456b338e8309729132eb0c3ce530"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a352bb411c834bc52a0308703e3b9779a" id="r_a352bb411c834bc52a0308703e3b9779a"><td class="memItemLeft" align="right" valign="top"><a id="a352bb411c834bc52a0308703e3b9779a" name="a352bb411c834bc52a0308703e3b9779a"></a>
JPH::GroupFilter *&#160;</td><td class="memItemRight" valign="bottom"><b>GetGroupFilterIgnoreSame</b> () const</td></tr>
<tr class="separator:a352bb411c834bc52a0308703e3b9779a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b2cd0d42780b95a823fb65a8ed8807f" id="r_a7b2cd0d42780b95a823fb65a8ed8807f"><td class="memItemLeft" align="right" valign="top"><a id="a7b2cd0d42780b95a823fb65a8ed8807f" name="a7b2cd0d42780b95a823fb65a8ed8807f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnableJoinedBodiesCollisions</b> (plUInt32 uiObjectFilterID1, plUInt32 uiObjectFilterID2, bool bEnable)</td></tr>
<tr class="separator:a7b2cd0d42780b95a823fb65a8ed8807f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7290957642740e0df21afc510f373dbd" id="r_a7290957642740e0df21afc510f373dbd"><td class="memItemLeft" align="right" valign="top"><a id="a7290957642740e0df21afc510f373dbd" name="a7290957642740e0df21afc510f373dbd"></a>
JPH::TempAllocator *&#160;</td><td class="memItemRight" valign="bottom"><b>GetTempAllocator</b> () const</td></tr>
<tr class="separator:a7290957642740e0df21afc510f373dbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bef7c628e46a20c1ab25c037e09fbe0" id="r_a5bef7c628e46a20c1ab25c037e09fbe0"><td class="memItemLeft" align="right" valign="top"><a id="a5bef7c628e46a20c1ab25c037e09fbe0" name="a5bef7c628e46a20c1ab25c037e09fbe0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ActivateCharacterController</b> (<a class="el" href="../../d4/d29/classpl_jolt_character_controller_component.htm">plJoltCharacterControllerComponent</a> *pCharacter, bool bActivate)</td></tr>
<tr class="separator:a5bef7c628e46a20c1ab25c037e09fbe0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79dce30d001de84bad282d25a77db151" id="r_a79dce30d001de84bad282d25a77db151"><td class="memItemLeft" align="right" valign="top"><a id="a79dce30d001de84bad282d25a77db151" name="a79dce30d001de84bad282d25a77db151"></a>
<a class="el" href="../../d2/d58/classpl_jolt_contact_listener.htm">plJoltContactListener</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetContactListener</b> ()</td></tr>
<tr class="separator:a79dce30d001de84bad282d25a77db151"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6718e7b0c8d44826573c4586b307c056" id="r_a6718e7b0c8d44826573c4586b307c056"><td class="memItemLeft" align="right" valign="top"><a id="a6718e7b0c8d44826573c4586b307c056" name="a6718e7b0c8d44826573c4586b307c056"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CheckBreakableConstraints</b> ()</td></tr>
<tr class="separator:a6718e7b0c8d44826573c4586b307c056"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63eac31a95d0e5cfe466ecf0e74c0756" id="r_a63eac31a95d0e5cfe466ecf0e74c0756"><td class="memItemLeft" align="right" valign="top"><a id="a63eac31a95d0e5cfe466ecf0e74c0756" name="a63eac31a95d0e5cfe466ecf0e74c0756"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>QueryGeometryInBox</b> (const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;params, <a class="el" href="../../df/dc5/classpl_bounding_box_template.htm">plBoundingBox</a> box, <a class="el" href="../../d0/d4e/classpl_dynamic_array.htm">plDynamicArray</a>&lt; <a class="el" href="../../d0/d92/structpl_navmesh_triangle.htm">plNavmeshTriangle</a> &gt; &amp;out_triangles) const</td></tr>
<tr class="separator:a63eac31a95d0e5cfe466ecf0e74c0756"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_world_module"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_world_module')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a></td></tr>
<tr class="memitem:a3b9e7276ad2b2bb01b7044a396f64a1f inherit pub_methods_classpl_world_module" id="r_a3b9e7276ad2b2bb01b7044a396f64a1f"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> ()</td></tr>
<tr class="memdesc:a3b9e7276ad2b2bb01b7044a396f64a1f inherit pub_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding world to this module. <br /></td></tr>
<tr class="separator:a3b9e7276ad2b2bb01b7044a396f64a1f inherit pub_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9b2d97799741747b2f3476ab40d1131 inherit pub_methods_classpl_world_module" id="r_ab9b2d97799741747b2f3476ab40d1131"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorld</b> () const</td></tr>
<tr class="memdesc:ab9b2d97799741747b2f3476ab40d1131 inherit pub_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding world to this module. <br /></td></tr>
<tr class="separator:ab9b2d97799741747b2f3476ab40d1131 inherit pub_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8284a9a7125ab7358654a366e0e4fc5 inherit pub_methods_classpl_world_module" id="r_aa8284a9a7125ab7358654a366e0e4fc5"><td class="memItemLeft" align="right" valign="top">
plUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorldIndex</b> () const</td></tr>
<tr class="memdesc:aa8284a9a7125ab7358654a366e0e4fc5 inherit pub_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="../../df/df2/classpl_world_module.htm#a3b9e7276ad2b2bb01b7044a396f64a1f" title="Returns the corresponding world to this module.">GetWorld()</a>-&gt;GetIndex(). Needed to break circular include dependencies. <br /></td></tr>
<tr class="separator:aa8284a9a7125ab7358654a366e0e4fc5 inherit pub_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_reflected_class"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d91/classpl_reflected_class.htm">plReflectedClass</a></td></tr>
<tr class="memitem:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class" id="r_a30a01812783d348746ff11a6db47d63f"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a30a01812783d348746ff11a6db47d63f inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class" id="r_aa092c6d843ea7030165419c3c19dfe46"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *pType) const</td></tr>
<tr class="memdesc:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa092c6d843ea7030165419c3c19dfe46 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class" id="r_aa77e5cf0d600ccf2ec569e5d13c70887"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">PL_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:aa77e5cf0d600ccf2ec569e5d13c70887 inherit pub_methods_classpl_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:ae6b9f72e567116c9da2bbb0bab5a8f32" id="r_ae6b9f72e567116c9da2bbb0bab5a8f32"><td class="memItemLeft" align="right" valign="top"><a id="ae6b9f72e567116c9da2bbb0bab5a8f32" name="ae6b9f72e567116c9da2bbb0bab5a8f32"></a>
<a class="el" href="../../d7/de8/classpl_deque.htm">plDeque</a>&lt; <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_RequireUpdate</b></td></tr>
<tr class="separator:ae6b9f72e567116c9da2bbb0bab5a8f32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a516fc1037d11d4d8ceb68629d5311110" id="r_a516fc1037d11d4d8ceb68629d5311110"><td class="memItemLeft" align="right" valign="top"><a id="a516fc1037d11d4d8ceb68629d5311110" name="a516fc1037d11d4d8ceb68629d5311110"></a>
<a class="el" href="../../d5/da6/classpl_set.htm">plSet</a>&lt; <a class="el" href="../../d5/d04/structpl_component_handle.htm">plComponentHandle</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_BreakableConstraints</b></td></tr>
<tr class="separator:a516fc1037d11d4d8ceb68629d5311110"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classpl_no_base"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_static_methods_classpl_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../de/dc4/classpl_no_base.htm">plNoBase</a></td></tr>
<tr class="memitem:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base" id="r_af5fef4e4ea9a9dc1842d1dd3812e5d7f"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:af5fef4e4ea9a9dc1842d1dd3812e5d7f inherit pub_static_methods_classpl_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classpl_world_module"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_types_classpl_world_module')"><img src="../../closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a></td></tr>
<tr class="memitem:ad1ce14c53b26d35ec2ced99ae11d8321 inherit pro_types_classpl_world_module" id="r_ad1ce14c53b26d35ec2ced99ae11d8321"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateFunction</b> = <a class="el" href="../../df/df1/structpl_delegate.htm">plDelegate</a>&lt;void(const <a class="el" href="../../d2/d11/structpl_world_module_1_1_update_context.htm">UpdateContext</a>&amp;)&gt;</td></tr>
<tr class="memdesc:ad1ce14c53b26d35ec2ced99ae11d8321 inherit pro_types_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update function delegate. <br /></td></tr>
<tr class="separator:ad1ce14c53b26d35ec2ced99ae11d8321 inherit pro_types_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_physics_world_module_interface"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_physics_world_module_interface')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a></td></tr>
<tr class="memitem:a4afdfe7433f4141279fa2e622ba8cc18 inherit pro_methods_classpl_physics_world_module_interface" id="r_a4afdfe7433f4141279fa2e622ba8cc18"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plPhysicsWorldModuleInterface</b> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld)</td></tr>
<tr class="separator:a4afdfe7433f4141279fa2e622ba8cc18 inherit pro_methods_classpl_physics_world_module_interface"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classpl_world_module"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_methods_classpl_world_module')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a></td></tr>
<tr class="memitem:ae973b8ae4e4c2e7c204291270152751a inherit pro_methods_classpl_world_module" id="r_ae973b8ae4e4c2e7c204291270152751a"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plWorldModule</b> (<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *pWorld)</td></tr>
<tr class="separator:ae973b8ae4e4c2e7c204291270152751a inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cbfdcd959972b4049328d9806b80930 inherit pro_methods_classpl_world_module" id="r_a4cbfdcd959972b4049328d9806b80930"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterUpdateFunction</b> (const <a class="el" href="../../de/ddb/structpl_world_module_1_1_update_function_desc.htm">UpdateFunctionDesc</a> &amp;desc)</td></tr>
<tr class="memdesc:a4cbfdcd959972b4049328d9806b80930 inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers the given update function at the world. <br /></td></tr>
<tr class="separator:a4cbfdcd959972b4049328d9806b80930 inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f0de506fb73de8c02f0ece7b8e0d329 inherit pro_methods_classpl_world_module" id="r_a2f0de506fb73de8c02f0ece7b8e0d329"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>DeregisterUpdateFunction</b> (const <a class="el" href="../../de/ddb/structpl_world_module_1_1_update_function_desc.htm">UpdateFunctionDesc</a> &amp;desc)</td></tr>
<tr class="memdesc:a2f0de506fb73de8c02f0ece7b8e0d329 inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">De-registers the given update function from the world. Note that only the m_Function and the m_Phase of the description have to be valid for de-registration. <br /></td></tr>
<tr class="separator:a2f0de506fb73de8c02f0ece7b8e0d329 inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d760b5ccef2486ab9af3bfc3c5bbf9b inherit pro_methods_classpl_world_module" id="r_a4d760b5ccef2486ab9af3bfc3c5bbf9b"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> ()</td></tr>
<tr class="memdesc:a4d760b5ccef2486ab9af3bfc3c5bbf9b inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator used by the world. <br /></td></tr>
<tr class="separator:a4d760b5ccef2486ab9af3bfc3c5bbf9b inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10a8edbc5b8a3fc4748da171fa942c28 inherit pro_methods_classpl_world_module" id="r_a10a8edbc5b8a3fc4748da171fa942c28"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/d2e/classpl_large_block_allocator.htm">plInternal::WorldLargeBlockAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetBlockAllocator</b> ()</td></tr>
<tr class="memdesc:a10a8edbc5b8a3fc4748da171fa942c28 inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the block allocator used by the world. <br /></td></tr>
<tr class="separator:a10a8edbc5b8a3fc4748da171fa942c28 inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad26a4d36aa09ab224e4cd5f399c5e67c inherit pro_methods_classpl_world_module" id="r_ad26a4d36aa09ab224e4cd5f399c5e67c"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>GetWorldSimulationEnabled</b> () const</td></tr>
<tr class="memdesc:ad26a4d36aa09ab224e4cd5f399c5e67c inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the world simulation is enabled. <br /></td></tr>
<tr class="separator:ad26a4d36aa09ab224e4cd5f399c5e67c inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0d9a5a1dbcf2b77e9d4ce35de0d7a73 inherit pro_methods_classpl_world_module" id="r_ac0d9a5a1dbcf2b77e9d4ce35de0d7a73"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/df2/classpl_world_module.htm#ac0d9a5a1dbcf2b77e9d4ce35de0d7a73">WorldClear</a> ()</td></tr>
<tr class="memdesc:ac0d9a5a1dbcf2b77e9d4ce35de0d7a73 inherit pro_methods_classpl_world_module"><td class="mdescLeft">&#160;</td><td class="mdescRight">Called by <a class="el" href="../../d2/d12/classpl_world.htm#aab76861451ee04683cb3aae694e5ffaa" title="Deletes all game objects in a world.">plWorld::Clear()</a>. Can be used to clear cached data when a world is completely cleared of objects (but not deleted).  <br /></td></tr>
<tr class="separator:ac0d9a5a1dbcf2b77e9d4ce35de0d7a73 inherit pro_methods_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classpl_world_module"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_world_module')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../df/df2/classpl_world_module.htm">plWorldModule</a></td></tr>
<tr class="memitem:a7b71803478bd5100e41c87972924f8a4 inherit pro_attribs_classpl_world_module" id="r_a7b71803478bd5100e41c87972924f8a4"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d2/d12/classpl_world.htm">plWorld</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pWorld</b></td></tr>
<tr class="separator:a7b71803478bd5100e41c87972924f8a4 inherit pro_attribs_classpl_world_module"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a7461cc746826374e08404c0af6a21399" name="a7461cc746826374e08404c0af6a21399"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7461cc746826374e08404c0af6a21399">&#9670;&#160;</a></span>AddFixedJointComponent()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plJoltWorldModule::AddFixedJointComponent </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *</td>          <td class="paramname"><span class="paramname"><em>pOwner</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/d9d/structpl_physics_world_module_interface_1_1_fixed_joint_config.htm">plPhysicsWorldModuleInterface::FixedJointConfig</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>cfg</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a fixed joint to pOwner. </p>

<p>Reimplemented from <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm#ad7efe8a7611bd9d4fec08f2ee843292a">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="a41770818729cd15f6f1e7ddec088d4cf" name="a41770818729cd15f6f1e7ddec088d4cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a41770818729cd15f6f1e7ddec088d4cf">&#9670;&#160;</a></span>AddStaticCollisionBox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plJoltWorldModule::AddStaticCollisionBox </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *</td>          <td class="paramname"><span class="paramname"><em>pOwner</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a></td>          <td class="paramname"><span class="paramname"><em>vBoxSize</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Adds a static actor with a box shape to pOwner. </p>

<p>Reimplemented from <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm#a05fd245c329927fc3325ebaf6b727498">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="a440bcc4f1250074d023b564fa0f0b89d" name="a440bcc4f1250074d023b564fa0f0b89d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a440bcc4f1250074d023b564fa0f0b89d">&#9670;&#160;</a></span>Deinitialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plJoltWorldModule::Deinitialize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called before the destructor. A derived type can override this method to do deinitialization work. </p>

<p>Reimplemented from <a class="el" href="../../df/df2/classpl_world_module.htm#aa57b8eff4e502f7b502f085a26127141">plWorldModule</a>.</p>

</div>
</div>
<a id="ae97f83bfd5610c04235eed434e63ab82" name="ae97f83bfd5610c04235eed434e63ab82"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae97f83bfd5610c04235eed434e63ab82">&#9670;&#160;</a></span>GetCollisionLayerByName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">plUInt32 plJoltWorldModule::GetCollisionLayerByName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/d79/classpl_string_view.htm">plStringView</a></td>          <td class="paramname"><span class="paramname"><em>sName</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Searches for a collision layer with the given name and returns its index. </p>
<p>Returns plInvalidIndex if no such collision layer exists. </p>

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm#aa5b80112cb8361386bbe7258bf6943bd">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="a37b4a467ae7e160445bf902dad543971" name="a37b4a467ae7e160445bf902dad543971"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a37b4a467ae7e160445bf902dad543971">&#9670;&#160;</a></span>GetGravity()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> plJoltWorldModule::GetGravity </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="a7763f7750f762a04b817ec285fd64cdb" name="a7763f7750f762a04b817ec285fd64cdb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7763f7750f762a04b817ec285fd64cdb">&#9670;&#160;</a></span>GetWorldSpaceBounds()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/dc2/classpl_bounding_box_sphere_template.htm">plBoundingBoxSphere</a> plJoltWorldModule::GetWorldSpaceBounds </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d82/classpl_game_object.htm">plGameObject</a> *</td>          <td class="paramname"><span class="paramname"><em>pOwner</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiCollisionLayer</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; plPhysicsShapeType &gt;</td>          <td class="paramname"><span class="paramname"><em>shapeTypes</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bIncludeChildObjects</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Gets world space bounds of a physics object if its shape type is included in shapeTypes and its collision layer interacts with uiCollisionLayer. </p>

<p>Reimplemented from <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm#ac223f263a192404a2108cca1a5c2a5c6">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="af2fa0784d4c7a3b7c1ed514a1a077681" name="af2fa0784d4c7a3b7c1ed514a1a077681"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af2fa0784d4c7a3b7c1ed514a1a077681">&#9670;&#160;</a></span>Initialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plJoltWorldModule::Initialize </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called after the constructor. A derived type can override this method to do initialization work. Typically this is the method where updates function are registered. </p>

<p>Reimplemented from <a class="el" href="../../df/df2/classpl_world_module.htm#a67272ece6b8b8d0ca3b526c7953b994d">plWorldModule</a>.</p>

</div>
</div>
<a id="a10d00fa05e76e5b6e14cd7df43b03075" name="a10d00fa05e76e5b6e14cd7df43b03075"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10d00fa05e76e5b6e14cd7df43b03075">&#9670;&#160;</a></span>IsBodyStillQueuedToAdd()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plJoltWorldModule::IsBodyStillQueuedToAdd </td>
          <td>(</td>
          <td class="paramtype">plUInt32</td>          <td class="paramname"><span class="paramname"><em>uiBodiesAddCounter</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks whether the last <a class="el" href="#a0cceb86cf9ff964b23f2c66113809c0f" title="Returns a uint32 that can be queried for completion with IsBodyStillQueuedToAdd().">QueueBodyToAdd()</a> has been processed already, or not. </p>
<p>Bodies that aren't added to Jolt yet, may not get locked (they are not in the broadphase). If this is still the case, skip operations that wouldn't have an effect anyway. </p>

</div>
</div>
<a id="aeff1ef821d63e8d4d8eedd8ba7de2fca" name="aeff1ef821d63e8d4d8eedd8ba7de2fca"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aeff1ef821d63e8d4d8eedd8ba7de2fca">&#9670;&#160;</a></span>OnSimulationStarted()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plJoltWorldModule::OnSimulationStarted </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This method is called at the start of the next world update when the world is simulated. This method will be called after the initialization method. </p>

<p>Reimplemented from <a class="el" href="../../df/df2/classpl_world_module.htm#a2a7c7e9de1f96ebd7c6916417f795186">plWorldModule</a>.</p>

</div>
</div>
<a id="acf0fed59510cc64b3e4d65eadbdd15aa" name="acf0fed59510cc64b3e4d65eadbdd15aa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acf0fed59510cc64b3e4d65eadbdd15aa">&#9670;&#160;</a></span>OverlapTestCapsule()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plJoltWorldModule::OverlapTestCapsule </td>
          <td>(</td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fCapsuleRadius</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fCapsuleHeight</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>transform</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>params</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="a18e59e89ef7dca94c6c4e48c0cb3cfea" name="a18e59e89ef7dca94c6c4e48c0cb3cfea"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a18e59e89ef7dca94c6c4e48c0cb3cfea">&#9670;&#160;</a></span>OverlapTestSphere()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plJoltWorldModule::OverlapTestSphere </td>
          <td>(</td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fSphereRadius</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vPosition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>params</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="aee29d10528d33bbb803f29be3a5e601b" name="aee29d10528d33bbb803f29be3a5e601b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aee29d10528d33bbb803f29be3a5e601b">&#9670;&#160;</a></span>QueryShapesInSphere()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void plJoltWorldModule::QueryShapesInSphere </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d9/d02/structpl_physics_overlap_result_array.htm">plPhysicsOverlapResultArray</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_results</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fSphereRadius</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vPosition</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>params</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="ac6e57fa0417a556caa7eab95ec1c528a" name="ac6e57fa0417a556caa7eab95ec1c528a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac6e57fa0417a556caa7eab95ec1c528a">&#9670;&#160;</a></span>Raycast()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plJoltWorldModule::Raycast </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/d29/structpl_physics_cast_result.htm">plPhysicsCastResult</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_result</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vStart</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vDir</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fDistance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>params</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plPhysicsHitCollection</td>          <td class="paramname"><span class="paramname"><em>collection</em></span><span class="paramdefsep"> = </span><span class="paramdefval">plPhysicsHitCollection::Closest</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="ad8f80c63ba4a7a437cc4a6da53b19545" name="ad8f80c63ba4a7a437cc4a6da53b19545"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad8f80c63ba4a7a437cc4a6da53b19545">&#9670;&#160;</a></span>RaycastAll()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plJoltWorldModule::RaycastAll </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../df/d25/structpl_physics_cast_result_array.htm">plPhysicsCastResultArray</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_results</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vStart</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vDir</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fDistance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>params</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="a1c7ee9e78e5b5b78daf8a8af05026e39" name="a1c7ee9e78e5b5b78daf8a8af05026e39"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c7ee9e78e5b5b78daf8a8af05026e39">&#9670;&#160;</a></span>SweepTestBox()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plJoltWorldModule::SweepTestBox </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/d29/structpl_physics_cast_result.htm">plPhysicsCastResult</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_result</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a></td>          <td class="paramname"><span class="paramname"><em>vBoxExtends</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>transform</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vDir</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fDistance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>params</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plPhysicsHitCollection</td>          <td class="paramname"><span class="paramname"><em>collection</em></span><span class="paramdefsep"> = </span><span class="paramdefval">plPhysicsHitCollection::Closest</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="ae588362da9f2757f2a914feef4d7fce2" name="ae588362da9f2757f2a914feef4d7fce2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae588362da9f2757f2a914feef4d7fce2">&#9670;&#160;</a></span>SweepTestCapsule()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plJoltWorldModule::SweepTestCapsule </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/d29/structpl_physics_cast_result.htm">plPhysicsCastResult</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_result</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fCapsuleRadius</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fCapsuleHeight</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/d78/classpl_transform_template.htm">plTransform</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>transform</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vDir</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fDistance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>params</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plPhysicsHitCollection</td>          <td class="paramname"><span class="paramname"><em>collection</em></span><span class="paramdefsep"> = </span><span class="paramdefval">plPhysicsHitCollection::Closest</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<a id="a4532c6ae2f32f3f7d165889c594205b1" name="a4532c6ae2f32f3f7d165889c594205b1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4532c6ae2f32f3f7d165889c594205b1">&#9670;&#160;</a></span>SweepTestSphere()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool plJoltWorldModule::SweepTestSphere </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/d29/structpl_physics_cast_result.htm">plPhysicsCastResult</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>out_result</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fSphereRadius</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vStart</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../df/d1f/classpl_vec3_template.htm">plVec3</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>vDir</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float</td>          <td class="paramname"><span class="paramname"><em>fDistance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d5/dd3/structpl_physics_query_parameters.htm">plPhysicsQueryParameters</a> &amp;</td>          <td class="paramname"><span class="paramname"><em>params</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">plPhysicsHitCollection</td>          <td class="paramname"><span class="paramname"><em>collection</em></span><span class="paramdefsep"> = </span><span class="paramdefval">plPhysicsHitCollection::Closest</span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implements <a class="el" href="../../d3/d4e/classpl_physics_world_module_interface.htm">plPhysicsWorldModuleInterface</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/EnginePlugins/JoltPlugin/System/<a class="el" href="../../dd/d71/_jolt_world_module_8h_source.htm">JoltWorldModule.h</a></li>
<li>Code/EnginePlugins/JoltPlugin/System/<b>JoltQueries.cpp</b></li>
<li>Code/EnginePlugins/JoltPlugin/System/<b>JoltWorldModule.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d31/classpl_jolt_world_module.htm">plJoltWorldModule</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
