<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plAccessorProperty&lt; Class, Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d1/d52/classpl_accessor_property.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d2/dab/classpl_accessor_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAccessorProperty&lt; Class, Type &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>[internal] An implementation of <a class="el" href="../../dd/dd4/classpl_typed_member_property.htm" title="The base class for all typed member properties. I.e. once the type of a property is determined,...">plTypedMemberProperty</a> that uses custom getter / setter functions to access a property.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d7/d7c/_member_property_8h_source.htm">MemberProperty.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for plAccessorProperty&lt; Class, Type &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d3/d11/classpl_accessor_property__inherit__graph.png" border="0" usemap="#apl_accessor_property_3_01_class_00_01_type_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="apl_accessor_property_3_01_class_00_01_type_01_4_inherit__map" id="apl_accessor_property_3_01_class_00_01_type_01_4_inherit__map">
<area shape="rect" title="[internal] An implementation of plTypedMemberProperty that uses custom getter / setter functions to a..." alt="" coords="36,261,171,304"/>
<area shape="rect" href="../../dd/dd4/classpl_typed_member_property.htm" title=" " alt="" coords="5,155,202,213"/>
<area shape="poly" title=" " alt="" coords="106,229,106,261,101,261,101,229"/>
<area shape="rect" href="../../d3/d73/classpl_abstract_member_property.htm" title="This is the base class for all properties that are members of a class. It provides more information a..." alt="" coords="15,80,192,107"/>
<area shape="poly" title=" " alt="" coords="106,123,106,154,101,154,101,123"/>
<area shape="rect" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="39,5,168,32"/>
<area shape="poly" title=" " alt="" coords="106,48,106,80,101,80,101,48"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a0f3b7bd64e63a556503a9ddcdc94ea28" id="r_a0f3b7bd64e63a556503a9ddcdc94ea28"><td class="memItemLeft" align="right" valign="top"><a id="a0f3b7bd64e63a556503a9ddcdc94ea28" name="a0f3b7bd64e63a556503a9ddcdc94ea28"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>RealType</b> = typename <a class="el" href="../../da/d5d/structpl_type_traits.htm">plTypeTraits</a>&lt;Type&gt;::NonConstReferenceType</td></tr>
<tr class="separator:a0f3b7bd64e63a556503a9ddcdc94ea28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a84f03990596775b0ac4193b3d53ecd" id="r_a6a84f03990596775b0ac4193b3d53ecd"><td class="memItemLeft" align="right" valign="top"><a id="a6a84f03990596775b0ac4193b3d53ecd" name="a6a84f03990596775b0ac4193b3d53ecd"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>GetterFunc</b> = Type (Class::*)() const</td></tr>
<tr class="separator:a6a84f03990596775b0ac4193b3d53ecd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36a1f4aa9842a4444cc18bfd599cf530" id="r_a36a1f4aa9842a4444cc18bfd599cf530"><td class="memItemLeft" align="right" valign="top"><a id="a36a1f4aa9842a4444cc18bfd599cf530" name="a36a1f4aa9842a4444cc18bfd599cf530"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>SetterFunc</b> = void (Class::*)(Type value)</td></tr>
<tr class="separator:a36a1f4aa9842a4444cc18bfd599cf530"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afa2668a923a1715dd12c3706ca5d2d88" id="r_afa2668a923a1715dd12c3706ca5d2d88"><td class="memItemLeft" align="right" valign="top"><a id="afa2668a923a1715dd12c3706ca5d2d88" name="afa2668a923a1715dd12c3706ca5d2d88"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plAccessorProperty</b> (const char *szPropertyName, GetterFunc getter, SetterFunc setter)</td></tr>
<tr class="memdesc:afa2668a923a1715dd12c3706ca5d2d88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:afa2668a923a1715dd12c3706ca5d2d88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68da3467da27cf3f68cb85cdf0517d0a" id="r_a68da3467da27cf3f68cb85cdf0517d0a"><td class="memItemLeft" align="right" valign="top">virtual void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a68da3467da27cf3f68cb85cdf0517d0a">GetPropertyPointer</a> (const void *pInstance) const override</td></tr>
<tr class="memdesc:a68da3467da27cf3f68cb85cdf0517d0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Always returns nullptr; once a property is modified through accessors, there is no point in giving more direct access to others.  <br /></td></tr>
<tr class="separator:a68da3467da27cf3f68cb85cdf0517d0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a62ee76edc35fb2545c96d8db91716f69" id="r_a62ee76edc35fb2545c96d8db91716f69"><td class="memItemLeft" align="right" valign="top">virtual RealType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a62ee76edc35fb2545c96d8db91716f69">GetValue</a> (const void *pInstance) const override</td></tr>
<tr class="memdesc:a62ee76edc35fb2545c96d8db91716f69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the property. Pass the instance pointer to the surrounding class along.  <br /></td></tr>
<tr class="separator:a62ee76edc35fb2545c96d8db91716f69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7887324d467fd1eeaa3bf576dc489ff2" id="r_a7887324d467fd1eeaa3bf576dc489ff2"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a7887324d467fd1eeaa3bf576dc489ff2">SetValue</a> (void *pInstance, RealType value) const override</td></tr>
<tr class="memdesc:a7887324d467fd1eeaa3bf576dc489ff2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies the value of the property. Pass the instance pointer to the surrounding class along.  <br /></td></tr>
<tr class="separator:a7887324d467fd1eeaa3bf576dc489ff2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_typed_member_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_typed_member_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dd/dd4/classpl_typed_member_property.htm">plTypedMemberProperty&lt; plTypeTraits&lt; Type &gt;::NonConstReferenceType &gt;</a></td></tr>
<tr class="memitem:a4bfcf79c08e4ed086631a7798eb3e9a7 inherit pub_methods_classpl_typed_member_property" id="r_a4bfcf79c08e4ed086631a7798eb3e9a7"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plTypedMemberProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a4bfcf79c08e4ed086631a7798eb3e9a7 inherit pub_methods_classpl_typed_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d3/d73/classpl_abstract_member_property.htm" title="This is the base class for all properties that are members of a class. It provides more information a...">plAbstractMemberProperty</a>. <br /></td></tr>
<tr class="separator:a4bfcf79c08e4ed086631a7798eb3e9a7 inherit pub_methods_classpl_typed_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef37971a3e6f06d1fb58d74762b2f707 inherit pub_methods_classpl_typed_member_property" id="r_aef37971a3e6f06d1fb58d74762b2f707"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../d8/dec/classpl_r_t_t_i.htm">plRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd4/classpl_typed_member_property.htm#aef37971a3e6f06d1fb58d74762b2f707">GetSpecificType</a> () const override</td></tr>
<tr class="memdesc:aef37971a3e6f06d1fb58d74762b2f707 inherit pub_methods_classpl_typed_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the actual type of the property. You can then compare that with known types, eg. compare it to plGetStaticRTTI&lt;int&gt;() to see whether this is an int property.  <br /></td></tr>
<tr class="separator:aef37971a3e6f06d1fb58d74762b2f707 inherit pub_methods_classpl_typed_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add4714f4140a3dc2e5814a3350bbf02e inherit pub_methods_classpl_typed_member_property" id="r_add4714f4140a3dc2e5814a3350bbf02e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd4/classpl_typed_member_property.htm#add4714f4140a3dc2e5814a3350bbf02e">SetValue</a> (void *pInstance, Type value) const=0</td></tr>
<tr class="memdesc:add4714f4140a3dc2e5814a3350bbf02e inherit pub_methods_classpl_typed_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies the value of the property. Pass the instance pointer to the surrounding class along.  <br /></td></tr>
<tr class="separator:add4714f4140a3dc2e5814a3350bbf02e inherit pub_methods_classpl_typed_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad65cf6a32ee0b83a16ca35f7e194b418 inherit pub_methods_classpl_typed_member_property" id="r_ad65cf6a32ee0b83a16ca35f7e194b418"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd4/classpl_typed_member_property.htm#ad65cf6a32ee0b83a16ca35f7e194b418">GetValuePtr</a> (const void *pInstance, void *pObject) const override</td></tr>
<tr class="memdesc:ad65cf6a32ee0b83a16ca35f7e194b418 inherit pub_methods_classpl_typed_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of this property's type.  <br /></td></tr>
<tr class="separator:ad65cf6a32ee0b83a16ca35f7e194b418 inherit pub_methods_classpl_typed_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad522bf0d23f230bebd04f9e55d295db3 inherit pub_methods_classpl_typed_member_property" id="r_ad522bf0d23f230bebd04f9e55d295db3"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd4/classpl_typed_member_property.htm#ad522bf0d23f230bebd04f9e55d295db3">SetValuePtr</a> (void *pInstance, const void *pObject) const override</td></tr>
<tr class="memdesc:ad522bf0d23f230bebd04f9e55d295db3 inherit pub_methods_classpl_typed_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this property's type.  <br /></td></tr>
<tr class="separator:ad522bf0d23f230bebd04f9e55d295db3 inherit pub_methods_classpl_typed_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_member_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_member_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d3/d73/classpl_abstract_member_property.htm">plAbstractMemberProperty</a></td></tr>
<tr class="memitem:a68de7217da30c9b7065fd5f134f3c70d inherit pub_methods_classpl_abstract_member_property" id="r_a68de7217da30c9b7065fd5f134f3c70d"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractMemberProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a68de7217da30c9b7065fd5f134f3c70d inherit pub_methods_classpl_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d4/dd7/classpl_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">plAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a68de7217da30c9b7065fd5f134f3c70d inherit pub_methods_classpl_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0854e27c63959a2f18d7afa910d84ee6 inherit pub_methods_classpl_abstract_member_property" id="r_a0854e27c63959a2f18d7afa910d84ee6"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7">plPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d73/classpl_abstract_member_property.htm#a0854e27c63959a2f18d7afa910d84ee6">GetCategory</a> () const override</td></tr>
<tr class="memdesc:a0854e27c63959a2f18d7afa910d84ee6 inherit pub_methods_classpl_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="../../d0/d7a/structpl_property_category.htm#ace00211e23d2ae831a5eeabe06235dd7a093f40bc5632091e5588feee46489b8b" title="The property is a &#39;member property&#39;, i.e. it represents some accessible value. Cast to plAbstractMemb...">plPropertyCategory::Member</a>.  <br /></td></tr>
<tr class="separator:a0854e27c63959a2f18d7afa910d84ee6 inherit pub_methods_classpl_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pub_methods_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property" id="r_a8ae8dcf20f01b0926e321d68fd38d243"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>plAbstractProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a8ae8dcf20f01b0926e321d68fd38d243 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property" id="r_ab192fac6724fcbd56a160013230bad0b"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:ab192fac6724fcbd56a160013230bad0b inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property" id="r_a988149e0184a527d89a6fc7b529aa6fc"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a988149e0184a527d89a6fc7b529aa6fc inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property" id="r_a1a7c0de0ecff4c5ab4a37987f9780a64"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a1a7c0de0ecff4c5ab4a37987f9780a64 inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property" id="r_a249245c8d8a5bd14d12b7b72920b4d5e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a249245c8d8a5bd14d12b7b72920b4d5e inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property" id="r_aa28f7ffab1bd6667a67f94a351e618ba"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../db/d81/classpl_array_ptr.htm">plArrayPtr</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:aa28f7ffab1bd6667a67f94a351e618ba inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property" id="r_a74666a9b6312d9e8a0208ff67ec56a7d"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:a74666a9b6312d9e8a0208ff67ec56a7d inherit pub_methods_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classpl_abstract_property"><td colspan="2" onclick="javascript:dynsection.toggleInherit('pro_attribs_classpl_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/dd7/classpl_abstract_property.htm">plAbstractProperty</a></td></tr>
<tr class="memitem:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property" id="r_a5226bc2ced2436f3aeaf96fadea40f70"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../df/dd9/structpl_bitflags.htm">plBitflags</a>&lt; <a class="el" href="../../db/d0f/structpl_property_flags.htm">plPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a5226bc2ced2436f3aeaf96fadea40f70 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property" id="r_a135a819e72ea2827916acdefd2fb6848"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:a135a819e72ea2827916acdefd2fb6848 inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property" id="r_aaf46ae0b97785db5048abb483c603cea"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d8/dcc/classpl_hybrid_array.htm">plHybridArray</a>&lt; const <a class="el" href="../../d3/d74/classpl_property_attribute.htm">plPropertyAttribute</a> *, 2, <a class="el" href="../../d3/d9e/structpl_statics_allocator_wrapper.htm">plStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:aaf46ae0b97785db5048abb483c603cea inherit pro_attribs_classpl_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Class, typename Type&gt;<br />
class plAccessorProperty&lt; Class, Type &gt;</div><p>[internal] An implementation of <a class="el" href="../../dd/dd4/classpl_typed_member_property.htm" title="The base class for all typed member properties. I.e. once the type of a property is determined,...">plTypedMemberProperty</a> that uses custom getter / setter functions to access a property. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a68da3467da27cf3f68cb85cdf0517d0a" name="a68da3467da27cf3f68cb85cdf0517d0a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a68da3467da27cf3f68cb85cdf0517d0a">&#9670;&#160;</a></span>GetPropertyPointer()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void * <a class="el" href="../../d1/d52/classpl_accessor_property.htm">plAccessorProperty</a>&lt; Class, Type &gt;::GetPropertyPointer </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Always returns nullptr; once a property is modified through accessors, there is no point in giving more direct access to others. </p>

<p>Implements <a class="el" href="../../d3/d73/classpl_abstract_member_property.htm#a06cbb9f12610e4b706260f3323b106d2">plAbstractMemberProperty</a>.</p>

</div>
</div>
<a id="a62ee76edc35fb2545c96d8db91716f69" name="a62ee76edc35fb2545c96d8db91716f69"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a62ee76edc35fb2545c96d8db91716f69">&#9670;&#160;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual RealType <a class="el" href="../../d1/d52/classpl_accessor_property.htm">plAccessorProperty</a>&lt; Class, Type &gt;::GetValue </td>
          <td>(</td>
          <td class="paramtype">const void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the value of the property. Pass the instance pointer to the surrounding class along. </p>

<p>Implements <a class="el" href="../../dd/dd4/classpl_typed_member_property.htm#a148d829e10960debf76256df664ffc40">plTypedMemberProperty&lt; plTypeTraits&lt; Type &gt;::NonConstReferenceType &gt;</a>.</p>

</div>
</div>
<a id="a7887324d467fd1eeaa3bf576dc489ff2" name="a7887324d467fd1eeaa3bf576dc489ff2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7887324d467fd1eeaa3bf576dc489ff2">&#9670;&#160;</a></span>SetValue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Class , typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d1/d52/classpl_accessor_property.htm">plAccessorProperty</a>&lt; Class, Type &gt;::SetValue </td>
          <td>(</td>
          <td class="paramtype">void *</td>          <td class="paramname"><span class="paramname"><em>pInstance</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">RealType</td>          <td class="paramname"><span class="paramname"><em>value</em></span>&#160;) const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Modifies the value of the property. Pass the instance pointer to the surrounding class along. </p>
<dl class="section note"><dt>Note</dt><dd>Make sure the property is not read-only before calling this, otherwise an assert will fire. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../d7/d7c/_member_property_8h_source.htm">MemberProperty.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d52/classpl_accessor_property.htm">plAccessorProperty</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
