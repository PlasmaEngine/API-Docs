<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>Plasma Engine: plSetBase&lt; KeyType, Comparer &gt;::IteratorBase&lt; REVERSE &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">Plasma Engine<span id="projectnumber">&#160;2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/de2/structpl_set_base_1_1_iterator_base.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d4/dfc/structpl_set_base_1_1_iterator_base-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plSetBase&lt; KeyType, Comparer &gt;::IteratorBase&lt; REVERSE &gt; Struct Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Base class for all iterators.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dc/d09/_set_8h_source.htm">Set.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a35b0a39945c5b61d3861b716834707ba" id="r_a35b0a39945c5b61d3861b716834707ba"><td class="memItemLeft" align="right" valign="top"><a id="a35b0a39945c5b61d3861b716834707ba" name="a35b0a39945c5b61d3861b716834707ba"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator_category</b> = std::forward_iterator_tag</td></tr>
<tr class="separator:a35b0a39945c5b61d3861b716834707ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac168649024ffe47994cce1108eb99fdd" id="r_ac168649024ffe47994cce1108eb99fdd"><td class="memItemLeft" align="right" valign="top"><a id="ac168649024ffe47994cce1108eb99fdd" name="ac168649024ffe47994cce1108eb99fdd"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a>&lt;REVERSE&gt;</td></tr>
<tr class="separator:ac168649024ffe47994cce1108eb99fdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa73819e9118e0d8ad2298b94bdeef79c" id="r_aa73819e9118e0d8ad2298b94bdeef79c"><td class="memItemLeft" align="right" valign="top"><a id="aa73819e9118e0d8ad2298b94bdeef79c" name="aa73819e9118e0d8ad2298b94bdeef79c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>difference_type</b> = std::ptrdiff_t</td></tr>
<tr class="separator:aa73819e9118e0d8ad2298b94bdeef79c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc253769bf0b307057def705ed1e7e79" id="r_acc253769bf0b307057def705ed1e7e79"><td class="memItemLeft" align="right" valign="top"><a id="acc253769bf0b307057def705ed1e7e79" name="acc253769bf0b307057def705ed1e7e79"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>pointer</b> = <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a>&lt;REVERSE&gt;*</td></tr>
<tr class="separator:acc253769bf0b307057def705ed1e7e79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a054841beef0094bdf759f34ca8bb2837" id="r_a054841beef0094bdf759f34ca8bb2837"><td class="memItemLeft" align="right" valign="top"><a id="a054841beef0094bdf759f34ca8bb2837" name="a054841beef0094bdf759f34ca8bb2837"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reference</b> = <a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a>&lt;REVERSE&gt;&amp;</td></tr>
<tr class="separator:a054841beef0094bdf759f34ca8bb2837"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:adb0df223ba940ce0bb68eea43849367b" id="r_adb0df223ba940ce0bb68eea43849367b"><td class="memItemLeft" align="right" valign="top"><a id="adb0df223ba940ce0bb68eea43849367b" name="adb0df223ba940ce0bb68eea43849367b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:adb0df223ba940ce0bb68eea43849367b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16a9a470a17b1086f19079fbfd213419" id="r_a16a9a470a17b1086f19079fbfd213419"><td class="memItemLeft" align="right" valign="top"><a id="a16a9a470a17b1086f19079fbfd213419" name="a16a9a470a17b1086f19079fbfd213419"></a>
PL_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>IteratorBase</b> ()</td></tr>
<tr class="memdesc:a16a9a470a17b1086f19079fbfd213419"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs an invalid iterator. <br /></td></tr>
<tr class="separator:a16a9a470a17b1086f19079fbfd213419"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf0be43cf858496973eba89125c46858" id="r_abf0be43cf858496973eba89125c46858"><td class="memItemLeft" align="right" valign="top"><a id="abf0be43cf858496973eba89125c46858" name="abf0be43cf858496973eba89125c46858"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValid</b> () const</td></tr>
<tr class="memdesc:abf0be43cf858496973eba89125c46858"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether this iterator points to a valid element. <br /></td></tr>
<tr class="separator:abf0be43cf858496973eba89125c46858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87d39f5af8599e1af6548e0acc792a86" id="r_a87d39f5af8599e1af6548e0acc792a86"><td class="memItemLeft" align="right" valign="top"><a id="a87d39f5af8599e1af6548e0acc792a86" name="a87d39f5af8599e1af6548e0acc792a86"></a>
PL_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const typename <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt;<a class="el" href="#a16a9a470a17b1086f19079fbfd213419">::IteratorBase</a>&lt; REVERSE &gt; &amp;it2) const</td></tr>
<tr class="memdesc:a87d39f5af8599e1af6548e0acc792a86"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the two iterators point to the same element. <br /></td></tr>
<tr class="separator:a87d39f5af8599e1af6548e0acc792a86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4330e1a3193bf34330d847ee7e43f73f" id="r_a4330e1a3193bf34330d847ee7e43f73f"><td class="memItemLeft" align="right" valign="top"><a id="a4330e1a3193bf34330d847ee7e43f73f" name="a4330e1a3193bf34330d847ee7e43f73f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const typename <a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a>&lt; KeyType, Comparer &gt;<a class="el" href="#a16a9a470a17b1086f19079fbfd213419">::IteratorBase</a>&lt; REVERSE &gt; &amp;)</td></tr>
<tr class="separator:a4330e1a3193bf34330d847ee7e43f73f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a8bcab0808b3a93d29ceaad21b7d8f6" id="r_a9a8bcab0808b3a93d29ceaad21b7d8f6"><td class="memItemLeft" align="right" valign="top"><a id="a9a8bcab0808b3a93d29ceaad21b7d8f6" name="a9a8bcab0808b3a93d29ceaad21b7d8f6"></a>
PL_FORCE_INLINE const KeyType &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>Key</b> () const</td></tr>
<tr class="memdesc:a9a8bcab0808b3a93d29ceaad21b7d8f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the 'key' of the element that this iterator points to. <br /></td></tr>
<tr class="separator:a9a8bcab0808b3a93d29ceaad21b7d8f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd83434ed2234501fc38b522dfc74213" id="r_afd83434ed2234501fc38b522dfc74213"><td class="memItemLeft" align="right" valign="top"><a id="afd83434ed2234501fc38b522dfc74213" name="afd83434ed2234501fc38b522dfc74213"></a>
PL_ALWAYS_INLINE const KeyType &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> () const</td></tr>
<tr class="memdesc:afd83434ed2234501fc38b522dfc74213"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the 'key' of the element that this iterator points to. <br /></td></tr>
<tr class="separator:afd83434ed2234501fc38b522dfc74213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a7a3528eb02bf1f7d848b4a1e50b747" id="r_a4a7a3528eb02bf1f7d848b4a1e50b747"><td class="memItemLeft" align="right" valign="top"><a id="a4a7a3528eb02bf1f7d848b4a1e50b747" name="a4a7a3528eb02bf1f7d848b4a1e50b747"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Next</b> ()</td></tr>
<tr class="memdesc:a4a7a3528eb02bf1f7d848b4a1e50b747"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the iterator to the next element in the set. The iterator will not be valid anymore, if the end is reached. <br /></td></tr>
<tr class="separator:a4a7a3528eb02bf1f7d848b4a1e50b747"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04c3c56b6ba5206333ec7a1f982c23ea" id="r_a04c3c56b6ba5206333ec7a1f982c23ea"><td class="memItemLeft" align="right" valign="top"><a id="a04c3c56b6ba5206333ec7a1f982c23ea" name="a04c3c56b6ba5206333ec7a1f982c23ea"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Prev</b> ()</td></tr>
<tr class="memdesc:a04c3c56b6ba5206333ec7a1f982c23ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the iterator to the previous element in the set. The iterator will not be valid anymore, if the end is reached. <br /></td></tr>
<tr class="separator:a04c3c56b6ba5206333ec7a1f982c23ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0074e60644542f724f090180825d86f" id="r_ac0074e60644542f724f090180825d86f"><td class="memItemLeft" align="right" valign="top"><a id="ac0074e60644542f724f090180825d86f" name="ac0074e60644542f724f090180825d86f"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator++</b> ()</td></tr>
<tr class="memdesc:ac0074e60644542f724f090180825d86f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shorthand for 'Next'. <br /></td></tr>
<tr class="separator:ac0074e60644542f724f090180825d86f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3dd27fbaba6ac350302a60661b7a5e89" id="r_a3dd27fbaba6ac350302a60661b7a5e89"><td class="memItemLeft" align="right" valign="top"><a id="a3dd27fbaba6ac350302a60661b7a5e89" name="a3dd27fbaba6ac350302a60661b7a5e89"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator--</b> ()</td></tr>
<tr class="memdesc:a3dd27fbaba6ac350302a60661b7a5e89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shorthand for 'Prev'. <br /></td></tr>
<tr class="separator:a3dd27fbaba6ac350302a60661b7a5e89"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a252cfff4dff2970874c22de054173b74" id="r_a252cfff4dff2970874c22de054173b74"><td class="memItemLeft" align="right" valign="top"><a id="a252cfff4dff2970874c22de054173b74" name="a252cfff4dff2970874c22de054173b74"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Advance</b> (plInt32 dir0, plInt32 dir1)</td></tr>
<tr class="separator:a252cfff4dff2970874c22de054173b74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cb5d927461f6f3d389618c61d6f546f" id="r_a2cb5d927461f6f3d389618c61d6f546f"><td class="memItemLeft" align="right" valign="top"><a id="a2cb5d927461f6f3d389618c61d6f546f" name="a2cb5d927461f6f3d389618c61d6f546f"></a>
PL_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>IteratorBase</b> (Node *pInit)</td></tr>
<tr class="separator:a2cb5d927461f6f3d389618c61d6f546f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a296fddf3d977e916ab99927659f1854e" id="r_a296fddf3d977e916ab99927659f1854e"><td class="memItemLeft" align="right" valign="top"><a id="a296fddf3d977e916ab99927659f1854e" name="a296fddf3d977e916ab99927659f1854e"></a>
Node *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pElement</b></td></tr>
<tr class="separator:a296fddf3d977e916ab99927659f1854e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:aef71acb23272a4adc4d303663e069f2f" id="r_aef71acb23272a4adc4d303663e069f2f"><td class="memItemLeft" align="right" valign="top"><a id="aef71acb23272a4adc4d303663e069f2f" name="aef71acb23272a4adc4d303663e069f2f"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>plSetBase&lt; KeyType, Comparer &gt;</b></td></tr>
<tr class="separator:aef71acb23272a4adc4d303663e069f2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename KeyType, typename Comparer&gt;<br />
template&lt;bool REVERSE&gt;<br />
struct plSetBase&lt; KeyType, Comparer &gt;::IteratorBase&lt; REVERSE &gt;</div><p>Base class for all iterators. </p>
</div><hr/>The documentation for this struct was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../dc/d09/_set_8h_source.htm">Set.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../db/dc1/_set__inl_8h_source.htm">Set_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d4c/classpl_set_base.htm">plSetBase</a></li><li class="navelem"><a class="el" href="../../d4/de2/structpl_set_base_1_1_iterator_base.htm">IteratorBase</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
