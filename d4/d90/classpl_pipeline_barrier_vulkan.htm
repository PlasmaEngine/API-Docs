<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>plEngine: plPipelineBarrierVulkan Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../clipboard.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only.css" rel="stylesheet" type="text/css"/>
<link href="../../doxygen-awesome-sidebar-only-darkmode-toggle.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign">
   <div id="projectname">plEngine<span id="projectnumber">&#160;Release 2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/d90/classpl_pipeline_barrier_vulkan.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d4/d78/classpl_pipeline_barrier_vulkan-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plPipelineBarrierVulkan Class Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a77de7e19d21acb2d1672c32880efe626" id="r_a77de7e19d21acb2d1672c32880efe626"><td class="memItemLeft" align="right" valign="top"><a id="a77de7e19d21acb2d1672c32880efe626" name="a77de7e19d21acb2d1672c32880efe626"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>plPipelineBarrierVulkan</b> (<a class="el" href="../../da/df3/classpl_allocator.htm">plAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a77de7e19d21acb2d1672c32880efe626"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Barrier handling</div></td></tr>
<tr class="memitem:a4124a4a883792ef9f667e85c87713584" id="r_a4124a4a883792ef9f667e85c87713584"><td class="memItemLeft" align="right" valign="top"><a id="a4124a4a883792ef9f667e85c87713584" name="a4124a4a883792ef9f667e85c87713584"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCommandBuffer</b> (vk::CommandBuffer *pCommandBuffer)</td></tr>
<tr class="memdesc:a4124a4a883792ef9f667e85c87713584"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the active command buffer that barriers are flushed into. <br /></td></tr>
<tr class="separator:a4124a4a883792ef9f667e85c87713584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87f525de8286954b24af35566b09cce8" id="r_a87f525de8286954b24af35566b09cce8"><td class="memItemLeft" align="right" valign="top"><a id="a87f525de8286954b24af35566b09cce8" name="a87f525de8286954b24af35566b09cce8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Flush</b> ()</td></tr>
<tr class="memdesc:a87f525de8286954b24af35566b09cce8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flush accumulated changes as a barrier into the active command buffer. <br /></td></tr>
<tr class="separator:a87f525de8286954b24af35566b09cce8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4958398fad70dda1f4a4e0c89aa173db" id="r_a4958398fad70dda1f4a4e0c89aa173db"><td class="memItemLeft" align="right" valign="top"><a id="a4958398fad70dda1f4a4e0c89aa173db" name="a4958398fad70dda1f4a4e0c89aa173db"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Submit</b> ()</td></tr>
<tr class="memdesc:a4958398fad70dda1f4a4e0c89aa173db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Should be called when the active command buffer is submitted. This clear various states as a submit works like a full barrier. <br /></td></tr>
<tr class="separator:a4958398fad70dda1f4a4e0c89aa173db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b07f363dc52021bab885afb9a76aba2" id="r_a7b07f363dc52021bab885afb9a76aba2"><td class="memItemLeft" align="right" valign="top"><a id="a7b07f363dc52021bab885afb9a76aba2" name="a7b07f363dc52021bab885afb9a76aba2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>FullBarrier</b> ()</td></tr>
<tr class="memdesc:a7b07f363dc52021bab885afb9a76aba2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Full barrier for debugging purposes. <br /></td></tr>
<tr class="separator:a7b07f363dc52021bab885afb9a76aba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f01810933239f678da1bdcce159cf35" id="r_a3f01810933239f678da1bdcce159cf35"><td class="memItemLeft" align="right" valign="top"><a id="a3f01810933239f678da1bdcce159cf35" name="a3f01810933239f678da1bdcce159cf35"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsDirty</b> () const</td></tr>
<tr class="separator:a3f01810933239f678da1bdcce159cf35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Buffer handling</div></td></tr>
<tr class="memitem:aeb71c9d6f1792696d9bbc2e2862426de" id="r_aeb71c9d6f1792696d9bbc2e2862426de"><td class="memItemLeft" align="right" valign="top"><a id="aeb71c9d6f1792696d9bbc2e2862426de" name="aeb71c9d6f1792696d9bbc2e2862426de"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>BufferDestroyed</b> (const <a class="el" href="../../d5/dbf/classpl_g_a_l_buffer_vulkan.htm">plGALBufferVulkan</a> *pBuffer)</td></tr>
<tr class="memdesc:aeb71c9d6f1792696d9bbc2e2862426de"><td class="mdescLeft">&#160;</td><td class="mdescRight">Need to be called to remove the buffer from tracking. <br /></td></tr>
<tr class="separator:aeb71c9d6f1792696d9bbc2e2862426de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a631b05cb4734b58acc85fecc192dbc48" id="r_a631b05cb4734b58acc85fecc192dbc48"><td class="memItemLeft" align="right" valign="top"><a id="a631b05cb4734b58acc85fecc192dbc48" name="a631b05cb4734b58acc85fecc192dbc48"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AccessBuffer</b> (const <a class="el" href="../../d5/dbf/classpl_g_a_l_buffer_vulkan.htm">plGALBufferVulkan</a> *pBuffer, vk::DeviceSize offset, vk::DeviceSize length, vk::PipelineStageFlags srcStages, vk::AccessFlags srcAccess, vk::PipelineStageFlags dstStages, vk::AccessFlags dstAccess)</td></tr>
<tr class="separator:a631b05cb4734b58acc85fecc192dbc48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c94d14baeecea189a6b575af84f6c54" id="r_a0c94d14baeecea189a6b575af84f6c54"><td class="memItemLeft" align="right" valign="top"><a id="a0c94d14baeecea189a6b575af84f6c54" name="a0c94d14baeecea189a6b575af84f6c54"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsDirty</b> (vk::Buffer buffer, vk::DeviceSize offset, vk::DeviceSize length, vk::AccessFlags dstAccess)</td></tr>
<tr class="separator:a0c94d14baeecea189a6b575af84f6c54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Image handling</div></td></tr>
<tr class="memitem:a268b8bfe6f179adf1c9827b089aa9fba" id="r_a268b8bfe6f179adf1c9827b089aa9fba"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a268b8bfe6f179adf1c9827b089aa9fba">SetInitialImageState</a> (const <a class="el" href="../../d6/dcc/classpl_g_a_l_texture_vulkan.htm">plGALTextureVulkan</a> *pTexture, vk::ImageLayout dstLayout, vk::PipelineStageFlags dstStages=vk::PipelineStageFlagBits::eTopOfPipe, vk::AccessFlags dstAccess={})</td></tr>
<tr class="memdesc:a268b8bfe6f179adf1c9827b089aa9fba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Force, sets the layout of the texture's image. Most images are not created in their preferred layout on creation.  <br /></td></tr>
<tr class="separator:a268b8bfe6f179adf1c9827b089aa9fba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace49619819335712f5434ac555211171" id="r_ace49619819335712f5434ac555211171"><td class="memItemLeft" align="right" valign="top"><a id="ace49619819335712f5434ac555211171" name="ace49619819335712f5434ac555211171"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>TextureDestroyed</b> (const <a class="el" href="../../d6/dcc/classpl_g_a_l_texture_vulkan.htm">plGALTextureVulkan</a> *pTexture)</td></tr>
<tr class="memdesc:ace49619819335712f5434ac555211171"><td class="mdescLeft">&#160;</td><td class="mdescRight">Need to be called to remove the texture's image from tracking. <br /></td></tr>
<tr class="separator:ace49619819335712f5434ac555211171"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d2dc2d782584eec76aa85e7b9eb196c" id="r_a1d2dc2d782584eec76aa85e7b9eb196c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a1d2dc2d782584eec76aa85e7b9eb196c">EnsureImageLayout</a> (const <a class="el" href="../../d6/dcc/classpl_g_a_l_texture_vulkan.htm">plGALTextureVulkan</a> *pTexture, vk::ImageLayout dstLayout, vk::PipelineStageFlags dstStages, vk::AccessFlags dstAccess, bool bDiscardSource=false)</td></tr>
<tr class="memdesc:a1d2dc2d782584eec76aa85e7b9eb196c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transition the given texture's image into the given layout to be used in the given stage.  <br /></td></tr>
<tr class="separator:a1d2dc2d782584eec76aa85e7b9eb196c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3913e0728f1b59a19ee91f9afca6d538" id="r_a3913e0728f1b59a19ee91f9afca6d538"><td class="memItemLeft" align="right" valign="top"><a id="a3913e0728f1b59a19ee91f9afca6d538" name="a3913e0728f1b59a19ee91f9afca6d538"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureImageLayout</b> (const <a class="el" href="../../db/ddd/classpl_g_a_l_render_target_view_vulkan.htm">plGALRenderTargetViewVulkan</a> *pTextureView, vk::ImageLayout dstLayout, vk::PipelineStageFlags dstStages, vk::AccessFlags dstAccess, bool bDiscardSource=false)</td></tr>
<tr class="separator:a3913e0728f1b59a19ee91f9afca6d538"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad765e33f7105fe9955ad9acc90a00646" id="r_ad765e33f7105fe9955ad9acc90a00646"><td class="memItemLeft" align="right" valign="top"><a id="ad765e33f7105fe9955ad9acc90a00646" name="ad765e33f7105fe9955ad9acc90a00646"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureImageLayout</b> (const <a class="el" href="../../d1/d9b/classpl_g_a_l_texture_resource_view_vulkan.htm">plGALTextureResourceViewVulkan</a> *pTextureView, vk::ImageLayout dstLayout, vk::PipelineStageFlags dstStages, vk::AccessFlags dstAccess, bool bDiscardSource=false)</td></tr>
<tr class="separator:ad765e33f7105fe9955ad9acc90a00646"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afddfd3f120a368a01c55a51ad59ff5f5" id="r_afddfd3f120a368a01c55a51ad59ff5f5"><td class="memItemLeft" align="right" valign="top"><a id="afddfd3f120a368a01c55a51ad59ff5f5" name="afddfd3f120a368a01c55a51ad59ff5f5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureImageLayout</b> (const <a class="el" href="../../d5/d98/classpl_g_a_l_texture_unordered_access_view_vulkan.htm">plGALTextureUnorderedAccessViewVulkan</a> *pTextureView, vk::ImageLayout dstLayout, vk::PipelineStageFlags dstStages, vk::AccessFlags dstAccess, bool bDiscardSource=false)</td></tr>
<tr class="separator:afddfd3f120a368a01c55a51ad59ff5f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf5a98fca018f0de69fc20782df02401" id="r_adf5a98fca018f0de69fc20782df02401"><td class="memItemLeft" align="right" valign="top"><a id="adf5a98fca018f0de69fc20782df02401" name="adf5a98fca018f0de69fc20782df02401"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureImageLayout</b> (const <a class="el" href="../../d6/dcc/classpl_g_a_l_texture_vulkan.htm">plGALTextureVulkan</a> *pTexture, vk::ImageSubresourceRange subResources, vk::ImageLayout dstLayout, vk::PipelineStageFlags dstStages, vk::AccessFlags dstAccess, bool bDiscardSource=false)</td></tr>
<tr class="separator:adf5a98fca018f0de69fc20782df02401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa09084a42b5911458571d21d53c3f68b" id="r_aa09084a42b5911458571d21d53c3f68b"><td class="memItemLeft" align="right" valign="top"><a id="aa09084a42b5911458571d21d53c3f68b" name="aa09084a42b5911458571d21d53c3f68b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsDirty</b> (vk::Image image, const vk::ImageSubresourceRange &amp;subResources) const</td></tr>
<tr class="separator:aa09084a42b5911458571d21d53c3f68b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1d2dc2d782584eec76aa85e7b9eb196c" name="a1d2dc2d782584eec76aa85e7b9eb196c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d2dc2d782584eec76aa85e7b9eb196c">&#9670;&#160;</a></span>EnsureImageLayout()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plPipelineBarrierVulkan::EnsureImageLayout </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/dcc/classpl_g_a_l_texture_vulkan.htm">plGALTextureVulkan</a> *</td>          <td class="paramname"><span class="paramname"><em>pTexture</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vk::ImageLayout</td>          <td class="paramname"><span class="paramname"><em>dstLayout</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vk::PipelineStageFlags</td>          <td class="paramname"><span class="paramname"><em>dstStages</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vk::AccessFlags</td>          <td class="paramname"><span class="paramname"><em>dstAccess</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool</td>          <td class="paramname"><span class="paramname"><em>bDiscardSource</em></span><span class="paramdefsep"> = </span><span class="paramdefval">false</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Transition the given texture's image into the given layout to be used in the given stage. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTexture</td><td>The texture whose image's layout is to be changed. </td></tr>
    <tr><td class="paramname">dstLayout</td><td>The layout that the image is to be changed into. </td></tr>
    <tr><td class="paramname">dstStages</td><td>In what stages the image needs to be in the new layout. </td></tr>
    <tr><td class="paramname">dstAccess</td><td>What access we will be doing on the image in dstStages. </td></tr>
    <tr><td class="paramname">bDiscardSource</td><td>Discard the previous layout, replaces current layout with unknown. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a268b8bfe6f179adf1c9827b089aa9fba" name="a268b8bfe6f179adf1c9827b089aa9fba"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a268b8bfe6f179adf1c9827b089aa9fba">&#9670;&#160;</a></span>SetInitialImageState()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plPipelineBarrierVulkan::SetInitialImageState </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d6/dcc/classpl_g_a_l_texture_vulkan.htm">plGALTextureVulkan</a> *</td>          <td class="paramname"><span class="paramname"><em>pTexture</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vk::ImageLayout</td>          <td class="paramname"><span class="paramname"><em>dstLayout</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vk::PipelineStageFlags</td>          <td class="paramname"><span class="paramname"><em>dstStages</em></span><span class="paramdefsep"> = </span><span class="paramdefval">vk::PipelineStageFlagBits::eTopOfPipe</span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vk::AccessFlags</td>          <td class="paramname"><span class="paramname"><em>dstAccess</em></span><span class="paramdefsep"> = </span><span class="paramdefval">{}</span>&#160;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Force, sets the layout of the texture's image. Most images are not created in their preferred layout on creation. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTexture</td><td>The texture whose image the initial state should be set on. </td></tr>
    <tr><td class="paramname">dstLayout</td><td>The layout that the image currently is in. </td></tr>
    <tr><td class="paramname">dstStages</td><td>In what stage the image was changed into the current layout. </td></tr>
    <tr><td class="paramname">dstAccess</td><td>The access operation that changed the image into the current layout during dstStages. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/RendererVulkan/Utils/<a class="el" href="../../d1/d25/_pipeline_barrier_vulkan_8h_source.htm">PipelineBarrierVulkan.h</a></li>
<li>Code/Engine/RendererVulkan/Utils/Implementation/<b>PipelineBarrierVulkan.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d90/classpl_pipeline_barrier_vulkan.htm">plPipelineBarrierVulkan</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
