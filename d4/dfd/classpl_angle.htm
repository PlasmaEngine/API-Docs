<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.11.0"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<!-- BEGIN opengraph metadata -->
<meta property="og:title" content="Doxygen Awesome" />
<meta property="og:image" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta property="og:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<meta property="og:url" content="https://jothepro.github.io/doxygen-awesome-css/" />
<!-- END opengraph metadata -->
<!-- BEGIN twitter metadata -->
<meta name="twitter:image:src" content="https://repository-images.githubusercontent.com/348492097/4f16df80-88fb-11eb-9d31-4015ff22c452" />
<meta name="twitter:title" content="Doxygen Awesome" />
<meta name="twitter:description" content="Custom CSS theme for doxygen html-documentation with lots of customization parameters." />
<!-- END twitter metadata -->
<title>Plasma Engine: plAngle Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<link rel="icon" type="image/svg+xml" href="logo.drawio.svg"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-darkmode-toggle.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-fragment-copy-button.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-paragraph-link.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-interactive-toc.js"></script>
<script type="text/javascript" src="../../doxygen-awesome-tabs.js"></script>
<script type="text/javascript" src="../../toggle-alternative-theme.js"></script>
<script type="text/javascript">
    DoxygenAwesomeFragmentCopyButton.init()
    DoxygenAwesomeDarkModeToggle.init()
    DoxygenAwesomeParagraphLink.init()
    DoxygenAwesomeInteractiveToc.init()
    DoxygenAwesomeTabs.init()
</script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../cookie.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
<link href="../../doxygen-awesome.css" rel="stylesheet" type="text/css"/>
<link href="../../custom.css" rel="stylesheet" type="text/css"/>
<link href="../../custom-alternative.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../pl-logo-64.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">Plasma Engine
   &#160;<span id="projectnumber">2.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.11.0 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() { codefold.init(1); });
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search',true);
  $(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function(){initNavTree('d4/dfd/classpl_angle.htm','../../'); initResizable(true); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../da/d88/classpl_angle-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">plAngle Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Float wrapper struct for a safe usage and conversions of angles.  
 <a href="#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../da/d18/_angle_8h_source.htm">Angle.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0bddab2ede0bd68154e7995af14338d7" id="r_a0bddab2ede0bd68154e7995af14338d7"><td class="memItemLeft" align="right" valign="top"><a id="a0bddab2ede0bd68154e7995af14338d7" name="a0bddab2ede0bd68154e7995af14338d7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>PL_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a0bddab2ede0bd68154e7995af14338d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a7caad661dc9ec3bd2765b138a318cb" id="r_a2a7caad661dc9ec3bd2765b138a318cb"><td class="memItemLeft" align="right" valign="top"><a id="a2a7caad661dc9ec3bd2765b138a318cb" name="a2a7caad661dc9ec3bd2765b138a318cb"></a>
constexpr&#160;</td><td class="memItemRight" valign="bottom"><b>plAngle</b> ()</td></tr>
<tr class="memdesc:a2a7caad661dc9ec3bd2765b138a318cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard constructor, initializing with 0. <br /></td></tr>
<tr class="separator:a2a7caad661dc9ec3bd2765b138a318cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0468d94f52b3c9f7a169eac492e8901b" id="r_a0468d94f52b3c9f7a169eac492e8901b"><td class="memItemLeft" align="right" valign="top"><a id="a0468d94f52b3c9f7a169eac492e8901b" name="a0468d94f52b3c9f7a169eac492e8901b"></a>
constexpr float&#160;</td><td class="memItemRight" valign="bottom"><b>GetDegree</b> () const</td></tr>
<tr class="memdesc:a0468d94f52b3c9f7a169eac492e8901b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the degree value. (Performs a conversion) <br /></td></tr>
<tr class="separator:a0468d94f52b3c9f7a169eac492e8901b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc5a11703c62a1aad358a141c2623b3f" id="r_adc5a11703c62a1aad358a141c2623b3f"><td class="memItemLeft" align="right" valign="top"><a id="adc5a11703c62a1aad358a141c2623b3f" name="adc5a11703c62a1aad358a141c2623b3f"></a>
constexpr float&#160;</td><td class="memItemRight" valign="bottom"><b>GetRadian</b> () const</td></tr>
<tr class="memdesc:adc5a11703c62a1aad358a141c2623b3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the radian value. (No need for any conversion) <br /></td></tr>
<tr class="separator:adc5a11703c62a1aad358a141c2623b3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45c77ee496abca5fe381483ae431b579" id="r_a45c77ee496abca5fe381483ae431b579"><td class="memItemLeft" align="right" valign="top"><a id="a45c77ee496abca5fe381483ae431b579" name="a45c77ee496abca5fe381483ae431b579"></a>
PL_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>SetRadian</b> (float fRad)</td></tr>
<tr class="memdesc:a45c77ee496abca5fe381483ae431b579"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the radian value. (No need for any conversion) <br /></td></tr>
<tr class="separator:a45c77ee496abca5fe381483ae431b579"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87fef634978f76cd8e3d937159bfb750" id="r_a87fef634978f76cd8e3d937159bfb750"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a87fef634978f76cd8e3d937159bfb750">NormalizeRange</a> ()</td></tr>
<tr class="memdesc:a87fef634978f76cd8e3d937159bfb750"><td class="mdescLeft">&#160;</td><td class="mdescRight">Brings the angle into the range of 0 degree - 360 degree.  <br /></td></tr>
<tr class="separator:a87fef634978f76cd8e3d937159bfb750"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67b1a4cdc50d88fe06d8e222cf2af15f" id="r_a67b1a4cdc50d88fe06d8e222cf2af15f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#a67b1a4cdc50d88fe06d8e222cf2af15f">GetNormalizedRange</a> () const</td></tr>
<tr class="memdesc:a67b1a4cdc50d88fe06d8e222cf2af15f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an equivalent angle with range between 0 degree - 360 degree.  <br /></td></tr>
<tr class="separator:a67b1a4cdc50d88fe06d8e222cf2af15f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6bd9e5fb6a45368499c87c96578aa03b" id="r_a6bd9e5fb6a45368499c87c96578aa03b"><td class="memItemLeft" align="right" valign="top"><a id="a6bd9e5fb6a45368499c87c96578aa03b" name="a6bd9e5fb6a45368499c87c96578aa03b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEqualSimple</b> (<a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> rhs, <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> epsilon) const</td></tr>
<tr class="memdesc:a6bd9e5fb6a45368499c87c96578aa03b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality check with epsilon. Simple check without normalization. 360 degree will equal 0 degree, but 720 will not. <br /></td></tr>
<tr class="separator:a6bd9e5fb6a45368499c87c96578aa03b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f51877b6d0ebb7b19fd033b6a97afef" id="r_a6f51877b6d0ebb7b19fd033b6a97afef"><td class="memItemLeft" align="right" valign="top"><a id="a6f51877b6d0ebb7b19fd033b6a97afef" name="a6f51877b6d0ebb7b19fd033b6a97afef"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEqualNormalized</b> (<a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> rhs, <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> epsilon) const</td></tr>
<tr class="memdesc:a6f51877b6d0ebb7b19fd033b6a97afef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality check with epsilon that uses normalized angles. Will recognize 720 degree == 0 degree. <br /></td></tr>
<tr class="separator:a6f51877b6d0ebb7b19fd033b6a97afef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a929a7eada81c298ff209c41db451ca50" id="r_a929a7eada81c298ff209c41db451ca50"><td class="memItemLeft" align="right" valign="top"><a id="a929a7eada81c298ff209c41db451ca50" name="a929a7eada81c298ff209c41db451ca50"></a>
constexpr <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> () const</td></tr>
<tr class="separator:a929a7eada81c298ff209c41db451ca50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ea8f96c425706a1b363224bbd0f281b" id="r_a5ea8f96c425706a1b363224bbd0f281b"><td class="memItemLeft" align="right" valign="top"><a id="a5ea8f96c425706a1b363224bbd0f281b" name="a5ea8f96c425706a1b363224bbd0f281b"></a>
constexpr <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (<a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> r) const</td></tr>
<tr class="separator:a5ea8f96c425706a1b363224bbd0f281b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac50f3641aec937d902e0cf5acce1c87d" id="r_ac50f3641aec937d902e0cf5acce1c87d"><td class="memItemLeft" align="right" valign="top"><a id="ac50f3641aec937d902e0cf5acce1c87d" name="ac50f3641aec937d902e0cf5acce1c87d"></a>
constexpr <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (<a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> r) const</td></tr>
<tr class="separator:ac50f3641aec937d902e0cf5acce1c87d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39e9ae12fcb4d23fbc6ce16f45971681" id="r_a39e9ae12fcb4d23fbc6ce16f45971681"><td class="memItemLeft" align="right" valign="top"><a id="a39e9ae12fcb4d23fbc6ce16f45971681" name="a39e9ae12fcb4d23fbc6ce16f45971681"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (<a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> r)</td></tr>
<tr class="separator:a39e9ae12fcb4d23fbc6ce16f45971681"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7221f4ff6ee1e8f9ea973ea83add8661" id="r_a7221f4ff6ee1e8f9ea973ea83add8661"><td class="memItemLeft" align="right" valign="top"><a id="a7221f4ff6ee1e8f9ea973ea83add8661" name="a7221f4ff6ee1e8f9ea973ea83add8661"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (<a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> r)</td></tr>
<tr class="separator:a7221f4ff6ee1e8f9ea973ea83add8661"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23bd5ee3b92661ae382c4517b4395de1" id="r_a23bd5ee3b92661ae382c4517b4395de1"><td class="memItemLeft" align="right" valign="top"><a id="a23bd5ee3b92661ae382c4517b4395de1" name="a23bd5ee3b92661ae382c4517b4395de1"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> &amp;r) const</td></tr>
<tr class="separator:a23bd5ee3b92661ae382c4517b4395de1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad75330acf6fe299d48e4cee06e8bb6ea" id="r_ad75330acf6fe299d48e4cee06e8bb6ea"><td class="memItemLeft" align="right" valign="top"><a id="ad75330acf6fe299d48e4cee06e8bb6ea" name="ad75330acf6fe299d48e4cee06e8bb6ea"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> &amp;r) const</td></tr>
<tr class="separator:ad75330acf6fe299d48e4cee06e8bb6ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19a3fce869effc78e5bb1abb547ae22e" id="r_a19a3fce869effc78e5bb1abb547ae22e"><td class="memItemLeft" align="right" valign="top"><a id="a19a3fce869effc78e5bb1abb547ae22e" name="a19a3fce869effc78e5bb1abb547ae22e"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> &amp;r) const</td></tr>
<tr class="separator:a19a3fce869effc78e5bb1abb547ae22e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab57806fc81bf830ac582fbcae88222b9" id="r_ab57806fc81bf830ac582fbcae88222b9"><td class="memItemLeft" align="right" valign="top"><a id="ab57806fc81bf830ac582fbcae88222b9" name="ab57806fc81bf830ac582fbcae88222b9"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> &amp;r) const</td></tr>
<tr class="separator:ab57806fc81bf830ac582fbcae88222b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a718d0a12348cddddf625f9f935130173" id="r_a718d0a12348cddddf625f9f935130173"><td class="memItemLeft" align="right" valign="top"><a id="a718d0a12348cddddf625f9f935130173" name="a718d0a12348cddddf625f9f935130173"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> &amp;r) const</td></tr>
<tr class="separator:a718d0a12348cddddf625f9f935130173"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55d2e1c330887b2b95378c09dbe0509f" id="r_a55d2e1c330887b2b95378c09dbe0509f"><td class="memItemLeft" align="right" valign="top"><a id="a55d2e1c330887b2b95378c09dbe0509f" name="a55d2e1c330887b2b95378c09dbe0509f"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> &amp;r) const</td></tr>
<tr class="separator:a55d2e1c330887b2b95378c09dbe0509f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31ddd8ce6c219fd6f57ba1e1dc3aefaa" id="r_a31ddd8ce6c219fd6f57ba1e1dc3aefaa"><td class="memTemplParams" colspan="2"><a id="a31ddd8ce6c219fd6f57ba1e1dc3aefaa" name="a31ddd8ce6c219fd6f57ba1e1dc3aefaa"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a31ddd8ce6c219fd6f57ba1e1dc3aefaa"><td class="memTemplItemLeft" align="right" valign="top">constexpr PL_ALWAYS_INLINE Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Pi</b> ()</td></tr>
<tr class="separator:a31ddd8ce6c219fd6f57ba1e1dc3aefaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac9c04eaacb87f39f2bdd5fe611bbebfb" id="r_ac9c04eaacb87f39f2bdd5fe611bbebfb"><td class="memTemplParams" colspan="2"><a id="ac9c04eaacb87f39f2bdd5fe611bbebfb" name="ac9c04eaacb87f39f2bdd5fe611bbebfb"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:ac9c04eaacb87f39f2bdd5fe611bbebfb"><td class="memTemplItemLeft" align="right" valign="top">static constexpr PL_ALWAYS_INLINE Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>DegToRadMultiplier</b> ()</td></tr>
<tr class="memdesc:ac9c04eaacb87f39f2bdd5fe611bbebfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the constant to multiply with an angle in degree to convert it to radians. <br /></td></tr>
<tr class="separator:ac9c04eaacb87f39f2bdd5fe611bbebfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade1f4fff382e407ddaf01b799958aaaa" id="r_ade1f4fff382e407ddaf01b799958aaaa"><td class="memTemplParams" colspan="2"><a id="ade1f4fff382e407ddaf01b799958aaaa" name="ade1f4fff382e407ddaf01b799958aaaa"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:ade1f4fff382e407ddaf01b799958aaaa"><td class="memTemplItemLeft" align="right" valign="top">static constexpr PL_ALWAYS_INLINE Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>RadToDegMultiplier</b> ()</td></tr>
<tr class="memdesc:ade1f4fff382e407ddaf01b799958aaaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the constant to multiply with an angle in degree to convert it to radians. <br /></td></tr>
<tr class="separator:ade1f4fff382e407ddaf01b799958aaaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac80fe249541366c95f9c70f4bb2cfb96" id="r_ac80fe249541366c95f9c70f4bb2cfb96"><td class="memTemplParams" colspan="2"><a id="ac80fe249541366c95f9c70f4bb2cfb96" name="ac80fe249541366c95f9c70f4bb2cfb96"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:ac80fe249541366c95f9c70f4bb2cfb96"><td class="memTemplItemLeft" align="right" valign="top">static constexpr Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>DegToRad</b> (Type f)</td></tr>
<tr class="memdesc:ac80fe249541366c95f9c70f4bb2cfb96"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts an angle in degree to radians. <br /></td></tr>
<tr class="separator:ac80fe249541366c95f9c70f4bb2cfb96"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a72c32216543d4f73a6305d84e884c6" id="r_a7a72c32216543d4f73a6305d84e884c6"><td class="memTemplParams" colspan="2"><a id="a7a72c32216543d4f73a6305d84e884c6" name="a7a72c32216543d4f73a6305d84e884c6"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a7a72c32216543d4f73a6305d84e884c6"><td class="memTemplItemLeft" align="right" valign="top">static constexpr Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>RadToDeg</b> (Type f)</td></tr>
<tr class="memdesc:a7a72c32216543d4f73a6305d84e884c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts an angle in radians to degree. <br /></td></tr>
<tr class="separator:a7a72c32216543d4f73a6305d84e884c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef2a8fbad535df5aec2681bb6fc8a6c5" id="r_aef2a8fbad535df5aec2681bb6fc8a6c5"><td class="memItemLeft" align="right" valign="top"><a id="aef2a8fbad535df5aec2681bb6fc8a6c5" name="aef2a8fbad535df5aec2681bb6fc8a6c5"></a>
static constexpr <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MakeZero</b> ()</td></tr>
<tr class="memdesc:aef2a8fbad535df5aec2681bb6fc8a6c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a zero initialized angle. Same as a default constructed object. <br /></td></tr>
<tr class="separator:aef2a8fbad535df5aec2681bb6fc8a6c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820bec90fccc557f524890ed3d294d33" id="r_a820bec90fccc557f524890ed3d294d33"><td class="memItemLeft" align="right" valign="top"><a id="a820bec90fccc557f524890ed3d294d33" name="a820bec90fccc557f524890ed3d294d33"></a>
static constexpr <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MakeFromDegree</b> (float fDegree)</td></tr>
<tr class="memdesc:a820bec90fccc557f524890ed3d294d33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an instance of <a class="el" href="../../d4/dfd/classpl_angle.htm" title="Float wrapper struct for a safe usage and conversions of angles.">plAngle</a> that was initialized from degree. (Performs a conversion) <br /></td></tr>
<tr class="separator:a820bec90fccc557f524890ed3d294d33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab466b5d88e7338a52a22aeb172697495" id="r_ab466b5d88e7338a52a22aeb172697495"><td class="memItemLeft" align="right" valign="top"><a id="ab466b5d88e7338a52a22aeb172697495" name="ab466b5d88e7338a52a22aeb172697495"></a>
static constexpr <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>MakeFromRadian</b> (float fRadian)</td></tr>
<tr class="memdesc:ab466b5d88e7338a52a22aeb172697495"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an instance of <a class="el" href="../../d4/dfd/classpl_angle.htm" title="Float wrapper struct for a safe usage and conversions of angles.">plAngle</a> that was initialized from radian. (No need for any conversion) <br /></td></tr>
<tr class="separator:ab466b5d88e7338a52a22aeb172697495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae983ab93fea13314a71b2116f4e244d9" id="r_ae983ab93fea13314a71b2116f4e244d9"><td class="memItemLeft" align="right" valign="top">static constexpr <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="#ae983ab93fea13314a71b2116f4e244d9">AngleBetween</a> (<a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> a, <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> b)</td></tr>
<tr class="memdesc:ae983ab93fea13314a71b2116f4e244d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the smallest angle between the two given angles. The angle will always be a positive value.  <br /></td></tr>
<tr class="separator:ae983ab93fea13314a71b2116f4e244d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Float wrapper struct for a safe usage and conversions of angles. </p>
<p>Uses radian internally. Will <b>not</b> automatically keep its range between 0 degree - 360 degree (0 - 2PI) but you can call NormalizeRange to do so. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ae983ab93fea13314a71b2116f4e244d9" name="ae983ab93fea13314a71b2116f4e244d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae983ab93fea13314a71b2116f4e244d9">&#9670;&#160;</a></span>AngleBetween()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">PL_FORCE_INLINE <a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> plAngle::AngleBetween </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a></td>          <td class="paramname"><span class="paramname"><em>a</em></span>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a></td>          <td class="paramname"><span class="paramname"><em>b</em></span>&#160;)</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Computes the smallest angle between the two given angles. The angle will always be a positive value. </p>
<dl class="section note"><dt>Note</dt><dd>The two angles must be in the same range. E.g. they should be either normalized or at least the absolute angle between them should not be more than 180 degree. </dd></dl>

</div>
</div>
<a id="a67b1a4cdc50d88fe06d8e222cf2af15f" name="a67b1a4cdc50d88fe06d8e222cf2af15f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67b1a4cdc50d88fe06d8e222cf2af15f">&#9670;&#160;</a></span>GetNormalizedRange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a> plAngle::GetNormalizedRange </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns an equivalent angle with range between 0 degree - 360 degree. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="#a87fef634978f76cd8e3d937159bfb750" title="Brings the angle into the range of 0 degree - 360 degree.">NormalizeRange()</a> </dd></dl>

</div>
</div>
<a id="a87fef634978f76cd8e3d937159bfb750" name="a87fef634978f76cd8e3d937159bfb750"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a87fef634978f76cd8e3d937159bfb750">&#9670;&#160;</a></span>NormalizeRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void plAngle::NormalizeRange </td>
          <td>(</td>
          <td class="paramname"><span class="paramname"><em></em></span></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Brings the angle into the range of 0 degree - 360 degree. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="#a67b1a4cdc50d88fe06d8e222cf2af15f" title="Returns an equivalent angle with range between 0 degree - 360 degree.">GetNormalizedRange()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Math/<a class="el" href="../../da/d18/_angle_8h_source.htm">Angle.h</a></li>
<li>Code/Engine/Foundation/Math/Implementation/<a class="el" href="../../dd/d0f/_angle__inl_8h_source.htm">Angle_inl.h</a></li>
<li>Code/Engine/Foundation/Math/Implementation/<b>Math.cpp</b></li>
<li>Code/Engine/Foundation/Math/Implementation/<a class="el" href="../../d6/dd4/_math__inl_8h_source.htm">Math_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/dfd/classpl_angle.htm">plAngle</a></li>
    <li class="footer">Generated by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.11.0 </li>
  </ul>
</div>
</body>
</html>
